<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-31T17:57:59.889352Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;如何运行小型社交网络&lt;/stitle>; &lt;id>;https://runyourown.social/&lt;/id>; &lt;updated>;2023-12-31T17:08:52.233937Z &lt;/更新>; &lt;link href=&quot;https://runyourown.social/&quot;/>; &lt;作者>; &lt;名称>;GoRudy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=GoRudy&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://runyourown.social/img/friend-camp-screenshot.png&quot; style=&quot;width: 220px; height: 125px;&quot; />;&lt;br />;自2018年8月以来，作者一直在为大约50位朋友运营一个名为Friend Camp的小型社交网络。本文档提供了如何运行类似社交网站的指南，强调了社区建设的重要性以及定制网站功能和规范的能力。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-run-a-small-social-network&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38825520&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;iOS Wi-Fi 配置文件生成器&lt;/stitle>; &lt;id>;https://daduckmsft.github.io/WiFiProfileGenerator/&lt;/id>; &lt;更新>;2023-12 -31T15:57:52.236031Z&lt;/updated>; &lt;link href=&quot;https://daduckmsft.github.io/WiFiProfileGenerator/&quot;/>; &lt;author>; &lt;name>;transpute&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=transpute&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#ios-wi-fi-profile-生成器&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38824644&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1690 年代花生重生&lt;/stitle>; &lt;id>;https ://nationalpeanutboard.org/news/a-1690s-peanut-is-reborn/&lt;/id>; &lt;更新>;2023-12-31T11:57:52.236456Z&lt;/更新>; &lt;link href=&quot;https://nationalpeanutboard .org/news/a-1690s-peanut-is-reborn/&quot;/>; &lt;author>; &lt;name>;mooreds&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mooreds&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.sanity.io/images/54y5ztcs/product/eb5a9a9dc0b7af69ae531a021629edf7995a107c-550x550.jpg?w=650&amp;q=90&quot; style=&quot;width ：220像素；高度：220px;&quot; />;&lt;br />;被认为已经灭绝的卡罗莱纳非洲跑花生已被重新发现，并由农民种植。这种花生于 1690 年代被带到美国殖民地，体积更小、更甜、更美味。比我们今天吃的花生密度更大。它具有文化和历史意义，被厨师和工匠用于各种烹饪创作。&lt;a href=&quot;https://hackernews.betacat.io/#a-1690s-peanut-is -reborn&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38823304&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;2024 年 1 月 1 日是公共领域日&lt;/stitle>; &lt;id>;https://web.law.duke.edu/cspd/publicdomainday/2024/&lt;/id>; &lt;更新>;2023-12-31T16:57:52.236876Z&lt;/更新>; &lt;link href=&quot;https:// /web.law.duke.edu/cspd/publicdomainday/2024/&quot;/>; &lt;作者>; &lt;名称>;the-mitr&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=the- mitr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://web.law.duke.edu/sites/default/files/images/centers/cspd/pdd2024/PDDmontageRS。 png&quot; 样式=&quot;宽度:220px; height: 158px;&quot; />;&lt;br />;2024 年 1 月 1 日，数千件 1928 年的受版权保护的作品以及 1923 年的录音将进入美国公共领域。它们将免费供所有人复制、共享和构建&lt;a href=&quot;https://hackernews.betacat.io/#january-1-2024-is-public-domain-day&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38823973&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我为我的客厅 PC 分叉了 SteamOS&lt;/stitle>; &lt;id>;https://iliana.fyi/blog/build-your-own-steamos-更新/&lt;/id>; &lt;更新>;2023-12-31T10:57:52.237275Z&lt;/更新>; &lt;link href=&quot;https://iliana.fyi/blog/build-your-own-steamos-updates/&quot;/ >; &lt;author>; &lt;name>;muterad_murilax&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=muterad_murilax&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;SteamOS 3 (“ Holo”）是一个基于 Arch 的 Linux 发行版，专为 Valve Software 的便携式 PC 游戏设备 Steam Deck 构建。它为最终用户提供原子更新和自定义选项。 &lt;a href=&quot;https://hackernews.betacat.io/#i-forked-steamos-for-my-living-room-pc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38823101&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Emacs-copilot：Emacs 的大型语言模型代码完成&lt;/stitle>; &lt;id>;https://github.com/jart/emacs-copilot&lt;/ id>; &lt;更新>;2023-12-31T06:57:52.237669Z&lt;/更新>; &lt;link href=&quot;https://github.com/jart/emacs-copilot&quot;/>; &lt;作者>; &lt;名称>;yla92 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=yla92&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/ b003f074684caa9d5b2db8c54af05967ce6ff04ecd09322ec2ca67a5ecc545f9/jart/emacs-copilot&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Emacs Copilot 是一个允许在 Emacs 缓冲区内完成代码的工具。它使用本地运行的语言模型 (LLM) 根据您的编辑历史记录生成代码建议。法学硕士与语言无关，可以根据您的编程语言进行定制。 &lt;a href=&quot;https://hackernews.betacat.io/#emacs-copilot-large-language-model-code-completion-for-emacs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38822164&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;2024 年 1 月：生成艺术/创意编码月&lt;/stitle>; &lt;id>;https://genuary.art&lt;/id>; &lt;updated>;2023 -12-31T14：57：52.238848Z &lt;/更新>; &lt;link href =“https://genuary.art”/>; &lt;作者>; &lt;名称>; tripzilch &lt;/名称>; &lt;uri>; https://news.ycombinator。 com/user?id=tripzilch&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://genuary.art/img/genuary-share-image.png&quot; style=&quot;width ：220px；高度：220px；” />;&lt;br />;GENUARY 是人工生成的一个月时间，我们在其中构建代码来创造美丽的事物。在 1 月的 744 小时内，每 24 小时就会出现一次代码图提示。 &lt;a href=&quot;https://hackernews.betacat.io/#genuary-2024-generative-art-creative-coding-month&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38824121&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Linux 中的非特权进程注入技术&lt;/stitle>; &lt;id>;https://joev.dev/posts/unprivileged-process-injection-techniques-in-linux&lt; /id>; &lt;更新>;2023-12-31T09:57:52.239256Z&lt;/更新>; &lt;link href=&quot;https://joev.dev/posts/unprivileged-process-injection-techniques-in-linux&quot;/>; &lt;作者>; &lt;name>;joe_v&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=joe_v&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://joev.dev/suffering-full.png&quot; style=&quot;宽度：220px；高度：173px；&quot; />;&lt;br />;本文讨论了 Linux 上的进程注入技术，并提出了使用 /proc/[pid]/mem 的更简单的实现。它解释了如何使用标准文件系统系统调用来操纵远程进程内存，并提供了利用这些技术的工具示例。 &lt;a href=&quot;https://hackernews.betacat.io/#unprivileged-process-injection-techniques-in-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38801183&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;7 瓦空闲 – 在英特尔第 12/13 代上构建低功耗服务器/NAS&lt;/stitle>; &lt;id>;https://mattgadient.com/7-watts-idle -on-intel-12th-13th-gen-the-foundation-for-building-a-low-power-server-nas/&lt;/id>; &lt;更新>;2023-12-31T12:57:52.239643Z&lt;/更新>; &lt;link href=&quot;https://mattgadient.com/7-watts-idle-on-intel-12th-13th-gen-the-foundation-for-building-a-low-power-server-nas/&quot;/>; &lt;作者>; &lt;名称>;ryangibb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ryangibb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://mattgadient.com/i/2023/05/asus-h770-pci-e-500x599.jpg&quot; style=&quot;宽度：220px；高度：264px；&quot; />;&lt;br />;为了构建低功耗服务器/NAS，作者测试了各种组件和配置。他们发现，在 Gigabyte H470M DS3H 主板上使用 Intel i3-10320 CPU 会产生 11 瓦的功耗。然而，他们在使用 &lt;a href=&quot;https://hackernews.betacat.io/#7-watts-idle-building-a-low-powered-server-nas-on-intel-12th- 时遇到了功耗方面的挑战第 13 代&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38823514&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;比较 Google、Bing、Marginalia、Kagi、Mwmbl、和 ChatGPT&lt;/stitle>; &lt;id>;https://danluu.com/seo-spam/&lt;/id>; &lt;更新>;2023-12-31T02:57:52.240028Z&lt;/更新>; &lt;link href=&quot;https:// /danluu.com/seo-spam/&quot;/>; &lt;作者>; &lt;名称>;882542F3884314B&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=882542F3884314B&lt;/uri>; &lt;/作者>; &lt; content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#compare-google-bing-marginalia-kagi-mwmbl-and-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821248&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LuaX：带有 JSX 的 Lua 方言&lt;/stitle>; &lt;id>;https://bvisness.me/luax/&lt;/ id>; &lt;更新>;2023-12-31T06:57:52.240419Z&lt;/更新>; &lt;link href=&quot;https://bvisness.me/luax/&quot;/>; &lt;作者>; &lt;名称>;goranmoomin &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=goranmoomin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;LuaX 是一种带有 JSX 的 Lua 方言，允许您在真正的编程语言中编写 HTML 。它提供了一个能够理解 HTML 并允许在代码中添加有趣逻辑的系统。 &lt;a href=&quot;https://hackernews.betacat.io/#luax-a-lua-dialect-with-jsx&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38813677&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不使用 Git 提交&lt;/stitle>; &lt;id>;https://matheustavares.gitlab.io/posts/committing-without-git&lt;/id>; &lt;updated>;2023-12 -31T06：57：52.240803Z &lt;/更新>; &lt;link href =“https://matheustavares.gitlab.io/posts/committing-without-git”/>; &lt;作者>; &lt;名称>; matheust &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=matheust&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://matheustavares.gitlab.io/assets/committing- without-git/git-objects.png&quot; style=&quot;width: 220px; height: 140px;&quot; />;&lt;br />;我们的目标是创建一个包含两次提交的分支：第一次添加单个 README 文件，第二次稍微更改此文件。所有这一切都无需运行 git。如果您点击这篇文章，我很可能不需要说服您为什么有人想要这样做……因为这很有趣！ :) 而且，它应该有助于理解 git 中的一些主要数据结构，即“git 对象”。 &lt;a href=&quot;https://hackernews.betacat.io/#committing-without-git&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38814492&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;网络上 SQL 的未来 (2021)&lt;/stitle>; &lt;id>;https://jlong​​ster.com/future-sql-web&lt;/id>; &lt;更新>;2023-12-31T11： 57:52.241951Z&lt;/updated>; &lt;link href=&quot;https://jlong​​ster.com/future-sql-web&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;absurd-sql 是 Web 上 SQLite 的持久后端，可在 Web 应用程序中进行高效存储和写入。它解决了 IndexedDB 的限制和性能问题，提供了更强大的数据处理方式。该项目使用 sql.js 和文件系统层以小块的形式读写数据，使其比索引更快、更可靠 &lt;a href=&quot;https://hackernews.betacat.io/#a-future-for-sql -on-the-web-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38823445&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;帕斯卡在福斯 (1983) &lt;/stitle>; &lt;id>;http://tangentstorm.github.io/winfield-pascal-83.html&lt;/id>; &lt;更新>;2023-12-31T05:57:52.242742Z&lt;/更新>; &lt;link href=&quot; http://tangentstorm.github.io/winfield-pascal-83.html&quot;/>; &lt;作者>; &lt;名称>;sph&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sph&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这是描述 Forth 的一组类似 Pascal 扩展的两篇文章中的第一篇。目的是为 Forth 程序员提供使用类似 Pascal 的语法编写任务部分的选项。将 Forth 扩展到 Pascal 是一项有趣的练习，也是对 Forth 功能和灵活性的测试。 &lt;a href=&quot;https://hackernews.betacat.io/#pascal-in-forth-1983&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38822094&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;再见，爪哇刺鱼：科学家宣布首次海洋鱼类灭绝&lt;/stitle>; &lt;id>;https://news.mongabay.com/2023/12/farewell-java-stingaree-scientist-声明-the-first-marine-fish-extinction/&lt;/id>; &lt;更新>;2023-12-31T14:57:52.243131Z&lt;/更新>; &lt;link href=&quot;https://news.mongabay.com/2023/ 12/farewell-java-stingaree-scientist-declare-the-first-marine-fish-extinction/&quot;/>; &lt;author>; &lt;name>;rwmj&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=rwmj&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://imgs.mongabay.com/wp-content/uploads/sites/20/2023/12/21172434 /stingaree-2.jpg&quot; style=&quot;宽度：220px；高度：166px；&quot; />;&lt;br />;2023 年 12 月，科学家宣布爪哇黄貂鱼 (Urolophus javanicus)（黄貂鱼的一种）灭绝。这是第一种被证实因人类活动而灭绝的海洋鱼类。 &lt;a href=&quot;https://hackernews.betacat.io/#farewell-java-stingaree-scientist-declare-the-first-marine-fish-extinction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38824149&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;电子邮件地址不是帐户的良好“永久”标识符&lt;/stitle>; &lt;id>;https://utcc.utoronto.ca/~ cks/space/blog/tech/EmailAddressesBadPermanentIDs&lt;/id>; &lt;更新>;2023-12-31T13:57:52.243508Z&lt;/更新>; &lt;link href=&quot;https://utcc.utoronto.ca/~cks/space/ blog/tech/EmailAddressesBadPermanentIDs&quot;/>; &lt;作者>; &lt;名称>;throw0101b&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=throw0101b&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;您无权访问此服务器上的 /~cks/space/blog/tech/EmailAddressesBadPermanentIDs。 &lt;a href=&quot;https://hackernews.betacat.io/#email-addresses-are-not-good-permanent-identifiers-for-accounts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38823817&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;瑞典太阳系&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Sweden_Solar_System&lt;/id>; &lt;更新>;2023 -12-31T12:57:52.243885Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Sweden_Solar_System&quot;/>; &lt;作者>; &lt;name>;titaniumtown&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=titaniumtown&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/ 3/31/Ericsson_Globe_Stockholm.jpg/300px-Ericsson_Globe_Stockholm.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;瑞典太阳系是世界上最大的永久比例太阳系模型。太阳队的代表是斯德哥尔摩的 Avicii 体育场，这是世界第二大半球形建筑。 &lt;a href=&quot;https://hackernews.betacat.io/#sweden-solar-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38823482&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;预测谬误&lt;/stitle>; &lt;id>;https://www.alexmurrell.co.uk/articles/the-forecasting-fallacy&lt;/id>; &lt;updated>;2023-12-31T12:57 ：52.244272Z &lt;/更新>; &lt;link href=&quot;https://www.alexmurrell.co.uk/articles/the-forecasting-fallacy&quot;/>; &lt;作者>; &lt;名称>;rognjen &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=rognjen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/5e13762b05aeab4478a071d5/ f9e12d9a-d143-4bf0-a259-40ebe1b0f75b/Website_SocialImage.jpg?format=1500w&amp;content-type=image%2Fjpeg&quot; style=&quot;宽度：220px；高度：125px；&quot; />;&lt;br />;文章讨论了预测的缺陷以及各个领域预测的不良记录。它强调预测往往是披着科学外衣的幻想，并强调需要专注于建设未来而不是试图预测未来。 &lt;a href=&quot;https://hackernews.betacat.io/#the-forecasting-fallacy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38823542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;为 Web 构建 ColdFusion&lt;/stitle>; &lt;id>;https://thehistoryoftheweb.com/building-coldfusion-for-the-web/&lt;/id>; &lt;updated>;2023-12-31T11： 57:52.245031Z&lt;/updated>; &lt;link href=&quot;https://thehistoryoftheweb.com/building-coldfusion-for-the-web/&quot;/>; &lt;作者>; &lt;name>;paulgb&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=paulgb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thehistoryoftheweb.com/wp-json/social-image-生成器/v1/image/15834&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;ColdFusion 于 1995 年开发，是一种专门用于构建网站的编程语言。它旨在通过使用类似于 HTML 但具有更高级功能的标签来降低用户的进入门槛。多年来，ColdFusion 发展成为一个具有内置工具和实用程序的完整网站开发环境。尽管所有权和技术发生了变化，ColdFusion 仍然继续发布新版本，尽管其受欢迎程度有所下降。 &lt;a href=&quot;https://hackernews.betacat.io/#building-coldfusion-for-the-web&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38821224&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Common Lisp Vim 编译器插件&lt;/stitle>; &lt;id>;https://git.sr.ht/~skin/roswell-sbcl.vim&lt;/id>; &lt;更新>;2023-12-31T08:57:52.245407Z&lt;/更新>; &lt;link href=&quot;https://git.sr.ht/~skin/roswell-sbcl.vim&quot;/>; &lt;作者>; &lt;名称>;djha -skin&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=djha-skin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;此存储库包含 (n )vim 将 Roswell 与 SBCL 或单独使用 SBCL 结合使用时的快速修复列表。编译器假定当前工作目录中有一个 *.asd 文件，或者存储库根目录中有一个 *.ros 文件作为入口点。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-common-lisp-vim-compiler-plug-in&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38820391&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;要求不可能：严格的数据库基准测试&lt;/stitle>; &lt;id>;https://erthalion.info/2023/12/29/statistics-and-benchmarking /&lt;/id>; &lt;更新>;2023-12-31T05:57:52.246162Z&lt;/更新>; &lt;link href=&quot;https://erthalion.info/2023/12/29/statistics-and-benchmarking/&quot;/>; &lt;作者>; &lt;名称>;erthalion&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=erthalion&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://erthalion.info/public/img/stats/lorenz.png&quot; style=&quot;宽度：220px；高度：122px；&quot; />;&lt;br />;由于数据库固有的二元性以及需要结合特定领域的专业知识和一般分析专业知识的需要，数据库中的基准测试和性能评估容易出错且复杂。理解数据库系统的性能需要全面的心智模型以及公共知识和特定知识的结合。不考虑模糊影响和未知的未知因素可能会导致基准测试不当&lt;a href=&quot;https://hackernews.betacat.io/#demand-the-impossible-rigorous-database-benchmarking&quot; target=&quot;_blank&quot;>;[summary] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809160&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Smalltalk 背后的设计原则 (1981)&lt;/stitle>; &lt;id>;https://www.cs.virginia。 edu/~evans/cs655/readings/smalltalk.html&lt;/id>; &lt;更新>;2023-12-31T03:57:52.246552Z&lt;/更新>; &lt;link href=&quot;https://www.cs.virginia.edu/ ~evans/cs655/readings/smalltalk.html&quot;/>; &lt;作者>; &lt;名称>;rodrigosetti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rodrigosetti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk_files/dpbs_figure1.gif&quot; style=&quot;宽度：220px；高度：130px；&quot; />;&lt;br />;Smalltalk 项目旨在为每个人的创造力提供计算机支持。它专注于充当人体模型和计算硬件之间的接口的编程语言，以及将人类通信系统与计算机通信系统相匹配的用户界面。 Smalltalk背后的设计原则包括个人掌握、良好的设计、语言与人类思维和交流的兼容性、面向对象的&lt;a href=&quot;https://hackernews.betacat.io/#design-principles-behind-smalltalk-1981&quot;目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821506&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/条目>; &lt;/提要>;