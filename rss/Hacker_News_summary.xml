<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-26T12:03:28.985837Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;人工智能解决国际数学奥林匹克银牌级别的问题&lt;/stitle>; &lt;id>;https://deepmind.google/discover/blog/ai-solves-imo-problems-at- silver-medal-level/&lt;/id>; &lt;更新>;2024-07-25T16:03:13.501981Z&lt;/更新>; &lt;link href=&quot;https://deepmind.google/discover/blog/ai-solves-imo- issues-at-silver-medal-level/&quot;/>; &lt;author>; &lt;name>;ocfnash&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ocfnash&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://lh3.googleusercontent.com/AdiABEMQViHaJJIcquROUJAEQXGtkk04SAamLoG0w06W2j5ZBEL-hGgRpwQVfmMnonQud_Ol6y0VTuQxdTScqiE8KrXdNtCalLiU7CJ6R093lRD5pQ=w1072- h603-n-nu&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;基于强化学习的系统 AlphaProof 和改进的几何求解系统 AlphaGeometry 2 首次共同解决了国际数学奥林匹克 (IMO) 六道题中的四道，达到了与银牌获得者相同的水平。这些系统接受了数百万个问题的训练，并使用正式的数学语言来证明或反驳解决方案，... &lt;a href=&quot;https://hackernews.betacat.io/#ai-解决国际数学奥林匹克问题银牌级别问题&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 41069829&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;法国铁路网络在巴黎奥运会前遭受“恶意行为”&lt;/stitle>; &lt;id>;https://www.aljazeera.com/news/2024/7/26/french-rail-network-hit-by -malicious-acts-ahead-of-olympic-ceremony&lt;/id>; &lt;更新>;2024-07-26T11:45:13.503755Z&lt;/更新>; &lt;link href=&quot;https://www.aljazeera.com/news/ 2024/7/26/french-rail-network-hit-by-malicious-acts-ahead-of-olympic-ceremony&quot;/>; &lt;author>; &lt;name>;nour_&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=nour_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.aljazeera.com/wp-content/uploads/2024/07/ AFP__20240726__364X8A3__v4__HighRes__TopshotFranceTransportCrimeAttackSncf-1721982783.jpg？resize=730%2C410&amp;quality=80&quot; style=&quot;width: 220px;高度：124px;&quot; />;&lt;br />;包括纵火袭击在内的恶意行为扰乱了法国高速 TGV 铁路网络，迫使许多线路取消，并影响了 80 万乘客。袭击发生在巴黎奥运会开幕式之前，当局动员情报部门寻找肇事者，并部署数千名铁路工作人员来修复损坏。 -of-paris-olympics&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41077798&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Haystack – 一个 IDE在无限画布上探索和编辑代码&lt;/stitle>; &lt;id>;https://haystackeditor.com/&lt;/id>; &lt;updated>;2024-07-25T19:03:13.504234Z&lt;/updated>; &lt;link href=&quot;https ://haystackeditor.com/&quot;/>; &lt;作者>; &lt;名称>;akshaysg &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=akshaysg&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://framerusercontent.com/images/9bx5KI14yg2zRgbrESEvKFOdFM.png&quot; style=&quot;宽度：220px; height: 220px;&quot; />;&lt;br />;基于画布的 IDE，使导航和重构速度提高 10 倍&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-haystack-an-ide-for -exploring-and-editing-code-on-an-infinite-canvas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41068719 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;使用 Rust 腐蚀疯狂的 Python 运行时&lt;/stitle>; &lt;id>;https://www.vortexa.com/product-blog/using-rust-to-corrode-insane-python-run-times/&lt;/ id>; &lt;更新>;2024-07-26T09:03:13.504664Z&lt;/更新>; &lt;link href=&quot;https://www.vortexa.com/product-blog/using-rust-to-corrode-insane-python- run-times/&quot;/>; &lt;author>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:869/0*bwk3HbWTd1rJssIi&quot; style=&quot;宽度：220px; height: 90px;&quot; />;&lt;br />;作者对一个需要运行 30 个小时的 Python 任务进行了优化，将 matplotlib 替换为 Rust 库，实现了 24 倍的提升，处理时间缩短至 2.9 秒。新的解决方案，使用geopandas 和 rayon 进行并行处理，加快了 QA 周期并提高了模型更新的整体效率。运行时间&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41076905&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN: Undermind (YC S24) – AI 代理用于发现科学论文&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=41069909&lt;/id>; &lt;updated>;2024-07-25T16:03:13.505501Z&lt;/updated>; &lt;link href =&quot;https://news.ycombinator.com/item?id=41069909&quot;/>; &lt;作者>; &lt;名称>;jramette&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jramette&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Undermind 正在构建一个针对复杂科学研究的搜索引擎，旨在帮助研究人员快速找到相关论文，避免在手动搜索上浪费时间。该搜索系统使用模仿人类研究策略的管道，仔细搜索结果并提供报告，其目标是实现结果的高精度和详尽性。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-undermind-yc-s24-ai-agent-for-discovering-scientific-papers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069909&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Wat – Python 对象的深度检查&lt;/stitle>; &lt;id>;https://github.com/igrek51/ wat&lt;/id>; &lt;更新>;2024-07-25T17:03:13.505936Z&lt;/更新>; &lt;link href=&quot;https://github.com/igrek51/wat&quot;/>; &lt;作者>; &lt;名称>;igrek51&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=igrek51&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com /igrek51/wat/master/docs/img/wat-datetime.png&quot; style=&quot;宽度: 220px 高度: 171px;&quot; />;&lt;br />;WAT Inspector 是一个强大的工具，可以让您检查和探索 Python 中的未知对象，提供对象的类型、模块、父对象和方法等信息，使您更容易理解和使用对象。它可用于通过使用除法运算符快速检查对象，并且还提供诸如列出... &lt;a href=&quot;https://hackernews.betacat.io/# show-hn-wat-deep-inspection-of-python-objects&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070428&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;当英国铁路故意撞毁火车时&lt;/stitle>; &lt;id>;https://www.therailwayhub.co.uk/67072/from-the-archive-operation-smash-hit-84/&lt;/id>; &lt;更新>; 2024-07-26T04:03:13.506346Z&lt;/更新>; &lt;link href=&quot;https://www.therailwayhub.co.uk/67072/from-the-archive-operation-smash-hit-84/&quot;/>; &lt;作者>; &lt;名称>;timthorn&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=timthorn&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://b1944490.smushcdn.com/1944490/wp-content/uploads/sites/41/2023/05/railmag_01-10-1984-172-1024x625.jpg?lossy=2&amp;strip=1&amp;webp=1&quot; style=&quot;width ：220像素； height: 135px;&quot; />;&lt;br />;1984年，中央发电局故意将一列火车撞向一辆载有核燃料瓶的出轨货车，以测试其安全性，而该瓶几乎毫发无伤。这次测试是其中的一部分这是一项耗资 400 万英镑的计划，旨在减轻公众对辐照核燃料运输的担忧，该计划是在老达尔比站附近专门设计的测试轨道上进行的。 -british-railways-deliberately-crashed-a-train&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41036267&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;NASA 图形标准手册&lt;/stitle>; &lt;id>;https://standardsmanual.com/products/nasa-graphics-standards-manual&lt;/id>; &lt;更新>;2024-07-26T04:03:13.506749Z&lt;/更新>; &lt;link href =&quot;https://standardsmanual.com/products/nasa-graphics-standards-manual&quot;/>; &lt;作者>; &lt;名称>;agomez314&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= agomez314&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s3.amazonaws.com/standardsmanualimages/frontPageBricks/NASA_VIDEO.jpg&quot; style=&quot;width: 220px; height: 152px;&quot; />;&lt;br />;NASA 徽标（也称为肉丸）于 1992 年取代了旧的 NASA 徽标，《星际迷航：下一代》的一集于 1989 年使用了旧徽标，造成了连续性错误1975 年出版的 NASA 图形标准手册采用了旧徽标，并于 2015 年作为一个独立项目重新发布，以保留那个时代的图形设计。 Graphics-standards-manual&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41036370&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我最喜欢的算法：线性时间中值查找 ( 2018）&lt;/stitle>; &lt;id>;https://rcoh.me/posts/linear-time-median-finding/&lt;/id>; &lt;更新>;2024-07-25T12:03:13.507180Z&lt;/更新>; &lt;link href=&quot;https://rcoh.me/posts/linear-time-median-finding/&quot;/>; &lt;作者>; &lt;名称>;skanderbm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=skanderbm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rcoh.me/images/medians-graph.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;中位数中位数算法是一种确定性线性时间方法，用于查找列表中位数，使用快速选择和主元选择算法来实现线性性能。该算法被证明可以是线性时间，但其实现很复杂，并且由于计算时间慢而在实践中不常用。 find-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41066536&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bcachefs，介绍/探索&lt;/stitle>; &lt; id>;http://blog.asleson.org/2024/07/24/bcachefs-an-introduction/exploration/&lt;/id>; &lt;更新>;2024-07-26T07:03:13.507583Z&lt;/更新>; &lt;link href =&quot;http://blog.asleson.org/2024/07/24/bcachefs-an-introduction/exploration/&quot;/>; &lt;author>; &lt;name>;marbu&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=marbu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://blog.asleson.org/pictures/code-size-comparison.svg&quot; 样式=“宽度：220px； height: 136px;&quot; />;&lt;br />;bcachefs 是下一代写时复制文件系统，旨在提供类似于 Btrfs 和 ZFS 的功能，具有紧凑的代码库和快速的性能。它具有数据校验和、错误检测等功能和修正，并且可以容忍副本的磁盘故障，但仍然缺乏一些功能并且有一些限制。 &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41076190&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lisp 宏的防御：以汽车领域为例&lt;/stitle>; &lt;id >;https://mihaiolteanu.me/defense-of-lisp-macros&lt;/id>; &lt;更新>;2024-07-25T12:03:13.507988Z&lt;/更新>; &lt;link href=&quot;https://mihaiolteanu.me/ Defense-of-lisp-macros&quot;/>; &lt;作者>; &lt;名称>;molteanu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=molteanu&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;汽车行业受到工具、语言和文件格式激增的困扰，导致开发人员和供应商的碎片化和额外的工作量。对一种强大的语言来征服软件领域的追求导致了工具开发的永无止境的循环，每个工具都引入了自己的语言、语法和文件格式，在系统和...之间造成了裂痕。 “https://hackernews.betacat.io/#defense-of-lisp-macros-the-automotive-field-as-a-case-in-point” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41066544&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;生成数独只是为了好玩而不盈利&lt;/stitle>; &lt;id>;https://tn1ck.com/blog/how-to-generate -sudokus&lt;/id>; &lt;更新>;2024-07-25T12:03:13.508396Z&lt;/更新>; &lt;link href=&quot;https://tn1ck.com/blog/how-to-generate-sudokus&quot;/>; &lt;作者>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //tn1ck.com/how-to-generate-sudokus/benchmark_bruteForceWithValidCheck.csv_correlation.png&quot; style=&quot;width: 220px; height: 275px;&quot; />;&lt;br />;作者创建了一个免费开源数独应用程序，并通过使用各种算法生成数独并对其迭代次数进行基准测试来分析数独的难度。分析表明，迭代次数与难度级别，但作者指出，这可能不是人类如何看待难度的完美指标。利润&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41062072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;公平国际象棋和同步游戏&lt;/stitle>; &lt;id>;https ://asvarga.github.io/blog/2024/06/22/fair-chess-and-simultaneous-games.html&lt;/id>; &lt;更新>;2024-07-26T03:03:13.508809Z&lt;/更新>; &lt; link href=&quot;https://asvarga.github.io/blog/2024/06/22/fair-chess-and-simultaneous-games.html&quot;/>; &lt;作者>; &lt;名称>;mlavrent &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=mlavrent&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://asvarga.github.io/files/chess- 1.png&quot;样式=&quot;宽度:220px; height: 220px;&quot; />;&lt;br />;作者提出了一种同步游戏变体，其中两个玩家同时移动，通过尝试两种顺序的移动并仅合并合法的移动来解决冲突。该算法迭代地阻止和合并移动，直到没有更多的决策可以通过国际象棋的多项式时间实现来实现。 &lt;a href=&quot;https://news.ycombinator.com/item?id=41049666&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;表格数据的应用机器学习&lt;/stitle>; &lt;id>;https://aml4td.org/&lt;/id>; &lt;更新>; 2024-07-25T20:03:13.509217Z&lt;/updated>; &lt;link href=&quot;https://aml4td.org/&quot;/>; &lt;author>; &lt;name>;sebg&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该项目旨在创建一个实用指南，用于根据表格数据开发质量预测模型，重点关注特征工程和后期建模活动，并根据知识共享许可用于非商业用途。该指南面向数据分析师和专业人士，假设他们之前没有机器学习或统计方面的专业知识，并将提供有关...的应用知识&lt;a href=&quot;https://hackernews.betacat.io/#applied-machine-learning -for-tabular-data&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41072616&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;创始人创业融资 — 第一部分，会计&lt;/stitle>; &lt;id>;https://rein.pk/startup-finance-for-Founders-part-i-accounting&lt;/id>; &lt;更新>;2024-07-25T23:03:13.509669Z&lt;/更新>; &lt;link href=&quot;https://rein.pk/startup-finance-for-Founders-part-i-accounting&quot;/>; &lt;author>; &lt;name>;sebg&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets.contents.io/asset_isndqCI1.png&quot; style=&quot;width: 220px;高度：142px；” />;&lt;br />;作者没有金融背景，分享了他们在创业金融方面的经验和学习，包括设立公司银行账户、管理现金流和谈判信用额度。他们还讨论了会计、发票和合同的基础知识，并提供了如何构建公司财务运营的示例，包括主服务协议和... &lt;a href=&quot;https://hackernews.betacat.io/#startup -finance-for-Founders-part-i-accounting&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41074002&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;真实-使用 GPU 工作图进行时间程序生成 [pdf]&lt;/stitle>; &lt;id>;https://gpuopen.com/download/publications/Real-Time_Procedural_Generation_with_GPU_Work_Graphs-GPUOpen_preprint.pdf&lt;/id>; &lt;更新>;2024-07-25T20:03 ：13.510067Z&lt;/updated>; &lt;link href=&quot;https://gpuopen.com/download/publications/Real-Time_Procedural_Generation_with_GPU_Work_Graphs-GPUOpen_preprint.pdf&quot;/>; &lt;作者>; &lt;name>;ibobev&lt;/name>; &lt;uri>;https： //news.ycombinator.com/user?id=ibobev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户的输入描述了一个仅使用 GPU 的工作图系统，该系统使用 37 个节点来增强现有场景实时生成各种几何类型，包括常春藤、市场布局和地面杂波。该系统利用 GPU 工作图、光线追踪和网格着色器以程序方式生成几何体，并采用合并实例、BVH 标记和增长偏差等概念来... &lt;a href=&quot;https://hackernews.betacat.io /#real-time-procedural- Generation-with-gpu-work-graphs-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=41035084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Node.js 添加了对 TypeScript 的实验性支持&lt;/stitle>; &lt;id>;https://github.com/nodejs/node/pull/53725&lt;/id>; &lt;updated>;2024-07-25T12:03： 13.510468Z&lt;/updated>; &lt;link href=&quot;https://github.com/nodejs/node/pull/53725&quot;/>; &lt;author>; &lt;name>;magnio&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=magnio&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/19f5ceaed7bfd96bbe1ff3ec94e0670c2a75f0f1ef358d41c5fb71258a8184eb/nodejs/node/pull/53725&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;TypeScript 文件可以通过设置实验标志 --experimental-strip-types 来执行，它将代码转换为 JavaScript，而无需类型检查或保留类型。使用 @swc/wasm-typescript 包是为了简单起见，因为它是一个小包，带有 wasm 和 js 文件来绑定它，并且经过了 Deno 的实际测试。 &lt;a href=&quot;https://hackernews.betacat.io/#node-js-adds-experimental-support-for-typescript&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41064351&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;映射黑客新闻以查找 HN 社区中的知名人士&lt;/stitle>; &lt;id>;https://blog.wilsonl.in/hackerverse-2/&lt;/ id>; &lt;更新>;2024-07-25T16:03:13.510865Z&lt;/更新>; &lt;link href=&quot;https://blog.wilsonl.in/hackerverse-2/&quot;/>; &lt;作者>; &lt;名称>;robg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=robg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.wilsonl.in /hackerverse-2/screenshot.png&quot; style=&quot;宽度: 220px 高度: 161px;&quot; />;&lt;br />;作者和 Robert (robg) 探索了 Hacker News 的语义地图，发现了如何通过语言使用来组织用户、搜索知识以及基于关系绘制社区地图。他们的目标是优先考虑人员而不是页面，从而能够发现可信的声音和联系，并邀请其他人加入候补名单以进一步探索该项目。 &lt;a href=&quot;https://hackernews.betacat.io/#mapping-hacker-news-to-find-who-knows-what-in-the-hn-community&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069527&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用 Python 编写的 Deluxe Paint II 克隆&lt;/stitle>; &lt;id>;https://github.com/mriale /PyDPainter&lt;/id>; &lt;更新>;2024-07-25T21:03:13.511268Z&lt;/更新>; &lt;link href=&quot;https://github.com/mriale/PyDPainter&quot;/>; &lt;作者>; &lt;名称>;luismedel&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=luismedel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent. com/mriale/PyDPainter/master/pydpainter-screenshot.png&quot; style=&quot;宽度：220px 高度：152px;&quot; />;&lt;br />;PyDPainter 是一个基于 Python 的像素艺术程序，灵感来自 1985 年的 Deluxe Paint，旨在为现代像素艺术爱好者创建一个可用且增强的工具。该项目已获得 GPLv3 许可，旨在带回具有现代功能的可靠工具。 &lt;a href=&quot;https://hackernews.betacat.io/#a-clone-of-deluxe-paint-ii-writing-in-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41073264&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Veles：用于二进制数据分析的开源工具&lt;/stitle>; &lt;id>;https://codisec.com/veles/&lt;/id>; &lt;更新>;2024-07-25T12:03:13.511673Z&lt;/更新>; &lt;link href=&quot;https://codisec.com/veles/&quot;/>; &lt;作者>; &lt;名称>;LorenDB &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://codisec.com/wp-content/uploads/2016 /12/binary_visualization.png&quot; style=&quot;宽度: 220px; 高度: 126px;&quot; />;&lt;br />;Veles 是一种二进制数据分析工具，它将先进的十六进制探索和数据可视化功能与可扩展的分析框架相结合，支持逆向工程和隐写术等任务。该工具采用客户端-服务器架构并且是开源的，重点是通过夺旗竞赛进行社区驱动的开发和测试。 &lt;a href=&quot;https://hackernews.betacat.io/#veles-open-source-tool-for-binary-data-analysis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41026480&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;面向所有人的逆向工程&lt;/stitle>; &lt;id>;https://0xinfection.github.io/reversing/&lt;/id>; &lt;更新>;2024-07 -25T15:03:13.512076Z&lt;/updated>; &lt;link href=&quot;https://0xinfection.github.io/reversing/&quot;/>; &lt;作者>; &lt;name>;udev4096&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=udev4096&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://0xinfection.github.io/reversing/cover.png&quot; style=&quot;宽度：220 像素；高度：220 像素；” />;&lt;br />;逆向工程是解构人造物体以揭示其设计、架构或代码的过程，类似于科学研究。本教程集涵盖 x86、x64、32 位 ARM 和 64 位架构，旨在使逆向工程变得简单，并且适合初学者和希望更新知识的人。 &lt;a href=&quot;https://hackernews.betacat.io/#reverse-engineering-for-everyone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41069256&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;五种小语言及其发展：HOPL 演讲 (1993)&lt;/stitle>; &lt;id>;https://www.bell-labs.com/usr/dmr/www/hopl。 html&lt;/id>; &lt;更新>;2024-07-25T14:03:13.512484Z&lt;/更新>; &lt;link href=&quot;https://www.bell-labs.com/usr/dmr/www/hopl.html&quot;/ >; &lt;作者>; &lt;名称>;fanf2&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://www.bell-labs.com/usr/dmr/www/hoplgifs/y.1.gif”样式=“宽度：220像素；高度：170像素；” />;&lt;br />;演讲者讨论了五种编程语言之间的异同：Bliss、Pascal、Algol 68、BCPL 和 C。他认为 C 的成功在于它能够连接和促进人们需要做的事情，及其在 Unix 系统上的实现。 &lt;a href=&quot;https://hackernews.betacat.io/# Five-little-languages-and-how-they-grew-talk-at-hopl-1993&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41032097&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;瑞士小镇禁止广告牌。苏黎世、伯尔尼可能很快就会跟进&lt;/stitle>; &lt;id>;https://www.bloomberg.com/news/articles/2024-07-26/zurich-bern-consider-billboard-bans-after-vernier-outlaws-visual -污染&lt;/id>; &lt;更新>;2024-07-26T05:03:13.512886Z&lt;/更新>; &lt;link href=&quot;https://www.bloomberg.com/news/articles/2024-07-26/zurich- bern-consider-billboard-bans-after-vernier-outlaws-visual-pollution&quot;/>; &lt;作者>; &lt;name>;toomuchtodo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=toomuchtodo&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iUWsl7Q2AgjI/v0/1200x873.jpg&quot; style=&quot;width: 220px高度：161像素；” />;&lt;br />;瑞士小镇维尼尔禁止街道上出现商业广告，以对抗“视觉污染”并为公民提供选择。最高法院驳回了推翻该政策的上诉，允许禁令继续有效。 &lt;a href=&quot;https://hackernews.betacat.io/#a-swiss-town-banned-billboards-zurich-bern-may-soon-follow&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41075766&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从 STM32 映射 FPGA 的内存&lt;/stitle>; &lt;id>;https://serd.es/2024/07/24/Memory -mapping-an-FPGA-from-a-STM32.html&lt;/id>; &lt;更新>;2024-07-25T15:03:13.513311Z&lt;/更新>; &lt;link href=&quot;https://serd.es/2024/ 07/24/Memory-mapping-an-FPGA-from-a-STM32.html&quot;/>; &lt;author>; &lt;name>;hasheddan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= hasheddan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://serd.es/assets/fmc-test-800.jpg&quot; style=&quot;width: 220px; height: 164px ;” />;&lt;br />;作者描述了大规模嵌入式项目的自定义设置，使用 AMD Xilinx Kintex-7 或 Artix FPGA 与 STM32H735 MCU 配对，并在它们之间具有内存映射接口。该设置支持高速数据平面和控制平面，具有分散引脚排列、安全边界和灵活的内存控制器等功能。 &lt;a href=&quot;https://hackernews.betacat.io/#memory-mapping-an-fpga-from-an-stm32&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41068995&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;化学家解释无咖啡因咖啡背后的化学成分&lt;/stitle>; &lt;id>;https://theconversation.com/retaining-flavor-while-removing-caffeine-a- chemist-explains-the-chemistry-behind-decaf-coffee-233196&lt;/id>; &lt;更新>;2024-07-25T13:03:13.513727Z&lt;/更新>; &lt;link href=&quot;https://theconversation.com/retaining -flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=BerislavLopac&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.theconversation.com/files/602926/original/file-20240625-17 -dvtep.jpg?ixlib=rb-4.1.0&amp;rect=0%2C0%2C5243%2C3508&amp;q=20&amp;auto=format&amp;w=320&amp;fit=clip&amp;dpr=2&amp;usm=12&amp;cs=strip&quot; style=&quot;width: 220px; height: 148px;&quot; />;&lt;br />;脱咖啡因方法，如二氧化碳、瑞士水和溶剂法，可以去除咖啡豆中的大部分咖啡因，同时保留风味和香气化合物。这些方法具有丰富的咖啡因含量历史上，使用高压二氧化碳、热水和有机溶剂等各种技术来提取咖啡因，其中一些方法能够将风味化合物重新引入咖啡豆中。 a-chemist-explains-the-chemistry-behind-decaf-coffee&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41067616&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;调查损坏的 Winamp 皮肤&lt;/stitle>; &lt;id>;https://jordaneldredge.com/notes/corrupted-skins/&lt;/id>; &lt;updated>;2024-07-25T12:03:13.514137Z&lt;/updated>; &lt;link href =&quot;https://jordaneldredge.com/notes/corrupted-skins/&quot;/>; &lt;作者>; &lt;名称>;treve&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=treve&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jordaneldredge.com/notion-mirror/84ebb48c-616a-4f51-ae9a-991a4e0a7e9b/e94461bd-1f9c-4ef4-bbda-23acc32ef0df /EsErCPFVoAACjOn.jpeg&quot; style=&quot;宽度：220px; height: 241px;&quot; />;&lt;br />;用户探索了损坏的 Winamp 皮肤，找到了各种文件，包括 PDF、图像和加密的 zip 文件，这导致了一系列意外的发现。用户发现了敏感信息，例如电子邮件密码和传记，甚至发现了一个潜在的恶意可执行文件，后来发现该文件是无害的。 >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41064645&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;问 HN：和 10 岁的孩子一起学习机器人技术的最佳方式？&lt;/stitle>; &lt;id >;https://news.ycombinator.com/item?id=41070703&lt;/id>; &lt;更新>;2024-07-25T17:03:13.514539Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator. com/item?id=41070703&quot;/>; &lt;作者>; &lt;名称>;hersko&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hersko&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;您和您的儿子想从头开始构建一个小型战斗机器人，但缺乏电气工程和机器人技术知识。您正在寻找资源和书籍来共同学习基础知识，而不是购买预制的套件。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-best-way-to-learn-robotics-with-a-10-year-old&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070703&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;过时的安全：为什么我们使用隔离的虚拟机&lt;/stitle>; &lt;id>;https://blog.thinkst.com/ 2024/07/unfashionically-secure-why-we-use-isolated-vms.html&lt;/id>; &lt;更新>;2024-07-25T17:03:13.514935Z&lt;/更新>; &lt;link href=&quot;https://blog .thinkst.com/2024/07/unfashionically-secure-why-we-use-isolated-vms.html&quot;/>; &lt;author>; &lt;name>;mh_&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=mh_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024 /07/image-4.png?resize=960%2C436&amp;ssl=1&quot; style=&quot;宽度: 220px 高度: 100px;&quot; />;&lt;br />;安全公司 Canary 选择使用独特的架构，在单独的虚拟机上运行每个客户的服务，提供完全的客户隔离和强大的安全边界，尽管这种架构不太时尚且价格更高。这种方法使 Canary 能够避免常见的安全漏洞，并在安全评估中被证明是有效的，提供了高水平的... &lt;a href=&quot;https://hackernews.betacat.io/#unfashionously-secure-why-we- use-isolated-vms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070870&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/内容>; &lt;/条目>; &lt;/提要>;