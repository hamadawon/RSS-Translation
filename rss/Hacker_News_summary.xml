<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-02-05T00:21:50.138808Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;浏览器扩展被低估：可破解软件的承诺（2019）&lt;/stitle>; &lt;id>;https://www.geoffreylitt.com/2019/07/29/browser-extensions &lt;/id>; &lt;更新>;2024-02-04T16:21:26.464159Z&lt;/更新>; &lt;link href=&quot;https://www.geoffreylitt.com/2019/07/29/browser-extensions&quot;/>; &lt;作者>; &lt;name>;mufty&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mufty&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //www.geoffreylitt.com/images/article_images/legos.jpg?1705878965&quot; style=&quot;宽度：220px；高度：90px；&quot; />;&lt;br />;浏览器扩展是一个特殊的生态系统，允许用户以创造性的方式修改应用程序。它们对我们如何使用计算机提供深度控制，并允许我们个性化自己的使用方式。 &lt;a href=&quot;https://hackernews.betacat.io/#browser-extensions-are-undererated-the-promise-of-hackable-software-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39251095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;超越自我注意力：小型语言模型如何预测下一个标记&lt;/stitle>; &lt;id>;https://shyam.blog/ posts/beyond-self-attention/&lt;/id>; &lt;更新>;2024-02-04T19:21:26.466205Z&lt;/更新>; &lt;link href=&quot;https://shyam.blog/posts/beyond-self-attention/ &quot;/>; &lt;作者>; &lt;名称>;tplrbv &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tplrbv&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shyam.blog/posts/beyond-self-attention/images/a9f2adc6c1c25ebb263caf42df37f4429c4ed44eda0a0a228cba52b7a00aeb9d.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;每个转换器块都会学习将给定提示与训练语料库中找到的一类字符串相关联的权重。训练语料库中这些字符串后面的标记分布是块输出的下一个标记的预测。最终的变压器输出是每个块的预测的线性组合。 &lt;a href=&quot;https://hackernews.betacat.io/#beyond-self-attention-how-a-small-language-model-predicts-the-next-token&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39251909&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Stract：开源、非盈利搜索引擎&lt;/stitle>; &lt;id>;https://stract.com /&lt;/id>; &lt;更新>;2024-02-04T21:21:26.466740Z&lt;/更新>; &lt;link href=&quot;https://stract.com/&quot;/>; &lt;作者>; &lt;名称>;FLpxpyJ&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=FLpxpyJ&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;使用光学器件自定义您的搜索：&lt;a href=&quot;https://hackernews .betacat.io/#stract-open-souce-non-profit-search-engine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39254172&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;代码片段如何失败&lt;/stitle>; &lt;id>;https://www.bbc.com/future/article/20240202-what-happened-to-the-codpiece&lt;/id>; &lt;更新>;2024- 02-04T20:21:26.467239Z&lt;/updated>; &lt;link href=&quot;https://www.bbc.com/future/article/20240202-what-happened-to-the-codpiece&quot;/>; &lt;作者>; &lt;名称>;rntn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rntn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ichef .bbci.co.uk/images/ic/480xn/p0h8ywt4.jpg.webp&quot; style=&quot;宽度：220px;高度：124px;&quot; />;&lt;br />;文艺复兴时期，上流社会的男性穿着 codpieces，这是一种布袋，穿在胯部，并填充成各种形状。这些装饰性服装让男性能够展示自己的下体部位甚至被用来展示军事实力。然而，到了 16 世纪末，密码片不再流行，并且尺寸开始缩小。&lt;a href=&quot;https://hackernews.betacat.io/#how-the-codpiece -flopped&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39253603&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sapling：一个高度实验性的 vi 风格编辑器，您可以在其中进行编辑代码，而不是文本&lt;/stitle>; &lt;id>;https://github.com/kneasle/sapling&lt;/id>; &lt;updated>;2024-02-04T20:21:26.467713Z&lt;/updated>; &lt;link href=&quot;https: //github.com/kneasle/sapling&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://opengraph.githubassets.com/b150fec0c50d1ae51de45a34190b7f272d7fcf950333479218cd91a7e71fc8eb/kneasle/sapling”样式=“宽度：220px; height: 110px;&quot; />;&lt;br />;一个高度实验性的 vi 风格编辑器，您可以在其中编辑代码，而不是文本。 - GitHub - kneasle/sapling：一个高度实验性的 vi 风格编辑器，您可以在其中编辑代码，而不是文本。&lt;a href=&quot;https://hackernews.betacat.io/#sapling-a-highly-experimental-vi-inspired-editor-where-you-edit-code-not-text&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39253798&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Dijkstra 在荷兰电视台的采访 (2000)&lt;/stitle>; &lt;id>;https://pncnmnp.github.io/ blogs/translated-dijakstra.html&lt;/id>; &lt;更新>;2024-02-04T20:21:26.468241Z&lt;/更新>; &lt;link href=&quot;https://pncnmnp.github.io/blogs/translated-dijakstra.html &quot;/>; &lt;author>; &lt;name>;pncnmnp&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pncnmnp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Edsgar W著名计算机科学家 Dijkstra 强调了计算机编程中质量、正确性和优雅的重要性。他认为编程应该以谦逊的态度进行，而不是依赖聪明的技巧。 Dijkstra 还强调了编程的复杂性以及需要仔细的控制机制以避免错误。 &lt;a href=&quot;https://hackernews.betacat.io/#dijkstra-s-interview-on-dutch-tv-2000&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39253944&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ProofWiki：数学证明在线纲要&lt;/stitle>; &lt;id>;https://proofwiki.org/wiki/Main_Page&lt;/id>; &lt;更新>;2024-02 -04T18:21:26.468825Z&lt;/updated>; &lt;link href=&quot;https://proofwiki.org/wiki/Main_Page&quot;/>; &lt;作者>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://proofwiki.org/w/images/c/c9/Logo.png&quot;样式=“宽度：220像素；高度：220像素；” />;&lt;br />;$\mathsf{Pr} \infty \mathsf{fWiki}$ 是一个在线数学证明纲要。它旨在收集、协作和分类数学证明。 &lt;a href=&quot;https://hackernews.betacat.io/#proofwiki-online-compendium-of-mathematical-proofs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39252531&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;解决暗网之谜&lt;/stitle>; &lt;id>;https://sizeof.life/posts/darknet-riddle/&lt;/id>; &lt;更新>;2024-02-04T21 ：21：26.469296Z &lt;/更新>; &lt;link href =“https://sizeof.life/posts/darknet-riddle/”/>; &lt;作者>; &lt;名称>; FLpxpyJ &lt;/名称>; &lt;uri>; https://news .ycombinator.com/user?id=FLpxpyJ&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://sizeof.life/img/darknet-riddle.png&quot; style=&quot;宽度：220 像素；高度：130 像素；” />;&lt;br />;Reddit 上发布了一个“.onion”链接，其中包含疑似谜语。这个谜语引出了一条包含另一个谜语的隐藏信息。解开第二个谜语后，收到了一个二进制代码，生成了一个包含素数的文本文件。下一步涉及使用质数导航到 URL 并执行重复播放技术来显示最终 URL。 &lt;a href=&quot;https://hackernews.betacat.io/#solving-the-darknet-riddle&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39254274&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;通过多面体透镜解释神经网络（2022）&lt;/stitle>; &lt;id>;https://www.lesswrong.com/posts/eDicGjD9yte6FLSie/interpreting-neural-networks-through-the-多面体透镜&lt;/id>; &lt;更新>;2024-02-04T19:21:26.469769Z&lt;/更新>; &lt;link href=&quot;https://www.lesswrong.com/posts/eDicGjD9yte6FLSie/interpreting-neural-networks-through -the-polytope-lens&quot;/>; &lt;作者>; &lt;名称>;sva_&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sva_&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://res.cloudinary.com/lesswrong-2-0/image/upload/f_auto,q_auto/v1/mirroredImages/eDicGjD9yte6FLSie/ujwl46m0pgeahjumbbee&quot; style=&quot;宽度：220px；高度： 219 像素；” />;&lt;br />;机械可解释性旨在解释神经网络在具体细节层面上学到了什么。以前的机制描述使用单个神经元或其线性组合来理解网络学到的表示。然而，多面透镜提供了一个超越单个神经元的新视角，探索分段线性激活的方式&lt;a href=&quot;https://hackernews.betacat.io/#interpreting-neural-networks-through-the-polytope-lens -2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39252989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;英仙座 A 中黑洞喷流的磁性发射&lt;/stitle >; &lt;id>;https://www.mpifr-bonn.mpg.de/pressreleases/2024/4&lt;/id>; &lt;更新>;2024-02-04T19:21:26.470247Z&lt;/更新>; &lt;link href=&quot;https ://www.mpifr-bonn.mpg.de/pressreleases/2024/4&quot;/>; &lt;作者>; &lt;名称>;raattgift&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=raattgift &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.mpifr-bonn.mpg.de/8440856/original-1706620059.jpg?t=eyJ3aWR0aCI6MTIwMCwiaGVpZ2h0IjpudWxsLCJmaXQiOm51bGwsIm9ial9pZCI6ODQ0MDg1Nn 0%3D-- 4e02b292948283a8c8294c29a33ade11f02b1e91&quot;样式=&quot;宽度：220px；高度：164px;&quot; />;&lt;br />;事件视界望远镜 (EHT) 对英仙座 A 黑洞进行了开创性的观测，提供了黑洞周围有序磁场的新证据。这些观测结果揭示了这一过程黑洞吸积和强大等离子射流的发射。&lt;a href=&quot;https://hackernews.betacat.io/#Magnetic-launching-of-black-hole-jets-in-perseus-a&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39253298&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;滚动机身导弹&lt;/stitle>; &lt;id>;https://www.navalgazing.net /RAM&lt;/id>; &lt;更新>;2024-02-04T16:21:26.470741Z&lt;/更新>; &lt;link href=&quot;https://www.navalgazing.net/RAM&quot;/>; &lt;作者>; &lt;名称>;cwillu&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=cwillu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.navalgazing. net/attach/RAMLaunchGreenBay.jpg?v=1706810557.jpg&quot; style=&quot;width: 220px;高度：146px;&quot; />;&lt;br />;RIM-116 滚动机身导弹 (RAM) 是一种防空武器，旨在为来袭反舰导弹提供最后的防御。它使用从线膛管发射的导弹在飞行中滚动，使其仅使用两个控制翼而不是四个。&lt;a href=&quot;https://hackernews.betacat.io/#rolling-airframe-missile&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39250896&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;针对“反向洒水器”问题的新解决方案&lt;/stitle>; &lt;id>;https://arstechnica.com/science /2024/02/mathematicians-finally-solved-feynmans-reverse-sprinkler-problem/&lt;/id>; &lt;更新>;2024-02-04T19:21:26.471227Z&lt;/更新>; &lt;link href=&quot;https://arstechnica .com/science/2024/02/mathematicians-finally-solved-feynmans-reverse-sprinkler-problem/&quot;/>; &lt;author>; &lt;name>;Archelaos&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=Archelaos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2024/02/feynman7-640x692。 jpg&quot; 样式=&quot;宽度:220px; height: 238px;&quot; />;&lt;br />;最近的一项研究解决了“反向洒水器”问题，该问题涉及确定如果水被吸入而不是喷出，洒水器将旋转的方向。研究发现反向洒水器在吸水时与喷水时以相反的方向旋转，挑战了对此问题的传统看法。&lt;a href=&quot;https://hackernews.betacat.io/#a-new-solution-for-the -reverse-sprinkler-problem&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39239152&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;__VA_OPT__ 细节&lt;/stitle>; &lt;id >;https://www.corsix.org/content/va-opt-minutiae&lt;/id>; &lt;更新>;2024-02-04T20:21:26.472181Z&lt;/更新>; &lt;link href=&quot;https://www.corsix.org/content/va-opt-minutiae&quot; corsix.org/content/va-opt-minutiae&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;本文讨论了在 C 和 C++ 语言中使用 __VA_OPT__ 功能来解决可变参数宏的问题。它解释了如果变量参数不存在或为空，__VA_OPT__ 如何扩展为空，否则扩展为逗号。本文还探讨了 __VA_OPT__ 中空格和地标标记的行为。 &lt;a href=&quot;https://hackernews.betacat.io/#va-opt-minutiae&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39187349&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;汤普森采样简介：伯努利强盗 (2017)&lt;/stitle>; &lt;id>;https://gdmarmerola.github.io//ts-for-bernoulli-bandit/&lt;/id>; &lt;更新>;2024-02-04T20:21:26.473099Z&lt;/更新>; &lt;link href=&quot;https://gdmarmerola.github.io//ts-for-bernoulli-bandit/&quot;/>; &lt;作者>; &lt;名称>;pncnmnp&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=pncnmnp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gdmarmerola.github。 io//assets/img/ts_for_mab/multiarmedbandit.jpg&quot; style=&quot;宽度：220px；高度：183px；&quot; />;&lt;br />;本文介绍了汤普森采样作为解决强化学习中探索-利用困境的一种方法。它将汤普森采样与其他流行的策略（例如 $\epsilon$-greedy 和 Upper Confidence Bound）进行了比较，并表明汤普森采样在累积奖励和遗憾方面优于它们。 &lt;a href=&quot;https://hackernews.betacat.io/#introduction-to-thompson-sampling-the-bernoulli-bandit-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39253511&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;黑麦：愿景继续&lt;/stitle>; &lt;id>;https://lucumr.pocoo.org/2024/2/4/rye-a-vision /&lt;/id>; &lt;更新>;2024-02-04T10:21:26.473572Z&lt;/更新>; &lt;link href=&quot;https://lucumr.pocoo.org/2024/2/4/rye-a-vision/&quot; />; &lt;author>; &lt;name>;ksbrooksjr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ksbrooksjr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;黑麦是全面的 Python 打包和项目管理解决方案，旨在提供无缝的用户体验。它将核心功能委托给已建立的工具，减少了开发人员的认知负担。虽然它并不能解决 Python 生态系统中的所有挑战，但它提供了一个有希望的开始，并收到了积极的反馈。 &lt;a href=&quot;https://hackernews.betacat.io/#rye-a-vision-continued&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39249005&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;变压器如何工作？&lt;/stitle>; &lt;id>;https://nintyzeros.substack.com/p/how-do-transformer-workdesign-a-multi&lt;/id>; &lt;更新>;2024-02-04T18:21:26.474992Z&lt;/更新>; &lt;link href=&quot;https://nintyzeros.substack.com/p/how-do-transformer-workdesign-a-multi&quot;/>; &lt;作者>; &lt;名称>;willem19x&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=willem19x&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https:// hackernews.betacat.io/#how-do-transformers-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39252235&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用户体验 41 年：职业回顾&lt;/stitle>; &lt;id>;https://www.uxtigers.com/post/41-years-in-ux&lt;/id>; &lt;updated>;2024-02-04T10:21:26.475446 Z&lt;/updated>; &lt;link href=&quot;https://www.uxtigers.com/post/41-years-in-ux&quot;/>; &lt;作者>; &lt;name>;ravirajx7&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=ravirajx7&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.wixstatic.com/media/d496b6_d1eb616f02b34d738fb1b35a27ebcf29~mv2.jpg/ v1/fill/w_1920,h_1080,al_c/d496b6_d1eb616f02b34d738fb1b35a27ebcf29~mv2.jpg&quot; style=&quot;宽度: 220px; height: 124px;&quot; />;&lt;br />;Jakob Nielsen 自 1983 年以来一直从事用户体验工作。很多事情都发生了变化，包括他自己从学术界到实践的旅程，但使命仍然是一样的：让计算机适合人类并令人愉悦。 &lt;a href=&quot;https://hackernews.betacat.io/#41-years-in-ux-a-career-retrospective&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39173528&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;合理的配置语言&lt;/stitle>; &lt;id>;https://ruudvanasseldonk.com/2024/a-reasonable-configuration-language&lt;/id>; &lt;updated>; 2024-02-04T14:21:26.475907Z&lt;/更新>; &lt;link href=&quot;https://ruudvanasseldonk.com/2024/a-reasonable-configuration-language&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ruudvanasseldonk.com/images/ill -build-my-own-configuration-language.png&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;大约六个月前，作者决定编写自己的配置语言，称为 RCL。它受到 Nix 和 Python 的启发，旨在为配置问题提供更合理的解决方案。虽然仍然是一个作为一个业余爱好项目，RCL 变得越来越有用，并为作者解决了实际问题。&lt;a href=&quot;https://hackernews.betacat.io/#a-reasonable-configuration-language&quot; target=&quot;_blank&quot;>;[summary]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39250320&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pkl，一种用于配置的编程语言&lt;/stitle>; &lt;id>;https://pkl-lang.org/blog /introducing-pkl.html&lt;/id>; &lt;更新>;2024-02-04T00:21:26.476834Z&lt;/更新>; &lt;link href=&quot;https://pkl-lang.org/blog/introducing-pkl.html&quot; />; &lt;author>; &lt;name>;bioballer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bioballer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://pkl-lang.org/blog/_images/introducing-pkl/intellij-autocomplete.gif&quot; style=&quot;width: 220px; height: 109px;&quot; />;&lt;br />;Pkl 是一种用于生成配置的开源编程语言。它结合了静态语言和通用语言的最佳特性，允许用户编写具有声明式和简单代码的功能编程语言。&lt;a href=&quot;https://hackernews.betacat.io/#pkl-a-programming-language-for-configuration&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=39232976&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;回到软盘（2019）&lt;/stitle>; &lt;id>;https://www.markround.com/blog/2019/12/30/back-到-the-floppy/&lt;/id>; &lt;更新>;2024-02-04T16:21:26.477289Z&lt;/更新>; &lt;link href=&quot;https://www.markround.com/blog/2019/12/30/ back-to-the-floppy/&quot;/>; &lt;author>; &lt;name>;doener&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=doener&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://www.markround.com/assets/ generated/amiga/floppy/disk_box-800-e85e996de.jpg”样式=“宽度：220px; height: 146px;&quot; />;&lt;br />;怀念软盘及其在作者生活中的意义，从童年回忆到与朋友交易磁盘。作者讨论了数字存储的便利性以及物理排序的满足感通过磁盘集合。&lt;a href=&quot;https://hackernews.betacat.io/#back-to-the-floppy-2019&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=39239356&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;塑料袋禁止工作&lt;/stitle>; &lt;id>;https://www.zmescience.com/science/news-science/ Plastic-bans-work-billions -of- Plastic-bags-were-avoided-in-the-us-alone/&lt;/id>; &lt;更新>;2024-02-04T15:21:26.477751Z&lt;/更新>; &lt;link href=&quot;https://www .zmescience.com/science/news-science/ Plastic-bans-work-billions-of- Plastic-bags-were-avoided-in-the-us-alone/&quot;/>; &lt;作者>; &lt;名称>;Brajeshwar&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.zmescience.com/ wp-content/uploads/2024/01/brian-yurasits-jVXgfjSDnJI-unsplash-1024x683.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;塑料袋禁令发挥作用。仅在美国就避免了数十亿塑料袋。&lt;a href=&quot;https://hackernews.betacat.io/# Plastic-bag-bans-work &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39250434&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/内容>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一致性&lt;/stitle>; &lt;id>;https://surfingcomplexity。博客/2023/12/31/consistency/&lt;/id>; &lt;更新>;2024-02-04T18:21:26.478207Z&lt;/更新>; &lt;link href=&quot;https://surfingcomplexity.blog/2023/12/31/一致性/&quot;/>; &lt;作者>; &lt;名称>;kiyanwang&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kiyanwang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://lorinhochstein.files.wordpress.com/2023/12/execution-history-1.png?w=865&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;在两个人之间的对话中，他们讨论了多线程应用程序中队列的行为。他们意识到仅查看打印输出的顺序不足以确定队列是否是行为正确。他们引入了线性化的概念，允许将潜在重叠的历史转换为连续的历史。他们还讨论了在分布式&lt;a href=&quot;https://hackernews.betacat.io/# 中实现线性化的挑战一致性&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;财务人员与 Deepfake 首席财务官视频通话后支付 2500 万美元&lt;/stitle>; &lt;id>;https://edition.cnn.com/2024/02/04/asia/deepfake-cfo-scam-hong-kong -intl-hnk/index.html&lt;/id>; &lt;更新>;2024-02-04T09:21:26.478668Z&lt;/更新>; &lt;link href=&quot;https://edition.cnn.com/2024/02/04/ asia/deepfake-cfo-scam-hong-kong-intl-hnk/index.html&quot;/>; &lt;author>; &lt;name>;bsdz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= bsdz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-1437811938.jpg?c= 16x9&amp;q=h_833,w_1480,c_fill&quot; style=&quot;宽度: 220px; height: 147px;&quot; />;&lt;br />;一名跨国公司的财务人员在视频电话会议中被骗，利用 Deepfake 技术冒充公司首席财务官，向诈骗者支付了 2500 万美元。该骗局涉及该员工与其他工作人员进行深度伪造的视频通话，让工作人员相信他们是真实的。&lt;a href=&quot;https://hackernews.betacat.io/#finance-worker-pays-out-25m-after-video- call-call-with-deepfake-cfo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39248649&quot; target=&quot;_blank&quot;>; [评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;#include &lt;rules>; （2010）&lt;/stitle>; &lt;id>;https://zeux.io/2010/11/15/include-rules/&lt;/id>; &lt;更新>;2024-02-04T12:21:26.479149Z&lt;/更新>; &lt; link href=&quot;https://zeux.io/2010/11/15/include-rules/&quot;/>; &lt;author>; &lt;name>;davikr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=davikr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;C++ 受头文件困扰，这可能会导致编译错误和构建速度缓慢。第一个重要规则是每个文件中包含的文件数量最少。第二条重要规则是包含每个必需声明的所有依赖标头。每个文件还应该包含防止多重包含的防护措施，可以使用 #pragma Once 或标头防护措施。包含路径应​​该最少且一致。 &lt;a href=&quot;https://hackernews.betacat.io/#include-rules-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39249430&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;苹果修复了 Apple Vision Pro 中“可能已被利用”的零日漏洞&lt;/stitle>; &lt;id>;https://techcrunch.com/2024/01/31/apple-vision-pro -zero-day-security-bug-exploited/&lt;/id>; &lt;更新>;2024-02-04T18:21:26.479600Z&lt;/更新>; &lt;link href=&quot;https://techcrunch.com/2024/01/31 /apple-vision-pro-zero-day-security-bug-exploited/&quot;/>; &lt;作者>; &lt;名称>;arkadiyt&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=arkadiyt&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://techcrunch.com/wp-content/uploads/2023/06/CMC_6538.jpg?w=600&quot; style=&quot;width ：220px；高度：147px；” />;&lt;br />;Apple 发布了visionOS 1.0.2，修复了 WebKit 中的一个漏洞，该漏洞允许恶意代码在受影响的设备上运行。目前尚不清楚该漏洞是否专门在 Apple Vision Pro 中被利用，也不知道是谁在利用它。 &lt;a href=&quot;https://hackernews.betacat.io/#apple-fixes-zero-day-bug-in-apple-vision-pro-that-may-have-been-exploited&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39252321&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; /饲料>;