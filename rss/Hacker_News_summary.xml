<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-29T00:28:39.193497Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;日本战俘营中建造的小型车床&lt;/stitle>; &lt;id>;http://www.lathes.co.uk/bradley-pow-lathe/&lt;/id>; &lt;已更新>;2024-04-28T18:28:20.447837Z&lt;/已更新>; &lt;link href=&quot;http://www.lathes.co.uk/bradley-pow-lathe/&quot;/>; &lt;作者>; &lt;名称>;CommieBobDole&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=CommieBobDole&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www.lathes. co.uk/bradley-pow-lathe/img0.jpg&quot; style=&quot;宽度：220px 高度：327px；&quot; />;&lt;br />;如果您认为在家制作车床很困难，这可能会鼓励您尝试一下。这是人类聪明才智的真实证明。 &lt;a href=&quot;https://hackernews.betacat.io/#a-small-lathe-built-in-a-japanese-prison-camp&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40190542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;个人计算为个人图书馆科学铺平了道路&lt;/stitle>; &lt;id>;https://www.bramadams.dev/issue-55/&lt; /id>; &lt;更新>;2024-04-28T22:28:20.449806Z&lt;/更新>; &lt;link href=&quot;https://www.bramadams.dev/issue-55/&quot;/>; &lt;作者>; &lt;名称>;_bramses&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=_bramses&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bramadams. dev/content/images/2024/04/Camille-Corot-Muse.jpeg&quot; style=&quot;宽度：220px；高度：294px；&quot; />;&lt;br />;本文探讨了个人图书馆科学的演变和影响，并将其与个人计算的兴起进行了比较，强调了从企业技术到由用户需求驱动的个性化解决方案的历程，并展望了个人图书馆的未来是数据交互和遗留的组成部分。 &lt;a href=&quot;https://hackernews.betacat.io/#personal-computing-paves-the-way-for-personal-library-science&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40192359&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;连续编译的本质 (1993) [pdf]&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/ pdf/10.1145/173262.155113&lt;/id>; &lt;更新>;2024-04-28T23:28:20.450250Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/pdf/10.1145/173262.155113&quot;/ >; &lt;作者>; &lt;名称>;swatson741&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;a href= “https://hackernews.betacat.io/#the-essence-of-compiling-with-continuations-1993-pdf” target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN: Dotenv，如果它是 Unix 实用程序&lt;/stitle>; &lt;id>;https:// /github.com/gyf304/dotenv&lt;/id>; &lt;更新>;2024-04-28T20:28:20.450660Z&lt;/更新>; &lt;link href=&quot;https://github.com/gyf304/dotenv&quot;/>; &lt;作者>; &lt;name>;gyf304&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gyf304&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //opengraph.githubassets.com/2542618be1fce54d96610652734ec399c4f20cfbb96ffb3e7e87552eb7fecebb/gyf304/dotenv&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Dotenv 将环境变量从 .env 文件加载到脚本中；使用 C 编译器安装并 make。它支持键值对，忽略空格，并允许使用井号进行注释&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-dotenv-if-it-is-a-unix-utility&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191510&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用遗传算法观看汽车进化&lt;/stitle>; &lt;id>;https://rednuht.org/genic_cars_2/&lt;/id>; &lt;updated>; 2024-04-28T13:28:20.451471Z&lt;/更新>; &lt;link href=&quot;https://rednuht.org/genic_cars_2/&quot;/>; &lt;作者>; &lt;name>;memalign&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=memalign&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该程序使用遗传算法和 Box2D 物理原理将两轮形状演变成汽车，它通过种子随机性实现一致的轨迹； .js 和可变的遗传变异允许暂停查看顶级赛车，但性能可能会随着重新运行而变化。 &lt;a href=&quot;https://hackernews.betacat.io/#watch-cars-evolve-using-genic-algorithm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40177599&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zilog Z80 CPU – 现代、免费和开源的硅克隆&lt;/stitle>; &lt;id>;https://github.com/rejunity/z80-open-silicon&lt;/id >; &lt;更新>;2024-04-28T11:28:20.451882Z&lt;/更新>; &lt;link href=&quot;https://github.com/rejunity/z80-open-silicon&quot;/>; &lt;作者>; &lt;名称>;jnord&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com /rejunity/z80-open-silicon/main/docs/tt07_z80.png&quot; style=&quot;宽度：220px；高度：318px；&quot; />;&lt;br />;Zilog 宣布 Z80 CPU 寿命终止，促使开源社区使用 OpenROAD 和 Skywater PDK 开发 FOSS Z80 进行生产。最初的 FOSS Z80 设计将于 2024 年 6 月制造，模仿原始 Z80 布局，从而实现更便宜的芯片制造。 &lt;a href=&quot;https://hackernews.betacat.io/#zilog-z80-cpu-modern-free-and-open-source-silicon-clone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40187656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OSWorld：在真实计算机中对开放式任务的多模式代理进行基准测试&lt;/stitle>; &lt;id>;https://os-world.github .io/&lt;/id>; &lt;更新>;2024-04-28T19:28:20.452269Z&lt;/更新>; &lt;link href=&quot;https://os-world.github.io/&quot;/>; &lt;作者>; &lt;名称>;克里斯蒂安保罗&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kristianpaul&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://os- world.github.io/static/images/task_demonstration.png&quot; style=&quot;宽度：220px 高度：136px；&quot; />;&lt;br />;OSWorld 是一种新颖的多模式代理环境，支持跨操作系统平台的多样化、开放式计算机任务，并附带 369 个基准任务。尽管进行了广泛的评估，但与人类表现相比，当前模型的能力有限。 &lt;a href=&quot;https://hackernews.betacat.io/#osworld-benchmarking-multimodal-agents-for-open-ending-tasks-in-real-computers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191047&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我艰难学到的软件设计原则&lt;/stitle>; &lt;id>;https://read.engineerscodex.com/p/ 4-software-design-principles-i-learned&lt;/id>; &lt;更新>;2024-04-28T18:28:20.452658Z&lt;/更新>; &lt;link href=&quot;https://read.engineerscodex.com/p/4 -software-design-principles-i-learned&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack -post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2baa3ff-3727-4dfa-a5c0-1b6f00b16d14_1024x1024.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;作者概述了关键的软件开发原则：避免多个事实来源以防止同步问题，并抵制过度抽象以保持代码的可维护性。他们主张在测试中谨慎使用模拟以获得更高的可靠性。 &lt;a href=&quot;https://hackernews.betacat.io/#software-design-principles-i-learned-the-hard-way&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40155346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;加快 C++ 构建时间&lt;/stitle>; &lt;id>;https://www.figma.com/blog/speeding-up-build-times/&lt; /id>; &lt;更新>;2024-04-28T19:28:20.453429Z&lt;/更新>; &lt;link href=&quot;https://www.figma.com/blog/speeding-up-build-times/&quot;/>; &lt;作者>; &lt;name>;熟练&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=skilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //cdn.sanity.io/images/599r6htc/localized/d52b738e1057214775d55e92e0333f8033fa6e7a-3840x2160.png?w=3840&amp;h=2160&amp;q=75&amp;fit=max&amp;auto=format&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Figma 通过针对不必要的包含、创建 DIWYDU 和includes.py 等工具以及引入用于前向声明的 Fwd.h 文件来解决 C++ 缓慢的构建时间问题，从而将构建时间缩短了 50%。他们的方法包括自动识别多余的标头和优化开发效率。 &lt;a href=&quot;https://hackernews.betacat.io/#speeding-up-c-build-times&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40178634&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;碎片化思维对心流状态的威胁比中断更大&lt;/stitle>; &lt;id>;https://blog.stackblitz.com/posts/flow-state/&lt;/id>; &lt;已更新>;2024-04-28T10:28:20.453807Z&lt;/已更新>; &lt;link href=&quot;https://blog.stackblitz.com/posts/flow-state/&quot;/>; &lt;作者>; &lt;名称>;nickwritesit &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nickwritesit&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.stackblitz.com/ posts/flow-state/hero.png&quot; style=&quot;宽度：220px 高度：114px;&quot; />;&lt;br />;开发人员和同事努力平衡心流状态和工作中断，却没有意识到实现心流的细微差别很复杂，而且经常被误解。最近的研究表明，内部障碍是心流的主要干扰因素，提倡正念和组织变革以提高生产力。 &lt;a href=&quot;https://hackernews.betacat.io/#fragmented-thinking-is-a-bigger-threat-to-flow-state-than-interruptions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40155713&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大麦植物通过含糖分泌物微调根部微生物群落&lt;/stitle>; &lt;id>;https://phys.org/news /2024-04-barley-fine-tune-root-microbial.html&lt;/id>; &lt;更新>;2024-04-28T18:28:20.455142Z&lt;/更新>; &lt;link href=&quot;https://phys.org/ news/2024-04-barley-fine-tune-root-microbial.html&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wglb&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2024/barley-plants-fine-tun.jpg&quot;样式=“宽度：220像素；高度：146像素；” />;&lt;br />;不同的大麦品种通过分泌特定的糖和化合物来吸引独特的土壤微生物；一项研究表明，这些关系随植物遗传学的不同而变化，影响植物的生长和健康。未来的谷物育种可能会利用这些相互作用来提高作物的恢复力。 &lt;a href=&quot;https://hackernews.betacat.io/#barley-plants-fine-tune-root-microbial-communities-through-sugary-secretions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40165329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;失速的不可失速飞机&lt;/stitle>; &lt;id>;https://fearoflanding.com/accidents/accident-reports/the-unstallable -plane-that-stalled/&lt;/id>; &lt;更新>;2024-04-28T16:28:20.455541Z&lt;/更新>; &lt;link href=&quot;https://fearoflanding.com/accidents/accident-reports/the-unstallable -plane-that-stalled/&quot;/>; &lt;作者>; &lt;名称>;sni&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sni&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://fearoflanding.com/files/2024/04/N914ST_Cessna_A185Floats_PAE_11JUL12_7553419848-640x427.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;这架改装有浮筒和其他套件的塞斯纳 185 Skywagon 飞机因飞行员在起飞时管理不善而坠毁，造成一人溺水身亡。尽管飞行员经验丰富，但他缺乏失速改出练习，而且飞机的大量改装也没有完整记录。 &lt;a href=&quot;https://hackernews.betacat.io/#the-unstallable-plane-that-stalled&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40189346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;与内存对话：Intel 8088 处理器总线接口状态机内部&lt;/stitle>; &lt;id>;http://www.righto.com/2024/04/intel-8088-bus -state-machine.html&lt;/id>; &lt;更新>;2024-04-28T16:28:20.455928Z&lt;/更新>; &lt;link href=&quot;http://www.righto.com/2024/04/intel-8088- bus-state-machine.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/8086-bus8088/die-labeled-w600.jpg&quot; style=&quot;宽度：220px；高度：230px；&quot; />;&lt;br />;Intel 8088 微处理器于 1979 年推出，作为 1981 年 IBM PC 的关键组件，巩固了 x86 架构的成功。 IBM 选择 8088 是因为它的熟悉性和 8 位总线兼容性，它允许通过复杂的六步总线周期（包括两个未记录的步骤）进行复杂的计时和高效的内存操作。 &lt;a href=&quot;https://hackernews.betacat.io/#talking-to-memory-inside-the-intel-8088-processor-s-bus-interface-state-machine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40189447&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PySheets – Python 电子表格 UI&lt;/stitle>; &lt;id>;https://pysheets.app/&lt;/ id>; &lt;更新>;2024-04-28T12:28:20.456312Z&lt;/更新>; &lt;link href=&quot;https://pysheets.app/&quot;/>; &lt;作者>; &lt;名称>;tosh&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pysheets.app/logo.png&quot; style=&quot;宽度：220 像素；高度：225 像素；” />;&lt;br />;PySheets 是一个基于浏览器的 Python 数据科学工具包，具有 Pandas、matplotlib 图表和报告创建等功能，于 2024 年 4 月 27 日推出公开测试版。它将电子表格 UI 与 Python 编码相结合，受到好评因为它的易用性和交互性。 &lt;a href=&quot;https://hackernews.betacat.io/#pysheets-spreadsheet-ui-for-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40179566&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;第二次机会的神话&lt;/stitle>; &lt;id>;https://ft.pressreader.com/article/282557318242321&lt;/id>; &lt;updated>;2024-04-28T17： 28:20.456707Z&lt;/updated>; &lt;link href=&quot;https://ft.pressreader.com/article/282557318242321&quot;/>; &lt;author>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;世界领先的全球商业出版物《金融时报》的新闻、分析和评论&lt;a href=&quot;https://hackernews .betacat.io/#the-myth-of-the-second-chance&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40189928&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;伦敦交通局简单的弹出消息导致纸质门票销量大幅下降&lt;/stitle>; &lt;id>;https://www.ianvisits.co.uk/articles/how-tfls-simple-pop-up-message -led-to-a-significant-drop-in-paper-ticket-sales-71920/&lt;/id>; &lt;更新>;2024-04-28T10:28:20.457101Z&lt;/更新>; &lt;link href=&quot;https:// /www.ianvisits.co.uk/articles/how-tfls-simple-pop-up-message-led-to-a-significant-drop-in-paper-ticket-sales-71920/&quot;/>; &lt;作者>; &lt;名称>;zeristor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zeristor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// www.ianvisits.co.uk/articles/wp-content/uploads/2024/04/pom-message-02-source-ianvisits-900x500.jpg&quot; style=&quot;width: 220px; height: 123px;&quot; />;&lt;br />;伦敦交通局在售票机上引入提示非接触式支付的弹出消息，使纸质门票销量减少了三分之一。此举旨在为客户节省资金并简化运营，符合伦敦交通局最大限度地减少费用的目标磁条票使用&lt;a href=&quot;https://hackernews.betacat.io/#tfl-s-simple-pop-up-message-led-to-a-significant-drop-in-paper-ticket-sales &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40187379&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如果 null 是 Java 中的对象会怎样？&lt;/stitle>; &lt; id>;https://donraab.medium.com/what-if-null-was-an-object-in-java-3f1974954be2&lt;/id>; &lt;更新>;2024-04-28T17:28:20.457491Z&lt;/更新>; &lt;link href=&quot;https://donraab.medium.com/what-if-null-was-an-object-in-java-3f1974954be2&quot;/>; &lt;作者>; &lt;name>;ingve&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/da:true /调整大小：适合：1200/0*9g0ruViNF2_mcdeD”样式=“宽度：220px; height: 165px;&quot; />;&lt;br />;Smalltalk 是一种纯粹的面向对象语言，其中所有元素都是对象，这与 Java 不同，Java 也有基元；本文探讨了 Java 中“null”和 Smalltalk 中“nil”的处理。解释了 Smalltalk 中的“nil”是一个实际对象，而 Java 中的“null”则不然，并暗示了这给 Smalltalk 带来的一致性。 if-null-was-an-object-in-java&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40178325&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zed解码：Rope 和 SumTree&lt;/stitle>; &lt;id>;https://zed.dev/blog/zed-decoded-rope-sumtree&lt;/id>; &lt;updated>;2024-04-28T12:28:20.457867Z&lt;/updated>; &lt;link href=&quot;https://zed.dev/blog/zed-decoded-rope-sumtree&quot;/>; &lt;作者>; &lt;name>;avinassh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=avinassh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zed.dev/img/post/zed-decoded-rope-sumtree/thumbnail.jpg&quot; 样式=“宽度：220px； height: 144px;&quot; />;&lt;br />;本文探讨了 Zed 的数据结构绳索，揭示了其相对于字符串在内存效率和编辑大型文本文件方面的优势。Zed 的绳索通过更新树而不是更新树来实现并发访问和高效的编辑操作&lt;a href=&quot;https://hackernews.betacat.io/#zed-decoded-rope-and-sumtree&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=40187971&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：OpenLIT – 使用 OpenTelemetry 的开源 LLM 可观察性&lt;/stitle>; &lt;id>;https://github.com/openlit/openlit&lt;/id>; &lt;更新>;2024-04-28T17:28:20.458244Z&lt;/updated>; &lt;link href=&quot;https://github.com/openlit/openlit&quot;/>; &lt;author>; &lt;name>;aman_041&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=aman_041&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/openlit/.github/main /profile/assets/wide-logo-no-bg.png&quot; style=&quot;width: 220px; height: 79px;&quot; />;&lt;br />;OpenLIT 通过一行代码行轻松简化了与 GenAI 项目的可观察性集成，支持流行的库和数据库。它符合 OpenTelemetry 标准，可实现透明、供应商中立的应用程序监控。&lt;a href= “https://hackernews.betacat.io/#show-hn-openlit-open-source-llm-observability-with-opentelemetry” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40167461&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;流场寻路&lt;/stitle>; &lt;id>;https://www.redblobgames.com/blog/2024-04-27-flow-field-pathfinding/&lt; /id>; &lt;更新>;2024-04-28T10:28:20.458627Z&lt;/更新>; &lt;link href=&quot;https://www.redblobgames.com/blog/2024-04-27-flow-field-pathfinding/&quot; />; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.redblobgames.com/pathfinding/tower-defense/blog/flow-field.png?2024-04-27-14-17-13&quot; style=&quot;width: 220px; height: 112px;&quot; />;&lt;br />;作者从非交互式寻路教程过渡到交互式寻路教程，保持两种风格。他们探索流场寻路及其与距离场的联系，不断用新的发现更新他们的工作。 &lt;a href=&quot;https://hackernews.betacat.io/#flow-field-pathfinding&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40187334&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;合成器战争：MIDI 的故事 (2023)&lt;/stitle>; &lt;id>;https://www.musicradar.com/news/the-story-of-midi&lt;/id>; &lt;updated>;2024- 04-28T11:28:20.459002Z&lt;/updated>; &lt;link href=&quot;https://www.musicradar.com/news/the-story-of-midi&quot;/>; &lt;作者>; &lt;name>;conanxin&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=conanxin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.mos.cms.futurecdn .net/ZK4dtzvVupUjGpGeni9Jnh-320-80.jpg&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;本文详细介绍了 80 年代音乐硬件兼容性问题的早期挑战，以及合成器先驱 Dave Smith 和其他人开发 MIDI 来标准化不同设备上的音乐技术。尽管最初遇到阻力， MIDI 彻底改变了音乐制作，实现了跨品牌集成和更易于理解的音乐创作。 &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40164310&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SB 1047 行动号召 – 前沿人工智能模型法案&lt;/stitle>; &lt; id>;https://www.affuture.org/post/9-context/&lt;/id>; &lt;更新>;2024-04-28T22:28:20.459845Z&lt;/更新>; &lt;link href=&quot;https://www.affuture.org/post/9-context/&lt;/id>; &lt;更新>;2024-04-28T22:28:20.459845Z&lt;/更新>; afuture.org/post/9-context/&quot;/>; &lt;作者>; &lt;名称>;jph00 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jph00&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;加州 SB 1047 在有效利他主义者的支持下，可能会对人工智能研究施加严格限制，并可能给开发者带来法律影响。紧急呼吁采取行动，通过提交立场书和公共宣传来反对该法案。 &lt;a href=&quot;https://hackernews.betacat.io/#call-to-action-on-sb-1047-frontier-artificial-intelligence-models-act&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192204&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ollama v0.1.33，包含 Llama 3、Phi 3 和 Qwen 110B&lt;/stitle>; &lt;id>;https://github。 com/ollama/ollama/releases/tag/v0.1.33-rc5&lt;/id>; &lt;更新>;2024-04-28T21:28:20.460225Z&lt;/更新>; &lt;link href=&quot;https://github.com/ollama /ollama/releases/tag/v0.1.33-rc5&quot;/>; &lt;作者>; &lt;名称>;ashvardanian&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ashvardanian&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/cc9c5b5f4bebffb646b0e214f4bf124b559e8e59334ae92821c87433dd875be4/ollama/ollama/releases/tag/v0.1.33-rc5&quot; style=&quot;width: 220px; height: 110 像素；” />;&lt;br />;Meta的Llama 3是目前最先进的开放式LLM，而由Eric Hartford在其基础上构建的Dolphin Llama 3拥有多样化的技能。 Qwen 110B，超过100B参数，测试表现优异。 &lt;a href=&quot;https://hackernews.betacat.io/#ollama-v0-1-33-with-llama-3-phi-3-and-qwen-110b&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191723&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们在制作高效软件方面是否迷失了方向？&lt;/stitle>; &lt;id>;https://rufatmammadli.medium。 com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4&lt;/id>; &lt;更新>;2024-04-28T16:28:20.460596Z &lt;/更新>; &lt;link href=&quot;https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4 &quot;/>; &lt;author>; &lt;name>;rumad&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rumad&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:1200/0*DMufC1Qq6Sz7Bous.jpg&quot; style=&quot;宽度：220px；高度：151px；&quot; />;&lt;br />;由于性能问题，该人发现 Google Docs 不足以处理 30 MB 的文档文件，因此他们改用 LibreOffice，效果很顺利。这一经历促使他们质疑现代软件开发的效率以及网络应用程序高规格硬件的趋势。 &lt;a href=&quot;https://hackernews.betacat.io/#did-we-lose-our-way-in-making-efficient-software&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40189682&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;