<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-06-24T08:03:00.347068Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;苹果的秘密硅工厂毗邻数千户家庭&lt;/stitle>; &lt;id>;https://www.ashleygjovik.com/3250scott.html&lt;/id>; &lt;更新>;2024-06 -24T07:02:31.498115Z&lt;/更新>; &lt;link href=&quot;https://www.ashleygjovik.com/3250scott.html&quot;/>; &lt;作者>; &lt;名称>;pabs3&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=pabs3&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ashleygjovik.com/uploads/1/3/7/ 0/137008339/published/plant.png?1706404870&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;加利福尼亚州圣克拉拉苹果半导体制造厂附近一栋公寓楼的居民阿什利·乔维克 (Ashley Gjovik) 声称，由于苹果故意向周围空气中排放有毒气体和化学物质，她遭受了严重的健康问题和财产损失。 。 Gjovik 声称苹果的行为构成私人滋扰、极端危险活动以及违反... &lt;a href=&quot;https://hackernews.betacat.io/#apple-s-secret-silicon-fab-next-to-thousands -of-homes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40773136&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为蒙特利尔地铁票提供动力的微型芯片&lt;/ stitle>; &lt;id>;http://www.righto.com/2024/06/montreal-mifare-ultralight-nfc.html&lt;/id>; &lt;更新>;2024-06-23T18:02:31.500034Z&lt;/更新>; &lt; link href=&quot;http://www.righto.com/2024/06/montreal-mifare-ultralight-nfc.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/mifare-ultralight--images/die -raw-w500.jpg&quot;样式=&quot;宽度：220px；高度：188px；&quot; />;&lt;br />;蒙特利尔地铁票中使用的 MIFARE Ultralight EV1 芯片是一款低成本的一次性 NFC 芯片，它使用简单的协议与读卡器通信并将数据存储在其 EEPROM 中。该芯片采用较旧的 180 纳米工艺制造，价格低廉，每块芯片价格为 9 美分，适合一次性使用。 &lt;a href=&quot;https://hackernews.betacat.io/#the-tiny-chip-that-powers-montreal-subway-tickets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40769001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cosmopolitan v3.5.0&lt;/stitle>; &lt;id>;https://github.com/jart/cosmopolitan/releases/tag/3.5.0&lt;/id >; &lt;更新>;2024-06-24T07:02:31.500482Z&lt;/更新>; &lt;link href=&quot;https://github.com/jart/cosmopolitan/releases/tag/3.5.0&quot;/>; &lt;作者>; &lt;名称>;sgammon&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sgammon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph .githubassets.com/db59ef059c8a4ed9a4711a25abac334a22014748437208ace896f6a0607eebd1/jart/cosmopolitan/releases/tag/3.5.0&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Cosmopolitan Libc 使 C 成为一次构建、随处运行的语言，无需解释器或虚拟机。它重新配置 GCC 和 Clang 以输出 POSIX 认可的格式，该格式可以在多个平台上本机运行，具有良好的性能和较小的占用空间。 &lt;a href=&quot;https://hackernews.betacat.io/#cosmopolitan-v3-5-0&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40773139&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;你现在可以用 Lua 编写 React&lt;/stitle>; &lt;id>;https://github.com/jsdotlua/react-lua&lt;/id>; &lt;updated>;2024-06-24T03:02 :31.500926Z&lt;/updated>; &lt;link href=&quot;https://github.com/jsdotlua/react-lua&quot;/>; &lt;作者>; &lt;name>;bundie&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=bundie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/jsdotlua/branding/main/Logo.png&quot; style= “宽度：220 像素；高度：220 像素；” />;&lt;br />;React Lua 是 ReactJS 从 JavaScript 到 Lua 的翻译，旨在提高性能和正确性，大多数上游 ReactJS 建议适用模语言差异。该项目是 roblox/react-lua 的一个分支，旨在成为 Lua 中 React 的首选，重点是与 Roact 的兼容性并解决 Lua 特定的问题。 &lt;a href=&quot;https://hackernews.betacat.io/#you-can-now-write-react-in-lua&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40739187&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国检察官建议司法部对波音公司提出刑事指控&lt;/stitle>; &lt;id>;https://www.voanews.com/a/us-prosecutors-recommend-justice- Department-criminally-charge-boeing-as-deadline-looms/7667194.html&lt;/id>; &lt;更新>;2024-06-24T07:02:31.501374Z&lt;/更新>; &lt;link href=&quot;https://www.voanews .com/a/us-prosecutors-recommend-justice-department-criminally-charge-boeing-as-deadline-looms/7667194.html&quot;/>; &lt;author>; &lt;name>;elsewhen&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=elsewhen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gdb.voanews.com/01000000-c0a8-0242-f964 -08dc38a94a5e_w250_r1_s.jpg&quot; style=&quot;宽度: 220px 高度: 125px;&quot; />;&lt;br />;美国检察官建议对波音公司提起刑事指控，因为该公司违反了与两起致命坠机事件有关的 2021 年和解协议，而司法部必须在 7 月 7 日之前决定是否起诉。潜在的指控可能超出最初的欺诈共谋指控，波音公司可能面临经济处罚、监察，甚至认罪，这可能会影响其政府合同。 &lt;a href=&quot;https://hackernews.betacat.io/#us-prosecutors-recommend-justice-department-criminally-charge-boeing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40773151&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;正式方法：只是良好的工程实践？&lt;/stitle>; &lt;id>;https://brooker.co.za/blog/2024/04/17/ formal.html&lt;/id>; &lt;更新>;2024-06-23T23:02:31.501778Z&lt;/更新>; &lt;link href=&quot;https://brooker.co.za/blog/2024/04/17/formal.html &quot;/>; &lt;author>; &lt;name>;ot&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ot&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者相信形式化方法对于良好的软件工程、减少返工和变更成本以及提高速度和效率至关重要。它们强调了大规模复杂系统中形式设计的价值，以及考虑需求过程和正在开发的软件类型的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#formal-methods-just-good-engineering-practice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40753989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我正在使用人工智能将帽子扔到窗外的纽约人身上&lt;/stitle>; &lt;id>;https://dropofahat.zone/&lt;/id>; &lt;updated>;2024- 06-23T14:02:31.502194Z&lt;/updated>; &lt;link href=&quot;https://dropofahat.zone/&quot;/>; &lt;author>; &lt;name>;jimhi&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=jimhi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dropofahat.zone/static/dropofahat/hat/ai3.2089d32ec65c.JPG&quot; style= “宽度：220 像素；高度：165 像素；” />;&lt;br />;橱窗商店 DropofaHat Zone 的创建者分享了他们使用 Raspberry Pi、Adafruit 步进电机和 Roboflow 开发人工智能驱动的脱帽系统的历程。该系统使用物体检测来识别窗下的行人，并在 5 分钟的时间内将帽子扔到他们的头上。 &lt;a href=&quot;https://hackernews.betacat.io/#i-am-using-ai-to-drop-hats-outside-my-window-onto-new-yorkers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40767459&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LINQPad – .NET 程序员的游乐场&lt;/stitle>; &lt;id>;https://www.linqpad.net /&lt;/id>; &lt;更新>;2024-06-23T21:02:31.502596Z&lt;/更新>; &lt;link href=&quot;https://www.linqpad.net/&quot;/>; &lt;作者>; &lt;名称>;wofo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wofo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.linqpad.net/图片/thebigdump.png?6&quot; style=&quot;宽度: 220px 高度: 164px;&quot; />;&lt;br />;LINQPad是一个查询工具，允许用户在不安装客户端软件的情况下查询各种数据库和数据源，具有缓存、性能优势以及图表和调试等高级功能。它还包括一系列用于执行基准测试、正则表达式评估和 Excel 文件生成等任务的工具，以及全面的教程和参考指南。 &lt;a href=&quot;https://hackernews.betacat.io/#linqpad-the-net-programmer-s-playground&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40770171&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;本杰明·索普：翻译了几乎所有古英语文本的人&lt;/stitle>; &lt;id>;https://thijsporck.com/2016/04/08/benjamin-thorpe- the-man-who-translated-almost-all-old-english-texts/&lt;/id>; &lt;更新>;2024-06-23T23:02:31.502993Z&lt;/更新>; &lt;link href=&quot;https://thijsporck. com/2016/04/08/benjamin-thorpe-the-man-who-translated-almost-all-old-english-texts/&quot;/>; &lt;作者>; &lt;名称>;stareatgoats&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=stareatgoats&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thijsporck.com/wp-content/uploads/2016/04 /thorpeblog1.jpg?w=712&quot; style=&quot;宽度: 220px; 高度: 102px;&quot; />;&lt;br />;本杰明·索普是一位学者，出版了许多古英语文本的版本和译本，为他赢得了“第一位专业盎格鲁撒克逊主义者”的美誉。尽管索普后来的再版中存在一些错误，但他的作品总体上享有良好的声誉，他在盎格鲁-撒克逊研究的发展中留下了持久的印记。 &lt;a href=&quot;https://hackernews.betacat.io/#benjamin-thorpe-the-man-who-translated-almost-all-old-english-texts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40758451&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Y 组合器代码 (2021)&lt;/stitle>; &lt;id>;https://phoe.github.io/codex.html&lt; /id>; &lt;更新>;2024-06-23T21:02:31.503396Z&lt;/更新>; &lt;link href=&quot;https://phoe.github.io/codex.html&quot;/>; &lt;作者>; &lt;名称>;082349872349872&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://phoe.github.io /img/photo1-min.jpg&quot; style=&quot;宽度: 220px 高度: 165px;&quot; />;&lt;br />;该艺术品尺寸为 42cm x 2.4m，带有白边，使用各种工具和材料创作。它将作为印刷品出售或在 2021 年欧洲 Lisp 研讨会上拍卖，所得收益将捐赠给 Lisp 相关组织。 &lt;a href=&quot;https://hackernews.betacat.io/#y-combinator-codex-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40769759&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Llama.ttf：一种字体，也是 LLM&lt;/stitle>; &lt;id>;https://fuglede.github.io/llama.ttf/&lt;/id>; &lt;updated>;2024- 06-23T13:02:31.503802Z&lt;/updated>; &lt;link href=&quot;https://fuglede.github.io/llama.ttf/&quot;/>; &lt;author>; &lt;name>;fuglede_&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=fuglede_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Llama.ttf 是一个字体文件，还包含大型语言模型和推理引擎，允许用户在基于 Harfbuzz 的应用程序中本地运行文本生成。通过使用该字体，用户可以在不依赖供应商实现的情况下生成文本，甚至可以与他们的字体聊天。 &lt;a href=&quot;https://hackernews.betacat.io/#llama-ttf-a-font-which-is-also-an-llm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40766791&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用语义熵检测大语言模型中的幻觉&lt;/stitle>; &lt;id>;https://www.nature.com/articles/s41586-024 -07421-0&lt;/id>; &lt;更新>;2024-06-23T21:02:31.504194Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles/s41586-024-07421-0&quot; />; &lt;author>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://media.springernature.com/w215h120/springer-static/image/art%3A10.1038%2Fs41562-024-01882-z/MediaObjects/41562_2024_1882_Fig1_HTML.png”样式=“宽度：220像素；高度：123像素” ;” />;&lt;br />;作者提出了一种称为语义熵的方法来检测语言模型中的混淆，这些混淆是任意且不正确的生成。他们证明，语义熵可以用来预测模型的准确性，并通过在模型不确定时拒绝回答问题来提高模型的准确性，并且还可以用来为用户提供一种方法来了解模型生成何时可能不可靠。 &lt;a href=&quot;https://hackernews.betacat.io/#detecting-hallucinations-in-large-language-models-using-semantic-entropy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40769496&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Arm64EC – 在同一进程中运行 x86_64 和 Arm 代码&lt;/stitle>; &lt;id>;https://learn.microsoft.com/en-us /windows/arm/arm64ec&lt;/id>; &lt;更新>;2024-06-23T21:02:31.504608Z&lt;/更新>; &lt;link href=&quot;https://learn.microsoft.com/en-us/windows/arm/ arm64ec&quot;/>; &lt;作者>; &lt;名称>;heinrich5991 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=heinrich5991&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://learn.microsoft.com/en-us/windows/arm/images/arm64ec-incremental-update.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Arm64EC 是适用于 Windows 11 的新应用程序二进制接口，可在 Arm 驱动的设备上实现本机速度和性能，从而允许开发人员构建新的本机应用程序或过渡现有的 x64 应用程序。它保证了与 x64 代码的互操作性，并允许代码从模拟到本机的增量转换，允许开发人员优先考虑 CPU 密集程度最高的依赖项...... &lt;a href=&quot;https://hackernews.betacat.io/#arm64ec-run -x86-64-and-arm-code-in-the-same-process&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40757717&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= &quot;text&quot;>;从第一原理推导出依赖类型的 OOP&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2403.06707&lt;/id>; &lt;updated>;2024-06-23T20:02:31.505037Z&lt;/updated >; &lt;link href=&quot;https://arxiv.org/abs/2403.06707&quot;/>; &lt;作者>; &lt;name>;matt_d&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=matt_d&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width ：220像素；高度：129像素；” />;&lt;br />;表达式问题凸显了使用新的生产者和消费者扩展类型的困难，并且依赖类型编程通常遵循函数模型。本文探索了依赖类型的面向对象编程，从使用对偶性的第一原理中派生出来，提供了具有双语言片段和保留转换的依赖类型演算。 &lt;a href=&quot;https://hackernews.betacat.io/#deriving-dependently-typed-oop-from-first-principles&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40769867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Neko：用于高阶谱元流模拟的便携式框架&lt;/stitle>; &lt;id>;https://github.com/ExtremeFLOW/neko&lt;/id>; &lt;更新>;2024-06-24T01:02:31.505433Z&lt;/更新>; &lt;link href=&quot;https://github.com/ExtremeFLOW/neko&quot;/>; &lt;作者>; &lt;name>;nateb2022&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://repository-images.githubusercontent.com/338607716/940eb6d2 -af35-442f-8ffe-726df542293a”样式=“宽度：220像素；高度：110像素；” />;&lt;br />;Neko是一个用现代Fortran编写的高阶谱元流模拟的便携式框架，支持各种硬件后端并采用面向对象的方法。要构建该项目，您需要 Fortran 编译器、MPI、JSON-Fortran 和 BLAS/lapack，以及包括 gslib 和 ParMETIS 在内的可选依赖项。 &lt;a href=&quot;https://hackernews.betacat.io/#neko-portable-framework-for-high-order-spectral-element-flow-simulations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40771839&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从头开始编写 IR 并存活下来写一篇文章&lt;/stitle>; &lt;id>;https://farena.in/compilers/programming /writing-an-ir-from-scratch/&lt;/id>; &lt;更新>;2024-06-23T21:02:31.506211Z&lt;/更新>; &lt;link href=&quot;https://farena.in/compilers/programming/writing -an-ir-from-scratch/&quot;/>; &lt;作者>; &lt;名称>;matt_d&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=matt_d&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://farena.in/assets/images/kunai_ir/acdi.jpg”样式 =“宽度：220 像素；高度：292 像素；” />;&lt;br />;作者设计并实现了一个名为 MjolnIR 的中间表示（IR），用于分析 Dalvik 字节码，其中包括控制流图（CFG）表示以及用于操作寄存器、内存和类型的各种指令。作者还实现了图算法，包括支配者和后支配者计算、直接支配者和支配边界，以... &lt;a href=&quot;https://hackernews.betacat.io/#writing-an-ir-from- scrap-and-survive-to-write-a-post&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40770430&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;带来罗马生命之光&lt;/stitle>; &lt;id>;https://www.journals.uchicago.edu/doi/10.1086/731029&lt;/id>; &lt;更新>;2024-06-23T23:02:31.506625Z&lt;/更新>; &lt; link href=&quot;https://www.journals.uchicago.edu/doi/10.1086/731029&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=Hooke&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Nuova luce da Pompei 展览探讨了人造光在古罗马日常生活中的作用，展出了来自庞贝和罗马的 180 盏罕见的青铜灯和雕像。该展览展示了照明装置的效果和意义，鼓励参观者手持复制品并虚拟点亮灯具来体验其作用。 &lt;a href=&quot;https://hackernews.betacat.io/#bringing-roman-light-to-life&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40756154&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Picolisp 铁路模拟&lt;/stitle>; &lt;id>;https://picolisp-explored.com/a-railroad-simulation-with-des&lt;/id>; &lt;更新>;2024- 06-23T15:02:31.507023Z&lt;/更新>; &lt;link href=&quot;https://picolisp-explored.com/a-railroad-simulation-with-des&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.hashnode.com/res /hashnode/image/upload/v1715542067487/5b63063b-0cf4-470f-8822-2af30bdac866.gif?auto=format,compress&amp;gif-q=60&amp;format=webm&quot; style=&quot;宽度：220px 高度：236px;&quot; />;&lt;br />;本文讨论了使用 PicoLisp 中的离散事件仿真 (DES) 进行的铁路模型仿真，其中包括轨道网络和动态确定时刻表和运行的列车。模拟可以通过键盘输入进行控制，允许用户与布局和切换开关进行交互。 &lt;a href=&quot;https://hackernews.betacat.io/#picolisp-a-railroad-simulation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40767645&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;“我们认为线粒体是细胞的处理器”(2022)&lt;/stitle>; &lt;id>;https://www.cell.com/action/showPdf?pii=S1550-4131 %2822%2900459-4&lt;/id>; &lt;更新>;2024-06-23T13:02:31.507424Z&lt;/更新>; &lt;link href=&quot;https://www.cell.com/action/showPdf?pii=S1550- 4131%2822%2900459-4&quot;/>; &lt;作者>; &lt;名称>;breck&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=breck&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#we-argue-that-mitochondria-are-the-processor-of-the-cell-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40766869&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Birkin 手提包的经济性&lt;/stitle>; &lt;id>;https://www.wsj.com /style/fashion/hermes-birkin-bag-investment-031c215c&lt;/id>; &lt;更新>;2024-06-23T22:02:31.507810Z&lt;/更新>; &lt;link href=&quot;https://www.wsj.com/ style/fashion/hermes-birkin-bag-investment-031c215c&quot;/>; &lt;作者>; &lt;name>;wallflower&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wallflower&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;请启用 JS 并禁用任何广告拦截器 &lt;a href=&quot;https://hackernews.betacat.io/#the-economics-of-the-birkin-handbag&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40770358&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Org 模式下的任意 shell 命令评估 (GNU Emacs)&lt;/stitle>; &lt;id>; https://seclists.org/oss-sec/2024/q2/296&lt;/id>; &lt;更新>;2024-06-23T16:02:31.508190Z&lt;/更新>; &lt;link href=&quot;https://seclists.org /oss-sec/2024/q2/296&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://seclists.org/images/oss-sec-img.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;Emacs Org 模式中的一个漏洞允许在打开特定 .org 文件时执行任意 Elisp 代码评估。已发布补丁来修复该问题，该补丁已包含在 Emacs 29.4 和 Org 9.7 中.5. &lt;a href=&quot;https://hackernews.betacat.io/#任意-shell-command-evaluation-in-org-mode-gnu-emacs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40768225&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;比人类更快地解决谜题&lt;/stitle>; &lt;id>;https://biggieblog.com/solving-puzzles-faster-than - humanly-possible/&lt;/id>; &lt;更新>;2024-06-23T20:02:31.508573Z&lt;/更新>; &lt;link href=&quot;https://biggieblog.com/solving-puzzles-faster-than- humanly-possible /&quot;/>; &lt;作者>; &lt;名称>;恐慌&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=panic&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src =“https://biggieblog.com/wp-content/uploads/2024/05/Opus-Magnum-GEN042-350G-35-96-2024-05-02-01-15-12.gif”样式= “宽度：220px； height: 173px;&quot; />;&lt;br />;Opus Magnum 社区正在举办一场 24 小时挑战赛，旨在创建自动解谜器，目标是优化成本、周期和面积指标的解决方案，并于 6 月 2 日进行测试运行该挑战赛旨在推动人们创造新方法，并有可能击败人类解决者，并通过奖励优化的评分系统和潜在的大量讨论...... &lt;a href=&quot;https://hackernews.betacat. io/#solving-puzzles-faster-than- humanly-possible&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40753856&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 QUIC 无需数据报的及时性&lt;/stitle>; &lt;id>;https://quic.video/blog/never-use-datagrams/&lt;/id>; &lt;updated>;2024-06-23T10:02:31.509375Z&lt;/updated>; &lt; link href=&quot;https://quic.video/blog/never-use-datagrams/&quot;/>; &lt;author>; &lt;name>;wofo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =wofo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://quic.video/blog/never-use-datagrams/glitch.gif&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;用户讨论了实时视频协议中及时性的重要性以及 UDP 数据报如何实现这一点，但警告不要直接使用 UDP，而是建议使用具有拥塞控制和优先级的 QUIC 流。用户还批评了某些协议中数据报的使用，并鼓励开发人员改用 QUIC 流，理由是其可靠性和灵活性的好处&lt;a href=&quot;https://hackernews.betacat.io/#timeiness-without-datagrams-using-。 quic&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40766079&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SquirrelFS：使用 Rust 编译器检查文件系统崩溃一致性&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2406.09649&lt;/id>; &lt;更新>;2024-06-23T15:02:31.509773Z&lt;/更新>; &lt;link href=&quot;https://arxiv. org/abs/2406.09649&quot;/>; &lt;作者>; &lt;名称>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;SquirrelFS 是一种新的文件系统，它通过 Rust 的类型状态模式确保崩溃一致性，允许编译时执行操作并消除单独证明的需要。它实现了与状态类似或更好的性能 -最先进的文件系统，如 NOVA 和 WineFS，编译仅需数十秒&lt;a href=&quot;https://hackernews.betacat.io/#squirrelfs-using-the-rust-compiler-to-check-。文件系统崩溃一致性&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40767529&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;行尾故事(2004)&lt;/stitle>; &lt;id>;https://www.rfc-editor.org/old/EOLstory.txt&lt;/id>; &lt;更新>;2024-06-23T19:02:31.510168Z&lt;/更新>; &lt;link href=&quot;https://www.rfc-editor.org/old/EOLstory.txt&quot;/>; &lt;作者>; &lt;名称>;susam&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =susam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;ASCII 标准没有定义唯一的行尾字符，导致操作系统之间存在多样性，通过采用 CR LF 约定解决了这个问题网络通讯。此约定由 Jon Postel 强制实施，并被引入 FTP、SMTP 和其他协议中，使其对大多数用户透明，但在某些情况下仍然会导致问题。 &lt;a href=&quot;https://hackernews.betacat.io/#the-end-of-line-story-2004&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40758802&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;B 树比平衡二叉搜索树需要更少的比较&lt;/stitle>; &lt;id>;http://databasearchitects.blogspot.com/2024/06/b-trees-require -fewer-comparisons-than.html&lt;/id>; &lt;更新>;2024-06-23T17:02:31.510549Z&lt;/更新>; &lt;link href=&quot;http://databasearchitects.blogspot.com/2024/06/b- trees-require-fewer-comparisons-than.html&quot;/>; &lt;作者>; &lt;名称>;greghn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=greghn&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;B 树的搜索操作下限为 log2 n 次比较，这可以通过完美平衡的树来实现。对于较大的 k 值，B 树变得更加平衡，并且需要比 AVL 树更少的比较，并且比较次数随着 k 的增加而减少。 &lt;a href=&quot;https://hackernews.betacat.io/#b-trees-require-fewer-comparisons-than-balanced-binary-search-trees&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40768418&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无需可信设置或公钥加密的异步共识&lt;/stitle>; &lt;id>;https://eprint.iacr.org/2024/ 677&lt;/id>; &lt;更新>;2024-06-23T14:02:31.510933Z&lt;/更新>; &lt;link href=&quot;https://eprint.iacr.org/2024/677&quot;/>; &lt;作者>; &lt;名称>;simonpure &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=simonpure&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://eprint.iacr .org/img/iacrlogo_small.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文提出了一种异步拜占庭共识协议，该协议不依赖于可信设置或公钥加密，仅使用加密哈希函数并实现后量子安全。该协议具有高效的通信能力，并且以预期的 O(1) 轮次运行，使其比现有的免设置共识协议更实用、更高效。 &lt;a href=&quot;https://hackernews.betacat.io/#asynchronous-consensus-without-trusted-setup-or-public-key-cryptography&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40767299&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我已停止使用箱线图 (2021)&lt;/stitle>; &lt;id>;https://nightingaledvs.com/ive-stopped-using- box-plots-should-you/&lt;/id>; &lt;更新>;2024-06-23T08:02:31.511316Z&lt;/更新>; &lt;link href=&quot;https://nightingaledvs.com/ive-stopped-using-box- plots-should-you/&quot;/>; &lt;作者>; &lt;名称>;colinprince&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=colinprince&lt;/uri>; &lt;/author>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/nightingaledvs.com/wp-content/uploads/2021/11/box-plot-vs-histogram-w-callouts.png?resize=512 %2C270&amp;ssl=1&quot; style=&quot;宽度：220px；高度：117px；&quot; />;&lt;br />;作者认为，箱形图设计不当，而且不必要地难以学习，从而导致误解，并且无法向受众传达基于分布的见解。带状图和分布热图等替代图表类型更容易掌握，并且可以传达相同的见解，而不需要受众理解四分位数等复杂概念。 &lt;a href=&quot;https://hackernews.betacat.io/#i-ve-stopped-using-box-plots-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40765183&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;