<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-02T10:00:13.769115Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Debian Git Monorepo&lt;/stitle>; &lt;id>;https://blog.liw.fi/posts/2024/monorepo/&lt;/id>; &lt;更新>;2024-04-02T09： 17:40.484984Z&lt;/更新>; &lt;link href=&quot;https://blog.liw.fi/posts/2024/monorepo/&quot;/>; &lt;作者>; &lt;名称>;pabs3&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=pabs3&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Lars Wirzenius Consulting Ltd 为 Debian 12（书虫）的源代码开发了一个 Git monorepo，旨在简化协作、改进质量控制并提高开发速度。然而，文章透露，这个公告是一个愚人节玩笑，尽管 monorepo 暂时确实存在，用于测试 Git 处理如此规模的存储库的能力。 &lt;a href=&quot;https://hackernews.betacat.io/#debian-git-monorepo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39903742&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;低成本机器人手臂&lt;/stitle>; &lt;id>;https://github.com/AlexanderKoch-Koch/low_cost_robot&lt;/id>; &lt;更新>;2024-04-02T03:59:40.486933Z&lt;/已更新>; &lt;link href=&quot;https://github.com/AlexanderKoch-Koch/low_cost_robot&quot;/>; &lt;作者>; &lt;name>;pbrowne011&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =pbrowne011&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/AlexanderKoch-Koch/low_cost_robot/main/pictures/robot_portait.jpg&quot; style=&quot;宽度：220 像素；高度：165 像素；” />;&lt;br />;本文详细介绍了如何使用 Dynamixel 伺服系统构建低成本、轻型机器人手臂，并提供用于 3D 打印和装配说明的可下载 STL 文件。它还描述了如何创建一个更简单的用于远程操作的引导臂，以及设置技巧和测试脚本。 &lt;a href=&quot;https://hackernews.betacat.io/#low-cost-robot-arm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39902205&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;蓝色球机&lt;/stitle>; &lt;id>;https://blueballfixed.ytmnd.com/&lt;/id>; &lt;更新>;2024-04-02T01:59:40.487407Z&lt;/更新>; &lt;link href=&quot;https://blueballfixed.ytmnd.com/&quot;/>; &lt;author>; &lt;name>;pubby&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pubby&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets.content.ytmnd.com/images/sites/corner_test.gif&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;原来的域名已被删除，所以我决定用旧域名创建一个新的YTMND。 &lt;a href=&quot;https://hackernews.betacat.io/#blue-ball-machine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39857315&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Wireproxy：将自身公开为 HTTP/SOCKS5 代理的 WireGuard 客户端&lt;/stitle>; &lt;id>;https://github.com/pufferffish/wireproxy&lt;/id>; &lt;更新>;2024-04-01T22 ：59：40.487871Z &lt;/更新>; &lt;link href=&quot;https://github.com/pufferffish/wireproxy&quot;/>; &lt;作者>; &lt;名称>;JNRowe &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=JNRowe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/5c075afba2908eac3fe1330be304f1beca6c1b3d924cf55f5c06b95e876d961a/68747470733a2f2f737461726 3686172742e63632f6f63746565702f7769726570726f78792e737667”样式=“宽度：220px;高度: 86 像素;&quot; />;&lt;br />;Wireproxy 用作用户空间应用程序，提供代理或隧道，无需新的网络接口或根访问权限。它有利于通过wireguard 对等点连接到站点，支持多个对等点和配置自定义。 &lt;a href=&quot;https://hackernews.betacat.io/#wireproxy-wireguard-client-that-exposes-itself-as-a-http-socks5-proxy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39900329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;修复：快速、可调试、可重现的构建&lt;/stitle>; &lt;id>;https://yosefk.com/blog/refix- fast-debuggable-reproducible-builds.html&lt;/id>; &lt;更新>;2024-04-02T02:59:40.488259Z&lt;/更新>; &lt;link href=&quot;https://yosefk.com/blog/refix-fast-debuggable -reproducible-builds.html&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;本文讨论了可重现构建的好处，并介绍了一个名为 refix 的 Rust 程序，以使构建具有确定性且更快。它还探讨了构建中可调试性的挑战，并提出了使二进制文件可调试而不牺牲可重复性的解决方案。 &lt;a href=&quot;https://hackernews.betacat.io/#refix-fast-debuggable-reproducible-builds&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39870121&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;构建 GCC 1.27（第一个支持 x86 的 GCC）（2019）&lt;/stitle>; &lt;id>;http://kristerw.blogspot.com/2019/01/building-gcc-127 .html&lt;/id>; &lt;更新>;2024-04-02T01:59:40.488641Z&lt;/更新>; &lt;link href=&quot;http://kristerw.blogspot.com/2019/01/building-gcc-127.html&quot; />; &lt;author>; &lt;name>;peter_d_sherman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=peter_d_sherman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章描述在现代 64 位系统上运行已有 29 年历史的 GCC 1.27 的过程，涉及更新和启用 DBX 调试格式。作者遵循并以 Mikhail Maltsev 的工作为基础，成功地将旧编译器与现代工具结合使用。 &lt;a href=&quot;https://hackernews.betacat.io/#building-gcc-1-27-first-gcc-with-x86-support-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39901290&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;XZ：Repo 维护者 Lasse Collin 在 LKML 上做出回应&lt;/stitle>; &lt;id>;https://lkml.org/lkml/2024/3 /30/188&lt;/id>; &lt;更新>;2024-04-02T07:59:40.489027Z&lt;/更新>; &lt;link href=&quot;https://lkml.org/lkml/2024/3/30/188&quot;/>; &lt;author>; &lt;name>;oger&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=oger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Jonathan Corbet 警告不要接受代码来自 Jia Tan、Lasse Collin 和同事，因为上游 xz 版本中存在与这些人相关的潜在后门。 Lasse Collin 承认了这个问题，并表示将于 4 月初开始彻底调查，并将在 Tukaani.org 网站上提供更新信息。 &lt;a href=&quot;https://hackernews.betacat.io/#xz-repo-maintainer-lasse-collin-responding-on-lkml&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39903216&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Kim-1 的微型国际象棋 (2006)&lt;/stitle>; &lt;id>;http://www.benlo.com/microchess/index.html&lt;/ id>; &lt;更新>;2024-04-02T04:59:40.489398Z&lt;/更新>; &lt;link href=&quot;http://www.benlo.com/microchess/index.html&quot;/>; &lt;作者>; &lt;名称>;jonbaer&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=jonbaer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www.benlo. com/microchess/KimM.jpg&quot; style=&quot;宽度：220px；高度：209px；&quot; />;&lt;br />;Microchess 是第一个为家用计算机销售的游戏程序，是为 Kim-1 开发的，并于 1976 年 12 月 18 日发布。随着 Kim-1 的销售，它标志着业余计算新时代的开始售价 245 美元，Byte Magazine 拥有 73,000 名读者。 &lt;a href=&quot;https://hackernews.betacat.io/#microchess-for-the-kim-1-2006&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39902350&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;JSON 数字是什么？&lt;/stitle>; &lt;id>;https://blog.trl.sn/blog/what-is-a-json-number/&lt; /id>; &lt;更新>;2024-04-01T19:59:40.489767Z&lt;/更新>; &lt;link href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;/>; &lt;author>; &lt;name>;bterlson&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bterlson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章检查了定义以及跨各种规范和实现的 JSON 数字的互操作性，凸显了 API 设计人员的重要性。结论是，虽然为了实现互操作性，JSON 数字应该在双精度范围内，但实现方式各不相同，并且建议使用数字进行 API 设计的最佳实践。 &lt;a href=&quot;https://hackernews.betacat.io/#what-even-is-a-json-number&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39898422&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Xzbot：xz 后门的注释、蜜罐和利用演示&lt;/stitle>; &lt;id>;https://github.com/amlweems/xzbot&lt;/id>; &lt;更新>;2024-04-01T15:59:40.490147Z&lt;/updated>; &lt;link href=&quot;https://github.com/amlweems/xzbot&quot;/>; &lt;author>; &lt;name>;q3k&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=q3k&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/e3e41f6da60422ee0654181352c96b03362807abf037f0d2466a3d82f37e5565/amlweems/xzbot&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;本文描述了 OpenSSH 的一个补丁，该补丁记录使用硬编码的 ED448 公钥利用后门的尝试。它详细介绍了触发后门并使用自定义密钥解密有效负载的过程。 &lt;a href=&quot;https://hackernews.betacat.io/#xzbot-notes-honeypot-and-exploit-demo-for-the-xz-backdoor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39895344&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Wi-Fi 仅在下雨时有效&lt;/stitle>; &lt;id>;https://predr.ag/blog/wifi-only -works-when-its-raining/&lt;/id>; &lt;更新>;2024-04-01T17:59:40.490514Z&lt;/更新>; &lt;link href=&quot;https://predr.ag/blog/wifi-only-works -when-its-raining/&quot;/>; &lt;作者>; &lt;名称>;bonyt&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bonyt&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://predr.ag/processed_images/wifi-router-on-balcony-cropped.74b365103ecb7814.jpg&quot; style=&quot;宽度：220px；高度：152px；&quot; />;&lt;br />;文章讲述了一个真实的故事，作者的Wi-Fi只有在下雨的时候才可以使用，因为邻居的树干扰了它，通过升级硬件解决了这个问题。它是 April Cools Club 的一部分，旨在通过真实、不寻常的文章来娱乐读者。 &lt;a href=&quot;https://hackernews.betacat.io/#the-wi-fi-only-works-when-it-s-raining&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39896371&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;实践中基于属性的测试 [pdf]&lt;/stitle>; &lt;id>;https://harrisongoldste.in/papers/icse24-pbt-in -practice.pdf&lt;/id>; &lt;更新>;2024-04-02T02:59:40.490883Z&lt;/更新>; &lt;link href=&quot;https://harrisongoldste.in/papers/icse24-pbt-in-practice.pdf&quot; />; &lt;author>; &lt;name>;Smaug123&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Smaug123&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论基于属性的测试 (PBT) 的实际使用和潜在改进，强调其在测试复杂系统和作为文档形式方面的有效性，同时指出编写属性和评估测试有效性的挑战。 Jane Street 的采访揭示了 PBT 在高杠杆场景中的用途，并提出了增强其实用性的未来研究方向。 &lt;a href=&quot;https://hackernews.betacat.io/#property-based-testing-in-practice-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39850087&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;禁止开放权重模型将是一场灾难&lt;/stitle>; &lt;id>;https://rbren.substack.com/p/banning-open-weight-models-would&lt; /id>; &lt;更新>;2024-04-02T03:59:40.491634Z&lt;/更新>; &lt;link href=&quot;https://rbren.substack.com/p/banning-open-weight-models-would&quot;/>; &lt;作者>; &lt;name>;rbren&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rbren&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https ://hackernews.betacat.io/#banning-open-weight-models-would-be-a-disaster&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39901978&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;从 xz 到 ibus：更多可疑的 tarball&lt;/stitle>; &lt;id>;https://www.openwall.com/lists/oss-security/2024/04/01/1&lt; /id>; &lt;更新>;2024-04-02T02:59:40.492022Z&lt;/更新>; &lt;link href=&quot;https://www.openwall.com/lists/oss-security/2024/04/01/1&quot;/ >; &lt;author>; &lt;name>;nateb2022&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;在 ibus 存储库中，提交被标记为 1.5.29-rc2，并且提供了一个由 Linux 发行版导入的 disted tarball。然而，将此 disttar 与 git 存储库进行比较，发现了良性但无法解释的变化，表明版本控制存在问题，并且可能存在不完整的更新。 &lt;a href=&quot;https://hackernews.betacat.io/#from-xz-to-ibus-more-questionable-tarballs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39901655&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lumos：具有统一数据、模块化设计和开源 LLM 的学习代理&lt;/stitle>; &lt;id>;https://allenai.github.io/lumos/ &lt;/id>; &lt;更新>;2024-04-02T03:59:40.492389Z&lt;/更新>; &lt;link href=&quot;https://allenai.github.io/lumos/&quot;/>; &lt;作者>; &lt;名称>;milliondreams&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=milliondreams&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://allenai.github.io /lumos/static/images/lumos_architecture.png&quot; style=&quot;宽度：220px；高度：140px；&quot; />;&lt;br />;Lumos引入了具有统一数据格式的模块化代理框架，在各种任务中的性能优于或匹配GPT-4/3.5和其他代理。由于其多样化的训练数据和通用框架，它在网络质量保证和看不见的任务中表现出色。 &lt;a href=&quot;https://hackernews.betacat.io/#lumos-learning-agents-with-unified-data-modular-design-and-open-source-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39902130&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;绕过霍格沃茨遗产中的 Denuvo&lt;/stitle>; &lt;id>;https://momo5502.com/posts/2024-03 -31-bypassing-denuvo-in-hogwarts-legacy/&lt;/id>; &lt;更新>;2024-04-01T19:59:40.492754Z&lt;/更新>; &lt;link href=&quot;https://momo5502.com/posts/2024 -03-31-bypassing-denuvo-in-hogwarts-legacy/&quot;/>; &lt;作者>; &lt;名称>;Epskampie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Epskampie&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://momo5502.com/posts/2024-03-31-bypassing-denuvo-in-hogwarts-legacy/images/cover.jpg&quot;样式=“宽度：220像素；高度：124像素；” />;&lt;br />;作者花了 5 个月的时间对 Hogwarts Legacy 中的 Denuvo DRM 进行逆向工程，发现了游戏的指纹识别过程，但故意让分析变得模糊。他们使用 Qiling 进行逆向工程，修补了大部分运行时检查，并设法在另一台 PC 上运行游戏，并注意到 Denuvo 的性能开销极小。 &lt;a href=&quot;https://hackernews.betacat.io/#bypassing-denuvo-in-hogwarts-legacy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39898205&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Do be do be do (2017) [pdf]&lt;/stitle>; &lt;id>;https://arxiv.org/abs/1611.09259&lt;/id>; &lt;更新>;2024-04 -02T02：59：40.494634Z &lt;/更新>; &lt;link href =“https://arxiv.org/abs/1611.09259”/>; &lt;作者>; &lt;名称>; 082349872349872 &lt;/名称>; &lt;uri>; https://news. ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv- logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;本文讨论了 Frank 的创建，这是一种具有双向效果类型系统和模块化编程效果处理程序的函数式编程语言。 Frank 通过将效果处理集成到功能抽象过程中来简化效果处理，并支持多处理程序来处理多种效果。 &lt;a href=&quot;https://hackernews.betacat.io/#do-be-do-be-do-2017-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39881815&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;书评：“先整洁？”作者：肯特·贝克&lt;/stitle>; &lt;id>;https://www.pathsensitive.com/2024/04/book-review-tidy-first.html&lt;/id>; &lt;更新>;2024-04-01T18:59:40.495360Z &lt;/更新>; &lt;link href=&quot;https://www.pathsensitive.com/2024/04/book-review-tidy-first.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.imgur.com/tHWBCtO.png&quot; 样式=“宽度：220像素；高度：284像素；” />;&lt;br />;文章批评肯特·贝克的书《整洁第一？》由于其细节不均匀且缺乏深度，建议进行小的代码改进，但未能为更复杂的重构提供实质性指导，并推荐 Beck 的 Substack 超过这本书。 &lt;a href=&quot;https://hackernews.betacat.io/#book-review-tidy-first-by-kent-beck&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39897594&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;迈锡尼战士和海洋民族 (2013)&lt;/stitle>; &lt;id>;https://www.karwansaraypublishers.com/en-us/blogs/ancient-战争博客/mycenaean-warriors-and-the-sea-peoples&lt;/id>; &lt;更新>;2024-04-01T21:59:40.496472Z&lt;/更新>; &lt;link href=&quot;https://www.karwansaraypublishers.com /en-us/blogs/ancient-warfare-blog/mycenaean-warriors-and-the-sea-peoples&quot;/>; &lt;author>; &lt;name>;georgecmu&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=georgecmu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.shopify.com/s/files/1/0296/7067/0384/files /subscribe_48.png?v=1707901808&quot; style=&quot;宽度：220 像素；高度：180 像素；&quot; />;&lt;br />;本文讨论了《战神追随者》中对迈锡尼武士的描述以及荷马史诗的历史准确性，表明它们更多地反映了荷马时代而不是迈锡尼青铜时代。它还探讨了公元前 1200 年左右地中海东部“海洋民族”的身份和影响。 &lt;a href=&quot;https://hackernews.betacat.io/#mycenaean-warriors-and-the-sea-peoples-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39890250&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLaMA 现在在 CPU 上运行得更快&lt;/stitle>; &lt;id>;https://justine.lol/matmul/&lt;/id>; &lt;更新>;2024-04-01T09 :59:40.496840Z&lt;/updated>; &lt;link href=&quot;https://justine.lol/matmul/&quot;/>; &lt;作者>; &lt;name>;lawrencechen&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=lawrencechen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://justine.lol/matmul/llamafile.png&quot; style=&quot;width: 220px; height: 220 像素；” />;&lt;br />;本文讨论了作者为 llamafile 创建的 84 个新矩阵乘法内核，显着加快了即时评估时间，特别是在 ARMv8.2+、Intel 和 AVX512 计算机上。内核对小矩阵进行了特别改进，llamafile 项目旨在增强跨多个平台的用户体验。 &lt;a href=&quot;https://hackernews.betacat.io/#llama-now-goes-faster-on-cpus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39890262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：谁在招聘？ （2024 年 4 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=39894820&lt;/id>; &lt;更新>;2024-04-01T18:59:40.497207Z&lt;/更新>; &lt;link href =&quot;https://news.ycombinator.com/item?id=39894820&quot;/>; &lt;作者>; &lt;名称>;whoishiring&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=whoishiring&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文概述了各种技术职位的招聘信息，强调指定地点（远程、现场、VISA）和直接招聘公司的重要性。它包括有关公司使命、所需候选人经验以及如何申请的详细信息。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-is-hiring-april-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39894820&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;