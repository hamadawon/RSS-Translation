<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-03T13:49:53.354154Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Maestro：Rust 中的 Linux 兼容内核&lt;/stitle>; &lt;id>;https://blog.lenot.re/a/introduction&lt;/id>; &lt;更新>;2024-01 -03T10：48：36.532566Z &lt;/更新>; &lt;link href =“https://blog.lenot.re/a/introduction”/>; &lt;作者>; &lt;名称>; Uriopass &lt;/名称>; &lt;uri>; https:// news.ycombinator.com/user?id=Uriopass&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Maestro 是一个轻量级且与 Linux 兼容的类 Unix 操作系统。它最初是一个学校项目，最初是用 C 实现的，然后才转向 Rust。 Rust 的使用可以实施保护措施并提高内存安全性。内核仍处于早期开发阶段，非常不稳定。 &lt;a href=&quot;https://hackernews.betacat.io/#maestro-a-linux-known-kernel-in-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38852360&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作微量移液器&lt;/stitle>; &lt;id>;https://press.asimov.com/resources/making-the-micropipette&lt;/id>; &lt;更新>;2024 -01-03T10:48:36.535486Z&lt;/更新>; &lt;link href=&quot;https://press.asimov.com/resources/making-the-micropipette&quot;/>; &lt;作者>; &lt;名称>;bschne&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=bschne&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets-global.website-files. com/6518fc1601bb06d3facf5039/659374040375bb61720ca1ea_38455898272_650f944b91_o.jpg&quot; style=&quot;宽度：220px；高度：149px；&quot; />;&lt;br />;微量移液器是科学研究的重要工具，由德国博士后Heinrich Schnitger于1957年发明。此后，微量移液器的设计经过各国发明家的不断改进，在实验室得到广泛应用今天。 &lt;a href=&quot;https://hackernews.betacat.io/#making-the-micropipette&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38852534&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;英国 2022 年火车站流程图像&lt;/stitle>; &lt;id>;https://github.com/anisotropi4/kingfisher/blob/main/station.md&lt;/id>; &lt;更新>;2024-01- 03T10:48:36.535903Z&lt;/updated>; &lt;link href=&quot;https://github.com/anisotropi4/kingfisher/blob/main/station.md&quot;/>; &lt;作者>; &lt;name>;admp&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=admp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Na nai t drym,t sd máe vklcouanz.psi-gbenjho rahvyny králové obávu az izr &lt;a href=&quot;https://hackernews.betacat.io/#uk-2022-rail-station-flow-images&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38852580&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每个程序员都应该知道的 50 种算法（第二版）&lt;/stitle>; &lt;id>;https://www.oreilly.com/library/view/50-algorithms-every/ 9781803247762/&lt;/id>; &lt;更新>;2024-01-03T06:48:36.536298Z&lt;/更新>; &lt;link href=&quot;https://www.oreilly.com/library/view/50-algorithms-every/9781803247762/ &quot;/>; &lt;author>; &lt;name>;teleforce&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://learning.oreilly.com/library/cover/9781803247762/250w/”样式=“宽度：220px; height: 272px;&quot; />;&lt;br />;深入研究生成式 AI 和大型语言模型 (LLM) 领域，同时探索现代深度学习技术，包括 LSTM、GRU、RNN，并在这个 50% 的新版本大修中包含新章节。掌握不同的编程算法并选择正确的数据结构以实现最佳实现。&lt;a href=&quot;https://hackernews.betacat.io/#50-algorithms-every-programmer-should-know-second-edition&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38838944&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GNU coreutils 的跨平台 Rust 重写&lt;/stitle>; &lt;id >;https://github.com/uutils/coreutils&lt;/id>; &lt;更新>;2024-01-03T08:48:36.536708Z&lt;/更新>; &lt;link href=&quot;https://github.com/uutils/coreutils&quot; />; &lt;作者>; &lt;名称>;jcbhmr &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jcbhmr&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =&quot;https://raw.githubusercontent.com/uutils/coreutils-tracking/main/gnu-results.png&quot; style=&quot;width: 220px; height: 166px;&quot; />;&lt;br />;uutils coreutils 是 Rust 中 GNU coreutils 的跨平台重新实现。它的目标是成为 GNU utils 的直接替代品，适用于 Linux、Mac、Windows 和其他操作系统&lt;a href=&quot;https://hackernews.betacat.io/#cross-platform-rust-rewrite-of-the-gnu-coreutils&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38851740&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sieve 比 LRU 更简单&lt;/stitle>; &lt;id>;https://cachemon.github.io/SIEVE-website/blog/2023/12 /17/sieve-is-simpler-than-lru/&lt;/id>; &lt;更新>;2024-01-03T03:48:36.537101Z&lt;/更新>; &lt;link href=&quot;https://cachemon.github.io/SIEVE -website/blog/2023/12/17/sieve-is-simpler-than-lru/&quot;/>; &lt;author>; &lt;name>;SerCe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=SerCe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cachemon.github.io/SIEVE-website/blog/assets/sieve/sieve_diagram_animation.gif&quot; style= “宽度：220px； height: 124px;&quot; />;&lt;br />;缓存是一种存储临时数据以便快速访问的方法。我们团队设计了一种新的缓存驱逐算法，称为 SIEVE，该算法有效且简单，只需一个 FIFO 队列。&lt;a href=&quot; https://hackernews.betacat.io/#sieve-is-simpler-than-lru&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=38850202&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;使用光线追踪实现本地多人游戏/分屏视角的新方法&lt;/stitle>; &lt;id>;https://ph3at.github.io/posts/Ray-Coop-Camera/&lt;/id>; &lt;updated>;2024 -01-03T01：48：36.537477Z &lt;/更新>; &lt;link href =“https://ph3at.github.io/posts/Ray-Coop-Camera/”/>; &lt;作者>; &lt;名称>;davikr &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=davikr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这篇博文讨论了一种使用光线追踪进行本地多人屏幕共享的新方法。探讨了实现分屏游戏的挑战，并介绍了在像素级别动态调整相机的概念。这篇文章还提供了实现有趣的屏幕共享机制的游戏示例。 &lt;a href=&quot;https://hackernews.betacat.io/#a-new-approach-to-local-multiplayer-splitscreen-perspective-with-raytracing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38841328&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1D 吃豆人&lt;/stitle>; &lt;id>;https://abagames.github.io/crisp-game-lib-11- games/?pakupaku&lt;/id>; &lt;更新>;2024-01-02T19:48:36.538223Z&lt;/更新>; &lt;link href=&quot;https://abagames.github.io/crisp-game-lib-11-games/ ?pakupaku&quot;/>; &lt;作者>; &lt;名称>;memalign &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=memalign&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#1d-pac-man&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38845510&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;GCC 规范：简介&lt;/stitle>; &lt;id>;https://wozniak.ca/blog/2024/01/02/1/index.html&lt;/id>; &lt;updated>;2024-01 -03T03：48：36.538606Z &lt;/更新>; &lt;link href =“https://wozniak.ca/blog/2024/01/02/1/index.html”/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;GNU 编译器集合 (GCC) 驱动程序抽象了编译、汇编的细节，并根据提供的参数组织和运行适当的子程序进行链接。驱动程序使用规范字符串或规范为子程序设置参数向量，规范字符串描述每个子程序如何运行以及在什么条件下运行。 &lt;a href=&quot;https://hackernews.betacat.io/#gcc-specs-an-introduction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38850400&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;生长并保持大肌肉&lt;/stitle>; &lt;id>;https://today Purpose.com/posts/big-muscles/&lt;/id>; &lt;更新>;2024-01-03T12:48： 36.538989Z&lt;/更新>; &lt;link href=&quot;https://today Purpose.com/posts/big-muscles/&quot;/>; &lt;作者>; &lt;名称>;daco &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=daco&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://today Purpose.com/img/working-out/increase-healthspan-quality-of- life.jpg&quot; style=&quot;宽度：220px；高度：156px；&quot; />;&lt;br />;抗阻训练，尤其是力量训练，对于随着年龄的增长保持独立、人际关系和尊严至关重要。它有助于保持肌肉质量、预防残疾、增强认知健康、控制慢性疼痛、改善情绪、增强耐力和增强恢复力。保持坚强和活动能力使我们能够积极参与社交活动并保持社交联系，这对于精神和情感健康至关重要。阻力训练还可以降低因各种原因过早死亡的风险，并提高静息代谢率。 &lt;a href=&quot;https://hackernews.betacat.io/#grow-and-keep-big-muscles&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38853118&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Malbolge Unshackled 中的轻量级 Lisp 解释器&lt;/stitle>; &lt;id>;https://github.com/kspalaiologos/malbolge-lisp&lt;/id>; &lt;更新>;2024-01-03T05 :48:36.539375Z&lt;/updated>; &lt;link href=&quot;https://github.com/kspalaiologos/malbolge-lisp&quot;/>; &lt;author>; &lt;name>;noteness&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=noteness&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kspalaiologos/malbolge-lisp/master/session. gif&quot;样式=&quot;宽度：220px；高度：131px；&quot; />;&lt;br />;MalbolgeLisp 是一个用 Malbolge 编写的 LISP 解释器。它是有史以来最先进、最可用的 Malbolge 程序，支持 LISP 通常支持的所有功能。 Malbolge Unshackled 是 MalbolgeLisp 使用的 Malbolge 的特殊变体，由于旋转宽度可变和其他限制，编程起来相当困难。 &lt;a href=&quot;https://hackernews.betacat.io/#a-lightweight-lisp-interpreter-in-malbolge-unshackled&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38850961&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;双重加密：分析 NSA/GCHQ 针对混合的论点&lt;/stitle>; &lt;id>;https://blog.cr.yp.to/20240102-hybrid.html &lt;/id>; &lt;更新>;2024-01-03T04:48:36.539768Z&lt;/更新>; &lt;link href=&quot;https://blog.cr.yp.to/20240102-hybrid.html&quot;/>; &lt;作者>; &lt; name>;weinzierl&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=weinzierl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了混合加密系统的使用结合前量子和后量子算法来保护用户数据免受未来量子计算机的影响。它研究了美国国家安全局反对使用混合加密系统的论点，并提供了支持采用混合加密系统的反驳论据。 &lt;a href=&quot;https://hackernews.betacat.io/#double-encryption-analyzing-the-nsa-gchq-arguments-against-hybrids&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38844117&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;推理中的 Gemini：揭示多模态大语言模型中的常识&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2312.17661&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2312.17661&lt;/ id>; &lt;更新>;2024-01-03T07:48:36.540518Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2312.17661&quot;/>; &lt;作者>; &lt;名称>;ukuina&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=ukuina&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/ 0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;像 OpenAI 的 GPT-4V(ision) 这样的多模态大型语言模型 (MLLM) 对学术界和工业界产生了重大影响。 Gemini是一种专为多模态集成而设计的尖端MLLM，在复杂的推理任务中表现出了有竞争力的常识推理能力。 &lt;a href=&quot;https://hackernews.betacat.io/#gemini-in-reasoning-unveiling-commonsense-in-multimodal-large-language-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38851446&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：复活 Dillo 浏览器&lt;/stitle>; &lt;id>;https://dillo-browser.github.io/&lt;/id >; &lt;更新>;2024-01-02T22:48:36.540891Z&lt;/更新>; &lt;link href=&quot;https://dillo-browser.github.io/&quot;/>; &lt;作者>; &lt;名称>;rodarima&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=rodarima&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;从 git 存储库下载 Dillo 并按照 README 中的说明进行安装。使用 Dillo 浏览网页，如果您发现某些内容无法正常工作，请报告它。实现一些新功能或修复一些错误并向我们发送补丁或创建拉取请求。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-resurrecting-the-dillo-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38847613&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;托马斯·科克伦&lt;/stitle>; &lt;id>;https://sergey.substack.com/p/thomas-cochrane&lt;/id>; &lt;更新>;2024-01-02T15： 48:36.541260Z&lt;/updated>; &lt;link href=&quot;https://sergey.substack.com/p/thomas-cochrane&quot;/>; &lt;author>; &lt;name>;neural_thing&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=neural_thing&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto ：好，fl_progressive：陡峭/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F72edfbc1-9aa0-4504-9fa7-62240a21d3f7_677x898.jpeg&quot; style=&quot;宽度：220px；高度： 292 像素；” />;&lt;br />;托马斯·科克伦（Thomas Cochrane）是一位无赖和人类领袖，在他的海军生涯中取得了非凡的业绩。他俘获了大量敌舰，恐吓法国海岸，并执行了出色的计划。科克伦的坚定原则和对炸药的战略使用是他成功的关键。 &lt;a href=&quot;https://hackernews.betacat.io/#thomas-cochrane&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38842571&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;药丸可以预防毒蛇咬伤造成的死亡吗？&lt;/stitle>; &lt;id>;https://www.latimes.com/environment/story/2023-12-24/can-a-pill-prevent-deaths -from-venomous-snake-bites&lt;/id>; &lt;更新>;2024-01-02T23:48:36.541642Z&lt;/更新>; &lt;link href=&quot;https://www.latimes.com/environment/story/2023- 12-24/can-a-pill-prevent-deaths-from-venomous-snake-bites&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ca-times.brightspotcdn.com/dims4/default/cd36856/2147483647/strip/true/crop/ 3024x4032+0+0/resize/2000x2667！/Quality/75/？url = https％3A％2F％2fcalifornia-times-brightspot.s3.amazonaws.com％2fb7％2fb7％2FB7％2F47％2F00E8D1FB442FB442FB442FB62189AA-MER KIKE-MEKIN-MEKINGIN-2FLAAKIK MAKIKINGINGINGINGIN Medicine08.JPG&quot; style=&quot;width: 220px;高度：294px;&quot; />;&lt;br />;园艺师约翰·希南 (John Heenan) 被响尾蛇咬伤，经历了毒蛇咬伤的痛苦。一种名为 Varespladib 的药丸正在开发中，可以提供立即治疗，并为受害者赢得足够的时间到达目的地医院。&lt;a href=&quot;https://hackernews.betacat.io/#can-a-pill-prevent-deaths-from-venomous-snakebites&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38848566&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;QEMU AioContext 删除及其完成方式&lt;/stitle>; &lt;id>;http://blog.vmsplice.net/2024/01/qemu- aiocontext-removal-and-how-it-was.html&lt;/id>; &lt;更新>;2024-01-02T22:48:36.542007Z&lt;/更新>; &lt;link href=&quot;http://blog.vmsplice.net/2024 /01/qemu-aiocontext-removal-and-how-it-was.html&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiH839GLUwVrLnNx3fjDgB16sXcc85EsF5DxjWYPUueVjQvtCyVGB3hq_K78iES6Ks3eP97t2NS08WcKIJ 9dC0ZwZuptwwNWyvoGB7uA9Lnh24hO5fN7Sky2CKGf2Z3HGXXdMmD8ViypgIKzPnfBbnzg33skQ9HRCp9Osmt9ZCuYNtoR3FV2EkMD42rFS0/s1600/aio上下文锁定删除%281%29 .png&quot;样式=&quot;宽度：220px； height: 178px;&quot; />;&lt;br />;QEMU 9.0 中的 AioContext 锁被删除，以改进多线程代码。最初，QEMU 是单线程的，但随着多处理器来宾的流行，架构被修改为支持专用vCPU 线程。然而，设备模拟仍然使用 Big QEMU Lock (BQL) 运行，导致瓶颈。AioContext 锁是作为事件循环的迷你 BQL 引入的，但它导致了死锁和竞争条件。Paolo Bonzini 的美好愿景粒度锁逐渐消除了 AioContext 锁，从而产生了更加本地化和显式的线程安全方法。&lt;a href=&quot;https://hackernews.betacat.io/#qemu-aiocontext-removal-and-how-it-was -done&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38847732&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Fontconfig (2020)&lt;/stitle>; &lt;id >;https://venam.net/blog/unix/2020/09/14/playing_with_fonts.html&lt;/id>; &lt;更新>;2024-01-03T04:48:36.542373Z&lt;/更新>; &lt;link href=&quot;https: //venam.net/blog/unix/2020/09/14/playing_with_fonts.html&quot;/>; &lt;author>; &lt;name>;venamresm__&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= venamresm__&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://venam.net/blog/assets/fun_with_fonts/mexican_calendar_systems.jpg&quot; style=&quot;width: 220px; height: 191px;&quot; />;&lt;br />;Freetype 包含在 Unix 上的字体堆栈中，非常复杂。有很多层可以让它完成它的工作，很容易迷失。 &lt;a href=&quot; https://hackernews.betacat.io/#playing-with-fontconfig-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =38839724&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= &quot;text&quot;>;自己动手盲修&lt;/stitle>; &lt;id>;https://fixmyblinds.com/&lt;/id>; &lt;updated>;2024-01-02T17:48:36.542750Z&lt;/updated>; &lt;link href=&quot; https://fixmyblinds.com/&quot;/>; &lt;作者>; &lt;名称>;nsajko&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nsajko&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://fixmyblinds.com/cdn/shop/files/FIXMYBLINDS-LOGO-OUTLINE_new-purple_300x300.png?v=1613690486&quot; style=&quot;width: 220px;高度：91px;&quot; />;&lt;br />;&amp;#34;我能够从详细零件清单中找到并订购我的零件。我在 2 个工作日内收到了正确的零件。在在线维修视频的帮助下，我在 5 分钟内修复了百叶窗。对避免昂贵的更换有很大帮助。&amp;#34;- Michael B. &lt;a href=&quot;https://hackernews.betacat.io/#do-it-yourself-blind-repair&quot; target =&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38844274&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lolwut：数据库命令中的一件艺术品（2018）&lt;/stitle >; &lt;id>;http://antirez.com/news/123&lt;/id>; &lt;更新>;2024-01-02T23:48:36.543125Z&lt;/更新>; &lt;link href=&quot;http://antirez.com/news /123&quot;/>; &lt;作者>; &lt;名称>;082349872349872 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;http://antirez.com/misc/lolwut2.png&quot; style=&quot;宽度：220px; height: 259px;&quot; />;&lt;br />;作者反思了编写没有可衡量技术效果的代码的价值以及“黑客价值”的概念。他们讨论了 Twitter 上关于黑客行为的讨论，以及它与60 年代的第一批黑客。作者随后探讨了将一件艺术品变成数据库命令的想法并分享了最终结果。他们还解释了如何使用盲文 unicode 字符集创建像素矩阵并使艺术品参数化最后，他们将 LOLWUT 作为 Redis 的传统，并强调在编程中探索可能性和考虑人性化的重要性。&lt;a href=&quot;https://hackernews.betacat.io/#lolwut-a-piece-of- art-inside-a-database-command-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38841284&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;荷兰封锁 ASML向中国出口部分许可证被撤销&lt;/stitle>; &lt;id>;https://www.reuters.com/technology/asml-says-dutch-government-revoked-some-export-license-2024-01-01/&lt;/ id>; &lt;更新>;2024-01-03T11:48:36.543491Z&lt;/更新>; &lt;link href=&quot;https://www.reuters.com/technology/asml-says-dutch-government-revoked-some-export- license-2024-01-01/&quot;/>; &lt;作者>; &lt;名称>;testrun&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=testrun&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;请启用 JS 并禁用任何广告拦截器 &lt;a href=&quot;https://hackernews.betacat.io/#netherlands-blocks-asml-exports-to-china-in-partial-license-replication&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38838811&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Taligent 程序设计指南 [pdf] (1994)&lt;/stitle>; &lt;id>;https://bitsavers.org/pdf/apple/mac/pink/Taligent_-_Taligents_Guide_to_Designing_Programs_1994.pdf&lt;/id>; &lt;更新>;2024-01-02T23:48:36.544268Z&lt;/更新>; &lt;link href=&quot; https://bitsavers.org/pdf/apple/mac/pink/Taligent_-_Taligents_Guide_to_Designing_Programs_1994.pdf&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本手册及其中描述的软件受版权保护。根据版权法，未经 Taligent 事先书面同意，不得全部或部分复制本手册或软件。本手册中描述的产品可能受一项或多项美国和国际专利的保护。 &lt;a href=&quot;https://hackernews.betacat.io/#taligent-s-guide-to-designing-programs-pdf-1994&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38830767&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;双工手表擒纵机构&lt;/stitle>; &lt;id>;https://www.thenakedwatchmaker.com/blog/2021/6/21/a-special-擒纵机构&lt;/id>; &lt;更新>;2024-01-03T01:48:36.545004Z&lt;/更新>; &lt;link href=&quot;https://www.thenakedwatchmaker.com/blog/2021/6/21/a-special-escapement &quot;/>; &lt;author>; &lt;name>;jstanley&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jstanley&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/v1/58bb0536893fc04255997b40/1624269998032-REWG19X7GEZ0JLGKJB68/the_naked_watchmaker_duplex_0.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;双联腕表擒纵机构于 1700 年代发明，其精度高于其他类型的擒纵机构。它在 1790 至 1860 年间用于英国怀表。 &lt;a href=&quot;https://hackernews.betacat.io/#the-duplex-watch-escapement&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38841288&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Hiew 十六进制编辑器&lt;/stitle>; &lt;id>;https://lock.cmpxchg8b.com/hiew.html&lt;/id>; &lt;更新>; 2024-01-02T13：48：36.545377Z &lt;/更新>; &lt;link href =“https://lock.cmpxchg8b.com/hiew.html”/>; &lt;作者>; &lt;名称>;塔维索&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=taviso&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lock.cmpxchg8b.com/img/hiew/stringlist .png&quot; style=&quot;宽度：220px；高度：143px；&quot; />;&lt;br />;在 Hiew 中，您使用块标记字段，并以 * 开始块。标记某些字段后，您可以使用 alt+n（向前）和 alt+shift+n（向后）在它们之间移动。 Hiew 有一个内置的反汇编程序和汇编程序，使修补可执行文件变得更加容易。您还可以使用键盘宏来自动执行重复性任务。 &lt;a href=&quot;https://hackernews.betacat.io/#hiew-hex-editor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38838723&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;