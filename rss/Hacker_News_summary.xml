<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-25T18:01:21.067869Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;人工智能解决国际数学奥林匹克银牌级别的问题&lt;/stitle>; &lt;id>;https://deepmind.google/discover/blog/ai-solves-imo-problems-at- silver-medal-level/&lt;/id>; &lt;更新>;2024-07-25T16:00:45.918432Z&lt;/更新>; &lt;link href=&quot;https://deepmind.google/discover/blog/ai-solves-imo- issues-at-silver-medal-level/&quot;/>; &lt;author>; &lt;name>;ocfnash&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ocfnash&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://lh3.googleusercontent.com/AdiABEMQViHaJJIcquROUJAEQXGtkk04SAamLoG0w06W2j5ZBEL-hGgRpwQVfmMnonQud_Ol6y0VTuQxdTScqiE8KrXdNtCalLiU7CJ6R093lRD5pQ=w1072- h603-n-nu&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;基于强化学习的系统 AlphaProof 和改进的几何求解系统 AlphaGeometry 2 首次共同解决了国际数学奥林匹克 (IMO) 六道题中的四道，达到了与银牌获得者相同的水平。这些系统接受了数百万个问题的训练，并使用正式的数学语言来证明或反驳解决方案，... &lt;a href=&quot;https://hackernews.betacat.io/#ai-解决国际数学奥林匹克问题银牌级别问题&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 41069829&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;面向所有人的逆向工程&lt;/stitle>; &lt;id>;https://0xinfection.github.io/reversing/&lt;/id>; &lt;updated>;2024-07-25T15:00:45.920566Z&lt;/updated>; &lt;link href =&quot;https://0xinfection.github.io/reversing/&quot;/>; &lt;作者>; &lt;名称>;udev4096&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=udev4096&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://0xinfection.github.io/reversing/cover.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;逆向工程是解构人造物体以揭示其设计、架构或代码的过程，类似于科学研究。本教程集涵盖 x86、x64、32 位 ARM 和64 位架构，旨在使逆向工程变得简单且易于初学者和那些希望刷新知识的人使用。 _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069256&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN: Undermind (YC S24) – 用于发现科学论文的 AI 代理&lt;/stitle >; &lt;id>;https://news.ycombinator.com/item?id=41069909&lt;/id>; &lt;更新>;2024-07-25T16:00:45.921105Z&lt;/更新>; &lt;link href=&quot;https://news .ycombinator.com/item?id=41069909&quot;/>; &lt;作者>; &lt;名称>;jramette&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jramette&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Undermind 正在构建一个针对复杂科学研究的搜索引擎，旨在帮助研究人员快速找到相关论文，避免在手动搜索上浪费时间。该搜索系统使用模仿人类研究策略的管道，仔细搜索结果并提供报告，其目标是实现结果的高精度和详尽性。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-undermind-yc-s24-ai-agent-for-discovering-scientific-papers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069909&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;异常安全：为什么我们使用隔离虚拟机&lt;/stitle>; &lt;id>;https://blog.thinkst.com/2024/ 07/unfashionically-secure-why-we-use-isolated-vms.html&lt;/id>; &lt;更新>;2024-07-25T17:01:45.921674Z&lt;/更新>; &lt;link href=&quot;https://blog.thinkst .com/2024/07/unfashionically-secure-why-we-use-isolated-vms.html&quot;/>; &lt;author>; &lt;name>;mh_&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=mh_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07 /image-4.png?resize=960%2C436&amp;ssl=1&quot; style=&quot;宽度: 220px 高度: 100px;&quot; />;&lt;br />;安全公司 Canary 选择使用独特的架构，在单独的虚拟机上运行每个客户的服务，提供完全的客户隔离和强大的安全边界，尽管这种架构不太时尚且价格更高。这种方法使 Canary 能够避免常见的安全漏洞，并在安全评估中被证明是有效的，提供了高水平的... &lt;a href=&quot;https://hackernews.betacat.io/#unfashionously-secure-why-we- use-isolated-vms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070870&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Wat – Python 对象的深度检查&lt;/ stitle>; &lt;id>;https://github.com/igrek51/wat&lt;/id>; &lt;更新>;2024-07-25T17:00:45.922218Z&lt;/更新>; &lt;link href=&quot;https://github.com/ igrek51/wat&quot;/>; &lt;作者>; &lt;名称>;igrek51&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=igrek51&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://raw.githubusercontent.com/igrek51/wat/master/docs/img/wat-datetime.png&quot; style=&quot;宽度：220px；高度：171px；&quot; />;&lt;br />;WAT Inspector 是一个强大的工具，可以让您检查和探索 Python 中的未知对象，提供对象的类型、模块、父对象和方法等信息，使您更容易理解和使用对象。它可用于通过使用除法运算符快速检查对象，并且还提供诸如列出... &lt;a href=&quot;https://hackernews.betacat.io/# wat-deep-inspection-of-python-objects&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070428&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Node.js添加了对 TypeScript 的实验性支持&lt;/stitle>; &lt;id>;https://github.com/nodejs/node/pull/53725&lt;/id>; &lt;updated>;2024-07-25T03:00:45.922792Z&lt;/updated>; &lt;link href=&quot;https://github.com/nodejs/node/pull/53725&quot;/>; &lt;作者>; &lt;名称>;magnio&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=magnio &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/19f5ceaed7bfd96bbe1ff3ec94e0670c2a75f0f1ef358d41c5fb71258a8184eb/nodejs/node/pull/53725&quot; style=&quot;width: 220px; height: 110 像素；” />;&lt;br />;TypeScript 文件可以通过设置实验标志 --experimental-strip-types 来执行，它将代码转换为 JavaScript，而无需类型检查或保留类型。使用 @swc/wasm-typescript 包是为了简单起见，因为它是一个小包，带有 wasm 和 js 文件来绑定它，并且经过了 Deno 的实际测试。 &lt;a href=&quot;https://hackernews.betacat.io/#node-js-adds-experimental-support-for-typescript&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41064351&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Tiny Moon – 计算月相的 Swift 库&lt;/stitle>; &lt;id>;https://github.com/mannylopez/TinyMoon&lt;/id>; &lt;更新>;2024-07-25T16:00:45.923333Z&lt;/更新>; &lt;link href=&quot;https://github.com/mannylopez/TinyMoon&quot;/>; &lt;作者>; &lt;名称>;mannylopez &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=mannylopez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/mannylopez/TinyMoon/ main/images/TinyMoonIcon_256x256.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;TinyMoon 库计算任何给定日期和时间的月相，离线工作并与未来的更新兼容。它提供两种类型的计算：Moon（优先考虑主要相位）和 ExactMoon（返回特定日期和时间的精确值）。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-tiny-moon-swift-library-to-calculate-the-moon-phase&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069681&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从 STM32 映射 FPGA 的内存&lt;/stitle>; &lt;id>;https://serd.es/2024/07/24 /Memory-mapping-an-FPGA-from-a-STM32.html&lt;/id>; &lt;更新>;2024-07-25T15:00:45.924379Z&lt;/更新>; &lt;link href=&quot;https://serd.es/ 2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html&quot;/>; &lt;author>; &lt;name>;hasheddan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=hasheddan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://serd.es/assets/fmc-test-800.jpg&quot; style=&quot;width: 220px; height : 164 像素;&quot; />;&lt;br />;作者描述了大规模嵌入式项目的自定义设置，使用 AMD Xilinx Kintex-7 或 Artix FPGA 与 STM32H735 MCU 配对，并在它们之间具有内存映射接口。该设置支持高速数据平面和控制平面，具有分散引脚排列、安全边界和灵活的内存控制器等功能。 &lt;a href=&quot;https://hackernews.betacat.io/#memory-mapping-an-fpga-from-an-stm32&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41068995&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我最喜欢的算法：线性时间中值查找（2018）&lt;/stitle>; &lt;id>;https://rcoh.me/posts/linear-time-median-finding /&lt;/id>; &lt;更新>;2024-07-25T10:00:45.924909Z&lt;/更新>; &lt;link href=&quot;https://rcoh.me/posts/linear-time-median-finding/&quot;/>; &lt;作者>; &lt;name>;skanderbm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=skanderbm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //rcoh.me/images/medians-graph.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;中位数中位数算法是一种确定性线性时间方法，用于查找列表的中位数，使用快速选择和主元选择算法来实现线性性能。该算法被证明是线性时间的，但其实现很复杂，并且由于计算时间慢而在实践中不常用。 &lt;a href=&quot;https://hackernews.betacat.io/#my-favorite-algorithm-linear-time-median-finding-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41066536&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;化学家解释无咖啡因咖啡背后的化学成分&lt;/stitle>; &lt;id>;https://theconversation.com/retaining-flavor-while-removing-caffeine- a-chemist-explains-the-chemistry-behind-decaf-coffee-233196&lt;/id>; &lt;更新>;2024-07-25T13:00:45.925431Z&lt;/更新>; &lt;link href=&quot;https://theconversation.com /retaining-flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.theconversation.com/files/602926/original/file-20240625 -17-dvtep.jpg?ixlib=rb-4.1.0&amp;rect=0%2C0%2C5243%2C3508&amp;q=20&amp;auto=format&amp;w=320&amp;fit=clip&amp;dpr=2&amp;usm=12&amp;cs=strip&quot; style=&quot;width: 220px; height: 148px;&quot; />;&lt;br />;脱咖啡因方法，如二氧化碳、瑞士水和溶剂法，可以去除咖啡豆中的大部分咖啡因，同时保留风味和香气化合物。这些方法具有丰富的咖啡因含量历史上，使用高压二氧化碳、热水和有机溶剂等各种技术来提取咖啡因，其中一些方法能够将风味化合物重新引入咖啡豆中。 a-chemist-explains-the-chemistry-behind-decaf-coffee&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41067616&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;五种小语言及其发展：HOPL 演讲 (1993)&lt;/stitle>; &lt;id>;https://www.bell-labs.com/usr/dmr/www/hopl.html&lt;/id>; &lt;更新>; 2024-07-25T14:00:45.925957Z&lt;/更新>; &lt;link href=&quot;https://www.bell-labs.com/usr/dmr/www/hopl.html&quot;/>; &lt;作者>; &lt;名称>;fanf2 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bell -labs.com/usr/dmr/www/hoplgifs/y.1.gif&quot; style=&quot;宽度：220px; height: 170px;&quot; />;&lt;br />;演讲者讨论了五种编程语言之间的异同：Bliss、Pascal、Algol 68、BCPL 和 C。他认为 C 的成功在于其连接和促进的能力人们需要做什么，以及它在 Unix 系统上的实现。 1993&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41032097&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;调查损坏的 Winamp 皮肤&lt;/stitle>; &lt;id>;https: //jordaneldredge.com/notes/corrupted-skins/&lt;/id>; &lt;更新>;2024-07-25T05:00:45.926488Z&lt;/更新>; &lt;link href=&quot;https://jordaneldredge.com/notes/corrupted- Skins/&quot;/>; &lt;author>; &lt;name>;treve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=treve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://jordaneldredge.com/notion-mirror/84ebb48c-616a-4f51-ae9a-991a4e0a7e9b/e94461bd-1f9c-4ef4-bbda-23acc32ef0df/EsErCPFVoAACjOn.jpeg&quot; style=&quot;width: 220px; height: 241px;&quot; />;&lt;br />;用户探索了损坏的 Winamp 皮肤，找到了各种文件，包括 PDF、图像和加密的 zip 文件，这导致了一系列意外的发现。用户发现了敏感信息，例如电子邮件密码和传记，甚至发现了一个潜在的恶意可执行文件，后来发现该文件是无害的。 >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41064645&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;生成数独只是为了乐趣而不盈利&lt;/stitle>; &lt;id>;https://tn1ck。 com/blog/how-to-generate-sudokus&lt;/id>; &lt;更新>;2024-07-25T11:00:45.927004Z&lt;/更新>; &lt;link href=&quot;https://tn1ck.com/blog/how-to -generate-sudokus&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://tn1ck.com/how-to-generate-sudokus/benchmark_bruteForceWithValidCheck.csv_correlation.png&quot; style=&quot;宽度：220px; height: 275px;&quot; />;&lt;br />;作者创建了一个免费开源数独应用程序，并通过使用各种算法生成数独并对其迭代次数进行基准测试来分析数独的难度。分析表明，迭代次数与难度级别，但作者指出，这可能不是人类如何看待难度的完美指标。利润&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41062072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;历史上第一种货币：吕底亚王国铸造金、银硬币（2022）&lt;/stitle>; &lt;id>;https://www.egypttoday.com/Article/4/113533/The-first-currency-in-history-Kingdom-of-Lydia-minted-gold&lt;/id>; &lt;更新>;2024-07-25T17:00:45.927542Z&lt;/更新>; &lt;link href=&quot;https://www.egypttoday.com/Article/4/113533/The-first-currency-in-history-Kingdom- of-Lydia-minted-gold&quot;/>; &lt;作者>; &lt;名称>;Bluestein&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Bluestein&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.egypttoday.com/siteimages/ArticleImgs/2022/3/7/28870-main-qimg-eb305a5564aef4c26d26fea207aa8536-lq.jpg&quot; style=&quot;width: 220px;高度：182px;&quot; />;&lt;br />;古代吕底亚王国在公元前 600 年左右创造了第一批硬币，其雕刻简单，后来发展为带有希腊神话人物的艺术设计。吕底亚硬币是第一枚官方发行的硬币，作为后续造币的模型，代表了人类贸易和商业的根本变化。 gold-silver-coins-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41019354&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;让我们将 CAP 委托给内阁好奇心&lt;/stitle>; &lt;id>;https://brooker.co.za/blog/2024/07/25/cap-again.html&lt;/id>; &lt;更新>;2024-07-25T15:00:45.928078Z&lt;/已更新>; &lt;link href=&quot;https://brooker.co.za/blog/2024/07/25/cap-again.html&quot;/>; &lt;作者>; &lt;name>;nalgeon&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=nalgeon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://brooker.co.za/blog/images/bernstein_das_fig2.png “样式=”宽度：220px; height: 103px;&quot; />;&lt;br />;CAP 定理通常被认为对分布式系统工程师很重要，但对于大多数云式分布式系统和应用程序来说几乎无关紧要，在这些系统和应用程序中，其他权衡实际上更重要。该定理与间歇性连接的移动和物联网应用程序更相关，在这些应用程序中，它通常被认为是常识，而设计这些系统的工程师...... &lt;a href=&quot;https://hackernews.betacat.io/#let-s-consign-cap -to-the-cabinet-of-curiosities&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069403&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每个公司都应该由其员工拥有&lt;/stitle>; &lt;id>;https://www.elysian.press/p/employee-ownership&lt;/id>; &lt;更新>;2024-07-25T07:00:45.928577Z&lt;/更新>; &lt;link href =&quot;https://www.elysian.press/p/employee-ownership&quot;/>; &lt;作者>; &lt;名称>;ellegriffin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ellegriffin&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A% 2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5dd334d7-440e-4ea9-9385-1be0186d010a_2464x1856.png&quot; style=&quot;width: 220px; height: 166px;&quot; />;&lt;br />;Central States Manufacturing 是一家价值 10 亿美元的公司，由员工拥有，员工获得一定比例工资的股票所有权，促进财富平等。这种模式称为员工持股所有权计划 (ESOP) 越来越受欢迎，美国有 6,533 家公司采用它，可能有助于缩小贫富差距。由-its-employees拥有&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41065227&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Veles：开源工具二进制数据分析&lt;/stitle>; &lt;id>;https://codisec.com/veles/&lt;/id>; &lt;updated>;2024-07-25T11:00:45.929123Z&lt;/updated>; &lt;link href=&quot;https:// codisec.com/veles/&quot;/>; &lt;作者>; &lt;名称>;LorenDB &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/作者>; &lt;内容类型= “html”>; &lt;img src =“https://codisec.com/wp-content/uploads/2016/12/binary_visualization.png”样式=“宽度：220px; height: 126px;&quot; />;&lt;br />;Veles 是一款二进制数据分析工具，它将先进的十六进制探索和数据可视化功能与可扩展的分析框架相结合，支持逆向工程和隐写术等任务。该工具使用客户端-服务器架构并且是开源的，重点是通过夺旗竞赛进行社区驱动的开发和测试&lt;a href=&quot;https://hackernews.betacat.io/#veles-open-source-tool-for-binary-。数据分析&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41026480&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;《龙与地下城》教我如何编写替代文本&lt; /stitle>; &lt;id>;https://ericwbailey.website/published/dungeons-and-dragons-taught-me-how-to-write-alt-text/&lt;/id>; &lt;更新>;2024-07-24T21:00 ：45.930245Z&lt;/updated>; &lt;link href=&quot;https://ericwbailey.website/published/dungeons-and-dragons-taught-me-how-to-write-alt-text/&quot;/>; &lt;作者>; &lt;名称>;ohjeez&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ohjeez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ericwbailey .website/img/posts/dungeons-and-dragons-taught-me-how-to-write-alt-text/share-image-facebook.png&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;作者回顾了他们玩《龙与地下城》的经历，强调了描述性故事讲述和优先考虑关键信息的重要性。他们还讨论了替代文本的写作艺术，强调了其在传达意义和表达意义方面的重要性。创造身临其境的体验。 &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41061755&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;当对象不够时（2021）&lt;/stitle>; &lt;id>;https://www.tonysm.com /when-objects-are-not-enough/&lt;/id>; &lt;更新>;2024-07-25T11:00:45.930791Z&lt;/更新>; &lt;link href=&quot;https://www.tonysm.com/when-objects -are-not-enough/&quot;/>; &lt;作者>; &lt;名称>;o2l &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=o2l&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.tonysm.com/assets/images/oop/01-objects.png&quot; style=&quot;宽度：220px; height: 234px;&quot; />;&lt;br />;作者探讨了面向对象编程 (OOP) 的概念及其演变，强调了原始 Smalltalk 方法与现代实现之间的差异。作者讨论了封装“消息”的重要性在类中，将方法提升为对象，并将操作用作类，同时还涉及 OOP 的局限性以及对更多... &lt;a href=&quot;https://hackernews.betacat.io/#when-objects -are-not-enough-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41039647&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;版本化有限状态机PostgreSQL（2019）&lt;/stitle>; &lt;id>;https://raphael.medaer.me/2019/06/12/pgfsm.html&lt;/id>; &lt;更新>;2024-07-25T09:00:45.931336Z&lt;/更新>; &lt;link href=&quot;https://raphael.medaer.me/2019/06/12/pgfsm.html&quot;/>; &lt;作者>; &lt;name>;mirzap&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=mirzap&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raphael.medaer.me/assets/img/pgfsm-intro.jpg&quot; style= “宽度：220px； height: 147px;&quot; />;&lt;br />;用户使用 PostgreSQL 实现了数据库有限状态机 (FSM)，通过使用状态和事件的枚举来改进 Felix Geisendorfer 的原始实现，并为转换创建映射表。用户还向 FSM 添加了版本控制，允许在不破坏现有数据的情况下更改转换函数和表，并引入触发器来限制... &lt;a href=&quot;https://hackernews.betacat.io/#versioned-finite-state -machines-with-postgresql-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41066303&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple 地图网页版发布测试版&lt;/stitle>; &lt;id>;https://www.apple.com/newsroom/2024/07/apple-maps-on-the-web-launches-in-beta/&lt;/id>; &lt;更新>;2024- 07-25T07:00:45.931891Z&lt;/更新>; &lt;link href=&quot;https://www.apple.com/newsroom/2024/07/apple-maps-on-the-web-launches-in-beta/&quot; />; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.apple.com/newsroom/images/logos/quick-reads-logos/Apple-Maps.jpg.square_social.jpg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;Apple 地图现已在网络上推出公开测试版，提供驾驶和步行路线、地点信息以及订餐等操作。该功能目前在 Safari、Chrome、和 Edge，未来将支持更多语言、浏览器和平台。 target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41065326&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;什么是 toybox？&lt;/stitle>; &lt;id>;http:// landley.net/toybox/&lt;/id>; &lt;更新>;2024-07-25T03:00:45.932927Z&lt;/更新>; &lt;link href=&quot;http://landley.net/toybox/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Toybox 是一个 BSD 许可的可执行文件，结合了常见的Linux 命令行实用程序集成到单个可执行文件中，旨在为 Android 提供最小的本机开发环境。该项目旨在通过改进 Android 的命令行实用程序并提供可复制和可审核的基础系统来实现 Android 自托管。 &lt;a href=&quot;https://hackernews.betacat.io/#what-is-toybox&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=41064333&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Lisp 宏的防御&lt;/stitle>; &lt;id>;https://mihaiolteanu.me/defense-of-lisp-macros&lt;/id>; &lt;updated>;2024-07-25T10:00:45.933458Z &lt;/更新>; &lt;link href=&quot;https://mihaiolteanu.me/defense-of-lisp-macros&quot;/>; &lt;作者>; &lt;name>;molteanu&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=molteanu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;汽车行业受到工具、语言和文件格式激增的困扰，导致开发人员和供应商的碎片化和额外的工作量。对一种强大的语言来征服软件领域的追求导致了工具开发的永无止境的循环，每个工具都引入了自己的语言、语法和文件格式，在系统和...之间造成了裂痕。 “https://hackernews.betacat.io/#defense-of-lisp-macros” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=41066544&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;人类 1，黑猩猩 0：纠正记录&lt;/stitle>; &lt;id>;https://www.jasoncollins.blog/posts/ humans-1-chimps-0- Correcting-the-record&lt;/id>; &lt;更新>;2024-07-25T11:00:45.933998Z&lt;/更新>; &lt;link href=&quot;https://www.jasoncollins.blog/posts/ humans-1-chimps-0- Correcting-the-record&quot;/>; &lt;作者>; &lt;名称>;amadeuspagel&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=amadeuspagel&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://www.jasoncollins.blog/posts/img/ayumu.png&quot; style=&quot;宽度：220px 高度：150px;&quot; />;&lt;br />;黑猩猩 Ayumu 最初被认为拥有优于人类的工作记忆，但随后的研究表明，这一结论是基于有缺陷的方法论，人类可以通过适度的练习与 Ayumu 的表现相媲美。 &lt;a href=&quot;https://hackernews.betacat.io/# humans-1-chimps-0- Correcting-the-record&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41063258&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;拥有一万亿代币的多模态数据集&lt;/stitle>; &lt;id>;https://github.com/mlfoundations/MINT-1T&lt;/id>; &lt;updated>;2024 -07-24T21：00：45.934500Z &lt;/更新>; &lt;link href =“https://github.com/mlfoundations/MINT-1T”/>; &lt;作者>; &lt;名称>; kulikalov &lt;/名称>; &lt;uri>; https： //news.ycombinator.com/user?id=kulikalov&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/mlfoundations/MINT-1T/ main/assets/interleaved-example.png&quot; style=&quot;宽度: 220px 高度: 113px;&quot; />;&lt;br />;🍃 MINT-1T 是一个开源多模态 INTerleaved 数据集，包含 1 万亿个文本标记和 34 亿张图像，比现有开源数据集扩展了约 10 倍。此外，我们还包括以前未开发的资源，例如 PDF 和 ArXiv 论文。 &lt;a href=&quot;https://hackernews.betacat.io/#a-multimodal-dataset-with-one-trillion-tokens&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41061390&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;