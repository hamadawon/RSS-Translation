<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-26T16:01:59.270908Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Oasis – 一个小型、静态链接的 Linux 系统&lt;/stitle>; &lt;id>;https://github.com/oasislinux/oasis&lt;/id>; &lt;更新>;2024-01- 26T15:00:33.885451Z&lt;/updated>; &lt;link href=&quot;https://github.com/oasislinux/oasis&quot;/>; &lt;作者>; &lt;name>;smartmic&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/ae20ccfe3241d1d718ca278a00998b18fedceff900ad5a4b34e304f91d258bcc/oasislinux/oasis&quot; style=&quot;width: 220 像素；高度：110 像素；&quot; />;&lt;br />;oasislinux/oasis 此提交不属于此存储库上的任何分支，并且可能属于存储库之外的分支。 &lt;a href=&quot;https://hackernews.betacat.io/#oasis-a-small-statically-linked-linux-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39142748&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TinySA – 小型频谱分析仪和信号发生器&lt;/stitle>; &lt;id>;https://www.tinysa.org/wiki/&lt;/id>; &lt;更新>;2024 -01-26T14:00:33.887575Z&lt;/更新>; &lt;link href=&quot;https://www.tinysa.org/wiki/&quot;/>; &lt;作者>; &lt;名称>;翻译&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=transpute&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tinysa.org/wiki/uploads/Main/tinySA_housing.jpg “样式=”宽度：220px;高度：155px;“ />;&lt;br />;tinySA 是一款小型频谱分析仪和信号发生器。它具有彩色显示屏，可以观察高达 12GHz 的信号。 &lt;a href=&quot;https://hackernews.betacat.io/#tinysa-small-spectrum-analyzer-and-signal-generator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39142560&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;阿蒙·托宾 – Foley Room 网站 (2007)&lt;/stitle>; &lt;id>;https://web.archive.org/web/20070309014113/http://www .amontobin.com/field/&lt;/id>; &lt;更新>;2024-01-26T13:00:33.888630Z&lt;/更新>; &lt;link href=&quot;https://web.archive.org/web/20070309014113/http:// /www.amontobin.com/field/&quot;/>; &lt;author>; &lt;name>;hyperific&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hyperific&lt;/uri>; &lt;/author>; &lt; content type=&quot;html&quot;>;组织：从 1996 年开始，Alexa Internet 一直将其抓取数据捐赠给互联网档案馆。这些数据每天都会流入，并在禁运期后添加到 Wayback Machine 中。 &lt;a href=&quot;https://hackernews.betacat.io/#amon-tobin-foley-room-site-2007&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39134503&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一些奇怪的 Macintosh 计算机&lt;/stitle>; &lt;id>;https://arstechnica.com/gadgets/2024/01/macintosh-at-40-the-oddest-and-稀有-macs-ever-built/&lt;/id>; &lt;更新>;2024-01-26T13:00:33.889126Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/gadgets/2024/01/macintosh- at-40-the-oddest-and-rarest-macs-ever-built/&quot;/>; &lt;author>; &lt;name>;tambourine_man&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tambourine_man &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2024/01/ars_weirdmacs_hero_3-800x450.jpg&quot; style=&quot;宽度：220 像素；高度：124 像素；” />;&lt;br />;为了纪念 Macintosh 诞生 40 周年，本文重点介绍了有史以来最稀有、最不寻常的量产 Mac 机型。其中包括 Macintosh XL（这是苹果公司清理未售出的 Lisa 2 库存的聪明方法）和 Macintosh Portable（一款电池供电的翻盖机，但销量没有达到苹果公司的预期）。 &lt;a href=&quot;https://hackernews.betacat.io/#some-strange-macintosh-computers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39125016&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Edsger Dijkstra 将计算机科学扛在肩上（2020）&lt;/stitle>; &lt;id>;https://inference-review.com/article/the-man-who-carried-computer-science -on-his-shoulders&lt;/id>; &lt;更新>;2024-01-26T06:00:33.889598Z&lt;/更新>; &lt;link href=&quot;https://inference-review.com/article/the-man-who- Carry-computer-science-on-his-shoulders&quot;/>; &lt;作者>; &lt;名称>; throwup238 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= throwup238 &lt;/ uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://inference-review.com/assets/img/articles/apt/figure-1.png&quot; style=&quot;width: 220px; height: 279px;&quot; />;&lt;br />;Edsger Wybe Dijkstra 是计算机科学领域的先驱和天才。他对该学科的工程和数学方面做出了重大贡献。 Dijkstra 的工作和思想塑造了计算机科学的新兴领域，并帮助将其建立为一门受人尊敬的学科。 &lt;a href=&quot;https://hackernews.betacat.io/#edsger-dijkstra-carried-computer-science-on-his-shoulders-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39120687&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;便携式 EPUB&lt;/stitle>; &lt;id>;https://willcrichton.net/notes/portable-epubs/#epub-content%2FEPUB%2Findex .xhtml$&lt;/id>; &lt;更新>;2024-01-26T02:00:33.890138Z&lt;/更新>; &lt;link href=&quot;https://willcrichton.net/notes/portable-epubs/#epub-content%2FEPUB% 2Findex.xhtml$&quot;/>; &lt;作者>; &lt;名称>;sohkamyung&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;下一代便携式文档的提案。 &lt;a href=&quot;https://hackernews.betacat.io/#portable-epubs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39138042&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;WASI 0.2.0 及其重要性&lt;/stitle>; &lt;id>;https://wasmcloud.com/blog/wasi-preview-2-officially-launches&lt;/id>; &lt;更新>;2024-01- 26T15:00:33.890598Z&lt;/updated>; &lt;link href=&quot;https://wasmcloud.com/blog/wasi-preview-2-officially-launches&quot;/>; &lt;作者>; &lt;name>;brooksmtownsend&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=brooksmtownsend&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://wasmcloud.com/assets/images/stable -foundation-c2f80e43b4d8ae40b2d7e625453e70cd.png&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;WebAssembly 的标准接口集 WASI 0.2.0 已正式发布。它为库开发人员提供了通用接口的稳定定义，以供其构建。 &lt;a href=&quot;https://hackernews.betacat.io/#wasi-0-2-0-and-why-it-matters&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39143054&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple 宣布对欧盟 iOS、Safari 和 App Store 进行更改&lt;/stitle>; &lt;id>;https://www.apple.com/ newsroom/2024/01/apple-announces-changes-to-ios-safari-and-the-app-store-in-the-european-union/&lt;/id>; &lt;更新>;2024-01-25T19:00:33.891072 Z&lt;/更新>; &lt;link href=&quot;https://www.apple.com/newsroom/2024/01/apple-announces-changes-to-ios-safari-and-the-app-store-in-the- european-union/&quot;/>; &lt;作者>; &lt;名称>;colinhb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=colinhb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://www.apple.com/newsroom/images/2024/01/apple-announces-changes-to-ios-app-store-safari-in-the-eu/article/Apple -EU-Digital-Markets-Act-updates-hero_big.jpg.large.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Apple 宣布对欧盟的 iOS、Safari 和 App Store 进行更改，以遵守《数字市场法案》。这些更改包括新的 API、扩展的应用程序分析以及替代浏览器引擎的功能，以及处理应用付款和分发 iOS 应用的选项。&lt;a href=&quot;https://hackernews.betacat.io/#apple-announces-changes-to-ios-safari-and-the-app-store-in- the-european-union&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39132453&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我并不总是使用 LaTeX，但是当我这样做时，我会编译为 HTML (2013)&lt;/stitle>; &lt;id>;https://www.peterkrautzberger.org/0136/&lt;/id>; &lt;updated>;2024-01-26T02:00:33.892515Z&lt;/updated >; &lt;link href=&quot;https://www.peterkrautzberger.org/0136/&quot;/>; &lt;作者>; &lt;name>;pyjamafish&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pyjamafish &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2013/mostinterestingman_meme.jpg&quot; style=&quot;width: 220px; height: 276px;&quot; />;&lt;br />;鼓励 LaTeX 用户考虑使用 Markdown+MathJax 或其他更简单的工具。建议将 HTML 作为数学和科学内容的第一个输出格式。建议使用 tex4ht 等 LaTeX 到 HTML 转换工具，并鼓励提供反馈来改进这些工具。PDF 仍然受到一些读者的青睐，因为它具有更好的可读性和分页功能。LaTeX 被认为是一个强大的工具，但可能并非在所有情况下都是必需的。转换为其他格式对于可访问性和灵活性非常重要。&lt; a href=&quot;https://hackernews.betacat.io/#i-don-t-always-use-latex-but-when-i-do-i-compile-to-html-2013&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39137755&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们的矢量数据库达到峰值了吗？&lt;/stitle>; &lt;id>;https://softwaredoug。 com/blog/2024/01/24/are-we-at-peak-vector-db&lt;/id>; &lt;更新>;2024-01-26T02:00:33.893021Z&lt;/更新>; &lt;link href=&quot;https:// /softwaredoug.com/blog/2024/01/24/are-we-at-peak-vector-db&quot;/>; &lt;作者>; &lt;名称>;softwaredoug&lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=softwaredoug&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://softwaredoug.com/assets/media/headshot2.jpg&quot; style=&quot;width: 220px; height: 249px;&quot; />;&lt;br />;作者质疑是否需要如此多的矢量数据库，并想知道我们是否已经达到了矢量数据库选项的顶峰。他们强调了解决现实世界检索问题的挑战以及对重新思考检索和相关性问题的集中方法。&lt;a href=&quot;https://hackernews.betacat.io/#are-we-at-peak-vector-database&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39119198&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CPU集成显卡具有的散热优势&lt;/stitle>; &lt;id>;https://utcc.utoronto.ca/~cks/ space/blog/tech/CPUIGPCoolingAdvantage&lt;/id>; &lt;更新>;2024-01-26T10:00:33.893514Z&lt;/更新>; &lt;link href=&quot;https://utcc.utoronto.ca/~cks/space/blog/ tech/CPUIGPCoolingAdvantage&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;您无权访问此服务器上的/~cks/space/blog/tech/CPUIGPCoolingAdvantage。 &lt;a href=&quot;https://hackernews.betacat.io/#the-cooling-advantage-that-c​​pu-integrated-graphics-has&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39127157&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ArVid：90 年代俄罗斯人将 4 个硬盘压缩到一盘 VHS 磁带&lt;/stitle>; &lt;id>;https://jacobfilipp.com/arvid-vhs/ &lt;/id>; &lt;更新>;2024-01-26T11:00:33.894016Z&lt;/更新>; &lt;link href=&quot;https://jacobfilipp.com/arvid-vhs/&quot;/>; &lt;作者>; &lt;名称>;rpastuszak&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rpastuszak&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jacobfilipp.com/wp -content/uploads/2024/01/arvid-data-storage-on-vhs-cover-766x400.gif&quot; style=&quot;宽度：220px；高度：115px；&quot; />;&lt;br />;ArVid 卡是一款俄罗斯制造的产品，允许用户在单个 VHS 磁带上存储相当于 4 个硬盘驱动器的数据。这是解决 90 年代数字存储有限问题的经济实惠的解决方案。 &lt;a href=&quot;https://hackernews.betacat.io/#arvid- Russians-squeezed-4-hard-drives-into-one-vhs-tape-in​​-the-90s&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39140849&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;艺术家训练老鼠通过自拍来表达有关社交媒体的观点&lt;/stitle>; &lt;id>;https:/ /www.cbc.ca/radio/asithappens/rat-selfies-1.7093886&lt;/id>; &lt;更新>;2024-01-26T13:00:33.894953Z&lt;/更新>; &lt;link href=&quot;https://www.cbc. ca/radio/asithappens/rat-selfies-1.7093886&quot;/>; &lt;作者>; &lt;名称>;pseudolus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pseudolus&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.cbc.ca/1.7093892.1706135798!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_780/rat-selfies.jpg&quot; style=&quot;宽度：220 像素；高度：124 像素；” />;&lt;br />;法国艺术家 Augustin Lignier 训练老鼠通过自拍来换取零食，并将它们的行为与人类使用社交媒体的方式进行了比较。最终，老鼠开始纯粹为了快乐而自拍，这反映了社交媒体的成瘾性。 &lt;a href=&quot;https://hackernews.betacat.io/#artist-trained-rats-to-take-selfies-to-make-a-point-about-social-media&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39142048&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我意识到棋子可以重新设计为几何攻击方向&lt;/stitle>; &lt;id>;https:// twitter.com/graycrawford/status/1750225562281632048&lt;/id>; &lt;更新>;2024-01-25T20:00:33.895441Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/graycrawford/status/1750225562281632048&quot;/ >; &lt;author>; &lt;name>;aa_is_op&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=aa_is_op&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心——让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#i-realized-chess-pieces-can-be-redesign-to-be-geometric-attack-directions&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39128902&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;没有人愿意付费的东西&lt;/stitle>; &lt;id>;https://lwn.net/SubscriberLink/959069 /c96f34ed67a168e4/&lt;/id>; &lt;更新>;2024-01-26T04:00:33.895923Z&lt;/更新>; &lt;link href=&quot;https://lwn.net/SubscriberLink/959069/c96f34ed67a168e4/&quot;/>; &lt;作者>; &lt; name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;自由软件社区已经建立了一个机构价值数十亿美元的软件，但公司不愿意支持这些项目所需的维护和文档。缺乏企业资金来执行测试基础设施、文档和桌面开发等基本任务，这对开源社区来说是一个重大挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#the-things-nobody-wants-to-pay-for&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39138755&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么阿拉斯加的河流变成橙色？&lt;/stitle>; &lt;id>;https://www.scientificamerican.com/article/why-are-alaskas-rivers-turning -orange/&lt;/id>; &lt;更新>;2024-01-26T10:00:33.896401Z&lt;/更新>; &lt;link href=&quot;https://www.scientificamerican.com/article/why-are-alaskas-rivers-turning -orange/&quot;/>; &lt;作者>; &lt;名称>;maciekmm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=maciekmm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://static.scientificamerican.com/sciam/cache/file/92A46E02-E622-4229-8FF085A42D4FEBA2_source.jpg?w=600&quot; style=&quot;宽度：220 像素；高度：165 像素；&quot; />;&lt;br />;由于气候变化和永久冻土融化，阿拉斯加的河流正在变成橙色。河流生锈是由于铁从基岩中浸出以及融化的湿地中的细菌产生可溶性铁而引起的。 &lt;a href=&quot;https://hackernews.betacat.io/#why-are-alaska-s-rivers-turning-orange&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39123276&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;禁止复制：利用 3D 打印攻击受限按键 [pdf]&lt;/stitle>; &lt;id>;https://www.usenix.org/system/files/conference/ woot15/woot15-paper-burgess.pdf&lt;/id>; &lt;更新>;2024-01-26T04:00:33.896861Z&lt;/更新>; &lt;link href=&quot;https://www.usenix.org/system/files/conference /woot15/woot15-paper-burgess.pdf&quot;/>; &lt;作者>; &lt;名称>;1970-01-01&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=1970-01-01 &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;商品 3D 打印机可以生产可用于常用弹子锁的钥匙坯和预切钥匙。 3D 打印中使用的材料足够坚固，可以承受碰撞、压印和远程复制等攻击。已经开发出一种工具，可以生成 &lt;a href=&quot;https://hackernews.betacat.io/#replication-prohibited-attacking-restricted-keyways-with-3d-printing-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39124018&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不可能的岛，最大、运行时间最长的在线文本冒险游戏之一&lt;/stitle>; &lt;id>;https ://www.improbableisland.com&lt;/id>; &lt;更新>;2024-01-25T22:00:33.897335Z&lt;/更新>; &lt;link href=&quot;https://www.improbableisland.com&quot;/>; &lt;作者>; &lt;名称>;alentred&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=alentred&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// www.improbableisland.com/images/opengraph.jpg&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;Improbable Island 是一款老式的文字冒险游戏，自拨号时代以来一直在互联网上不断发展。这是一款令人困惑且令人上瘾的游戏，具有不断的更新和热情的社区。 &lt;a href=&quot;https://hackernews.betacat.io/#improbable-island-one-of-the-largest-and-longest-running-online-text-adventures&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39135779&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;协作代码编辑器 Zed 现已开源&lt;/stitle>; &lt;id>;https://zed.dev /blog/zed-is-now-open-source&lt;/id>; &lt;更新>;2024-01-25T16:00:33.897838Z&lt;/更新>; &lt;link href=&quot;https://zed.dev/blog/zed- is-now-open-source&quot;/>; &lt;author>; &lt;name>;FeroTheFox&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=FeroTheFox&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://zed.dev/img/post/zed-is-now-open-source/open-source-F1.png&quot; style=&quot;宽度：220px；高度：116px ;” />;&lt;br />;Zed 现在是一个开源项目。 Zed 本身的代码将在 Copyleft 许可证下提供，以确保任何改进都会使整个社区受益。 &lt;a href=&quot;https://hackernews.betacat.io/#zed-a-collaborative-code-editor-is-now-open-source&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39119835&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;捕捉时空涟漪：LISA 取得进展&lt;/stitle>; &lt;id>;https://www.esa.int/Science_Exploration/Space_Science /Capturing_the_ripples_of_spacetime_LISA_gets_go-ahead&lt;/id>; &lt;更新>;2024-01-25T20:00:33.898315Z&lt;/更新>; &lt;link href=&quot;https://www.esa.int/Science_Exploration/Space_Science/Capturing_the_ripples_of_spacetime_LISA_gets_go-ahead&quot;/>; &lt;作者>; &lt;名称>;ssl232&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ssl232&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://www.esa.int/var/esa/storage/images/esa_multimedia/images/2024/01/lisa_measuring_gravitational_waves/25446153-5-eng-GB/LISA_measuring_gravitational_waves_article.png&quot; style=&quot;宽度：220px；高度：124px ;” />;&lt;br />;欧空局科学计划委员会已批准激光干涉仪空间天线（LISA）任务，该任务旨在探测和研究来自太空的引力波。 LISA将由三艘航天器组成，它们将在太空中形成一个等边三角形，并在250万公里的距离上交换激光束。该任务预计将于 2035 年发射，将使科学家能够研究黑洞的起源、星系的演化和宇宙的膨胀。 &lt;a href=&quot;https://hackernews.betacat.io/#capturing-the-ripples-of-spacetime-lisa-gets-go-ahead&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39130684&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;命令行工具比 Hadoop 集群快 235 倍 (2014)&lt;/stitle>; &lt;id>;https://adamdrake.com/command -line-tools-can-be-235x-faster-than-your-hadoop-cluster.html&lt;/id>; &lt;更新>;2024-01-25T23:00:33.898783Z&lt;/更新>; &lt;link href=&quot;https: //adamdrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html&quot;/>; &lt;author>; &lt;name>;tosh&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://adamdrake.com/static/images/adam_drake_240.jpg&quot; style= “宽度：220 像素；高度：220 像素；” />;&lt;br />;本文讨论了使用 shell 命令和工具来执行数据处理任务，而不是使用 Hadoop 或其他大数据工具。作者演示了使用基本 shell 命令创建的流处理管道如何比 Hadoop 实现快 235 倍以上。 &lt;a href=&quot;https://hackernews.betacat.io/#command-line-tools-can-be-235x-faster-than-your-hadoop-cluster-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39136472&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;更顺畅的航行：研究威利号汽船的音频缺陷&lt;/stitle>; &lt;id>;https://www.windytan.com /2024/01/smoother-sailing-steamboat-willie-flutter.html&lt;/id>; &lt;更新>;2024-01-25T21:00:33.899267Z&lt;/更新>; &lt;link href=&quot;https://www.windytan. com/2024/01/smoother-sailing-steamboat-willie-flutter.html&quot;/>; &lt;作者>; &lt;名称>;firloop&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=firloop&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgmpMyJpJ8YH4hEKMKde_Pow2smdNeAH6fSTNsUd-g0ZOzvJRNoDwj0N1WNQL82P5MMJSZrz83kgqX9K86wFDNtde3F czi4X8juTW3orD9acpHU3OrdTbAvqq2IfILDZJFvZtaav4JT1HbDybzN7sNyxr0ilR5mQMr0QZTF0Qb_r615A421JOMBvHli4fIX/s480/mikki.jpg&quot; style=&quot;width ：220像素； height: 184px;&quot; />;&lt;br />;《威利号汽船》（1928）是最早采用同步声音的动画片之一。它有后期制作的音效和著名的配乐，该配乐存在颤振失真。作者探讨了这种失真并提出了建议减少它的方法。&lt;a href=&quot;https://hackernews.betacat.io/#smoother-sailing-stuying-audio-imperfections-in-steamboat-willie&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39131010&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CVE-2023-40547 – 避免错误地信任 HTTP 标头&lt;/stitle>; &lt;id>;https://github.com/rhboot /shim/commit/0226b56513b2b8bd5fd281bce77c40c9bf07c66d&lt;/id>; &lt;更新>;2024-01-25T18:00:33.899761Z&lt;/更新>; &lt;link href=&quot;https://github.com/rhboot/shim/commit/0226b56513b2b8bd5fd2 81bce77c40c9bf07c66d&quot;/>; &lt;作者>; &lt;名称>;诵读困难者&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=DyslexicAtheist&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://opengraph.githubassets.com/2e334ce7e153a00ca56fa40c3f59545bf42af369c994f350beeae54c279cfc62/rhboot/shim/commit/0226b56513b2b8bd5fd281bce77c40c9bf07c66d&quot; style=&quot;width: 220 像素； height: 110px;&quot; />;&lt;br />;在过去十年中一直存在的 Linux 引导加载程序中发现了一个严重错误。该错误允许由于缓冲区分配错误而导致越界写入。 &lt;a href=&quot;https://hackernews.betacat.io/#cve-2023-40547-avoid-in Correctly-trusting-http-headers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39132300&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ruby on Rails 负载测试习惯&lt;/stitle>; &lt;id>;https://www.rorvswild.com/blog/2024/ruby-on-rails-负载测试习惯&lt;/id>; &lt;更新>;2024-01-26T00:00:33.900229Z&lt;/更新>; &lt;link href=&quot;https://www.rorvswild.com/blog/2024/ruby-on-rails -load-testing-habits&quot;/>; &lt;作者>; &lt;名称>;a12b &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=a12b&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://cdn.rorvswild.com/assets/blog/2024/official_fm_wiz-083039e89f06203dfb2f4e7eab9b76bcf81f5d763890c4e9a737b29b7bda8cf7.png&quot; style=&quot;宽度：220px; height: 115px;&quot; />;&lt;br />;负载测试对于发现瓶颈并确定应用程序可以处理的最大负载至关重要。在靠近应用程序服务器的机器上运行测试并确保测试机器不使其自身饱和。ApacheBench、Siege 和 Typhoeus 等工具可用于负载测试。&lt;a href=&quot;https://hackernews.betacat.io/#ruby-on-rails-load-testing-habits&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39129680&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大脑不需要思考或解决问题——简单的细胞就可以做到&lt;/stitle>; &lt;id>;https://www.scientificamerican.com/article/brains-are-not-required-when-it-comes-to-thinking-and-solving-problems-simple-cells-can-do-it/&lt; /id>; &lt;更新>;2024-01-25T16:00:33.900686Z&lt;/更新>; &lt;link href=&quot;https://www.scientificamerican.com/article/brains-are-not-required-when-it-comes -to-thinking-and-solving-problems-simple-cells-can-do-it/&quot;/>; &lt;author>; &lt;name>;anjel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=anjel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.scientificamerican.com/sciam/cache/file/0B155646-0D3C-4284-A0AB8EE80631BBA1_source.jpg？ w=600&quot; 样式=&quot;宽度: 220px; height: 152px;&quot; />;&lt;br />;文章讨论了基础认知的概念，这表明智力和认知能力不仅限于大脑，也可以存在于没有大脑的细胞和生物体中。作者探讨了智力的例子在各种生物体中，如涡虫、植物、粘菌和单细胞生物，并强调了这项研究在医学和人工智能等领域的潜在影响。&lt;a href=&quot;https://hackernews.betacat.io/ #brains-are-not-required-to-think-or-solve-problems-simple-cells-can-do-it&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=39127028&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CRDT 彻底翻转&lt;/stitle>; &lt;id>;https://interjectedfuture.com/crdts-turned-inside-out/&lt;/id>; &lt;updated>;2024- 01-25T19:00:33.901171Z&lt;/updated>; &lt;link href=&quot;https://interjectedfuture.com/crdts-turned-inside-out/&quot;/>; &lt;作者>; &lt;name>;iamwil&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=iamwil&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://interjectedfuture.com/content/images/size/ w2000/2023/11/DALL-E-2023-11-30-01.15.28---标题为 Merkle-Data-Structures-as-CRDTs 的文章插图--使用柔和的颜色。 -图像为中心的风格化--colorful-representation.png&quot; style=&quot;width: 220px; height: 126px;&quot; />;&lt;br />;上次，我讨论了更传统的 CRDT 之间的权衡，例如基于 State 的 CRDT、基于 Op 的 CRDT 和基于 Delta 的 CRDT。大部分墨水都集中在 CRDT 上一致地合并来自不同副本的数据。这只是故事的一半。如果发生并发编辑时没有存储方式，合并就无法就冲突解决做出一致的决策。通常，这是基于状态的 CRDT 中矢量时钟的工作，基于 Op 的 CRDT 中因果操作的日志。但是如果您熟悉区块链或 Git，我们会注意到 Merkle 树和 DAG（有向无环图）也可以完成相同的工作。以下是我们如何构建此簿记，作为并发状态的固有结构公开，而不是隐藏在容器内。让我们看一下这两种变体： Merkle-DAG（有向非循环图）将 CRDT 建模为随着事件发生而并发更新的 Merkle 节点不断增长的 DAG。这是基于 Op 的 CRDT 的 Merklized 版本，其中内部簿记随着状态更新的数量而不是副本的数量而增长。 Merkle-DAG 中的每个节点都可以承载操作、状态快照甚至增量的有效负载。该节点有效负载必须是 CRDT，Merkle-DAG 才能成为 CRDT。然而，这些有效负载 CRDT 的实现要简单得多，因为并发编辑的簿记工作已委托给 Merkle-DAG。这就好像基于状态的 CRDT 被彻底翻转了。现在，常见的簿记元素是容器（DAG），而特定于有效负载的簿记位于有效负载 CRDT 内部。除了有效负载 CRDT 的簿记更简单之外，Merkle-DAG CRDT 还具有非 Merklized CRDT 所没有的优势。他们可以通过比较根哈希来确定相等性，并且可以通过沿着 DAG 走下去来确定差异。本地副本将其根哈希与远程哈希进行比较，以确定是否发生了更改。如果根哈希不同，则它会要求远程副本在从根沿着 DAG 向下走时发送每个节点哈希。当远程副本发送本地副本已有的哈希时，从根到该节点的路径是本地副本中缺少的所有节点的列表。这在网络上是相当多的讨论，但哈希值不必再按因果顺序传递。根据定义，Merkle DAG 是哈希的因果链。因此，只要接收到所有节点，无论节点如何发送，都可以在接收器处重新排序。保留 Merkle-DAG 的一个好处是 Merkle-DAG 保存的数据是不可变的。它可以在历史上的任何时刻被重建和查询。不变性意味着差异很容易，撤消也很容易，并且可以验证出处。但同样，这里的缺点是变化的历史随着事件的数量而增长。然而，Merkle Trees 使用结构共享作为压缩形式，以降低存储此类数据结构的空间成本。 - 两个 Merkle DAG 的合并是通过比较哈希值并沿着 DAG 进行遍历来完成的。 - 节点有效负载是 CRDT，其合并功能仍然需要是可交换的、关联的和幂等的。 - 通过比较哈希值，通过网络发送更少量的数据进行同步。- 由于不需要因果顺序传递，同步协议更简单，但仍然需要通过网络进行一些对话才能找到要发送的差异。- 数据是不可变的，因此差异、撤消，出处很容易。 Merkle 搜索树 (MST) 是维护一组有序键的树。它通过维护一些不变量来做到这一点。节点中两个键之间的所有子节点都包含按字典顺序排列在两个键之间的条目。叶层是零层。上面的层是第一层，层数不断增加，直到根。密钥所属的层由密钥散列中前导零的数量决定。节点有一个内容 ID，该内容 ID 是其所有键与其所有子节点的内容 ID 串联而成的哈希值。子节点由其内容 id 引用。密钥存在于 MST 树的所有节点中，这与密钥仅位于叶子的 B 树不同。这种结构使 MST 在两个方面具有优势：自平衡和唯一性。 MST 通过不变量#2 和#3 实现自平衡。当将键插入树中时，层由键的散列确定，层中的节点由键的值确定。当将键插入两个键之间的节点时，由于不变式#2，它必然将两个键之间的子节点拆分为两个节点。给定哈希值采用基 B 和不变式 #3，L 层中键的平均数量是 B 乘以 L + 1 层中键的平均数量。因此，平均节点大小为 B。由于键的放置由于完全确定性，树可以自我平衡。唯一性意味着对于给定的一组密钥，MST 是唯一的。这意味着 MST 的构造不依赖于插入密钥的顺序。这是非常理想的，因为我们可以通过比较两个 MST 的根哈希值来判断它们是否不同，而不管插入顺序如何。如果根哈希相同，则两棵树是相同的。要从 MST 构造 CRDT，我们只需向每个同样是 CRDT 的密钥添加有效负载。由于 MST 是有序集，因此合并集具有明确定义的语义，并且有效负载的合并委托给有效负载本身来解析。就像 Merkle-DAG 结构一样，有效负载 CRDT 不需要那么复杂。例如，要构建仅增长的 CRDT，我们选择集合 { ⏊, ⏉ } （分别称为“底部”和“顶部”）作为有效负载 CRDT。默认情况下，有效负载的所有值都以“底部”开头。合并意味着取“顶部”与“底部”的最大值（在最大值操作中顶部总是获胜）。不幸的是，本文忽略了使用 MST 构建其他 CRDT，因为它是留给读者的练习。然而，我认为还有另外两种可能的结构可以工作。添加-删除集的因果长度 CRDT 可以在 MST 中实现，并以 ℤ（整数集）作为有效负载。如果数字是偶数，则密钥不存在，如果数字是奇数，则存在。合并只会取两个副本有效负载的最大值。复制可增长数组 (RGA) 可以通过使用与副本 ID 作为键连接的虚拟指针来实现。由于 MST 保持键的顺序，因此我们可以通过按键顺序遍历来读回字符串。这需要 &lt;a href=&quot;https://hackernews.betacat.io/#crdts-turned-inside-out&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39130945&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;