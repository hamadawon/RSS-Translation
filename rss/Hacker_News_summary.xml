<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-05-09T12:00:59.193184Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Libyear&lt;/stitle>; &lt;id>;https://libyear.com/&lt;/id>; &lt;更新>;2024-05-09T10:00:21.640017Z&lt;/更新>; &lt;link href=&quot;https://libyear.com/&quot;/>; &lt;作者>; &lt;名称>;Crier1002&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Crier1002&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://libyear.com/cartoon1.jpg&quot; style=&quot;width: 220px; height: 209px;&quot; />;&lt;br />;软件依赖项新鲜度是根据最旧依赖项的年龄来衡量的。数字越大表示维护负担越大。 &lt;a href=&quot;https://hackernews.betacat.io/#libyear&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40306449&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;追踪从亚马逊到汉堡的非法巴西牛肉&lt;/stitle>; &lt;id>;https://e360.yale.edu/features/marcel-gomes-interview&lt;/id>; &lt;更新>;2024-05-09T09： 00:21.641853Z&lt;/updated>; &lt;link href=&quot;https://e360.yale.edu/features/marcel-gomes-interview&quot;/>; &lt;作者>; &lt;name>;gaauch&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=gaauch&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://e360.yale.edu/assets/site/_400x225_crop_center-center /Marcel-Gomes_Goldman-Environmental-Prize-HEADER.jpg&quot; style=&quot;宽度：220px 高度：124px;&quot; />;&lt;br />;调查记者马塞尔·戈麦斯追踪了全球最大肉类加工商 JBS 的供应链，揭露了其运营中的非法砍伐森林和潜在的奴役行为。他认为企业需要提高供应链透明度来解决这些问题。 &lt;a href=&quot;https://hackernews.betacat.io/#tracking-illicit-brazilian-beef-from-the-amazon-to-your-burger&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40306249&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AlphaFold 3 预测生命分子的结构和相互作用&lt;/stitle>; &lt;id>;https://blog.google/technology/ai/ google-deepmind-isomorphic-alphafold-3-ai-model/&lt;/id>; &lt;更新>;2024-05-08T16:00:21.643152Z&lt;/更新>; &lt;link href=&quot;https://blog.google/technology/ ai/google-deepmind-isomorphic-alphafold-3-ai-model/&quot;/>; &lt;作者>; &lt;名称>;zerojames&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zerojames&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/AF_hero_2.width-1200.format-webp.webp “样式=”宽度：220px;高度：124px;“ />;&lt;br />;AlphaFold 3 准确预测所有生命分子的相互作用和结构，显着改进了现有方法。科学家可以通过免费的 AlphaFold 服务器访问其功能。 &lt;a href=&quot;https://hackernews.betacat.io/#alphafold-3-predicts-the-struct-and-interactions-of-life-s-molecules&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40298927&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Xilinx HBM2 内部结构&lt;/stitle>; &lt;id>;https://lovehindpa.ws/posts/xilinx-hbm2/&lt;/id >; &lt;更新>;2024-05-09T10:00:21.643550Z&lt;/更新>; &lt;link href=&quot;https://lovehindpa.ws/posts/xilinx-hbm2/&quot;/>; &lt;作者>; &lt;名称>;hasheddan&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hasheddan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lovehindpa.ws/img/狼9466.png“风格=”宽度：220像素高度：220像素;“ />;&lt;br />;Xilinx HBM 器件采用堆叠式内存架构，每个堆叠有多个 DRAM 芯片，每个芯片有两个通道。 AXI 接口提供对各个伪通道的访问，这些伪通道控制 HBM2 内存空间内的特定地址范围。 &lt;a href=&quot;https://hackernews.betacat.io/#xilinx-hbm2-internals&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Temporal Python – 持久的分布式异步事件循环 (2023)&lt;/stitle>; &lt;id>;https://temporal.io /blog/durable-distributed-asyncio-event-loop&lt;/id>; &lt;更新>;2024-05-09T03:00:21.643954Z&lt;/更新>; &lt;link href=&quot;https://temporal.io/blog/durable-分布式异步事件循环&quot;/>; &lt;作者>; &lt;名称>;metadat &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=metadat&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;Temporal Python 利用异步事件循环来实现持久且可恢复的工作流程。它提供了一个沙盒环境，以防止意外的全局状态污染，并支持取消活动和工作流程。 SDK 提供类型安全性，支持同步和异步活动，并允许重播历史工作流程运行以进行调试。 &lt;a href=&quot;https://hackernews.betacat.io/#temporal-python-a-durable-distributed-asyncio-event-loop-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40287341&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一致性 LLM：将 LLM 转换为并行解码器可加速推理 3.5 倍&lt;/stitle>; &lt;id>;https://hao-ai-lab.github。 io/blogs/cllm/&lt;/id>; &lt;更新>;2024-05-08T20:00:21.644348Z&lt;/更新>; &lt;link href=&quot;https://hao-ai-lab.github.io/blogs/cllm/ &quot;/>; &lt;author>; &lt;name>;zhisbug&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zhisbug&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hao-ai-lab.github.io/img/objective_illustration_global.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;研究人员提出了一致性大型语言模型 (CLLM)，这是一种通过启用并行解码来加速大型语言模型推理的技术。 CLLM 学习将目标 LLM 的雅可比轨迹上的任何点映射到其固定点，从而显着加速，而不需要额外的内存成本或架构修改。 &lt;a href=&quot;https://hackernews.betacat.io/#consistency-llm-converting-llms-to-parallel-decoders-accelerates-inference-3-5x&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40302201&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;波音 737 在塞内加尔起飞时坠毁&lt;/stitle>; &lt;id>;https://www.bbc.co.uk /news/articles/ce5ljpnggp4o&lt;/id>; &lt;更新>;2024-05-09T11:31:21.644739Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.co.uk/news/articles/ce5ljpnggp4o&quot; />; &lt;author>; &lt;name>;thereisnoself&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thereisnoself&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://ichef.bbci.co.uk/news/1024/cpsprodpb/3e8a/live/824ffe00-0def-11ef-bee9-6125e244a4cd.jpg&quot; style=&quot;宽度：220px；高度：145px；&quot; />;&lt;br />;这架波音 737-30 vicissliner 在塞内加尔起飞时坠毁，造成 11 人受伤。调查正在进行中，以确定事件的原因。 &lt;a href=&quot;https://hackernews.betacat.io/#boeing-737-crashes-during-take-off-in-senegal&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40307084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Tegon：Jira 和 Linear 的 AI 优先开源替代品&lt;/stitle>; &lt;id>;https://github.com/tegonhq/tegon &lt;/id>; &lt;更新>;2024-05-09T02:00:21.645135Z&lt;/更新>; &lt;link href=&quot;https://github.com/tegonhq/tegon&quot;/>; &lt;作者>; &lt;name>;harshithmul&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=harshithmul&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images. githubusercontent.com/17528887/300198942-07036ee1-774d-4dff-a56b-8050041f36ce.svg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..9paa6t9cAvWddcOS1s2GAanzHf-JU 0hxTHZIjfh67X4&quot;样式=&quot;宽度:220px;高度:111px;&quot; />;&lt;br />;Tegon 自动执行问题跟踪任务以提高效率。它提供人工智能驱动的代理来确定优先级、跟踪进度并提高代码质量。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-tegon-ai-first-open-source-alternative-to-jira-and-linear&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40290735&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用套接字、徒手和 200 行 C 语言在 Linux 中打开 Windows&lt;/stitle>; &lt;id>;https://这里ket.com/posts/from-scratch-x11-windowing/&lt;/id>; &lt;更新>;2024-05-09T00:00:21.645528Z&lt;/更新>; &lt;link href=&quot;https://hereket.com/posts/ from-scratch-x11-windowing/&quot;/>; &lt;作者>; &lt;名称>;libcheet&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=libcheet&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://hereket.com/posts/from-scratch-x11-windowing/images/base.png&quot; style=&quot;宽度：220px；高度：128px；&quot; />;&lt;br />;X11协议：创建基本窗口&lt;a href=&quot;https://hackernews.betacat.io/#opening-windows-in-linux-with-sockets-bare-hands-and-200-lines -of-c&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40303661&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在软件架构中，你必须认识到当你&#39;重新添加火箭级&lt;/stitle>; &lt;id>;https://toot.cat/@plexus/112403882840794498&lt;/id>; &lt;updated>;2024-05-09T10:00:21.646272Z&lt;/updated>; &lt;link href=&quot; https://toot.cat/@plexus/112403882840794498&quot;/>; &lt;作者>; &lt;名称>;rglullis&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rglullis&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;添加 Kubernetes 或微服务等技术会增加软件架构的重量。这种额外的重量需要更多的工程资源和运营开销。 &lt;a href=&quot;https://hackernews.betacat.io/#in-software-architecture-you-have-to-recognize-when-you-re-adding-a-rocket-stage&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40306490&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;工业设计学生作品：“物体应该持续多久？”&lt;/stitle>; &lt;id>;https ://www.core77.com/posts/132088/Fantastic-Industrial-Design-Student-Work-How-Long-Should-Objects-Last&lt;/id>; &lt;更新>;2024-05-08T20:00:21.646665Z&lt; /updated>; &lt;link href=&quot;https://www.core77.com/posts/132088/Fantastic-Industrial-Design-Student-Work-How-Long-Should-Objects-Last&quot;/>; &lt;作者>; &lt;名称>; Surprisetalk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=surprisetalk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s3files. core77.com/blog/images/1539348_81_132088_49tVJzh5U.jpg“样式=”宽度：220px;高度：225px;“ />;&lt;br />;Charlie Humble-Thomas 的项目“有条件的长寿”研究物体的寿命并挑战传统的消费主义。他设计了三把雨伞，每把雨伞都通过材料选择和结构探索了延长使用寿命的独特方法。 &lt;a href=&quot;https://hackernews.betacat.io/#industrial-design-student-work-how-long-should-objects-last&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40283954&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;UTC、Tai 和 Unix 时间 (2001)&lt;/stitle>; &lt;id>;https://cr.yp.to/proto/utctai。 html&lt;/id>; &lt;更新>;2024-05-09T09:00:21.647068Z&lt;/更新>; &lt;link href=&quot;https://cr.yp.to/proto/utctai.html&quot;/>; &lt;作者>; &lt;名称>;enz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=enz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;时间 TAI 作为民用时间标准的基础并实时测量。协调世界时 (UTC) 与 TAI 密切相关，但偶尔包含闰秒以同步地球自转。 &lt;a href=&quot;https://hackernews.betacat.io/#utc-tai-and-unix-time-2001&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40306352&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我向 CTO 撒谎并挽救了局面&lt;/stitle>; &lt;id>;https://GrumpyOldDev.com/post/the-one-where-i-lie -to-the-cto/&lt;/id>; &lt;更新>;2024-05-09T02:00:21.647458Z&lt;/更新>; &lt;link href=&quot;https://GrumpyOldDev.com/post/the-one-where-i -lie-to-the-cto/&quot;/>; &lt;作者>; &lt;名称>;mundanerality&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mundanerality&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://media1.tenor.com/m/FhNCzZkupJwAAAAC/goldengod-golden.gif”样式=“宽度：220px；高度：115px；” />;&lt;br />;作者面临一个灾难性的项目，其中一名首席技术官将工作外包给了一家交付了无法使用的产品的供应商。尽管存在这些问题，作者和他们的团队在短短一个月内秘密开发了自己的替代系统，以确保成功发布。 &lt;a href=&quot;https://hackernews.betacat.io/#the-time-i-lied-to-the-cto-and-saved-the-day&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40304453&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TimesFM：用于时间序列预测的时间序列基础模型&lt;/stitle>; &lt;id>;https://github.com/google -research/timesfm&lt;/id>; &lt;更新>;2024-05-08T14:00:21.648241Z&lt;/更新>; &lt;link href=&quot;https://github.com/google-research/timesfm&quot;/>; &lt;作者>; &lt;名称>;yeldarb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yeldarb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// opengraph.githubassets.com/75a9e97d3727bc28db4c2c2707904e250eae10d345df38b15e3a281e1151c6e2/google-research/timesfm&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;TimesFM 是 Google Research 开发的用于单变量预测的预训练时间序列基础模型。它支持点预测，并需要最大长度为 512 个时间点的连续上下文数据。 &lt;a href=&quot;https://hackernews.betacat.io/#timesfm-time-series-foundation-model-for-time-series-forecasting&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40297946&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;展示 HN：AI 攀岩教练 – 可视化如何根据您的身体攀爬任何路线&lt;/stitle>; &lt;id>;https://climbing.ai /&lt;/id>; &lt;更新>;2024-05-08T13:00:21.648625Z&lt;/更新>; &lt;link href=&quot;https://climbing.ai/&quot;/>; &lt;作者>; &lt;名称>;smandava&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=smandava&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;正在加载... &lt;a href=&quot;https://hackernews.betacat。 io/#show-hn-ai-climbing-coach-visualize-how-to-climb-any-route-based-on-your-body&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=40272339&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;xkcd“机器”的开发笔记&lt;/stitle>; &lt;id>;https://chromakode.com/post/xkcd-machine/&lt;/id>; &lt;更新>;2024-05-08T18:00:21.649018Z&lt;/更新>; &lt;link href=&quot;https://chromakode.com/post/xkcd-machine/&quot;/>; &lt;作者>; &lt;名称>;chromakode&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=chromakode&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://vz-ab48ae95-d30.b -cdn.net/05b98682-71de-43ae-bbf6-758f67533faa/thumbnail_837890d0.jpg&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;Machine 是一部协作式大理石机器漫画，读者可以贡献单独的机器，然后将它们组装成一个巨大的装置。该项目涉及仔细的设计约束、用于显示目的的机器状态快照以及优化技术尽管有数千个模拟球，仍能确保流畅的性能。 >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40300454&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Symbolica 计算机代数系统&lt;/stitle>; &lt;id>;https://symbolica.io/&lt;/id>; &lt;更新>;2024 -05-09T04:00:21.649407Z&lt;/updated>; &lt;link href=&quot;https://symbolica.io/&quot;/>; &lt;作者>; &lt;name>;weinzierl&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=weinzierl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://symbolica.io/example1.svg&quot; style=&quot;width: 220px; height: 135px;&quot; />;&lt;br />;Symbolica 是一个符号数学库，提供与多种编程语言的绑定。它提供高级模式匹配和多项式代数例程。&lt;a href=&quot;https://hackernews.betacat.io /#symbolica-computer-algebra-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40297423&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Breathwork 支持更改的出现意识状态&lt;/stitle>; &lt;id>;https://www.researchsquare.com/article/rs-3976380/v1&lt;/id>; &lt;更新>;2024-05-08T20:00:21.649801Z&lt;/更新>; &lt;link href=&quot;https://www.researchsquare.com/article/rs-3976380/v1&quot;/>; &lt;作者>; &lt;名称>;rendx&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =rendx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;呼吸可以引起与改善健康相关的意识状态 (ASC) 改变，这些 ASC 的深度与随后的心理和生理益处相关。 &lt;a href=&quot;https://hackernews.betacat.io/#breathwork-supports-emergence-of-altered-states-of-意识&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40302200&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何使用 Java 22 中的外部函数 API 调用 C 库&lt;/stitle>; &lt;id>;https://ifesunmola.com/how-to- use-the-foreign-function-api-in-java-22-to-call-c-libraries/&lt;/id>; &lt;更新>;2024-05-08T16:00:21.650191Z&lt;/更新>; &lt;link href=&quot; https://ifesunmola.com/how-to-use-the-foreign-function-api-in-java-22-to-call-c-libraries/&quot;/>; &lt;作者>; &lt;名称>;pjmlp&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pjmlp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ifesunmola.com/how-to -use-the-foreign-function-api-in-java-22-to-call-c-libraries/featured.png&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;Java 的新外部函数和内存 API 允许开发人员调用外部函数，而无需手动编写 C 绑定。它为以前使用的 JNI 提供了更安全、更方便的替代方案。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-use-the-foreign-function-api-in-java-22-to-call-c-libraries&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40272514&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个竞相告诉世界珠穆朗玛峰已被攀登的人&lt;/stitle>; &lt;id>; https://www.outsideonline.com/outdoor-adventure/everest/everest-hillary-norgay-1953-news/&lt;/id>; &lt;更新>;2024-05-09T02:00:21.650574Z&lt;/更新>; &lt;link href =&quot;https://www.outsideonline.com/outdoor-adventure/everest/everest-hillary-norgay-1953-news/&quot;/>; &lt;作者>; &lt;名称>;rtrunck &lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=rtrunck&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.outsideonline.com/wp-content/uploads/2024/05 /1953-everest-team-norgay-peak_h.jpg&quot; style=&quot;宽度: 220px; 高度: 124px;&quot; />;&lt;br />;当丹增·诺尔盖 (Tenzing Norgay) 和埃德蒙·希拉里 (Edmund Hillary) 登顶珠峰创造历史时，一位名叫十·泽旺·夏尔巴 (Ten Tsewang Sherpa) 的信使跑 200 英里到加德满都传递消息。几周后他去世了。直到现在，他的故事从未被讲述过。 &lt;a href=&quot;https://hackernews.betacat.io/#a-man-who-raced-to-tell-the-world-that-mount-everest-had-been-climbed&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40303425&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Gittuf 保护 Git 存储库&lt;/stitle>; &lt;id>;https://lwn.net/SubscriberLink /972467/595a68b99f57a87d/&lt;/id>; &lt;更新>;2024-05-08T23:00:21.650974Z&lt;/更新>; &lt;link href=&quot;https://lwn.net/SubscriberLink/972467/595a68b99f57a87d/&quot;/>; &lt;作者>; &lt;name>;chmaynard&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=chmaynard&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //static.lwn.net/images/conf/2024/ossna/billy-lynch-sm.png&quot; style=&quot;宽度：220px；高度：273px；&quot; />;&lt;br />;Gittuf 是一个旨在通过添加密钥管理、策略执行和版本控制层保护等功能来增强 Git 安全性的项目。其目标包括验证策略合规性、确保参考状态日志的完整性以及对用户进行身份验证。该项目仍处于 alpha 阶段，但计划提高可用性并与现有工作流程集成。 &lt;a href=&quot;https://hackernews.betacat.io/#securing-git-repositories-with-gittuf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40303338&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我为 ChatGPT 构建了一个非线性 UI&lt;/stitle>; &lt;id>;https://www.grafychat.com&lt;/id>; &lt;更新>;2024-05- 08T17:00:21.651372Z&lt;/updated>; &lt;link href=&quot;https://www.grafychat.com&quot;/>; &lt;author>; &lt;name>;setnone&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=setnone&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.grafychat.com/og-image.png&quot; style=&quot;width: 220px;高度：116px；” />;&lt;br />;适用于 ChatGPT、Google AI、Local Llama 3 等的可视化笔记本。在画布上扩展您的想法并利用每个人工智能功能。带上您自己的 API 密钥并开始聊天。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-a-non-linear-ui-for-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40300126&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将 psql 的 \d 引入您的网络浏览器&lt;/stitle>; &lt;id>;https://neon.tech/blog/bringing-psqls- d-to-your-web-browser&lt;/id>; &lt;更新>;2024-05-08T21:00:21.651767Z&lt;/更新>; &lt;link href=&quot;https://neon.tech/blog/bringing-psqls-d -to-your-web-browser&quot;/>; &lt;作者>; &lt;名称>;gmac&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gmac&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fimage-34 .png&amp;w=3840&amp;q=85&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;作者实现了 psql 内省命令的 JavaScript 翻译，以使其能够在 Neon SQL 编辑器中使用。他利用正则表达式来识别 SQL 字符串中的注释、标识符和字符串文字。 &lt;a href=&quot;https://hackernews.betacat.io/#bringing-psqls-d-to-your-web-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40299761&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;半径全页显示&lt;/stitle>; &lt;id>;https://32by32.com/radius-full-page-display/&lt;/id>; &lt;更新>;2024 -05-08T22：00：21.652154Z &lt;/更新>; &lt;link href =“https://32by32.com/radius-full-page-display/”/>; &lt;作者>; &lt;名称>; mikerg87 &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=mikerg87&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://32by32.com/wp-content/uploads /1986-10_Macworld_067_Radius.png&quot; style=&quot;宽度：220px；高度：168px；&quot; />;&lt;br />;Apple 于 1987 年为 Macintosh 推出了第一款大型外部显示器，即全页显示器 (FPD)。 FPD 背后的公司 Radius 开发了定制软件，可以同时使用内部和外部屏幕。 &lt;a href=&quot;https://hackernews.betacat.io/#radius-full-page-display&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40273516&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Parquet 的诞生&lt;/stitle>; &lt;id>;https://sympathetic.ink/2024/01/24/Chapter-1-The-birth-of-Parquet.html&lt;/id >; &lt;更新>;2024-05-08T14:00:21.652534Z&lt;/更新>; &lt;link href=&quot;https://sympathetic.ink/2024/01/24/Chapter-1-The-birth-of-Parquet.html &quot;/>; &lt;author>; &lt;name>;whinvik&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=whinvik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://sympathetic.ink/assets/images/10-years/pig.png&quot; style=&quot;宽度：220px；高度：313px；&quot; />;&lt;br />;受 Dremel 论文启发，Parquet 作为一种列式数据存储格式出现。它通过与 Cloudera 的 Impala 团队合作而受到关注，并在主要数据仓库解决方案中得到广泛采用。 &lt;a href=&quot;https://hackernews.betacat.io/#the-birth-of-parquet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40284225&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;展示 HN：SimBricks – 硬件-软件系统的模块化全系统仿真&lt;/stitle>; &lt;id>;https://simbricks.github.io/&lt;/id>; &lt;更新>;2024- 05-09T00:00:21.652923Z&lt;/updated>; &lt;link href=&quot;https://simbricks.github.io/&quot;/>; &lt;作者>; &lt;name>;antoine-kaufm&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=antoine-kaufm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://simbricks.github.io/assets/images/overview_sys。 svg&quot;样式=&quot;宽度：220px；高度：103px；&quot; />;&lt;br />;SimBricks 是一个开源仿真框架，可实现异构系统的快速原型设计和性能评估。它以模块化方式结合了经过实战考验的模拟器，用于各种硬件和软件组件，以在模拟中运行完整的系统堆栈。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-simbricks-modular-full-system-simulation-for-hw-sw-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40303336&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;