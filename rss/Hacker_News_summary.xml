<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-02-25T20:00:49.897401Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;C 中的协程 (2000)&lt;/stitle>; &lt;id>;https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html&lt;/id>; &lt;更新>;2024-02-25T16:58:45.455600Z&lt;/更新>; &lt;link href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html&quot;/>; &lt;作者>; &lt;名称>;ColinWright &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ColinWright&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了连接数据生成和数据的复杂性- 消耗代码段，提出基于协程的解决方案以避免大量重组。尽管与编码标准存在潜在冲突，但最后还是使用宏在 C 中实现了协程。 &lt;a href=&quot;https://hackernews.betacat.io/#coroutines-in-c-2000&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39502276&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;展示 HN：使用 1,917 根电线对 Switch Lite 进行逆向工程&lt;/stitle>; &lt;id>;https://usoldering.com/switch-lite/&lt;/id>; &lt;更新>;2024-02 -25T14：58：45.457351Z &lt;/更新>; &lt;link href =“https://usoldering.com/switch-lite/”/>; &lt;作者>; &lt;名称>; uSoldering &lt;/名称>; &lt;uri>; https://news .ycombinator.com/user?id=uSoldering&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://usoldering.com/switch-lite/images/demo.jpg&quot; 样式=“宽度：220像素；高度：168像素；” />;&lt;br />;本文描述了一个独立开发的过程，用于从 Nintendo Switch Lite 逻辑板创建详细的网表，包括全景图像和用于数据输入的 GUI。作者强调了该项目涉及的广泛工作和资源，邀请贡献和反馈。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-reverse-engineering-a-switch-lite-with-1917-wires&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39501073&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从废旧锂离子电池中高效回收和再利用钴&lt;/stitle>; &lt;id>;https://pubs.acs.org/ doi/10.1021/acsomega.2c07780&lt;/id>; &lt;更新>;2024-02-25T16:58:45.457775Z&lt;/更新>; &lt;link href=&quot;https://pubs.acs.org/doi/10.1021/acsomega.2c07780 &quot;/>; &lt;作者>; &lt;名称>;Jimmc414&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Jimmc414&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#efficient-recovery-and-recycling-of-cobalt-from-spent-lithium-ion-batteries&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39502165&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Osquery：向 SQL 公开操作系统数据的 sqlite3 虚拟表&lt;/stitle>; &lt;id>;https://osquery.io/&lt;/ id>; &lt;更新>;2024-02-25T15:58:45.458166Z&lt;/更新>; &lt;link href=&quot;https://osquery.io/&quot;/>; &lt;作者>; &lt;名称>;signa11&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#osquery-an- sqlite3-virtual-table-exusing-operating-system-data-to-sql&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 39501281&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;Mamba 解释：变形金刚的状态空间模型&lt;/stitle>; &lt;id>;https://www.kolaayonrinde.com/blog/2024/02/11/mamba.html&lt;/id>; &lt;updated>;2024- 02-25T16:58:45.458569Z&lt;/更新>; &lt;link href=&quot;https://www.kolaayonrinde.com/blog/2024/02/11/mamba.html&quot;/>; &lt;作者>; &lt;名称>;koayon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=koayon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.kolaayonrinde.com /blog/images/mamba/snake.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Transformers 引领了人工智能的进步，但状态空间模型 (SSM) Mamba 承诺通过消除注意力机制中的二次瓶颈来实现类似的缩放，更好地处理长序列，并且最高可达 5 倍更快。Mamba 擅长各种模式，在语言建模方面优于 Transformer，具有高效的线性缩放和长序列的快速推理。&lt;a href=&quot;https://hackernews.betacat.io/#mamba-explained-the-state-space- model-take-on-transformers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39501982&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过更慢地构建设计系统来加快交付速度(2023)&lt;/stitle>; &lt;id>;https://bigmedium.com/ideas/design-system-pace-layers-slow-fast.html&lt;/id>; &lt;更新>;2024-02-25T15:58:45.459756Z &lt;/更新>; &lt;link href=&quot;https://bigmedium.com/ideas/design-system-pace-layers-slow-fast.html&quot;/>; &lt;作者>; &lt;name>;ohjeez&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ohjeez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://bigmedium.com/vids/pace-layers-one -orbit.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;设计系统团队常常感觉自己遇到了瓶颈，认为他们需要更快地交付才能满足产品团队的需求。成功的设计系统以审慎的速度前进，支持产品创新而不仓促，确保质量和稳定性。&lt;a href=&quot;https://hackernews.betacat.io/#ship-faster-by-building-design-systems-slower-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39501469&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DNS 层次结构的顶部&lt;/stitle>; &lt;id>;https://computer.rip/2024-02-11-the-top- of-the-DNS-hierarchy.html&lt;/id>; &lt;更新>;2024-02-25T13:58:45.460945Z&lt;/更新>; &lt;link href=&quot;https://computer.rip/2024-02-11-the -top-of-the-DNS-hierarchy.html&quot;/>; &lt;作者>; &lt;名称>;mrzool&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mrzool&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;本文讨论了互联网上去中心化系统的挑战，强调了比特币和 Tor 等系统依赖于中央节点进行初始连接。它还深入研究了 DNS 的层次性质及其根服务器的稳健性，这些都是必不可少的，但容易受到攻击。 &lt;a href=&quot;https://hackernews.betacat.io/#the-top-of-the-dns-hierarchy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39500500&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;旁注：3 年&lt;/stitle>; &lt;id>;https://www.marginalia.nu/log/a_101_marginalia-3-years/&lt;/id>; &lt;更新>;2024 -02-25T14：58：45.461723Z &lt;/更新>; &lt;link href =“https://www.marginalia.nu/log/a_101_marginalia-3-years/”/>; &lt;作者>; &lt;名称>;latexr &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=latexr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Marginalia 搜索已经从一个小实验发展成为一项全职工作，实现了里程碑，例如迁移到企业服务器和实施零停机升级。通过锚文本关键词，搜索引擎的相关性大大提高，索引从50-100M文档增长到220M文档。 &lt;a href=&quot;https://hackernews.betacat.io/#marginalia-3-years&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39501061&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;你在商场里几乎从来没有看到过时钟&lt;/stitle>; &lt;id>;https://thehustle.co/originals/why-you-almost-never-see-a-clock-at-the -mall&lt;/id>; &lt;更新>;2024-02-25T12:58:45.462120Z&lt;/更新>; &lt;link href=&quot;https://thehustle.co/originals/why-you-almost-never-see-a- Clock-at-the-mall&quot;/>; &lt;作者>; &lt;名称>;brycehalley&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=brycehalley&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://20627419.fs1.hubspotusercontent-na1.net/hub/20627419/hubfs/clock.gif?width=595&amp;height=400&amp;name=clock.gif&quot; style=&quot;宽度：220px ；高度：148px；&quot; />;&lt;br />;零售商和赌场使用的设计策略会导致“时间扭曲”，使顾客忘记时间并花费更多。这些方法植根于赌场实践，包括无干扰的环境和布局，鼓励更长时间的停留和更多的消费。 &lt;a href=&quot;https://hackernews.betacat.io/#you-almost-never-see-a-clock-at-the-mall&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39500263&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建具有资源需求的类似 Fly.io 的调度程序&lt;/stitle>; &lt;id>;https://www.aspiring.dev/fly-io -scheduler-part-2/&lt;/id>; &lt;更新>;2024-02-25T12:58:45.462511Z&lt;/更新>; &lt;link href=&quot;https://www.aspiring.dev/fly-io-scheduler-part -2/&quot;/>; &lt;作者>; &lt;名称>;dangoodmanUT&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dangoodmanUT&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com% 2Fpublic%2Fimages%2Fb3225257-f483-4141-9319-73ef1d3852b0_1686x1206.png&quot; style=&quot;宽度：220px；高度：158px；&quot; />;&lt;br />;本文通过添加指定任务要求（例如区域和计算槽）的功能来扩展基本的协调员-工作人员系统。它还概述了工作人员处理和跟踪这些需求的方法，以实现未来的可扩展性。 &lt;a href=&quot;https://hackernews.betacat.io/#building-a-fly-io-like-scheduler-with-resource-requirements&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39500397&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;晶格与曲柄&lt;/stitle>; &lt;id>;https://keymaterial.net/2024/02/24/lattices-vs-cranks/ &lt;/id>; &lt;更新>;2024-02-25T14:58:45.462872Z&lt;/更新>; &lt;link href=&quot;https://keymaterial.net/2024/02/24/lattices-vs-cranks/&quot;/>; &lt;作者>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了打破一个有缺陷的问题通过使用格数学和丢番图方程从其分数平方根恢复整数来构建密码系统。它批评了系统的低效率，并展示了解决此类问题的快速算法。 &lt;a href=&quot;https://hackernews.betacat.io/#lattices-vs-cranks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39496224&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;芯片防御&lt;/stitle>; &lt;id>;https://github.com/ochadenas/cpudefense&lt;/id>; &lt;更新>;2024-02-25T14:58:45.463246Z&lt;/更新>; &lt;link href=&quot;https://github.com/ochadenas/cpudefense&quot;/>; &lt;作者>; &lt;名称>;nichos&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nichos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/9dc9bf5bf227cf3f33ae4249fb6a710777161f13e1fff37c84ef6be73213068b/ochadenas/cpudefense&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;“Chip Defense”是一款 Android 塔防游戏，将电路设计与怀旧的 8 位处理器元素相结合。玩家建造并升级芯片“塔”来对抗攻击者，超过 50 个关卡和 18 名有影响力的计算英雄提供奖金。 &lt;a href=&quot;https://hackernews.betacat.io/#chip-defense&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39501262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;1973 年关于人工智能的 Lighthill 辩论：简介和文字记录&lt;/stitle>; &lt;id>;https://github.com/Dicklesworthstone/the_lighthill_debate_on_ai&lt;/id>; &lt;updated>;2024-02-25T14:58： 45.463609Z&lt;/更新>; &lt;link href=&quot;https://github.com/Dicklesworthstone/the_lighthill_debate_on_ai&quot;/>; &lt;作者>; &lt;名称>;特征值&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=特征值&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/Dicklesworthstone/the_lighthill_debate_on_ai/main/illlustration.webp&quot; style=&quot;width: 220 像素；高度：126 像素；&quot; />;&lt;br />;James Lighthill 1973 年的报告批评了英国的人工智能研究，导致资金削减并引发了与人工智能先驱者的争论。他的报告认为，人工智能的基本问题（例如自然语言理解）远未得到解决，这让人们对该领域的未来产生了怀疑。 &lt;a href=&quot;https://hackernews.betacat.io/#the-lighthill-debate-on-ai-from-1973-an-introduction-and-transcript&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39496160&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Readability.js&lt;/stitle>; &lt;id>;https://github.com/mozilla/readability&lt;/id>; &lt;更新>;2024-02-25T18:58:45.464051Z&lt;/updated>; &lt;link href=&quot;https://github.com/mozilla/readability&quot;/>; &lt;author>; &lt;name>;stefankuehnel&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=stefankuehnel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/75e40b799a2df824576eb7c7995e6114dedf1ebe1f21dd71749fd7fdb2df3e10/mozilla/readability&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;Readability.js 允许通过创建 Readability 对象并使用 parse() 方法来解析 Web 文档。它提供了可定制的内容提取选项，并需要对不受信任的输入进行清理。 &lt;a href=&quot;https://hackernews.betacat.io/#readability-js&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39503522&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;AOL 搜索器编号 4417749 (2006) 的一张脸被暴露&lt;/stitle>; &lt;id>;https://www.nytimes.com/2006/08/09/technology/09aol.html&lt;/id>; &lt;更新>;2024-02-25T09:58:45.464910Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2006/08/09/technology/09aol.html&quot;/>; &lt;作者>; &lt;名称>;acqbu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=acqbu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// static01.nyt.com/newsgraphics/images/icons/defaultPromoCrop.png?year=2006&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;AOL 发布的 2000 万条搜索查询暴露了 4417749 号用户的身份，泄露了位置和兴趣等个人详细信息。该事件凸显了隐私风险，美国在线随后对未经授权的数据泄露进行了道歉。 &lt;a href=&quot;https://hackernews.betacat.io/#a-face-is-expose-for-aol-searcher-no-4417749-2006&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39499167&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;档案软盘保存和使用[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v =UxsRpMdmlGo&lt;/id>; &lt;更新>;2024-02-25T07:58:45.465824Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=UxsRpMdmlGo&quot;/>; &lt;作者>; &lt;名称>;hggh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hggh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www. youtube.com/embed/UxsRpMdmlGo&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#archival-floppy-disk-preservation-and- use-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39495973&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;机构尝试保留其所解决的问题解决方案&lt;/stitle>; &lt;id>;https://effectiviology.com/shirky-principle/&lt;/id>; &lt;updated>;2024-02-24T19:58:45.466254Z&lt;/updated>; &lt;link href=&quot;https:// effectiviology.com/shirky-principle/&quot;/>; &lt;作者>; &lt;名称>;walterbell&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=walterbell&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://effectiviology.com/wp-content/uploads/Shirky-Principle.jpg”样式=“宽度：220px; height: 147px;&quot; />;&lt;br />;回避原则表明，机构等实体可能有意或无意地延续其本应解决的问题以保持相关性。示例包括报税公司游说反对免费报税方法和公交公司阻碍拼车计划。 &lt;a href=&quot;https://hackernews.betacat.io/#institutions-try-to-preserve-the-problem-to-which-they-are-the-solution&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39491863&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/条目>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Python 中的整洁并行输出&lt;/stitle>; &lt;id>;https://bernsteinbear。 com/blog/python-parallel-output/&lt;/id>; &lt;更新>;2024-02-25T07:58:45.466627Z&lt;/更新>; &lt;link href=&quot;https://bernsteinbear.com/blog/python-parallel-输出/&quot;/>; &lt;作者>; &lt;名称>;surprisetalk&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=surprisetalk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文描述了从单线程程序过渡到多线程程序以进行数据并行处理，这最初导致了难以处理的输出。然后，它解释了如何调整 StackOverflow 解决方案来整齐地重写控制台行，并强调由于共享资源而需要锁定。 &lt;a href=&quot;https://hackernews.betacat.io/#neat-parallel-output-in-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39490747&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;更快：快速持久可恢复日志和键值存储&lt;/stitle>; &lt;id>;https://github.com/microsoft/FASTER&lt;/id>; &lt;更新>;2024-02 -25T08:58:45.467022Z&lt;/更新>; &lt;link href=&quot;https://github.com/microsoft/FASTER&quot;/>; &lt;作者>; &lt;名称>;LAC-Tech&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=LAC-Tech&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/3491da81e7e68d5faa2712b4d189a9232d04b6f565127a2c4b3f9acc9ea80fb3/microsoft/FASTER&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;FASTER 项目提供高性能日志和键值存储来管理云中的大型应用程序状态。与类似的解决方案相比，它提供了显着的性能改进，并欢迎社区贡献。 &lt;a href=&quot;https://hackernews.betacat.io/#faster-fast-persistent-recoverable-log-and-key-value-store&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39496760&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;台积电在日本的建设比在美国的运气更好&lt;/stitle>; &lt;id>;https://www.economist.com/business/2024 /02/22/tsmc-is-having-more-luck-building-in-japan-than-in-america&lt;/id>; &lt;更新>;2024-02-25T08:58:45.467375Z&lt;/更新>; &lt;link href =&quot;https://www.economist.com/business/2024/02/22/tsmc-is-having-more-luck-building-in-japan-than-in-america&quot;/>; &lt;作者>; &lt;姓名>; helsinkiandrew&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=helsinkiandrew&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.helsinkiandrew&quot; economics.com/cdn-cgi/image/width=1424，quality=80，format=auto/content-assets/images/20240224_WBP003.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;这家全球领先的芯片生产商正在日本九州开设第一家工厂，并计划开设第二家工厂，而美国亚利桑那州工厂则因劳资纠纷和补贴问题而面临延误。日本的顺利经历归功于当地合作伙伴的支持和政府补贴，这与美国的繁文缛节和单独努力形成鲜明对比。 &lt;a href=&quot;https://hackernews.betacat.io/#tsmc-is-having-more-luck-building-in-japan-than-in-america&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39498863&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;幻觉是不可避免的：大型语言模型的先天限制&lt;/stitle>; &lt;id>;https://arxiv.org/abs /2401.11817&lt;/id>; &lt;更新>;2024-02-25T09:58:45.467727Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2401.11817&quot;/>; &lt;作者>; &lt;名称>;louthy&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=louthy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/ static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;文章认为，完全消除大型语言模型中的幻觉是不可能的，学习理论结果证明这些模型无法学习所有可计算函数。它还讨论了现实应用中幻觉的不可避免性，并评估了现有的缓解策略。 &lt;a href=&quot;https://hackernews.betacat.io/#hallucination-is-inevitable-an-innate-limitation-of-large-language-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39499207&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;隐性编程&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Tacit_programming&lt;/id>; &lt;更新>; 2024-02-25T04：58：45.468074Z &lt;/更新>; &lt;link href =“https://en.wikipedia.org/wiki/Tacit_programming”/>; &lt;作者>; &lt;名称>;托什&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;隐性编程避免了函数定义中的显式参数，有利于组合和组合器。它在 APL 等语言中使用，但可能被视为晦涩难懂。 &lt;a href=&quot;https://hackernews.betacat.io/#tacit-programming&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39480331&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;寄生虫感染与创业有关（2020）&lt;/stitle>; &lt;id>;https://journals.sagepub.com/doi/full/10.1177/1042258719890992&lt;/id>; &lt;更新>;2024-02-25T18 ：58：45.468424Z &lt;/更新>; &lt;link href =“https://journals.sagepub.com/doi/full/10.1177/1042258719890992”/>; &lt;作者>; &lt;名称>;贾恩斯&lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=jaawns&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#parasite-infection-is - Associated-with-entrepreneurship-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39503054&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;