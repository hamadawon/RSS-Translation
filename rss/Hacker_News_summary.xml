<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-25T13:57:08.885266Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;非交互式 SSH 密码身份验证&lt;/stitle>; &lt;id>;https://vincent.bernat.ch/en/blog/2023-sshpass-without-sshpass&lt;/id>; &lt;已更新>;2023-12-25T12:57:16.953606Z&lt;/已更新>; &lt;link href=&quot;https://vincent.bernat.ch/en/blog/2023-sshpass-without-sshpass&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;首先，一些供应商很难将用户的 SSH 密钥。然后，许多供应商不支持基于证书的身份验证，使其难以扩展。最后，公钥身份验证与 TACACS+ 和 Radius 等更细粒度的授权方法之间的交互仍然是未知领域。明文密码永远不会出现在命令行、环境或磁盘上，这使得没有提升权限的第三方很难捕获它。在 Linux 上，Zsh 通过文件描述符提供密码。要破译第四行，您可以从 print -l 和 zshexpn(1) 手册页获得帮助。详细信息是根据交替键和值的数组定义的关联数组。 &lt;a href=&quot;https://hackernews.betacat.io/#non-interactive-ssh-password-authentication&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38762214&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Zotero for Android 可用于 Beta 测试&lt;/stitle>; &lt;id>;https://forums.zotero.org/discussion/110371/available-for-beta-testing-zotero-for -android&lt;/id>; &lt;更新>;2023-12-25T08:55:16.955704Z&lt;/更新>; &lt;link href=&quot;https://forums.zotero.org/discussion/110371/available-for-beta-testing- zotero-for-android&quot;/>; &lt;author>; &lt;name>;pivic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pivic&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;Android 版 Zotero 现已推出 Beta 测试。该应用程序可以从 Google Play 商店安装。 &lt;a href=&quot;https://hackernews.betacat.io/#zotero-for-android-available-for-beta-tests&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38760864&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cray-1 与 Raspberry Pi&lt;/stitle>; &lt;id>;http://www.roylongbottom.org.uk/Cray%201%20Supercomputer%20Performance%20Comparisons% 20With%20Home%20Computers%20Phones%20and%20Tablets.htm&lt;/id>; &lt;更新>;2023-12-25T00:55:16.956133Z&lt;/更新>; &lt;link href=&quot;http://www.roylongbottom.org.uk /Cray%201%20Supercomputer%20Performance%20Comparisons%20With%20Home%20Computers%20Phones%20and%20Tablets.htm&quot;/>; &lt;author>; &lt;name>;stare_spb&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=stare_spb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文提供了 Cray-1 超级计算机和 Raspberry Pi 之间的全面基准比较。 Raspberry Pi 的价格约为 70 美元，重几盎司，比 1978 年世界上最快的计算机 Cray-1 快 4.5 倍以上。 io/#cray-1-vs-raspberry-pi&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38758355&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;星星– Arthur C. Clarke (1967) [pdf]&lt;/stitle>; &lt;id>;https://sites.uni.edu/morgans/astro/course/TheStar.pdf&lt;/id>; &lt;更新>;2023-12-25T03： 55:16.956548Z&lt;/updated>; &lt;link href=&quot;https://sites.uni.edu/morgans/astro/course/TheStar.pdf&quot;/>; &lt;作者>; &lt;name>;Yhippa&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=Yhippa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;叙述者是一位耶稣会天体物理学家，他对凤凰星云的发现感到困扰，并质疑自己的信仰。他反思了一个文明的毁灭，留下了一座纪念碑，希望被人们铭记。 &lt;a href=&quot;https://hackernews.betacat.io/#the-star-arthur-c-clarke-1967-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38759297&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;星座比大陆年轻&lt;/stitle>; &lt;id>;https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-Continents &lt;/id>; &lt;更新>;2023-12-25T05:55:16.956947Z&lt;/更新>; &lt;link href=&quot;https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-Continents&quot; />; &lt;作者>; &lt;名称>;dash2&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dash2&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://res.cloudinary.com/lesswrong-2-0/image/upload/f_auto,q_auto/v1/mirroredImages/YMakfmwZsoLdXAZhb/ludi38yzgzmyofl9xw5o&quot; style=&quot;宽度：220px；高度：300px；&quot; />;&lt;br />;星座是星星在夜空中形成的图案。它们比大陆更年轻，变化的时间尺度为数万年或数十万年。猎户座是一个不寻常的星座，其恒星属于恒星协会，而且很年轻，最多大约 1200 万年。 &lt;a href=&quot;https://hackernews.betacat.io/#constellations-are-younger-than-Continents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38760131&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Ruby 3.3&lt;/stitle>; &lt;id>;https://www.ruby-lang.org/en/news/2023/12/25/ruby-3-3-0-发布/&lt;/id>; &lt;更新>;2023-12-25T07:55:16.957346Z&lt;/更新>; &lt;link href=&quot;https://www.ruby-lang.org/en/news/2023/12/25/ ruby-3-3-0-released/&quot;/>; &lt;作者>; &lt;名称>;dduugg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dduugg&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;Ruby 3.3 添加了一个名为 Prism 的新解析器，使用 Lrama 作为解析器生成器，添加了一个名为 RJIT 的新纯 Ruby JIT 编译器，以及许多性能改进，尤其是 YJIT。引入了 Prism 解析器作为默认 gem。与 Ruby 3.2 相比，内存使用率显着提高。引入了 M:N 线程调度程序。对垃圾收集器的多项性能改进。许多核心类型都实现了写屏障。大多数核心类现在都使用可变宽度分配。此外，IRB 还进行了广泛的重构并修复了数十个错误。 Ruby 最初由 Matz (Yukihiro Matsumoto) 于 1993 年开发，现在作为开源开发。它可以在多个平台上运行，并在世界各地使用，特别是用于 Web 开发。 &lt;a href=&quot;https://hackernews.betacat.io/#ruby-3-3&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38760477&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;数学恐吓：由数据驱动 (2011) [pdf]&lt;/stitle>; &lt;id>;https://www.ams.org/notices/201105/rtx110500667p.pdf&lt;/id>; &lt;更新>;2023-12-25T10:55:16.957760Z&lt;/更新>; &lt;link href=&quot;https://www.ams.org/notices/201105/rtx110500667p.pdf&quot;/>; &lt;作者>; &lt;名称>;dedalus&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dedalus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;数学恐吓是滥用数学作为说服公众的修辞武器一个想法或过程是“客观的”并且是优越的。用于解释教育测试数据的增值建模（VAM）是数学恐吓的一个例子。然而，VAM 有许多局限性，其有效性通常&lt;a href=&quot;https://hackernews.betacat.io/#mathematical-intimidation-driven-by-the-data-2011-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38746954&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;按汽车品牌细分故障：底部特斯拉已取代达西亚&lt;/stitle>; &lt;id>;https ://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference&lt;/id>; &lt;更新>;2023-12-25T08:55:16.958173Z&lt; /updated>; &lt;link href=&quot;https://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference&quot;/>; &lt;作者>; &lt;名称>; tckr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tckr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews. betacat.io/#breakdown-of-faults-by-car-brand-tesla-has-replaced-dacia-at-the-bottom&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=38760933&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国电脑杂志的时代已经结束&lt;/stitle>; &lt;id>;https://bytecellar.com/2023/12/23/the- era-of-american-computer-magazines-has-drawn-to-a-close/&lt;/id>; &lt;更新>;2023-12-24T23:55:16.958569Z&lt;/更新>; &lt;link href=&quot;https:// bytecellar.com/2023/12/23/the-era-of-american-computer-magazines-has-drawn-to-a-close/&quot;/>; &lt;author>; &lt;name>;ecliptik&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://bytecellar.com/wp-content/uploads/2023 /12/bootmpc_1280.jpg&quot; style=&quot;宽度: 220px; height: 165px;&quot; />;&lt;br />;美国计算机杂志的时代已经结束，Maximum PC 和 MacLife 放弃印刷版。这标志着近半个世纪的计算机新闻时代的结束。&lt;a href= “https://hackernews.betacat.io/#the-era-of-american-computer-magazines-has-drawn-to-a-close” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38757887&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;太便宜而无法计量的电&lt;/stitle>; &lt;id>;https://shkspr.mobi/blog/2023/12/electricity-thats-太便宜到米/&lt;/id>; &lt;更新>;2023-12-25T12:55:16.959332Z&lt;/更新>; &lt;link href=&quot;https://shkspr.mobi/blog/2023/12/electricity- thats-too-cheap-to-meter/&quot;/>; &lt;author>; &lt;name>;edent&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=edent&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2023/12/plunge-price-fs8.png&quot; style=&quot;width: 220px; height: 131px;&quot; />;&lt;br />;核电被作为一种安全、清洁且经济上可行的电力来源出售，但它并没有兑现“太便宜而无法计量”的承诺。建设和退役核电站成本高昂，电价持续上涨。相比之下，风能等可再生能源提供了充足的电力，甚至向消费者付费使用。&lt;a href=&quot;https://hackernews .betacat.io/#electricity-that-s-too-cheap-to-meter&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38762113&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;我告诉空乘人员“WiFi 无法使用”&lt;/stitle>; &lt;id>;https://x.com/erratarob/status/1739132876732674539?s=46&amp;t=FFxXRm_qmWG4nJwsccRUbA&lt;/id>; &lt;更新>;2023-12-25T12:55:16.959729Z&lt;/更新>; &lt;link href=&quot;https://x.com/erratarob/status/1739132876732674539?s=46&amp;t=FFxXRm_qmWG4nJwsccRUbA&quot;/>; &lt;作者>; &lt;名称>;jonathanzufi&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=jonathanzufi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们解决吧另一个镜头。 &lt;a href=&quot;https://hackernews.betacat.io/#i-told-the-flight-attendant-the-wifi-isn-t-working&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38762065&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：2023 年 12 月如何在我自己的文档上训练自定义 LLM/ChatGPT？&lt;/stitle>; &lt;id>;https: //news.ycombinator.com/item?id=38759877&lt;/id>; &lt;更新>;2023-12-25T04:55:16.960130Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item ?id=38759877&quot;/>; &lt;作者>; &lt;名称>;divan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=divan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;向 LLM 提供一组自定义文档并在 2023 年 12 月获得非幻觉且不错的结果的最佳方法是使用 RAG。 Llamaindex 是为此目的推荐的选项。不建议对文档进行培训，因为它不会产生良好的结果。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-how-do-i-train-a-custom-llm-chatgpt-on-my-own-documents-in-dec-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38759877&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;游戏开发者的 C++20 顽皮和友善列表&lt;/stitle >; &lt;id>;https://www.jeremyong.com/c++/2023/12/24/cpp20-gamedev-naughty-nice/&lt;/id>; &lt;更新>;2023-12-25T05:55:16.960525Z&lt;/更新>; &lt;link href=&quot;https://www.jeremyong.com/c++/2023/12/24/cpp20-gamedev-naughty-nice/&quot;/>; &lt;作者>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文提供了游戏开发者应考虑使用的 C++20 功能列表以及他们所使用的功能应该避免。作者承认个人喜好和编码实践可能会有所不同，并鼓励读者得出自己的结论。 &lt;a href=&quot;https://hackernews.betacat.io/#the-c-20-naughty-and-nice-list-for-game-devs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38760120&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;改革 Unix&lt;/stitle>; &lt;id>;https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix。 adoc&lt;/id>; &lt;更新>;2023-12-25T04:55:16.960917Z&lt;/更新>; &lt;link href=&quot;https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix.adoc&quot;/ >; &lt;author>; &lt;name>;Ericson2314&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Ericson2314&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Unix 很糟糕。但文件描述符很好。现代 Unix 派生操作系统（Linux、某些 BSD）已经开始向所有事物采用文件描述符。 Capsicum 进一步展示了我们如何禁用大量全局命名空间，以便我们可以简单而优雅地依赖文件描述符。现在我们只需要完成这项工作，进行一些新的系统调用，以便在没有全局命名空间的情况下更好地工作 &lt;a href=&quot;https://hackernews.betacat.io/#reforming-unix&quot; target=&quot;_blank&quot;>;[summary ]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38759875&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Ubuntu 进行 x86-64 汇编语言编程 (2022)&lt;/stitle>; &lt;id>;http://www .egr.unlv.edu/~ed/x86.html&lt;/id>; &lt;更新>;2023-12-24T23:55:16.961299Z&lt;/更新>; &lt;link href=&quot;http://www.egr.unlv.edu /~ed/x86.html&quot;/>; &lt;作者>; &lt;名称>;generichuman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=generic human&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;http://www.egr.unlv.edu/~ed/asmCover.jpg&quot; style=&quot;宽度：220px；高度：284px；&quot; />;&lt;br />;本文作为汇编语言和系统编程课程的参考，重点关注 x86-64 指令集和 Ubuntu 64 位操作系统。 &lt;a href=&quot;https://hackernews.betacat.io/#x86-64-assemble-language-programming-with-ubuntu-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38758063&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Neocities – 开发者 API&lt;/stitle>; &lt;id>;https://neocities.org/api&lt;/id>; &lt;更新>;2023-12-25T10： 55:16.961686Z&lt;/updated>; &lt;link href=&quot;https://neocities.org/api&quot;/>; &lt;作者>; &lt;name>;ulrischa&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=ulrischa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://neocities.org/img/cat.png&quot; style=&quot;width: 220px; height: 182px; ” />;&lt;br />;Neocities API 是一个 REST API，允许用户与其 Neocities 网站进行交互。它使用查询参数进行输入并以 JSON 格式返回数据。该API支持上传文件、删除文件、检索网站信息以及生成API密钥等各种操作。 &lt;a href=&quot;https://hackernews.betacat.io/#neocities-developers-api&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38752435&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;我的第一个 Z80 汇编语言程序&lt;/stitle>; &lt;id>;https://nanochess.org/notebook.html&lt;/id>; &lt;updated>;2023-12-25T08:55:16.962495Z&lt;/已更新>; &lt;link href=&quot;https://nanochess.org/notebook.html&quot;/>; &lt;作者>; &lt;name>;AlexeyBrin&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=AlexeyBrin &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://nanochess.org/img/notebook/notebook_cover.jpg&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;我找到了我 1986 年至 1989 年的旧蓝色笔记本，并发现了我丢失的第二个笔记本，我在其中放置了我的第一个 Z80 汇编语言程序。我拍了重要页面的照片，以防我再次丢失笔记本。 &lt;a href=&quot;https://hackernews.betacat.io/#my-first-z80-assemble-language-program&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38753170&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;罗德岛复古计算协会&lt;/stitle>; &lt;id>;https://rcsri.org/rcs-info.shtml&lt;/id>; &lt;更新>;2023-12 -25T02:55:16.963265Z&lt;/updated>; &lt;link href=&quot;https://rcsri.org/rcs-info.shtml&quot;/>; &lt;作者>; &lt;name>;notpachet&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=notpachet&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;罗德岛复古计算协会致力于保存历史计算机并提高计算机历史意识。他们恢复历史系统并作为老式计算机爱好者的用户组。 &lt;a href=&quot;https://hackernews.betacat.io/#retro-computing-society-of-rhode-island&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38759057&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;欢迎使用 Chata 编程语言&lt;/stitle>; &lt;id>;https://github.com/Slackadays/Chata&lt;/id>; &lt;更新>;2023-12-25T03： 55:16.963643Z&lt;/updated>; &lt;link href=&quot;https://github.com/Slackadays/Chata&quot;/>; &lt;作者>; &lt;name>;netr0ute&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=netr0ute&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/e7aed6b7e51cb571bf2fb68afe859abd2c539e69826b830b466bd9b241f50efd/Slackadays/Chata&quot; style=&quot;width: 220px;高度：110px；” />;&lt;br />;Chata 是一种专用于数字信号处理 (DSP) 的编程语言，旨在简化 DSP 任务并消除对专用工具的需求。它为创意表达和解决问题提供了强大的生态系统。 Chata 与 SOUL、Cmajor 和 Faust 等其他 DSP 语言的区别在于它提供灵活性、多个工具链选项以及对命令式编程的关注。 &lt;a href=&quot;https://hackernews.betacat.io/#welcome-to-the-chata-programming-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38759392&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;英语曾经有过“you”的正式版本吗？ （2011）&lt;/stitle>; &lt;id>;https://english.stackexchange.com/questions/9780/did-english-ever-have-a-formal-version-of-you&lt;/id>; &lt;更新>;2023- 12-24T18:55:16.964034Z&lt;/更新>; &lt;link href=&quot;https://english.stackexchange.com/questions/9780/did-english-ever-have-a-formal-version-of-you&quot;/ >; &lt;作者>; &lt;名称>;ent101&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ent101&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://cdn.sstatic.net/Img/teams/teams-illo-free-sidebar-promo.svg?v=47faa659a05e”样式=“宽度：220px；高度：181px；” />;&lt;br />;英语过去确实有“you”的正式版本，“thou”是非正式版本。然而，随着时间的推移，礼貌形式的“you”变得更加常见，并最终完全取代了“thou”。 &lt;a href=&quot;https://hackernews.betacat.io/#did-english-ever-have-a-formal-version-of-you-2011&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38755412&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;告诉HN：圣诞快乐&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=38759092&lt;/ id>; &lt;更新>;2023-12-25T02:55:16.964415Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=38759092&quot;/>; &lt;作者>; &lt;名称>;LorenDB&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;大家圣诞快乐。我希望您能有一些时间来回顾这一年，回顾我们正在经历的疯狂变化，以及我们共同努力让这个伟大的社区变得更好。 &lt;a href=&quot;https://hackernews.betacat.io/#tell-hn-merry-christmas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38759092&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;无声动画之王&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/12/19/nyregion/stathes-vintage-cartoons.html&lt;/id>; &lt;更新>;2023-12-25T02:55:16.965181Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/12/19/nyregion/stathes-vintage-cartoons.html&quot;/>; &lt;作者>; &lt;名称>;棱柱形&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=prismatic&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://static01.nyt.com/images/2023/12/12/nyregion/00vintage-cartoons5/00vintage-cartoons5-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;宽度：220px；高度：147px ;” />;&lt;br />;Tommy José Stathes 收藏了约 4,000 部经典动画片，使其成为世界上最大的早期动画电影收藏之一。他定期搜索特定剪辑以在纽约市的一家电影院举办活动。 &lt;a href=&quot;https://hackernews.betacat.io/#the-king-of-silent-animation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38738144&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;T-Mobile 从 1 月 1 日起对违反“行为准则”的行为处以罚款&lt;/stitle>; &lt;id>;https://support.bandwidth.com/hc/en-us/articles /19939626519575-New-non-compliance-fees-on-January-1&lt;/id>; &lt;更新>;2023-12-25T09:55:16.965950Z&lt;/更新>; &lt;link href=&quot;https://support.bandwidth. com/hc/en-us/articles/19939626519575-New-non-compliance-fees-on-January-1&quot;/>; &lt;作者>; &lt;名称>;Baldbvrhunter &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=Baldbvrhunter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#t-mobile-introduce-fines-from-jan -1-for-code-of-conduct-violations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38761131&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;YM3812 注册基础知识&lt;/stitle>; &lt;id>;https://www.thingsmadesimple.com/2022/11/28/ym3812-part-1-register-basics/&lt;/id>; &lt;更新>;2023-12-25T05:55:16.966362 Z&lt;/updated>; &lt;link href=&quot;https://www.thingsmadesimple.com/2022/11/28/ym3812-part-1-register-basics/&quot;/>; &lt;作者>; &lt;name>;brudgers&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=brudgers&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.thingsmadesimple.com/wp -content/uploads/2022/11/YM_ComparisonCahrt-1024x667.png&quot; style=&quot;width: 220px; height: 144px;&quot; />;&lt;br />;Yamaha 的 YM3812 OPL2 声音芯片是构建 Eurorack 模块的一个很好的起点。本文探讨了该芯片的属性，并为以后设计硬件和编写微控制器的文章奠定了基础代码。 &lt;a href=&quot;https://hackernews.betacat.io/#ym3812-register-basics&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38751363&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;彼得罗夫：住在门多西诺县树林里的男人&lt;/stitle>; &lt;id>;https://www.ukiahdailyjournal.com/2022/08/02/petrov-the-man- who-lived-in-the-woods/&lt;/id>; &lt;更新>;2023-12-25T05:55:16.966742Z&lt;/更新>; &lt;link href=&quot;https://www.ukiahdailyjournal.com/2022/08/ 02/petrov-the-man-who-lived-in-the-woods/&quot;/>; &lt;作者>; &lt;名称>;鼻子&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nose &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/www.ukiahdailyjournal.com/wp-content/uploads/2022/08/HENDYHERMIT3.jpg ?fit=620%2C9999px&amp;ssl=1&quot; style=&quot;宽度：220px;身高：165px;&quot; />;&lt;br />;彼得罗夫，又名亨迪隐士，在安德森谷附近的树林里生活了约20年。他是一名俄罗斯陆军士兵，在二战中被纳粹俘虏后来作为流离失所者来到美国。&lt;a href=&quot;https://hackernews.betacat.io/#petrov-a-man-who-lived-in-the-woods-of-mendocino-county&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38760193&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/条目>; &lt;/提要>;