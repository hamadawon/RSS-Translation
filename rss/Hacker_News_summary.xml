<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-11-08T13:56:35.117782Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;维基百科成为互联网上最后一个好地方&lt;/stitle>; &lt;id>;https://www.cambridge.org/core/journals/american-political-science-review/article /规则模糊性机构冲突和人口损失如何维基百科成为互联网上最后的好地方/FC3F7B9CBF951DD30C2648E7DEFB65EE&lt;/id>; &lt;更新>;2023-11-08T13:15 ：23.543037Z&lt;/更新>; &lt;link href=&quot;https://www.cambridge.org/core/journals/american-political-science-review/article/rule-ambiguity-institutional-clashes-and-population-loss-维基百科如何成为互联网上最后一个好地方/FC3F7B9CBF951DD30C2648E7DEFB65EE&quot;/>; &lt;作者>; &lt;名称>;bawolff&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=bawolff&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a9/Google_Scholar_logo_2015.PNG&quot; style=&quot;width ：220像素； height: 85px;&quot; />;&lt;br />;本文以英文维基百科为案例，探讨了制度变迁如何通过人口流失而内生发生。结果表明，随着时间的推移，维基百科从一个可疑的信息来源转变为可靠的信息来源，因为某些类型的编辑离开，而其他类型的编辑留下来。这种人口流失导致了对维基百科规则的重新解释，并转向揭穿边缘内容&lt;a href=&quot;https://hackernews.betacat.io/#wikipedia-became-the-互联网上的最后好地方&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38189878&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;家庭助理被阻止与车库门开启器 API 集成&lt;/stitle>; &lt;id>;https://www.home-assistant.io/blog/2023/11/06/removal-of-myq-integration/&lt;/id>; &lt;updated>;2023 -11-08T09:56:23.545414Z&lt;/更新>; &lt;link href=&quot;https://www.home-assistant.io/blog/2023/11/06/removal-of-myq-integration/&quot;/>; &lt;作者>; &lt;name>;eamonnsullivan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=eamonnsullivan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://www.home-assistant.io/images/default-social.png&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;MyQ 集成将于 2023 年 12 月 6 日发布的 2023.12 版本中从 Home Assistant 中删除。MyQ 的所有者 Chamberlain Group 已发布公开声明，表示他们将继续阻止对第三方的访问-派对应用程序，例如 MyQ 集成。 &lt;a href=&quot;https://hackernews.betacat.io/#home-assistant-blocked-from-integrating-with-garage-door-opener-api&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38188162&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Opusmodus：Common Lisp 音乐作曲系统&lt;/stitle>; &lt;id>;https://opusmodus。 com/&lt;/id>; &lt;更新>;2023-11-08T11:56:23.545926Z&lt;/更新>; &lt;link href=&quot;https://opusmodus.com/&quot;/>; &lt;作者>; &lt;名称>;zetalyrae&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zetalyrae&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opusmodus.com/img/om3 -4-1.png&quot; style=&quot;宽度: 220px; height: 124px;&quot; />;&lt;br />;Opusmodus 将传统记谱与现代概念相融合，并简化最终乐谱的路径，彻底改变了音乐创作。它为音乐事件提供了脚本语言，允许作曲家转换、扩展和重新组织音乐使用强大的计算机算法进行的活动。&lt;a href=&quot;https://hackernews.betacat.io/#opusmodus-common-lisp-music-composition-system&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38188788&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Chamberlain 阻止智能车库门开启器与智能家居配合使用&lt;/stitle>; &lt;id>;https://arstechnica.com/gadgets/2023/11 /chamberlain-blocks-smart-garage-door-opener-from-working-with-smart-homes/&lt;/id>; &lt;更新>;2023-11-08T10:56:23.546429Z&lt;/更新>; &lt;link href=&quot;https ://arstechnica.com/gadgets/2023/11/chamberlain-blocks-smart-garage-door-opener-from-working-with-smart-homes/&quot;/>; &lt;作者>; &lt;名称>;vintgedave&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=vintagedave&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-内容/上传/2023/11/2019myQ-LM-Ware233-800x389.jpg&quot; style=&quot;width: 220px; height: 107px;&quot; />;&lt;br />;热门车库门开启器品牌的所有者张伯伦集团 (Chamberlain Group) 不鼓励客户将其智能车库门开启器与第三方智能家居应用程序一起使用。他们已决定防止未经授权的使用通过第三方应用程序构建 myQ 生态系统，以提高性能和可靠性。&lt;a href=&quot;https://hackernews.betacat.io/#chamberlain-blocks-smart-garage-door-opener-from-working-with -smart-homes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38188614&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;他们不会接受难以接受的事实告诉你有关软件工程师的工作&lt;/stitle>; &lt;id>;https://www.mensurdurakovic.com/hard-to-swallow-truths-they-wont-tell-you-about-software-engineer-job/&lt;/id >; &lt;更新>;2023-11-08T10:56:23.546934Z&lt;/更新>; &lt;link href=&quot;https://www.mensurdurakovic.com/hard-to-swallow-truths-they-wont-tell-you-about -software-engineer-job/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://images.unsplash.com/photo-1589495374906-b7f5ca5de879?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3wxMTc3M3wwfDF8c2VhcmNofDE4fHxwdXp6bGV8ZW58MHx8fH wxNjk2Nzk1MDYwfDA&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=1200&quot; 样式= “宽度：220px； height: 165px;&quot; />;&lt;br />;本文讨论了关于软件工程师工作的误解和残酷事实。它强调了大学教育与现实工作要求之间的差距、对干净代码缺乏认可、存在不称职的同事、普遍存在的效率低下的会议、估计项目时间表的不确定性、不可避免的错误、与工作脱节的困难、软技能的重要性以及长时间工作和工作不稳定的挑战。&lt;a href=&quot; https://hackernews.betacat.io/#hard-to-swallow-truths-they-won-t-tell-you-about-software-engineer-job&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38188689&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;官方认证 – Ferrocene&lt;/stitle>; &lt;id>;https://ferrous-systems.com/blog/officially-qualified-ferrocene /&lt;/id>; &lt;更新>;2023-11-08T10:56:23.547456Z&lt;/更新>; &lt;link href=&quot;https://ferrous-systems.com/blog/officially-qualified-ferrocene/&quot;/>; &lt;作者>; &lt;name>;jamincan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jamincan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //ferrous-systems.com/images/blog/bookcover_blog_post_announcement.svg&quot; style=&quot;width: 220px; height: 307px;&quot; />;&lt;br />;我们获得了开源 Ferrocene 工具链的资格，使其完全可以在安全关键环境中使用。这是 Rust 编译器的第一个资格，允许 Rust 在批量生产的道路车辆中使用和工业系统。&lt;a href=&quot;https://hackernews.betacat.io/#officially-qualified-ferrocene&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38188734&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;数字图书馆创世纪：绘制知识的地下流动图 (2018) [pdf]&lt;/stitle>; &lt;id>;https://direct.mit.edu/books/oa-edited -volume/3600/chapter/120592/Library-Genesis-in-Numbers-Mapping-the-Underground&lt;/id>; &lt;更新>;2023-11-08T05:56:23.547981Z&lt;/更新>; &lt;link href=&quot;https: //direct.mit.edu/books/oa-edited-volume/3600/chapter/120592/Library-Genesis-in-Numbers-Mapping-the-Underground&quot;/>; &lt;作者>; &lt;名称>;simonpure&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=simonpure&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mitp.silverchair-cdn.com/ mitp/content_public/books/3600/parts/cbc/5/9780262345699_cbc.pdf.gif?Expires=1702452563&amp;Signature=vAnlwfgOVtMc9kGUNdNqeRB6cunKpYAyCMH3PDLTIy7w-xCkE~mW3Kw3svK77dGrwUiz RyGnpmg6cFHRKhoJI-RlMgmcqC1~WfZwvN0iRqbn5gK6fBapwax3KU-pREAk7MhzADlU7va1mluPV-edI5JFPgyUTEB41WCVPjBVrhAjosVkD-cXTwBFGoh4dX1414N4X9PZcZIkOxbEX3GoEpGPMRroKf mR~uNmvJvfcf5N1DOSczKQ5J6o89B1l82Db-IWG~BBnJ11g0SRFr9IzG6zzIEsdEt~CroNcQyt3oysn35tiz6KctOIvPD0Qnv-370nyvpaeybu4FDVxJwPYQ__&amp;Key- Pair-Id=APKAIE5G5CRDK6RD3PGA&quot; style=&quot;width: 220px;高度：283px;&quot; />;&lt;br />;Balázs Bodó，2018。《数字图书馆创世纪：绘制知识的地下流动图》，Shadow Libraries，Joe Karaganis &lt;a href=&quot;https://hackernews .betacat.io/#library-genesis-in-numbers-mapping-the-underground-flow-of-knowledge-2018-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38155524&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大多数视频游戏艺术作品将永远不会被看到&lt;/stitle>; &lt;id>;https://aftermath.site/most-video-game-artwork-will-never-被看到&lt;/id>; &lt;更新>;2023-11-08T08:56:23.548474Z&lt;/更新>; &lt;link href=&quot;https://aftermath.site/most-video-game-artwork-will-never-be -seen&quot;/>; &lt;作者>; &lt;名称>;isaacfrond&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=isaacfrond&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://lede-admin.aftermath.site/wp-content/uploads/sites/55/2023/10/warehouse.png?resize=2880,1620&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;视频游戏行业的艺术家在分享作品方面面临限制，只有一小部分专业作品被允许公开展示。严格的游戏归属和所有权规则艺术导致许多艺术家的作品集出现缺口。虽然将游戏艺术保密的一些商业原因是有道理的，但权力不平衡阻碍了艺术家&lt;a href=&quot;https://hackernews.betacat.io/#most- video-game-artwork-will-never-be-seen&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38187972&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;传奇半导体物理学家Simon Sze去世&lt;/stitle>; &lt;id>;https://www.legacy.com/us/obituaries/sfgate/name/simon-sze-obituary?id=53535445&lt;/id>; &lt;updated>;2023-11 -08T08:56:23.548965Z&lt;/更新>; &lt;link href=&quot;https://www.legacy.com/us/obituaries/sfgate/name/simon-sze-obituary?id=53535445&quot;/>; &lt;作者>; &lt;名称>;paramahans&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=paramahans&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// cache.legacy.net/legacy/images/cobrands/sfgate/photos/S0200426-1_20231107.jpgx?w=499&amp;h=499&amp;option=3&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;半导体物理与技术领域的远见卓识施西蒙博士去世，享年87岁。他对电子和半导体器件领域的卓越贡献将被人们铭记和铭记。珍惜。&lt;a href=&quot;https://hackernews.betacat.io/#legendary-semiconductor-physicalist-simon-sze-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38188108&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;学习jq的互动示例&lt;/stitle>; &lt;id>;https://ishan.page/blog/2023-11-06-jq-by-example /&lt;/id>; &lt;更新>;2023-11-08T02:56:23.549448Z&lt;/更新>; &lt;link href=&quot;https://ishan.page/blog/2023-11-06-jq-by-example/&quot; />; &lt;author>; &lt;name>;ishandotpage&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ishandotpage&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://ishan.page/blog/2023-11-06-jq-by-example/numbers_hu3d03a01dcc18bc5be0e67db3d8d209a6_3139920_800x0_resize_q75_box.jpg&quot; style=&quot;width: 220px; height: 121px;&quot; />;&lt;br />;jq 是一个用于提取和操作 JSON 数据的强大工具。它可以用于与 API 集成、转换数据格式、从网站提取数据以及管理类似 JSON 的配置。jq 提供各种用于过滤、映射、分割和格式化 JSON 数据的函数和过滤器。它对于统计分析和分组操作也很有用。总的来说，jq 是一个多功能工具，可以大大简化 JSON 数据的处理。 &lt;a href=&quot; https://hackernews.betacat.io/#interactive-examples-for-learning-jq&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=38186153&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;哦，我糟糕的业务逻辑&lt;/stitle>; &lt;id>;https://rednafi.com/misc/oh_my_poor_business_logic/&lt;/id>; &lt;updated>;2023-11-08T01:56:23.550418Z&lt;/updated >; &lt;link href=&quot;https://rednafi.com/misc/oh_my_poor_business_logic/&quot;/>; &lt;作者>; &lt;name>;nalgeon&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nalgeon &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rednafi.com/images/home/cover.webp&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;采用现有工具并在业务领域快速迭代是被低估的。过于关注技术细节或引入不必要指标的公司可能会阻碍核心业务逻辑的发展。 &lt;a href=&quot; https://hackernews.betacat.io/#oh-my-poor-business-logic&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=38159363&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;极简主义可供性：做出正确的权衡&lt;/stitle>; &lt;id>;https://lea.verou.me/blog/2023/minimalist-affordances/&lt;/id>; &lt;updated>;2023-11-08T06 ：56：23.551444Z &lt;/更新>; &lt;link href=&quot;https://lea.verou.me/blog/2023/minimalist-affordances/&quot;/>; &lt;作者>; &lt;名称>;marban &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=marban&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lea.verou.me/blog/2023/minimalist -affordances/images/old-comment.png&quot; style=&quot;width: 220px; height: 83px;&quot; />;&lt;br />;可用性和美观有时会不一致，为了美观而牺牲了易学性。新的 Github 评论 UI 合并了文本字段和选项卡，导致难以识别和使用。用户界面中的通信依赖于关于惯例和隐喻，但新惯例需要广泛采用才能有效。&lt;a href=&quot;https://hackernews.betacat.io/#minimalist-affordances-making-the-right-tradeoffs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38160540&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;翻滚&lt;/stitle>; &lt;id>;http://tumbleforth.hardcoded.net/&lt;/id >; &lt;更新>;2023-11-07T23:56:23.551933Z&lt;/更新>; &lt;link href=&quot;http://tumbleforth.hardcoded.net/&quot;/>; &lt;作者>; &lt;名称>;jtoledo&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=jtoledo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;您好，我叫 Virgil Dupras，Collapse OS 和 Dusk OS 的作者，我是我开始写一系列文章，旨在帮助我以前的自己（一名普通的 Web 开发人员）进入兔子洞，通向低级编程的奇妙世界。 &lt;a href=&quot;https://hackernews.betacat.io/#tumble-forth&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38184539&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;WasmFX：WebAssembly 的效果处理程序&lt;/stitle>; &lt;id>;https://wasmfx.dev/&lt;/id>; &lt;updated>;2023-11-07T23:56:23.552413Z&lt;/updated>; &lt;link href =&quot;https://wasmfx.dev/&quot;/>; &lt;作者>; &lt;名称>;BentonE &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=BentonE&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;WasmFX 是 WebAssembly 中堆栈切换的提案，为非本地控制流抽象的高效实现提供通用且灵活的指令集。它旨在保持遗留程序的向后兼容性能，并保留 WebAssembly 的调试和分析体验。 WasmFX 是 WebAssembly 的最小且兼容的扩展，利用其现有的指令集和类型系统。 &lt;a href=&quot;https://hackernews.betacat.io/#wasmfx-effect-handlers-for-web assembly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38184339&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;巴黎地下墓穴中的恐怖分子和警察之间的战斗&lt;/stitle>; &lt;id>;https://www.atlasobscura.com/articles/strange-maps-paris-catacombs&lt;/id >; &lt;更新>;2023-11-08T01:56:23.552942Z&lt;/更新>; &lt;link href=&quot;https://www.atlasobscura.com/articles/strange-maps-paris-catacombs&quot;/>; &lt;作者>; &lt;名称>;dave1010uk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dave1010uk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://img .atlasobscura.com/Yr0dlQChxT_xcM_lGSgOPbyvsm2-e5WYTmOJmdttJwM/rt:fit/w:1280/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS9 1/cGxvYWRzL2Fzc2V0/cy9mYjA3NDgxYi0z/MWE4LTRlNDktOWZj/NS00MTk0NmJkYTNj/MzAwYTFhODc3ZDFm/YTE5NDQ5Yjlfc2h1 /dHRlcnN0b2NrXzc3/MTg1MTMzNS5qcGc.jpg&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;巴黎地下城，也被称为黑暗之城，是城市地下一个由隧道和画廊组成的巨大网络。其中包括著名的巴黎地下墓穴，但这些只占一小部分地下空间已被用于采矿、存放死者、酿造啤酒，甚至举办派对。虽然官方禁止进入隧道，但地下墓穴爱好者仍继续探索并反抗当局的努力封锁部分网络。然而，应对气候变化的斗争可能会导致隧道被重新用于地热能，帮助巴黎的房屋降温和供暖。&lt;a href=&quot;https://hackernews.betacat.io/ #the-fight- Between-cataphiles-and-police-in-the-paris-catacombs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=38150699&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;当 Linux 吓坏了微软：记住 1998 年泄露的“万圣节文档”&lt;/stitle>; &lt;id>;https://linux.slashdot.org/story/23/11/05/046247/when-linux-spooked -microsoft-remembering-1998s-leaked-halloween-documents&lt;/id>; &lt;更新>;2023-11-08T07:56:23.553422Z&lt;/更新>; &lt;link href=&quot;https://linux.slashdot.org/story/ 23/11/05/046247/when-linux-spooked-microsoft-remembering-1998s-leaked-halloween-documents&quot;/>; &lt;author>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;微软 1998 年的一份内部备忘录显示了对自由软件（尤其是 Linux）威胁的深切关注。该备忘录承认自由软件可以在质量方面与商业软件竞争，并将其描述为对微软的潜在严重威胁。 &lt;a href=&quot;https://hackernews.betacat.io/#when-linux-spooked-microsoft-remembering-1998-s-leaked-halloween-documents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38187614&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;技术转让问题引发 RISC-V 麻烦&lt;/stitle>; &lt;id>;https://hackaday.com/2023 /11/07/trouble-brewing-for-risc-v-as-issue-of-technology-transfer-is-questioned/&lt;/id>; &lt;更新>;2023-11-08T10:56:23.553903Z&lt;/更新>; &lt;link href=&quot;https://hackaday.com/2023/11/07/trouble-brewing-for-risc-v-as-issue-of-technology-transfer-is-questioned/&quot;/>; &lt;作者>; &lt;名称>;rcarmo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rcarmo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// hackaday.com/wp-content/uploads/2023/04/risc5-esp32-c3-thumbnail.jpg?w=800&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;美国两党政治家团体正在向白宫请愿，限制 RISC-V 技术的转让，因为这可能有利于中国等对手。这可能意味着美国公民将被禁止为 RISC-V 及其生态系统做出贡献。 &lt;a href=&quot;https://hackernews.betacat.io/#trouble-brewing-for-risc-v-as-issue-of-technology-transfer-is-questioned&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38188555&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ko：Easy Go 容器&lt;/stitle>; &lt;id>;https://ko.build/&lt;/id>; &lt;更新>;2023-11-08T00:56:23.554402Z&lt;/更新>; &lt;link href=&quot;https://ko.build/&quot;/>; &lt;作者>; &lt;name>;bamazizi&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=bamazizi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ko.build/images/demo.png&quot; style=&quot;width ：220px；高度：83px；” />;&lt;br />;Ko 是一个通过在本地计算机上执行 go build 来构建镜像的工具，非常适合轻量级 CI/CD 用例。它还支持多平台构建，默认生成 SBOM，并支持简单的 YAML 模板，使其成为 Kubernetes 应用程序的强大工具。 &lt;a href=&quot;https://hackernews.betacat.io/#ko-easy-go-containers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38185241&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;斯特恩-格拉赫实验 (1967) [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=AcTqcyv-V1I&lt;/id>; &lt;已更新>;2023-11-08T03:56:23.554867Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=AcTqcyv-V1I&quot;/>; &lt;作者>; &lt;名称>;kklisura&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kklisura&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/ AcTqcyv-V1I&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>;&lt;a href=&quot;https://hackernews.betacat.io/#the-stern-gerlach-experiment-1967-video&quot;target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38177765&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;《心灵杀手 2》中的 Northlight 技术&lt;/stitle>; &lt;id>;https:// www.remedygames.com/article/how-northlight-makes-alan-wake-2-shine&lt;/id>; &lt;更新>;2023-11-07T18:56:23.555365Z&lt;/更新>; &lt;link href=&quot;https:// /www.remedygames.com/article/how-northlight-makes-alan-wake-2-shine&quot;/>; &lt;作者>; &lt;名称>;vblanco&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=vblanco&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets-global.website-files.com/64630b03551142e3347ae3da/6544bf00d880ecdd52ccc46e_image-2023-11-3_11-17 -22.png&quot; style=&quot;宽度: 220px; height: 124px;&quot; />;&lt;br />;Northlight 团队很高兴发布《心灵杀手 2》，该游戏采用了可增强游戏视觉效果和游戏玩法的新技术和工具。该游戏利用新的实体组件系统 (ECS) 来实现高效存储它还引入了基于体素的角色控制以实现平滑导航、改进的 NPC 运动、逼真的风效果、新的植被散射工具、Luau 脚本语言、GPU 驱动的渲染管道、基于着色器的植被系统、HDR 支持、改进的透明度渲染以及通过光线追踪和 DLSS 创新实现的高级视觉效果。&lt;a href=&quot;https://hackernews.betacat.io/#northlight-technology-in-alan-wake- 2&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38180846&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;禁止 E2EE 是愚蠢的&lt;/stitle>; &lt;id>;https: //github.com/davidchisnall/banning-e2ee-is-stupid&lt;/id>; &lt;更新>;2023-11-08T11:56:23.555842Z&lt;/更新>; &lt;link href=&quot;https://github.com/davidchisnall /banning-e2ee-is-stupid&quot;/>; &lt;作者>; &lt;名称>;dp-hackernews&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dp-hackernews&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/e16f7a16fecacb8421126bd8f244d27765f967429a1c09bdbec966078c14be25/68747470733a2f2f696d67732e786b63642e 636f6d2f636f6d6963732f73656375726974792e706e67”样式=“宽度：220px; height: 135px;&quot; />;&lt;br />;不同国家的立法者正在提议立法，要求消息服务为执法部门提供解密端到端加密消息的方法。但是，这种方法存在缺陷，因为它很容易犯罪分子可以在现有的消息传递系统之上构建自己的加密层。这不仅不会让犯罪分子的日子变得更艰难，还会危及其他人的安全。&lt;a href=&quot;https://hackernews.betacat.io/ #banning-e2ee-is-stupid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38188938&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;与 Clippy 类似，但适用于 CLI &lt;/stitle>; &lt;id>;https://github.com/dave1010/clipea&lt;/id>; &lt;更新>;2023-11-08T03:56:23.556302Z&lt;/更新>; &lt;link href=&quot;https://github.com/github.com/dave1010/clipea&quot; com/dave1010/clipea&quot;/>; &lt;author>; &lt;name>;duck&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=duck&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://user-images.githubusercontent.com/50682/269628319-9aae6c64-2d09-4e7f-9d86-4d82dd4bc076.gif&quot; style=&quot;宽度：220px; height: 102px;&quot; />;&lt;br />;Clipea 是一款精简、廉价且可破解的工具，它将 gpt 与您的控制台集成在一起。它就像 github&amp;amp;# 39; 的 cli 副驾驶，但它不会进入您的方式 - 它只是做你告诉它做的事情！它诞生于 hubcap，一个基于 python 代码的实验性自治代理。该工具更少 &lt;a href=&quot;https://hackernews.betacat.io/#like- Clippy-but-for-the-cli&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38186554&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Go、容器和Linux 调度程序&lt;/stitle>; &lt;id>;https://www.riverphillips.dev/blog/go-cfs/&lt;/id>; &lt;更新>;2023-11-07T19:56:23.556758Z&lt;/更新>; &lt;link href =&quot;https://www.riverphillips.dev/blog/go-cfs/&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.riverphillips.dev/Gopher.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;在容器中运行 Go 应用程序时，设置 CPU 限制以防止 CPU 使用率过高非常重要。但是，Go 运行时不知道这些限制，可能会导致高延迟。要解决GOMAXPROCS 环境变量可用于限制 Go 运行时创建的 CPU 线程数。 &lt;a href=&quot;https://hackernews.betacat.io/#go-containers-and-the-linux-scheduler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38181346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;欧几里德的第一幅图像&lt;/stitle>; &lt;id>;https://www .esa.int/Science_Exploration/Space_Science/Euclid/Euclid_s_first_images_the_dazzling_edge_of_darkness&lt;/id>; &lt;更新>;2023-11-07T14:56:23.557232Z&lt;/更新>; &lt;link href=&quot;https://www.esa.int/Science_Exploration/ Space_Science/Euclid/Euclid_s_first_images_the_dazzling_edge_of_darkness&quot;/>; &lt;author>; &lt;name>;近日点&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=perihelions&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://www.esa.int/var/esa/storage/images/esa_multimedia/images/2023/11/euclid_s_view_of_the_perseus_cluster_of_galaxies/25170523-1-eng-GB/Euclid_s_view_of_the_Perseus_cluster_of_galaxies_pillars.jpg&quot; style= “宽度：220px； height: 124px;&quot; />;&lt;br />;欧几里得，我们的黑暗宇宙侦探，将观察数十亿个星系的形状、距离和运动，以创建有史以来最大的宇宙 3D 地图。它将揭示“黑暗”对宇宙的影响可见宇宙并帮助宇宙学家研究暗物质和暗能量的奥秘。&lt;a href=&quot;https://hackernews.betacat.io/#euclid-s-first-images&quot; target=&quot;_blank&quot;>;[summary]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38176750&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ChipNeMo：用于芯片设计的领域适应法学硕士&lt;/stitle>; &lt;id>;https://arxiv.org/abs /2311.00176&lt;/id>; &lt;更新>;2023-11-07T23:56:23.557696Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2311.00176&quot;/>; &lt;作者>; &lt;名称>;RafelMri&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=RafelMri&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv. org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;ChipNeMo 探索大型语言模型 (LLM) 在工业芯片设计中的应用。域适应技术可在各种设计任务中实现比通用基础模型显着的 LLM 性能改进。&lt;a href= “https://hackernews.betacat.io/#chipnemo-domain-adapted-llms-for-chip-design” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38184753&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;加缪巡演&lt;/stitle>; &lt;id>;https://www.nybooks.com/articles/2023/11/23/camus-on-tour-travels-in-the -americas/&lt;/id>; &lt;更新>;2023-11-08T02:56:23.558162Z&lt;/更新>; &lt;link href=&quot;https://www.nybooks.com/articles/2023/11/23/camus-on -tour-travels-in-the-americas/&quot;/>; &lt;作者>; &lt;名称>;lermontov&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lermontov&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.nybooks.com/wp-content/uploads/2023/11/nyrb112323.jpg&quot; style=&quot;width: 220px; height: 300px;&quot; />;&lt;br />;文章讨论了法国作家阿尔贝·加缪在北美和南美巡回售书的经历。加缪已经是西方的文化英雄，他四处旅行宣传他的小说并讲学文章重点介绍了加缪对新世界的观察和挣扎、他不稳定的健康状况以及售书活动的艰巨性。&lt;a href=&quot;https://hackernews.betacat.io/#camus-on-tour&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38173961&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Writing a Compiler is Surprisingly Easy (part 1)&lt;/stitle>; &lt;id>; http://sebmestre.blogspot.com/2023/11/en-writing-compiler-is-surprisingly.html&lt;/id>; &lt;updated>;2023-11-07T20:56:23.558610Z&lt;/updated>; &lt;link href= &quot;http://sebmestre.blogspot.com/2023/11/en-writing-compiler-is-surprisingly.html&quot;/>; &lt;author>; &lt;name>;mmphosis&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=mmphosis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Writing a Compiler is Surprisingly Easy (part 1): The author wanted to create their own systems programming language and had attempted to write a compiler before but failed.在这篇博客中，他们的目标是展示编写代码生成器并不复杂，并且可以在几个周末内完成。 &lt;a href=&quot;https://hackernews.betacat.io/#writing-a-compiler-is-surprisingly-easy-part-1&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38182461&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;