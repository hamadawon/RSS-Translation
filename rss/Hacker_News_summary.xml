<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-31T06:00:50.290377Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;比较 Google、Bing、Marginalia、Kagi、Mwmbl 和 ChatGPT&lt;/stitle>; &lt;id>;https://danluu.com/seo-spam/&lt;/id>; &lt;更新>; 2023-12-31T03：00：42.247013Z &lt;/更新>; &lt;link href =“https://danluu.com/seo-spam/”/>; &lt;作者>; &lt;名称>; 882542F3884314B &lt;/名称>; &lt;uri>; https： //news.ycombinator.com/user?id=882542F3884314B&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#compare-google-bing -marginalia-kagi-mwmbl-and-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821248&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ugrep – 更多功能强大、快速、用户友好、兼容的 grep&lt;/stitle>; &lt;id>;https://ugrep.com/&lt;/id>; &lt;updated>;2023-12-30T22:00:42.248998Z&lt;/updated>; &lt;link href= “https://ugrep.com/”/>; &lt;作者>; &lt;名称>;smartmic&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src=“https://ugrep.com/ug.png”样式=“宽度：220px； height: 149px;&quot; />;&lt;br />;Ugrep 是一个强大而快速的 grep 工具，提供了新的选项和功能。它可以搜索目录中的文件、嵌套档案和压缩文件，并支持各种搜索模式和模式。Ugrep 是与 GNU grep 兼容，可以从命令行或 TUI 中使用。&lt;a href=&quot;https://hackernews.betacat.io/#ugrep-a-more-powerful-fast-user-friend-company-grep &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38819262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;第一个个人搜索引擎原型&lt;/stitle>; &lt;id>;https: //rsdoiel.github.io/blog/2023/03/10/first-prototype-pse.html&lt;/id>; &lt;更新>;2023-12-31T00:00:42.249413Z&lt;/更新>; &lt;link href=&quot;https ://rsdoiel.github.io/blog/2023/03/10/first-prototype-pse.html&quot;/>; &lt;作者>; &lt;名称>;kmstout&lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=kmstout&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我使用 Bash 脚本和 SQLite 数据库实现了我的个人搜索引擎的第一个原型。我收集了大约 16,000 个页面，并使用 PageFind 来索引内容。原型显示了有希望的结果，但我相信至少 100,000 页的语料库会更引人注目。 &lt;a href=&quot;https://hackernews.betacat.io/#first-personal-search-engine-prototype&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38801698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;克劳德·布拉格登：第四维图画 (2022)&lt;/stitle>; &lt;id>;https://socks-studio.com/2022/10/23/claude-bragdon-drawings /&lt;/id>; &lt;更新>;2023-12-30T21:00:42.249807Z&lt;/更新>; &lt;link href=&quot;https://socks-studio.com/2022/10/23/claude-bragdon-drawings/&quot; />; &lt;author>; &lt;name>;diaphanous&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=diaphanous&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://socks-studio.com/img/blog/ernst-01-800x9892-150x150.jpg”样式=“宽度：220像素；高度：220像素；” />;&lt;br />;美国建筑师克劳德·费耶特·布拉格登（Claude Fayette Bragdon，1866-1946）也是一位艺术家、作家和舞台设计师。他的设计作品和哲学受到神智学的影响，他用钢笔和墨水撰写了带有复杂插图的建筑理论文本。 &lt;a href=&quot;https://hackernews.betacat.io/#claude-bragdon-drawings-of-the-fourth-dimension-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38819030&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;海岸线悖论&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Coastline_paradox&lt;/id>; &lt;更新>;2023-12- 30T21:00:42.250204Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Coastline_paradox&quot;/>; &lt;作者>; &lt;name>;scrlk&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=scrlk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/58 /Great-britain-coastline-paradox.gif/369px-Great-britain-coastline-paradox.gif&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;海岸线悖论是一种违反直觉的观察，即一块大陆的海岸线没有明确定义的长度。这是由海岸线的分形曲线性质造成的；即海岸线通常具有分形维数这一事实。 &lt;a href=&quot;https://hackernews.betacat.io/#coastline-paradox&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38815439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;恶意软件滥用 Google OAuth 端点“复活”cookie、劫持帐户&lt;/stitle>; &lt;id>;https://www.bleepingcomputer.com/news/security/malware-abuses-google-oauth-endpoint-to -revive-cookies-hijack-accounts/&lt;/id>; &lt;更新>;2023-12-30T19:00:42.250596Z&lt;/更新>; &lt;link href=&quot;https://www.bleepingcomputer.com/news/security/malware -abuses-google-oauth-endpoint-to-revive-cookies-hijack-accounts/&quot;/>; &lt;作者>; &lt;名称>;schalkneethling&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= schalkneethling&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bleepstatic.com/content/hl-images/2023/12/29/google-flare.jpg&quot;样式=“宽度：220像素；高度：124像素；” />;&lt;br />;多个信息窃取恶意软件系列正在滥用名为“MultiLogin”的未记录的 Google OAuth 端点来恢复过期的身份验证 cookie 并登录用户帐户，即使帐户的密码已重置。 &lt;a href=&quot;https://hackernews.betacat.io/#malware-abuses-google-oauth-endpoint-to-revive-cookies-hijack-accounts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38806650&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple 内部工具的更多乐趣：创建 PDS 卡&lt;/stitle>; &lt;id>;https://www.downtowndougbrown.com/2023 /12/more-fun-with-apples-internal-tools-creating-a-pds-card/&lt;/id>; &lt;更新>;2023-12-30T22:00:42.251397Z&lt;/更新>; &lt;link href=&quot;https ://www.downtowndougbrown.com/2023/12/more-fun-with-apples-internal-tools-creating-a-pds-card/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.downtowndougbrown.com/wp-content/ uploads/2023/12/image.png&quot; style=&quot;宽度：220px；高度：181px；&quot; />;&lt;br />;在我的上一篇文章中，我发现了如何使用 Apple 从 20 世纪 90 年代泄露的 Flasher 实用程序来刷新 Performa 630 内的 ROM SIMM。我还探讨了“PDS ROM Info”部分的用途以及如何启用它。 &lt;a href=&quot;https://hackernews.betacat.io/#more-fun-with-apple-s-internal-tools-creating-a-pds-card&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38819618&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问客户想要什么是行不通的&lt;/stitle>; &lt;id>;https://techbooks.substack.com/ p/why-asking-your-customers-what-他们&lt;/id>; &lt;更新>;2023-12-31T03:00:42.251781Z&lt;/更新>; &lt;link href=&quot;https://techbooks.substack.com/p /why-asking-your-customers-what-they&quot;/>; &lt;作者>; &lt;名称>;AntonZ234&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=AntonZ234&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post -media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d760e73-b299-4ab9-912b-3e6d7f5a113f_1792x1024.png&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;本文讨论了“待完成的工作”的概念以及它如何帮助公司了解客户真正想要什么。它强调了仅依赖客户反馈的局限性，并强调了确定客户试图完成的基本工作的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#asking-your-customers-what-they-want-doesn-t-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38814152&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Persons：20 世纪 80 年代基于磁带的 iTunes Store [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/ watch?v=PYpD6g6nLd0&lt;/id>; &lt;更新>;2023-12-31T01:00:42.252155Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=PYpD6g6nLd0&quot;/>; &lt;作者>; &lt;name>;fortran77&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fortran77&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;/ /www.youtube.com/embed/PYpD6g6nLd0&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#personics-the-cassette-based -itunes-store-of-the-1980s-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38793604&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LIPS： JavaScript 中基于方案的 Lisp 解释器&lt;/stitle>; &lt;id>;https://lips.js.org/&lt;/id>; &lt;updated>;2023-12-30T22:00:42.252904Z&lt;/updated>; &lt;link href=&quot;https ://lips.js.org/&quot;/>; &lt;作者>; &lt;名称>;文石&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=aragonite&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src=“https://lips.js.org/logo.svg”样式=“宽度：220px； height: 115px;&quot; />;&lt;br />;LIPS是一个用JavaScript编写的强大的基于Scheme的Lisp解释器。它与JavaScript有很好的集成，并允许用不同的语法表示新的数据类型。您可以直接在任何带有Scheme教程的页面，包括PDF文件。&lt;a href=&quot;https://hackernews.betacat.io/#lips-scheme-based-lisp-interpreter-in-javascript&quot; target=&quot;_blank&quot;>;[summary] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38819212&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;火星快车 20 周年&lt;/stitle>; &lt;id>;https://www.esa.int/Science_Exploration/ Space_Science/Mars_Express/20_years_of_Mars_Express_Mars_as_never_seen_before&lt;/id>; &lt;更新>;2023-12-31T00:00:42.253300Z&lt;/更新>; &lt;link href=&quot;https://www.esa.int/Science_Exploration/Space_Science/Mars_Express/20_years_of_Mars_Express_Mars_as _never_seen_before&quot;/ >; &lt;作者>; &lt;名称>;sohkamyung&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://www.esa.int/var/esa/storage/images/esa_multimedia/images/2023/05/building_a_mosaic_of_mars/24894552-4-eng-GB/Building_a_mosaic_of_Mars_article.png”style =“宽度：220px;高度：112px;&quot; />;&lt;br />;使用欧洲航天局火星快车的数据创建的新火星马赛克详细揭示了行星的颜色和成分。马赛克通过增强局部颜色和对比度突出显示了火星表面的变化，提供了关于火星的有趣信息它的组成。火星快车已经绕这颗红色星球运行了 20 年，对其表面进行成像，绘制其矿物分布图，并探索其大气和环境。&lt;a href=&quot;https://hackernews.betacat.io/#20-years- of-mars-express&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38820329&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cuis-Smalltalk&lt;/stitle>; &lt;id >;https://cuis.st/&lt;/id>; &lt;更新>;2023-12-31T01:00:42.253673Z&lt;/更新>; &lt;link href=&quot;https://cuis.st/&quot;/>; &lt;作者>; &lt;名称>;haolez&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=haolez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// cuis.st/assets/imgs/screenshot.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Dr. Geo 交互式几何应用程序由其作者 Hilaire Fernandes 移植到 Cuis。今天，基于 Cuis 的 Dr. Geo 的第一个测试版发布了！&lt;a href=&quot;https: //hackernews.betacat.io/#cuis-smalltalk&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38820557&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我&#39;我对低代码持怀疑态度&lt;/stitle>; &lt;id>;https://nick.scialli.me/blog/why-im-skeptical-of-low-code/&lt;/id>; &lt;更新>;2023-12-30T22： 00:42.254048Z&lt;/更新>; &lt;link href=&quot;https://nick.scialli.me/blog/why-im-skeptical-of-low-code/&quot;/>; &lt;作者>; &lt;名称>;jamghee &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jamghee&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;低代码解决方案通常无法满足公司的自定义功能要求，导致需要大量的定制，这导致了解定制代码所使用的定制语言的开发人员数量很少。升级到低代码平台可能会破坏自定义实现，并且底层数据库结构可能会变得混乱。以怀疑的态度对待低代码工具并考虑它们的局限性非常重要。 &lt;a href=&quot;https://hackernews.betacat.io/#im-skeptical-of-low-code&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38816135&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;语言服务器的核心&lt;/stitle>; &lt;id>;https://rust-analyzer.github.io//blog/2023/12/26/the-heart-of -a-language-server.html&lt;/id>; &lt;更新>;2023-12-31T00:00:42.254791Z&lt;/更新>; &lt;link href=&quot;https://rust-analyzer.github.io//blog/2023 /12/26/the-heart-of-a-language-server.html&quot;/>; &lt;author>; &lt;name>;thesuperbigfrog&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thesuperbigfrog &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rust-analyzer.github.io/assets/ferrous-logo.png&quot; style=&quot;width: 220px; height: 229 像素；” />;&lt;br />;语言服务器开发的第一步是理解位于给定偏移处的代码。这需要确定语法树中覆盖偏移量的节点并执行语义分析。 &lt;a href=&quot;https://hackernews.betacat.io/#the-heart-of-a-language-server&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38820454&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;第 20 天：Advent of Code 2023 我最喜欢的问题&lt;/stitle>; &lt;id>;https://mliezun.github.io/2023/12/25/favourite-advent -of-code-2023.html&lt;/id>; &lt;更新>;2023-12-30T23:00:42.255156Z&lt;/更新>; &lt;link href=&quot;https://mliezun.github.io/2023/12/25/ favourite-advent-of-code-2023.html&quot;/>; &lt;作者>; &lt;名称>;nickdevx&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nickdevx&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mliezun.github.io/assets/images/nyc.jpg&quot; style=&quot;宽度：220px；高度：216px；&quot; />;&lt;br />;本文描述了 2023 年代码出现中的一个问题，涉及电子设备相互发送脉冲/信号。目标是正确传播信号并模拟设备的行为。 &lt;a href=&quot;https://hackernews.betacat.io/#day-20-my-favourite-problem-from-advent-of-code-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38807477&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Freeaim VR 鞋&lt;/stitle>; &lt;id>;https://www.freeaim.com/consumer&lt;/id>; &lt;更新>;2023 -12-30T22:00:42.255894Z&lt;/updated>; &lt;link href=&quot;https://www.freeaim.com/consumer&quot;/>; &lt;作者>; &lt;name>;rolph&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.wixstatic.com/media/983455_9ef69c6cb78e41ca8640aa37dedcd739~mv2.png/ v1/fill/w_104,h_104,al_c,q_85,usm_0.66_1.00_0.01,blur_3,enc_auto/walk_natural_icon.png&quot; style=&quot;宽度: 220px; 高度: 220px;&quot; />;&lt;br />;与 SteamVR 支持的任何 VR 耳机兼容，并适用于大多数具有操纵杆移动的游戏/应用程序。 &lt;a href=&quot;https://hackernews.betacat.io/#freeaim-vr-shoes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38819288&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;为 Web 构建 ColdFusion&lt;/stitle>; &lt;id>;https://thehistoryoftheweb.com/building-coldfusion-for-the-web/&lt;/id>; &lt;updated>;2023-12-31T03： 00:42.256257Z&lt;/updated>; &lt;link href=&quot;https://thehistoryoftheweb.com/building-coldfusion-for-the-web/&quot;/>; &lt;作者>; &lt;name>;paulgb&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=paulgb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thehistoryoftheweb.com/wp-json/social-image-生成器/v1/image/15834&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;ColdFusion 于 1995 年开发，是一种专门用于构建网站的编程语言。它旨在通过使用类似于 HTML 但具有更高级功能的标签来降低用户的进入门槛。多年来，ColdFusion 发展成为一个具有内置工具和实用程序的完整网站开发环境。尽管所有权和技术发生了变化，ColdFusion 仍然继续发布新版本，尽管其受欢迎程度有所下降。 &lt;a href=&quot;https://hackernews.betacat.io/#building-coldfusion-for-the-web&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38821224&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;高性能计算的艺术&lt;/stitle>; &lt;id>;https://theartofhpc.com/&lt;/id>; &lt;updated>;2023-12-30T15:00:42.256618Z&lt; /updated>; &lt;link href=&quot;https://theartofhpc.com/&quot;/>; &lt;作者>; &lt;name>;rramadass&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rramadass&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://theartofhpc.com/ewExternalFiles/frontcover-small.jpg&quot; style=&quot;width: 220px; height: 287px;&quot; />;&lt;br />;本书全面介绍了科学计算和高性能计算（HPC）。它涵盖了计算机体系结构、并行编程和现代编程语言等主题。作者 Victor Eijkhout 是德克萨斯州高级计算中心的研究科学家。 &lt;a href=&quot;https://hackernews.betacat.io/#the-art-of-high-performance-computing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38815334&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;电光传输数据的速度比 Wi-Fi 更快&lt;/stitle>; &lt;id>;https://techxplore.com/news/2023-12-electric-transmits-faster-wi -fi.html&lt;/id>; &lt;更新>;2023-12-30T19:00:42.257002Z&lt;/更新>; &lt;link href=&quot;https://techxplore.com/news/2023-12-electric-transmits-faster- wi-fi.html&quot;/>; &lt;作者>; &lt;名称>;danboarder&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=danboarder&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/electric-light-transmi.jpg&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Li-fi 是一种利用可见光进行数据传输的通信技术，其速度可能比 Wi-Fi 快 100 倍以上，并提供高带宽。它利用现有的室内照明基础设施，并通过仅将数据传输到照明区域来确保强大的安全性。 &lt;a href=&quot;https://hackernews.betacat.io/#electric-light-transmits-data-faster-than-wi-fi&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38816802&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：dextk - Go 中的 Android dex 文件解析器&lt;/stitle>; &lt;id>;https://github.com/csnewman/dextk&lt;/id>; &lt;更新>;2023-12-30T19:00:42.257398Z&lt;/更新>; &lt;link href=&quot;https://github.com/csnewman/dextk&quot;/>; &lt;作者>; &lt;名称>;csnewman &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=csnewman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/dd91b58f652229e15c4d9b39e7abab2518a5dd238e72837ad15f8c5fcbc3c3c3/csnewman/ dextk&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文是一段 Go 代码片段，演示了如何使用 dextk 库解析 Android dex 文件。它打开一个 dex 文件，读取其内容，并迭代类和方法以打印它们的名称。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-dextk-android-dex-file-parser-in-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38817456&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Android 数据深度加密&lt;/stitle>; &lt;id>;https://blog.quarkslab.com/android-data-encryption-in-deep .html&lt;/id>; &lt;更新>;2023-12-31T00:00:42.257767Z&lt;/更新>; &lt;link href=&quot;https://blog.quarkslab.com/android-data-encryption-in-depth.html&quot; />; &lt;author>; &lt;name>;sipofwater&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sipofwater&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://blog.quarkslab.com/resources/2023-07-06_android-fbe/cool-picture.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文讨论了破解 Android 数据加密的研究，重点关注静态数据加密。它解释了 Android 中使用的基于文件的加密 (FBE) 方法以及派生凭证加密 (CE) 密钥所涉及的步骤。它还探讨了攻击加密模式的过程以及用户凭据在密钥派生过程中的作用。 &lt;a href=&quot;https://hackernews.betacat.io/#android-data-encryption-in-depth&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38820152&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;马士基船在红海被导弹击中&lt;/stitle>; &lt;id>;https://gcaptain.com/maersk-ship-hit-by-missile-in-the-red -sea/&lt;/id>; &lt;更新>;2023-12-31T04:00:42.258141Z&lt;/更新>; &lt;link href=&quot;https://gcaptain.com/maersk-ship-hit-by-missile-in-the -red-sea/&quot;/>; &lt;作者>; &lt;名称>;bison3&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bison3&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://gcaptaindev.wpengine.com/wp-content/themes/gCaptain-Theme/assets/gCaptain-badge.png&quot; style=&quot;宽度：220px；高度：279px；&quot; />;&lt;br />;一艘马士基集装箱船在红海被导弹击中。该船适航，没有受伤报告。 &lt;a href=&quot;https://hackernews.betacat.io/#maersk-ship-hit-by-missile-in-the-red-sea&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38821372&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PlasMa – 迷你大型机模拟器项目&lt;/stitle>; &lt;id>;http://www.philizound.co.uk/plasma/plasma.html ?i=1&lt;/id>; &lt;更新>;2023-12-30T23:00:42.258516Z&lt;/更新>; &lt;link href=&quot;http://www.philizound.co.uk/plasma/plasma.html?i= 1&quot;/>; &lt;作者>; &lt;名称>;shakna&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=shakna&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt; a href=&quot;https://hackernews.betacat.io/#plasma-mini-mainframe-simulator-project&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Silent Flyer – 类似鸟的无人机&lt;/stitle>; &lt;id>;https://www.silentflyer.tech/&lt; /id>; &lt;更新>;2023-12-30T22:00:42.258891Z&lt;/更新>; &lt;link href=&quot;https://www.silentflyer.tech/&quot;/>; &lt;作者>; &lt;名称>;Gys&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=Gys&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.silentflyer.tech/wp-内容/uploads/2022/05/bjorg-600.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;Flygildi 开发了一款独特的仿生无人机 Silent Flyer，它的外观和飞行方式都像鸟一样。它结合了固定翼和多旋翼系统的优点，同时避免了它们的缺点。无人机可以模仿不同的鸟类类型，使视觉检测变得困难，并减少对当地鸟类物种的影响。&lt;a href=&quot;https://hackernews.betacat.io/#silent-flyer-a-birdlike-drone&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38819121&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DiffDebugging&lt;/stitle>; &lt;id>;https://martinfowler.com/bliki/DiffDebugging .html&lt;/id>; &lt;更新>;2023-12-30T21:00:42.259260Z&lt;/更新>; &lt;link href=&quot;https://martinfowler.com/bliki/DiffDebugging.html&quot;/>; &lt;作者>; &lt;名称>; mpweiher&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mpweiher&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://martinfowler. com/mf.jpg&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;回归错误是已经存在一段时间的软件功能中新出现的错误。差异调试是一种调查形式，有助于识别导致错误的软件更改&lt;a href=&quot;https://hackernews.betacat.io/#diffdebugging&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38818695&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;