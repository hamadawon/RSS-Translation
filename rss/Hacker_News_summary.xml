<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-06-24T15:59:06.737103Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;从所有新部件构建新的 ZX Spectrum&lt;/stitle>; &lt;id>;https://www.lostretrotapes.com/building-a-new-zx-spectrum-from-all -new-parts-mostly-part-1/&lt;/id>; &lt;更新>;2023-06-24T14:57:42.512732Z&lt;/更新>; &lt;link href=&quot;https://www.lostretrotapes.com/building-a -new-zx-spectrum-from-all-new-parts-mostly-part-1/&quot;/>; &lt;作者>; &lt;名称>;mariuz&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=mariuz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.lostretrotapes.com/lostretrotapes/content/2022/02/07093815/DSC_5469-1024x680.jpg&quot;样式=“宽度：220像素；高度：147像素；” />;&lt;br />;本系列文章将记录我使用尽可能多的可用部件构建 ZX Spectrum 的探索。我订购了复制版 Issue 3B 板，并开始研究我仍然可以从供应商那里获得原始原理图中的哪些组件。 &lt;a href=&quot;https://hackernews.betacat.io/#building-a-new-zx-spectrum-from-all-new-parts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36458849&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么 TypeScript 无法正确键入 Object.keys？&lt;/stitle>; &lt;id>;https://alexharri.com/blog/typescript-structural -打字&lt;/id>; &lt;更新>;2023-06-24T11:57:42.514823Z&lt;/更新>; &lt;link href=&quot;https://alexharri.com/blog/typescript-structural-typing&quot;/>; &lt;作者>; &lt; name>;alexharri&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=alexharri&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;此错误似乎毫无意义。我们使用选项键来访问选项。为什么 TypeScript 不解决这个问题？使该方法接受 T 的通用参数并返回 (keyof T)[] 非常容易。像这样定义 Object.keys 似乎是理所当然的事情，但 TypeScript 有充分的理由不这样做。原因与 TypeScript 的结构类型系统有关。这是结构类型系统中的预期行为。如果 A 是 B 的超集（即 A 包含 B 中的所有属性），则类型 A 可分配给 B。然而，如果 A 是 B 的真超集（即 A 比 B 具有更多属性），那么关键的一点是，当我们有一个 T 类型的对象时，我们所知道的关于该对象的全部信息是它至少包含T。我们不知道我们是否有确切的 T，这就是为什么 Object.keys 是这样输入的。让我们举个例子。假设我们正在为创建新用户的 Web 服务创建端点。我们有一个现有的用户界面，如下所示： 在将用户保存到数据库之前，我们要确保用户对象有效。因此，我们创建一个验证器对象，其中包含 User 中每个属性的验证函数： 由于我们想要验证 user 中的每个属性，因此我们可以使用 Object.keys 迭代 user 中的属性： 这种方法的问题是 user 对象可能包含验证器中不存在的属性。即使用户没有指定电子邮件属性，这也不是类型错误，因为结构类型允许提供无关的属性。在运行时，email 属性将导致验证器未定义并在调用时抛出错误。对我们来说幸运的是，TypeScript 在这段代码有机会运行之前就发出了类型错误。 // &#39;string&#39; 类型的表达式不能用于索引类型 &#39;{ name: ...,password: ... }&#39;。现在我们已经知道为什么 Object.keys 是这样键入的了。它迫使我们承认对象可能包含类型系统不知道的属性。凭借我们对结构类型及其陷阱的新知识，让我们看看如何有效地使用结构类型来为我们带来好处。结构类型提供了很大的灵活性。它允许接口准确地声明它们需要的属性。我想通过一个例子来演示这一点。想象一下，我们编写了一个函数来解析 KeyboardEvent 并返回要触发的快捷方式。 // 输入 &#39;{ key: string;元键：真； }&#39; 缺少类型“KeyboardEvent”中的以下属性：altKey、charCode、code、ctrlKey 以及其他 37 个属性。啊。指定所有 37 个附加属性将会非常嘈杂，所以这是不可能的。相反，我们可以更新 getKeyboardShortcut 以仅从事件中声明它所需的属性。测试代码现在只需要满足这个更最小的接口，这使得它的噪音更少。我们的函数与全局 KeyboardEvent 类型的耦合也较少，并且可以在更多上下文中使用。现在更加灵活了。这是可能的，因为结构类型。 KeyboardEvent 可分配给 KeyboardShortcutEvent，因为它是超集，即使 KeyboardEvent 有 37 个不相关的属性。 Evan Martin 在这篇精彩的文章中探讨了这个想法：界面通常属于用户。我强烈建议您阅读一下！它改变了我编写和思考 TypeScript 代码的方式。 &lt;a href=&quot;https://hackernews.betacat.io/#why-doesn-t-typescript-properly-type-object-keys&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36457557&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;写作中的常见错误（2021）&lt;/stitle>; &lt;id>;https://www.cs.columbia.edu/~hgs/etc/writing- bugs.html&lt;/id>; &lt;更新>;2023-06-24T09:57:42.515421Z&lt;/更新>; &lt;link href=&quot;https://www.cs.columbia.edu/~hgs/etc/writing-bugs. html&quot;/>; &lt;author>; &lt;name>;pablode&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pablode&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Don不要执着于你所写的文字；当你苦思冥想想弄清楚自己想说的内容时，准备好废弃你所写的内容，即使它是整篇论文。与几乎所有规则一样，在某些情况下，打破规则是个好主意，经验丰富的作家很可能会用“但是”来回应其中的一些规则。 &lt;a href=&quot;https://hackernews.betacat.io/#common-bugs-in-writing-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36457051&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;采取行动，保护端到端加密&lt;/stitle>; &lt;id>;https://www.fsf.org/blogs/community/take-action-protect-end-结束加密&lt;/id>; &lt;更新>;2023-06-24T14:57:42.516400Z&lt;/更新>; &lt;link href=&quot;https://www.fsf.org/blogs/community/take-action-protect -end-to-end-encryption&quot;/>; &lt;作者>; &lt;名称>;pabs3&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pabs3&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://static.fsf.org/nosvn/appeal2023/spring/encryption.png&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;虽然我们可能没有什么可隐藏的，但我们确实有一切需要保护。全球立法威胁着端到端加密和隐私。重要的是要让政府代表知道端到端加密至关重要。 &lt;a href=&quot;https://hackernews.betacat.io/#take-action-protect-end-to-end-encryption&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36459055&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;澳大利亚政府风格手册&lt;/stitle>; &lt;id>;https://www.stylemanual.gov.au/&lt;/id>; &lt;更新>;2023-06-24T09 :57:42.516838Z&lt;/updated>; &lt;link href=&quot;https://www.stylemanual.gov.au/&quot;/>; &lt;作者>; &lt;name>;kimburgess&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=kimburgess&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;澳大利亚政府写作和编辑的标准。风格手册适用于所有撰写、编辑或批准澳大利亚政府内容的人。使用它来创建满足用户需求的清晰一致的内容。 &lt;a href=&quot;https://hackernews.betacat.io/#australian-government-style-manual&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36457205&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;规则规定，“公园内禁止车辆”&lt;/stitle>; &lt;id>;https://novehiclesinthepark.com/&lt;/id>; &lt;updated>;2023-06-24T00:57: 42.518910Z&lt;/更新>; &lt;link href=&quot;https://novehiclesinthepark.com/&quot;/>; &lt;作者>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这个游戏是关于语言和规则的。它由 27 个问题组成，但在前 7 个问题之后，您可以跳到最后。最后，我会告诉你你的结果与其他人的结果相比如何，并讨论我制作这款游戏​​的原因。 &lt;a href=&quot;https://hackernews.betacat.io/#the-rule-says-no-vehicles-in-the-park&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36453856&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AMD EPYC 97x4 “Bergamo” CPU：128 个用于服务器的 Zen 4c CPU 内核，现已发货&lt;/stitle>; &lt;id>;https://www.anandtech。 com/show/18913/amd-intros-epyc-97x4-bergamo-cpus-128-zen-4c-cpu-cores-shipping-now&lt;/id>; &lt;更新>;2023-06-24T13:57:42.520142Z&lt;/已更新>; &lt;link href=&quot;https://www.anandtech.com/show/18913/amd-intros-epyc-97x4-bergamo-cpus-128-zen-4c-cpu-cores-shipping-now&quot;/>; &lt;作者>; &lt;name>;ksec&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ksec&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://images.anandtech.com/doci/18913/AMD%20Data%20Center%202023%20Preview%20Press%20Deck%206_575px.jpeg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;AMD 宣布推出基于 Zen 4c 架构的高密度“Bergamo”服务器 CPU，提供多达 128 个 CPU 内核。新的 EPYC 处理器现已发货。 &lt;a href=&quot;https://hackernews.betacat.io/#amd-epyc-97x4-bergamo-cpus-128-zen-4c-cpu-cores-for-servers-shipping-now&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36458678&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;终于得到了二进制补码&lt;/stitle>; &lt;id>;https://neugierig.org/software/ blog/2023/06/twos-complement.html&lt;/id>; &lt;更新>;2023-06-24T06:57:42.521160Z&lt;/更新>; &lt;link href=&quot;https://neugierig.org/software/blog/2023 /06/twos-complement.html&quot;/>; &lt;作者>; &lt;名称>;thepbone&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thepbone&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://neugierig.org/software/blog/2023/06/unsigned.png”样式=“宽度：220像素；高度：221像素；” />;&lt;br />;二进制补码是计算机表示负数的一种方式。选择它是为了让数学计算出来。即使跨越负/正边界，相同的旋转规则也适用。 &lt;a href=&quot;https://hackernews.betacat.io/#finally-getting-two-s-complement&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36451907&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;E图提取问题是NP完全的&lt;/stitle>; &lt;id>;https://effect.systems/blog/egraph-extraction.html&lt;/id>; &lt;updated>; 2023-06-24T10:57:42.521567Z&lt;/updated>; &lt;link href=&quot;https://effect.systems/blog/egraph-extraction.html&quot;/>; &lt;author>; &lt;name>;matt_d&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=matt_d&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://effect.systems/blog/img/egraph -extraction.png&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;提取问题是 NP 问题，因为它可以简化为整数线性规划 (ILP)，并且通过将最小集覆盖问题简化为 NP 困难问题。该构造使用具有非恒定参数的函数符号，但这可以通过用形成深度 O(log n) 二叉树的二元函数符号替换根 E 节点来解决。 &lt;a href=&quot;https://hackernews.betacat.io/#the-e-graph-extraction-problem-is-np-complete&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36453592&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;佛瑞吉采集规则&lt;/stitle>; &lt;id>;https://memory-alpha.fandom.com/wiki/Rules_of_Acquisition&lt;/id>; &lt;更新>; 2023-06-24T10:57:42.522060Z&lt;/更新>; &lt;link href=&quot;https://memory-alpha.fandom.com/wiki/Rules_of_Acquisition&quot;/>; &lt;作者>; &lt;名称>;_Microft &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=_Microft&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.wikia.nocookie.net/memoryalpha /images/6/6f/Ferengi_Rules_of_Acquisition%2C_False_profits.jpg/revision/latest/scale-to-width-down/180?cb=20080315104638&amp;path-prefix=en&quot; style=&quot;宽度：220px；高度：186px；&quot; />;&lt;br />;获取规则是所有佛伦吉社会赖以生存的神圣戒律。它们最初是由第一位 Grand Nagus Gint 编写的。 &lt;a href=&quot;https://hackernews.betacat.io/#ferengi-rules-of-acquisition&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36449957&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;开源许可证需要摆脱 20 世纪 80 年代的束缚，并不断发展以应对人工智能&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/06/23/open_source_licenses_ai/&lt;/ id>; &lt;更新>;2023-06-24T05:57:42.523315Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/06/23/open_source_licenses_ai/&quot;/>; &lt;作者>; &lt;名称>;gumby&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gumby&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia .co.uk/2023/06/22/1980s.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;自由软件和开源许可证需要发展以处理人工智能模型和数据集。为软件设计的开源许可证可能并不最适合人工智能工件。开源社区正在致力于定义对开源人工智能原则的共同理解。 &lt;a href=&quot;https://hackernews.betacat.io/#open-source-licenses-need-to-leave-the-1980s-and-evolve-to-deal-with-ai&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36444854&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个开源的基于网络的抽认卡学习系统&lt;/stitle>; &lt;id>;https://github .com/hwgilbert16/scholarsome&lt;/id>; &lt;更新>;2023-06-24T02:57:42.524499Z&lt;/更新>; &lt;link href=&quot;https://github.com/hwgilbert16/scholarsome&quot;/>; &lt;作者>; &lt;名称>;hwgilbert16&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hwgilbert16&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// camo.githubusercontent.com/7746423417e239bc27ee7a621ebe07cdde3faa2e2ecaa1ad9eed673b7bdfa53d/68747470733a2f2f692e696d6775722e636f6d2f4d7368544f614c2e 706e67&quot; 样式=&quot;宽度：220 像素；高度：114 像素；&quot; />;&lt;br />;Scholarsome 是一个开源学习系统，旨在成为任何学习工作流程的直接替代品。它提供了核心功能，例如用于练习记忆术语和定义的抽认卡，并通过在本地保存用户数据来优先考虑数据安全。 &lt;a href=&quot;https://hackernews.betacat.io/#an-open-source-web-based-flashcard-stuying-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36454783&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;完全开放公共许可证&lt;/stitle>; &lt;id>;https://github.com/pjakma/fopl&lt;/id>; &lt;更新>;2023-06- 24T11:57:42.524957Z&lt;/updated>; &lt;link href=&quot;https://github.com/pjakma/fopl&quot;/>; &lt;作者>; &lt;name>;pabs3&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=pabs3&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/298ee8a9f0d3adade579f17680eb23f56207e4f07ce5c6d8f2da4e16597f5e90/pjakma/fopl&quot; style=&quot;width: 220 像素；高度：110 像素；&quot; />;&lt;br />;完全开放公共许可证是基于 CDDL-1.0 的许可证，并受到 Sybase/Watcom 许可证的启发进行了修改。它要求源代码不仅在分发时公开，而且在部署作品时也公开。 &lt;a href=&quot;https://hackernews.betacat.io/#complete-open-public-licence&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36457546&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;创客日程、经理日程（2009）&lt;/stitle>; &lt;id>;http://www.paulgraham.com/makersschedule.html&lt;/id>; &lt;更新>;2023-06-24T05： 57:42.525400Z&lt;/updated>; &lt;link href=&quot;http://www.paulgraham.com/makersschedule.html&quot;/>; &lt;author>; &lt;name>;mad2021&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=mad2021&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;程序员不喜欢开会，因为他们的日程安排与其他人不同。有两种类型的时间表：经理的时间表，分为一小时的间隔，以及制造商的时间表，更喜欢半天或更长的单位。会议会打乱创客的日程安排，并对生产力产生连锁反应。 &lt;a href=&quot;https://hackernews.betacat.io/#maker-s-schedule-manager-s-schedule-2009&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36455843&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;历史就是一件又一件该死的事情&lt;/stitle>; &lt;id>;https://collabfund.com/blog/how-this-all-happened/&lt;/ id>; &lt;更新>;2023-06-24T05:57:42.525930Z&lt;/更新>; &lt;link href=&quot;https://collabfund.com/blog/how-this-all-happened/&quot;/>; &lt;作者>; &lt;名称>;prakhar897&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=prakhar897&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://collabfund .com/uploads/pasted%20image%200.png&quot; style=&quot;宽度：220px；高度：154px；&quot; />;&lt;br />;这是一个关于二战结束以来美国经济发生变化的短篇故事。事情非常不确定，然后非常好，然后很糟糕，然后非常好，然后非常糟糕，现在我们就到了这里。有一个叙述将所有这些事件联系在一起。 &lt;a href=&quot;https://hackernews.betacat.io/#history-is-just-one-damn-thing-after-another&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36455697&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;蜜蜂大脑的进化&lt;/stitle>; &lt;id>;https://www.u-tokyo.ac.jp/focus/en/press/ z0508_00289.html&lt;/id>; &lt;更新>;2023-06-24T08:57:42.526554Z&lt;/更新>; &lt;link href=&quot;https://www.u-tokyo.ac.jp/focus/en/press/z0508_00289 .html&quot;/>; &lt;author>; &lt;name>;rustoo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rustoo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://www.u-tokyo.ac.jp/content/400214044.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;研究人员提出了一种膜翅目昆虫高级大脑功能和行为进化的新模型。他们发现蜜蜂大脑中的三种不同的、专门的凯尼恩细胞亚型似乎是从单一的、多功能的凯尼恩细胞亚型祖先进化而来的。 &lt;a href=&quot;https://hackernews.betacat.io/#the-evolution-of-honey-bee-brains&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36451924&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;长达数十年的意识赌注结束，哲学家 1，神经科学家 0&lt;/stitle>; &lt;id>;https://www.nature.com/articles/d41586-023 -02120-8&lt;/id>; &lt;更新>;2023-06-24T10:57:42.527298Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles/d41586-023-02120-8&quot; />; &lt;author>; &lt;name>;mellosouls&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mellosouls&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://media.nature.com/lw767/magazine-assets/d41586-023-02120-8/d41586-023-02120-8_25528944.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;神经科学家克里斯托夫·科赫和哲学家大卫·查尔默斯之间长达 25 年的科学赌注已经结束。这场赌注是要在 2023 年之前发现大脑神经元产生意识的机制。两位科学家都认为这仍然是一个持续的探索，查尔默斯被宣布为获胜者。 &lt;a href=&quot;https://hackernews.betacat.io/#decades-long-bet-on-thoughtness-ends-and-its-philosopher-1-neuroscientist-0&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36457286&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过更好地使用数据缓存让您的程序运行得更快（2020）&lt;/stitle>; &lt;id>;https:// johnnysswlab.com/make-your-programs-run-faster-by-better-using-the-data-cache/&lt;/id>; &lt;更新>;2023-06-24T01:57:42.528107Z&lt;/更新>; &lt;link href =&quot;https://johnnysswlab.com/make-your-programs-run-faster-by-better-using-the-data-cache/&quot;/>; &lt;作者>; &lt;名称>;伊顿菲尔&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=eatonphil&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;开发人员经常尝试通过创建复杂度较低的新算法来提高程序性能。然而，当这不可能时，可以使用低级优化来挤出更多性能。其中一种优化是更好地利用数据高速缓冲存储器。 &lt;a href=&quot;https://hackernews.betacat.io/#make-your-programs-run-faster-by-better-using-the-data-cache-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36453790&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么成千上万的棋盘游戏被埋在曼凯托之下&lt;/stitle>; &lt;id>;https://www.startribune.com /anti-monopoly-mankato-landfill-board-game-history/600279625/&lt;/id>; &lt;更新>;2023-06-24T02:57:42.528732Z&lt;/更新>; &lt;link href=&quot;https://www.startribune .com/anti-monopoly-mankato-landfill-board-game-history/600279625/&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://chorus.stimg.co/24698341/Anspach1976.jpg?fit=crop&amp;auto=format,compress&amp;cs=tinysrgb&amp;dpr=2&amp;crop= faces&amp;w=525&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;在明尼苏达州南部的某个地方，埋藏着大约 40,000 种棋盘游戏的残余物，这些棋盘游戏曾经作为大卖大富翁的反体制替代品而被创造和销售。 《反垄断》游戏在曼凯托制作，在 20 世纪 70 年代中期美国通货膨胀猖獗和制度不信任的背景下取得了成功。 &lt;a href=&quot;https://hackernews.betacat.io/#why-thousands-of-board-games-are-buried-beneath-mankato&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36454824&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;反对旅行的案例&lt;/stitle>; &lt;id>;https://www.newyorker.com/culture/the-weekend-essay/the- case-against-travel&lt;/id>; &lt;更新>;2023-06-24T10:57:42.530004Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/culture/the-weekend-essay/the -case-against-travel&quot;/>; &lt;作者>; &lt;名称>;tkgally&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tkgally&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/6495d60f69af7f864913e415/master/w_2560%2Cc_limit/Callard_final.jpg&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;“我喜欢旅行”这句话没有提供任何信息，因为几乎每个人都喜欢旅行。旅行通常被视为一种成就和一种变得有趣的方式，但 GK 切斯特顿和费尔南多·佩索阿等哲学家认为，旅行会使我们的思维变得狭隘，并使我们与人性分离。旨在体验变化的旅游业往往最终会在没有真正理解或重视变化的情况下给他人带来变化。游客受运动驱动，通常优先考虑游览旅游景点，而不是沉浸在文化中。 &lt;a href=&quot;https://hackernews.betacat.io/#the-case-against-travel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36457427&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;