<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-09-14T04:03:17.254081Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;macOS 14 Sonoma 中的错误导致我们的应用程序无法运行&lt;/stitle>; &lt;id>;https://mullvad.net/en/blog/2023/9/13/bug-in- macos-14-sonoma-prevents-our-app-from-working/&lt;/id>; &lt;更新>;2023-09-13T18:03:13.163967Z&lt;/更新>; &lt;link href=&quot;https://mulvad.net/ en/blog/2023/9/13/bug-in-macos-14-sonoma-prevents-our-app-from-working/&quot;/>; &lt;author>; &lt;name>;eptcyka&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=eptcyka&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mullvad.net/static/press/MullvadVPN_logo_Round_RGB_Color_positive.png&quot; 样式=“宽度：220像素；高度：221像素；” />;&lt;br />;macOS 14 Sonoma 测试版和候选版本包含一个错误，该错误会导致防火墙无法正确过滤流量。结果，我们的应用程序无法运行。 &lt;a href=&quot;https://hackernews.betacat.io/#bug-in-macos-14-sonoma-prevents-our-app-from-working&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37498979&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;别惹天才 (2010)&lt;/stitle>; &lt;id>;https://shreevatsa.wordpress.com/2010/ 06/04/dont-mess-with-a-genius/&lt;/id>; &lt;更新>;2023-09-13T21:03:13.166936Z&lt;/更新>; &lt;link href=&quot;https://shreevatsa.wordpress.com/ 2010/06/04/dont-mess-with-a-genius/&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wglb&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shreevatsa.files.wordpress.com/2010/06/newton-coat.png?w=700&quot; style=&quot;width: 220 像素；高度：244 像素；&quot; />;&lt;br />;艾萨克·牛顿作为造币厂管理员的鲜为人知的职业生涯涉及将罪犯绳之以法和重新铸币。他成功地简化了生产并提前完成了重铸，使国家免于经济崩溃。牛顿还扮演了刑事调查员、审讯员和检察官的角色，绞死了数十名造假者。 &lt;a href=&quot;https://hackernews.betacat.io/#dont-mess-with-a-genius-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37501231&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不要使用 Discord 作为问答论坛&lt;/stitle>; &lt;id>;https://kraktoos.com/posts/dont-use-discord-as-forum/&lt; /id>; &lt;更新>;2023-09-13T22:03:13.167650Z&lt;/更新>; &lt;link href=&quot;https://kraktoos.com/posts/dont-use-discord-as-forum/&quot;/>; &lt;作者>; &lt;name>;kraktoos&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kraktoos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Discord 不是理想的选择您下一个失败的副项目的问答论坛。混乱不和谐可能会带来疯狂的旋风。您发布的重要内容可能会在几秒钟内消失，被永无休止的消息流淹没。当然，他们引入了线程，但仍然有很多不足之处，特别是因为： 糟糕的搜索和发现 尝试在 Discord 中查找过去的讨论或解决方案就像蒙着眼睛喝醉了试图在大海捞针。 Discord 的搜索是魔鬼为了考验我们这些程序员的耐心而制造的东西。您可能会搜索几周前发送的消息，却空手而归，因为您错过了几个单词或其他一些令人恼火的愚蠢原因……Discord Odyssey 想象一下：您在一个完全依赖 Discord 提供支持的项目中遇到了问题和问题。你必须开始一个任务：首先在 SearX（或 Goog-🤮）上搜索项目名称，找到正确的链接，然后确保你在浏览器或应用程序上登录到 Discord，找到他们的 Discord 链接，加入服务器（在阅读（或不阅读？）并同意规则并选择观看该死的频道所需的角色之后），寻找屏幕左侧难以捉摸的帮助关键字，然后花费永恒的时间搜索您的问题或只是再次询问。与此同时，没有找到解决方案，最终只能安装一个新的、速度极快的新 JS 库……太短暂了，这是一个给你的曲线球：如果 Discord 决定终止怎么办？谁能保证明天就到了？像 Stack Overflow 这样的东西每天都会被废弃，但 Discord 却不会。专门的社区论坛 - 查看 Discourse 等平台。它们专为结构化讨论而设计，不会让您的帖子迷失在深渊中。良好的 SEO 可以帮助您的软件用户快速找到他们需要的内容。依靠优点 - Stack Overflow 等网站或 Reddit、Lemmy 或 Kbin 上的社区都是寻求帮助的绝佳场所。 Git It Done - 如果您正在处理代码问题，请依赖 GitHub、Gitlab、Gitea 或任何其他基于 Git 的问题跟踪系统，特别是如果您的项目是开源的，因为这是每个人在寻找您的项目时都会到的地方无论如何，对于大多数日常搜索来说，SEO 已经足够好了。请记住，Discord 很棒，但作为一个问答论坛，它就像使用抹刀来修理你的宇宙飞船。三思而后行（或多次思考，直到你意识到这是一个坏主意），并明智地选择（只是不要不和谐）！ &lt;a href=&quot;https://hackernews.betacat.io/#don-t-use-discord-as-your-qa-forum&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37502258&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DIY 近红外光谱仪&lt;/stitle>; &lt;id>;https://caoyuan.scripts.mit.edu/ir_spec.html&lt;/id>; &lt;更新>;2023-09-13T16:03:13.169005Z&lt;/更新>; &lt;link href=&quot;https://caoyuan.scripts.mit.edu/ir_spec.html&quot;/>; &lt;作者>; &lt;name>;johnmaguire&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=johnmaguire&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://caoyuan.scripts.mit.edu /images/ir_detector.jpg&quot; style=&quot;宽度：220px；高度：196px；&quot; />;&lt;br />;DIY光谱仪并不新鲜。你可以用手机摄像头和 CD-ROM 上的碎片制作一个衍射光栅。网上有很多这方面的教程。制作一个需要 5 美元。然而，硅基相机（CMOS 传感器）只能响应~1100 nm 的波长，这是一个物理限制——硅的带隙约为 1.1 eV，你无法激发波长大于 1.1 eV 的电子空穴对。约~1100 nm。因此，如果我们想要测量高于该波长的任何光，我们就需要不同的半导体。一种流行的选择是 InGaAs，通过改变铟与镓的含量，其带隙可调节至约 0.4 eV。但您可能不想知道 InGaAs 相机要花多少钱……虽然如今硅基相机便宜如泥土，但一维 InGaAs 像素阵列的成本已经高达数千美元。任何成熟的红外光谱仪系统的价格都超过 1 万美元，配有精美的热电冷却和精密光栅（我们的实验室实际上有一个）。之所以这么贵，是因为目标用户群是科研人员，而不是消费者。由于我最近对激光光学感兴趣（作为一种爱好）并希望 DIY 一些激光系统，这不可避免地需要使用近红外波长（1100 nm 以上），因此我迫切需要一种方法来分析我产生的光用我的激光晶体。有一天，我试图在 DigiKey 上搜索 InGaAs 光电二极管，结果发现单个 InGaAs 光电二极管的售价约为 20 美元。虽然它比硅光电二极管贵 100 倍，但我认为仅用这个光电二极管就可以制作一台光谱仪，而且绝对可以 DIY。这就是——一款测量800~1600 nm波长的光纤耦合红外光谱仪。光谱仪主要由四个部件组成：狭缝、衍射元件、探测器以及这些部件之间的中继光学器件。在我们的例子中，输入光纤充当我们的输入狭缝。我选择使用 50 um 芯多模光纤，以在光通量和光谱分辨率之间进行折衷。一条 2 米长的 SMA-905 光纤跳线可以在 AliExpress 上以大约 40 美元的价格购买，或者从 Thorlabs 购买 70 美元。衍射元件通常是光栅。选择具有正确线密度的光栅非常重要，以便在设计的衍射级（最常用的是一阶）下获得合理的色散（每度角的波长）。对于该项目，由于设计波长为 800 nm ~ 1600nm，每毫米 600 条线的线密度大约是合适的，这在设计波长范围内产生了 40° 的色散。请参阅下面的 600 线/毫米光栅上 50° 入射角的衍射角图。第二阶和第三阶显然不可用，因为它们与入射光束重叠。接下来是探测器。我们如何仅用一个光电二极管“像素”来检测来自一系列角度的光？我们将光电二极管安装在电机上并对其进行扫描！为此，我以 50 美元的价格从 Amazon 购买了步进驱动线性平台。这个小平台结构精良，每步分辨率为 5 um，对于我们的分辨率来说绰绰有余。上面提到的InGaAs光电二极管的有效面积为φ1mm，而50um输入狭缝的图像会比这个小一点。因此，输出狭缝也需要尽可能靠近光电二极管安装，以确保光电二极管的尺寸不会影响光谱分辨率。这不需要太精确——我只是用一些铝制遮蔽胶带制作了一条约0.3毫米宽的狭缝。最后，我们需要光学器件将所有这些组件连接在一起。事实证明，如果您想要高光谱分辨率和高光通量（这最终决定了信噪比），那么这部分是相当昂贵和棘手的。基本上，从输入狭缝（可以视为点源）开始，我们需要（1）将其散焦成平行光束，（2）将其引导到光栅上，以及（3）聚焦衍射光束（每种颜色大致平行）到传感器上。传统上，标准方式是称为 Czerny-Turner 设计的全镜配置。使用镜子而不是透镜的原因是为了最大限度地减少色差，以便所有波长都可以聚焦到同一焦平面上。然而，如果没有真正的光学工作台，这些抛物面镜的对齐是相当困难的，所以我决定寻求一条更适合 DIY 的不同路径。第一步——将光纤输出散焦成平行光束，可以使用光纤准直器来实现。这基本上是一个与光纤芯接口处的后焦点预先对准的透镜。该设备的一端已穿有标准 SMA-905 连接器，以便光纤跳线可以直接与其连接。另一端是平行光束的自由空间输出。非常容易使用！然而，准直器中使用的透镜确实存在色差，因此只有设计波长（本例中为 980 nm）的光束才能真正准直。较短的波长稍微会聚，较长的波长稍微发散。幸运的是，色散水平似乎是可以容忍的，并且可以通过优化探测器的位置来进一步纠正。光纤准直器并不是非常便宜——它在 Thorlabs 上的售价为 160 美元。虽然还有其他选择，但它们要么比 Thorlabs 的价格更高，要么看起来不如 Thorlabs 的好。我很幸运地在 eBay 上找到了一对，每根售价 70 美元，所以我可以在光纤的每一端各使用一个。接下来，将光束引导到衍射光栅上很容易，因为您只需要一个好的镀银镜子。我再次在 eBay 上找到了一款（12.7 毫米 x 12.7 毫米），售价 25 美元，而一款新产品在 Thorlabs 上售价 35 美元。我认为您能找到的任何像样的镜子都可能有效，但如果它是为可见光设计的，则不要使用介电镜，因为它可能会超出我们所需的近红外波长的范围。最后一个光学器件是透镜/镜子，用于将衍射光束重新聚焦到探测器上。我们的光束是每种颜色的 φ2mm 圆形光束。为了再次简化事情，我选择使用柱面透镜将光线聚焦在衍射平面上。这样做主要有两个好处：(1) 聚焦光束是一条约 0.5 毫米宽（光束腰）和约 2 毫米高（原始圆形光束的尺寸）的线。这使得衍射平面和探测器的对准相对不重要（公差〜1毫米）。 (2) 柱面透镜的矩形形状比圆形透镜更容易安装。你只需要一块双面胶带！下图显示了光学布局，以及使用 Optometrika 进行的光路光线追踪。柱面透镜的放置（位置和角度）会影响不同波长的焦点。我这里并没有进行严格的计算——我只是通过试错的方法来找出最佳的放置位置。公差似乎相当大，可能是因为与光束尺寸相比，其焦距相对较长（150 毫米）。理论分辨率（不考虑光学像差）可以根据此处使用的光学器件的参数进行估计。光学系统的放大倍数为150毫米（柱面透镜）/11毫米（光纤准直器）= 13.6倍。展宽主要来自三个来源： 输入狭缝：50 um 纤芯在屏幕上创建 0.05 × 13.6 = 0.68 mm 光斑的图像。这相当于波长展宽约 6 nm。光栅：光栅处的有限光束直径限制了光谱分辨率。光栅的分辨率（使用一阶）等于被照明的线数。 2 毫米的光斑的分辨率为 1,200，因此这有助于将波长展宽约 1 纳米。输出狭缝：光电二极管处的狭缝进一步将光谱响应展宽约 3 nm。您可以看到展宽的主要来源来自输入狭缝尺寸（光纤 c。&lt;a href=&quot;https://hackernews.betacat.io/#a-diy-near-ir-spectrometer&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37498142&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;跳过 API，发布您的数据库&lt;/stitle>; &lt;id>;https://fly。 io/blog/skip-the-api/&lt;/id>; &lt;更新>;2023-09-13T21:03:13.169683Z&lt;/更新>; &lt;link href=&quot;https://fly.io/blog/skip-the- api/&quot;/>; &lt;作者>; &lt;名称>;danielskogly&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=danielskogly&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://fly.io/blog/skip-the-api/assets/skip-the-api-cover.webp&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br / >;使用 Fly.io，您可以在几分钟内让您的应用程序在全球范围内运行，而使用 LiteFS，您可以将 SQLite 与您的应用程序一起运行。LiteFS Cloud 为 LiteFS 提供托管备份和时间点恢复。&lt;a href=&quot;https:// /hackernews.betacat.io/#skip-the-api-ship-your-database&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37497345&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Birb：使用鸟表情符号进行编程&lt;/stitle>; &lt;id>;https://esolangs.org/wiki/Birb&lt;/id>; &lt;更新>;2023-09-14T00:03:13.171054Z&lt;/更新>; &lt;link href=&quot;https://esolangs.org/wiki/Birb&quot;/>; &lt;作者>; &lt;name>;marvinborner&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=marvinborner&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Birb 行走时摇摇晃晃：它们以交替的关联顺序减少，从 birb 索引 ⌊len/2⌋ 处的左关联性开始。人们只能想象如果两只鹦鹉互相交谈会发生什么：🦜🦜 ->; 💥。同样的情况也发生在🐤🐤；他们就是无法停止蹒跚而行！ &lt;a href=&quot;https://hackernews.betacat.io/#birb-programming-with-bird-emojis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37478347&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;压缩人类知识的赫特奖&lt;/stitle>; &lt;id>;http://prize.hutter1.net/&lt;/id>; &lt;updated>;2023-09-13T23:03:13.171706 Z&lt;/updated>; &lt;link href=&quot;http://prize.hutter1.net/&quot;/>; &lt;作者>; &lt;name>;kelseyfrog&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =kelseyfrog&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://prize.hutter1.net/kumar.jpg&quot; style=&quot;width: 220px; height: 294px;&quot; />;&lt;br />;Hutter 奖，也称为 500&#39;000 欧元压缩人类知识奖，是一项将 1GB 文件 enwik9 压缩到小于当前记录约 114MB 的竞赛。该奖项旨在鼓励智能压缩机/程序的开发，作为通向通用人工智能的途径。 &lt;a href=&quot;https://hackernews.betacat.io/#hutter-prize-for-compressing- human-knowledge&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37502329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Unity 后的游戏开发&lt;/stitle>; &lt;id>;https://www.computerenhance.com/p/game-development-post-unity&lt;/id>; &lt;更新>;2023-09-14T01:03:13.172366Z&lt;/更新>; &lt;link href=&quot;https://www.computerenhance.com/p/game-development-post-unity&quot;/>; &lt;作者>; &lt;名称>;generic human &lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=generic human&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/ image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc9c62294-e1ff-46eb-8b1c-ad903695fa91_2253x1134。 png&quot; 样式=&quot;宽度：220 像素；高度：111 像素；&quot; />;&lt;br />;Unity 与游戏开发商的关系一直在恶化，正如他们的财务状况和向投资者提供的报表所表明的那样。他们最近宣布对许可条款进行追溯性变更，向游戏开发商收取大量的每单位费用。这一决定引起了开发人员的不满，并引发了人们对 Unity 作为核心技术合作伙伴的可信度的担忧。 &lt;a href=&quot;https://hackernews.betacat.io/#game-development-post-unity&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37503351&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;显示 HN：Kr8s – Kubernetes 的 Python 客户端库&lt;/stitle>; &lt;id>;https://github.com/kr8s-org/kr8s&lt;/id>; &lt;更新>;2023-09 -13T20:03:13.173035Z&lt;/updated>; &lt;link href=&quot;https://github.com/kr8s-org/kr8s&quot;/>; &lt;作者>; &lt;name>;jacobtomlinson&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=jacobtomlinson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kr8s-org/kr8s/main/品牌/logo-wide.png&quot; style=&quot;宽度：220px；高度：111px；&quot; />;&lt;br />;Kr8s 是 kubectl 用户熟悉的一个简单且可扩展的 Kubernetes Python 客户端库。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-kr8s-a-python-client-library-for-kubernetes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37500781&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;类别理论说明 - 集合&lt;/stitle>; &lt;id>;https://abuseofnotation.github.io/category-theory-illusterated/01_set/&lt; /id>; &lt;更新>;2023-09-13T16:03:13.174368Z&lt;/更新>; &lt;link href=&quot;https://abuseofnotation.github.io/category-theory-illusterated/01_set/&quot;/>; &lt;作者>; &lt;名称>;boris_m&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=boris_m&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// Abusofnotation.github.io/category-theory-illusterated/01_set/boolean.svg&quot; style=&quot;width: 220px; height: 74px;&quot; />;&lt;br />;集合论和范畴论是抽象理论，为解释各种现象提供了总体框架。它们的工作方式类似于定义工具的语言，并且可以用作具体理论的构建块。集合是事物的集合，函数是集合之间的关系，将一个集合中的每个元素与另一个集合中的一个元素精确匹配。 &lt;a href=&quot;https://hackernews.betacat.io/#category-theory-illusterated-sets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37478111&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;展示 HN：Lantern – 用于构建 AI 应用程序的 PostgreSQL 矢量数据库&lt;/stitle>; &lt;id>;https://docs.lantern.dev/blog/2023/09/13/hello-world &lt;/id>; &lt;更新>;2023-09-13T18:03:13.175057Z&lt;/更新>; &lt;link href=&quot;https://docs.lantern.dev/blog/2023/09/13/hello-world&quot;/>; &lt;作者>; &lt;名称>;ngalstyan4&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ngalstyan4&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://docs.lantern.dev/assets/images/throughput-136291481b16945501e8412f5360597c.png&quot; style=&quot;宽度：220px；高度：192px；&quot; />;&lt;br />;Lantern 是用于构建 AI 应用程序的 PostgreSQL 矢量数据库扩展。它提供并行索引创建功能，并构建在 uarch 之上，uarch 是 HNSW 的最先进的实现。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-lantern-a-postgresql-vector-database-for-building-ai-applications&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37499375&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么选择茴香？&lt;/stitle>; &lt;id>;https://fennel-lang.org/rationale&lt;/id>; &lt;更新>;2023-09-13T15:03:13.175762Z&lt;/updated>; &lt;link href=&quot;https://fennel-lang.org/rationale&quot;/>; &lt;author>; &lt;name>;hk__2&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=hk__2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Lua 是一种强大且简单的编程语言，旨在放入其他程序中。 Fennel 是编写 Lua 程序的另一种表示法，有助于避免常见的陷阱。它消除了语法的复杂性，鼓励更简洁的代码，并包括解构、模式匹配和宏系统等功能。 &lt;a href=&quot;https://hackernews.betacat.io/#why-fennel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37497131&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;科学家找到了如何在水中书写&lt;/stitle>; &lt;id>;https://arstechnica.com/science/2023/09/scientists-figured-out-how-to-write-in-water/ &lt;/id>; &lt;更新>;2023-09-14T00:03:13.176428Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/science/2023/09/scientists-figured-out-how-to- write-in-water/&quot;/>; &lt;作者>; &lt;名称>;sohkamyung&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type= &quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2023/09/waterwrite1-800x525.jpg&quot; style=&quot;宽度：220px；高度：145px；&quot; />;&lt;br />;德国物理学家团队开发了一种在水和其他液体基质上书写的独特方法。他们使用离子交换材料制成的微珠作为笔，改变水的局部pH值，吸引墨水颗粒并让它们在水中写字。 &lt;a href=&quot;https://hackernews.betacat.io/#scientists-figured-out-how-to-write-in-water&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37480039&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RPG in a Box：基于 Godot 构建的基于网格、体素风格的游戏引擎&lt;/stitle>; &lt;id>;https://www.rpginabox。 com/&lt;/id>; &lt;更新>;2023-09-13T22:03:13.177106Z&lt;/更新>; &lt;link href=&quot;https://www.rpginabox.com/&quot;/>; &lt;作者>; &lt;名称>;clessg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=clessg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.rpginabox.com /user/images/buy_on_itch.png&quot; style=&quot;宽度：220px；高度：104px；&quot; />;&lt;br />;RPG in a Box 是一款游戏引擎，让您无需编程或建模知识即可轻松创建游戏和交互体验。它提供定制和开放性，同时对初学者友好。您可以将游戏导出为适用于 Windows 和 MacOS 的独立格式。 &lt;a href=&quot;https://hackernews.betacat.io/#rpg-in-a-box-a-grid-based-voxel-style-game-engine-built-on-godot&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37502218&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bitty Engine：一个很小的游戏引擎&lt;/stitle>; &lt;id>;https://paladin- t.github.io/bitty/&lt;/id>; &lt;更新>;2023-09-13T16:03:13.177793Z&lt;/更新>; &lt;link href=&quot;https://paladin-t.github.io/bitty/&quot;/ >; &lt;作者>; &lt;名称>;user8501&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=user8501&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://paladin-t.github.io/bitty/imgs/logo.png” style=&quot;宽度：220px；高度：107px；&quot; />;&lt;br />;Bitty Engine 是一个跨平台游戏引擎和开源框架，为游戏开发提供了一组功能。它可以用 Lua 编程，并与内置编辑器集成，使其适用于商业和非商业项目。 &lt;a href=&quot;https://hackernews.betacat.io/#bitty-engine-an-itty-bitty-game-engine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37497956&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RustRover – 独立的 Rust IDE&lt;/stitle>; &lt;id>;https://blog.jetbrains.com/rust/2023/09/13/introducing-rustrover- a-standalone-rust-ide-by-jetbrains/&lt;/id>; &lt;更新>;2023-09-13T19:03:13.178461Z&lt;/更新>; &lt;link href=&quot;https://blog.jetbrains.com/rust/ 2023/09/13/introducing-rustrover-a-standalone-rust-ide-by-jetbrains/&quot;/>; &lt;author>; &lt;name>;margor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=margor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.jetbrains.com/wp-content/uploads/2023/09/DSGN-17357-Facebook -1200x628-1.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;RustRover 是一个独立的 Rust IDE，旨在提供与现有 JetBrains IDE 同等的功能。在免费抢先体验计划 (EAP) 期结束后，它将根据商业计划提供。 &lt;a href=&quot;https://hackernews.betacat.io/#rustrover-a-standalone-rust-ide&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37494605&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我想我有点讨厌延迟加载&lt;/stitle>; &lt;id>;https://shkspr.mobi/blog/2023/09/i-think-i-kind-of- hat-lazy-loading/&lt;/id>; &lt;更新>;2023-09-14T02:03:13.179793Z&lt;/更新>; &lt;link href=&quot;https://shkspr.mobi/blog/2023/09/i-think- i-kind-of-hate-lazy-loading/&quot;/>; &lt;作者>; &lt;名称>;edent&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=edent&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2023/09/broken-image.png&quot; style=&quot;宽度：220px；高度： 108 像素；” />;&lt;br />;延迟加载是一种推迟下载图像直到图像即将滚动到视图中的功能。虽然它在某些情况下有好处，但它也可能导致可怕的故障模式，特别是在互联网访问不稳定的情况下。 &lt;a href=&quot;https://hackernews.betacat.io/#i-think-i-kind-of-hate-lazy-loading&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37479596&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;当 MFA 不是 MFA 时，或者我们如何遭到网络钓鱼&lt;/stitle>; &lt;id>;https://retool.com/blog/mfa-isnt- mfa/&lt;/id>; &lt;更新>;2023-09-13T20:03:13.180466Z&lt;/更新>; &lt;link href=&quot;https://retool.com/blog/mfa-isnt-mfa/&quot;/>; &lt;作者>; &lt;name>;dvdhsu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dvdhsu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /retool.com/blog/content/images/2023/09/1611555539954.jpeg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;2023 年 8 月 29 日，Retool 通知 27 名云客户，其账户遭到未经授权的访问。该攻击是鱼叉式网络钓鱼攻击的结果，该攻击通过基于短信的网络钓鱼攻击来利用一名员工。 &lt;a href=&quot;https://hackernews.betacat.io/#when-mfa-isn-t-mfa-or-how-we-got-phished&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37500895&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;重温堆栈幺半群&lt;/stitle>; &lt;id>;https://raphlinus.github.io/gpu/2021/05/13/ stack-monoid-revisited.html&lt;/id>; &lt;更新>;2023-09-13T20:03:13.181134Z&lt;/更新>; &lt;link href=&quot;https://raphlinus.github.io/gpu/2021/05/13 /stack-monoid-revisited.html&quot;/>; &lt;作者>; &lt;名称>;rvrs&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rvrs&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://raphlinus.github.io/assets/stack_monoid_parent_tree.svg&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;GPU 对数组结构数据非常高效，并且可以并行操作元素。在piet-gpu中，场景描述是树形结构的，并且使用堆栈monoid算法来处理无界堆栈大小。 &lt;a href=&quot;https://hackernews.betacat.io/#the-stack-monoid-revisited&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37500938&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;在某些 USB 集线器上按端口控制 USB 电源&lt;/stitle>; &lt;id>;https://github.com/codazoda/hub-ctrl.c&lt;/id>; &lt;更新>;2023-09-13T19:03:13.181833Z&lt;/更新>; &lt;link href=&quot;https://github.com/codazoda/hub-ctrl.c&quot;/>; &lt;作者>; &lt;名称>;codazoda&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=codazoda&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b165388161d4f47040617e59f5b8a753b0b63dd2c6b83b7796e923b80474d917/ codazoda/hub-ctrl.c&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文讨论如何在某些 USB 集线器上逐个端口控制 USB 电源。它解释了大多数 USB 集线器不具备软件控制电源切换所需的硬件。本文提供了有关如何安装所需软件以及如何识别和控制特定 USB 设备的说明。 &lt;a href=&quot;https://hackernews.betacat.io/#control-usb-power-on-a-port-by-port-basis-on-some-usb-hubs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37479901&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我为 Sublime Text 付费&lt;/stitle>; &lt;id>;https://github.com/kapitanluffy/i -shameously-paid-for-sublime-text&lt;/id>; &lt;更新>;2023-09-14T01:03:13.182500Z&lt;/更新>; &lt;link href=&quot;https://github.com/kapitanluffy/i-shameously- pay-for-sublime-text&quot;/>; &lt;作者>; &lt;名称>;kapitanluffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kapitanluffy&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/a0adf0aff2ebfcb03f261bb5339c7d80f69b5c203d22d1ee96ba1d8530d3c17d/kapitanluffy/i-shamefully-paid-for-sublime-text&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;这个存储库证明了我为 Sublime Text 付出了一些辛苦赚来的钱的大胆和毫无歉意的行为。是的，我心甘情愿地花钱买了一个文本编辑器。 &lt;a href=&quot;https://hackernews.betacat.io/#i-paid-for-sublime-text&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37503587&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;最伟大的造假者（2021）&lt;/stitle>; &lt;id>;https://www.guo.io/the-greatest-counterfeiter-in-the-world/&lt;/id>; &lt;更新>;2023-09-13T15:03:13.183856Z&lt;/更新>; &lt;link href=&quot;https://www.guo.io/the-greatest-counterfeiter-in-the-world/&quot;/>; &lt;作者>; &lt;name>;AlexeyMK&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=AlexeyMK&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.guo.io/content/images/size/w960/2021/04/rupixen-com-66PlOuRRvS8-unsplash.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;Artur Virgílio Alves Reis 是一位造假大师，差点在葡萄牙引发了全国性的金融危机。他伪造了学位、支票和印刷官方货币的银行合同，最终印刷了1亿埃斯库多，相当于当时葡萄牙GDP的0.88%。 &lt;a href=&quot;https://hackernews.betacat.io/#the-greatest-counterfeiter-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37490644&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;去氧肾上腺素的无用性（2022）&lt;/stitle>; &lt;id>;https://www.science.org/content/blog-post/useless-phenylephrine&lt;/id>; &lt;更新>;2023 -09-13T18:03:13.184542Z&lt;/更新>; &lt;link href=&quot;https://www.science.org/content/blog-post/useless-phenephrine&quot;/>; &lt;作者>; &lt;名称>;ctoth&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ctoth&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/ #the-useless-of-phenephrine-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37499106&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Go 中的 WASI 支持&lt;/stitle>; &lt;id>;https://go.dev/blog/wasi&lt;/id>; &lt;更新>;2023-09-13T17:03:13.185914Z&lt;/更新>; &lt;link href=&quot;https://go. dev/blog/wasi&quot;/>; &lt;author>; &lt;name>;spacey&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=spacey&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://go.dev/doc/gopher/runningsquare.jpg&quot; style=&quot;width: 220px; height: 207px;&quot; />;&lt;br />;Go 1.21 通过新的 GOOS 值 wasip1 添加了一个针对 WASI 预览版 1 系统调用 API 的新端口。该端口构建在 Go 1.11 中引入的现有 WebAssembly 端口的基础上。&lt;a href=&quot;https ://hackernews.betacat.io/#wasi-support-in-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 37498820&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;