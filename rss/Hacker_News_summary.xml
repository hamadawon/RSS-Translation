<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-06-22T10:03:12.903400Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;如何做你一直在避免的事情&lt;/stitle>; &lt;id>;https://jasonfeifer.beehiiv.com/p/the-thing-that-seems-like- a-bad-idea-maybe-try-it&lt;/id>; &lt;更新>;2023-06-22T04:02:38.856282Z&lt;/更新>; &lt;link href=&quot;https://jasonfeifer.beehiiv.com/p/the -thing-that-seems-like-a-bad-idea-maybe-try-it&quot;/>; &lt;author>; &lt;name>;duck&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =duck&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.beehiiv.com/cdn-cgi/image/fit=scale-down,format=auto,onerror =重定向，质量= 80 /上传/资产/文件/41c08808-c6b7-4bfb-afd5-c78e97bd0fea/Better__2_.png&quot;样式=“宽度：220px； height: 124px;&quot; />;&lt;br />;有时候，我们认为是负债的事情实际上是我们最大的资产。我们经常避免做某事，因为我们假设其他人也有同样的想法。收集社交信息并比较最坏的情况非常重要- 确定不采取行动的情况。&lt;a href=&quot;https://hackernews.betacat.io/#how-to-do-the-thing-you-ve-been-avoiding&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36427849&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;对 Svelte(Kit)、一年后的 3B 请求的思考&lt;/stitle>; &lt;id>; https://claudioholanda.ch/en/blog/svelte-kit-after-3-billion-requests/&lt;/id>; &lt;更新>;2023-06-22T04:02:38.857726Z&lt;/更新>; &lt;link href=&quot; https://claudioholanda.ch/en/blog/svelte-kit-after-3-billion-requests/&quot;/>; &lt;author>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://claudioholanda.ch/assets/blog/en/0003/1.svg&quot; style=&quot;宽度：220px； height: 108px;&quot; />;&lt;br />;自该项目上线以来，受众群体大幅增长，每天接待数十万访问者。每个访问者都会导航页面及其组件并与之交互，从而产生了约 30 亿次访问量过去 12 个月内的请求。&lt;a href=&quot;https://hackernews.betacat.io/#thoughts-on-svelte-kit-one-year-and-3b-requests-later&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36427583&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;协程让高中生轻松编写机器人代码&lt;/stitle>; &lt;id>;https://bvisness.me /coroutines/&lt;/id>; &lt;更新>;2023-06-22T05:02:38.859310Z&lt;/更新>; &lt;link href=&quot;https://bvisness.me/coroutines/&quot;/>; &lt;作者>; &lt;名称>;bvisness&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=bvisness&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://bvisness.me/协程/auto.jpeg&quot; style=&quot;width: 220px; height: 141px;&quot; />;&lt;br />;协程让高中生可以轻松编写机器人代码。从 Java 切换到 Lua 并使用协程改善了自主代码体验。协程允许更轻松地修改代码、插入操作和延迟。它们还可以以类似程序代码的方式组合自主行为。 &lt;a href=&quot;https://hackernews.betacat.io/#coroutines-make-robot-code-easy-for-high-schoolers&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36428044&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;法国政府称 uBlock Origin、Signal 等用户是潜在的恐怖分子&lt;/stitle >; &lt;id>;https://www.laquadrature.net/2023/06/05/affaire-du-8-decembre-le-chiffrement-des-communications-assimile-a-un-comportement-terroriste/&lt;/id>; &lt;更新>;2023-06-22T05:02:38.859741Z&lt;/更新>; &lt;link href=&quot;https://www.laquadrature.net/2023/06/05/affaire-du-8-decembre-le-chiffrement- des-communications-assimile-a-un-comportement-terroriste/&quot;/>; &lt;作者>; &lt;名称>;Bright_Machine&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Bright_Machine&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.laquadrature.net/wp-content/uploads/sites/8/2023/06/IMG_20230605_115637-scaled.jpg&quot; style=&quot;宽度：220px； height: 98px;&quot; />;&lt;br />;本文基于“12 月 8 日”案件的信息，该案件中 7 人于 2020 年 12 月因“恐怖犯罪团伙”被起诉。他们的审判计划于 2023 年 10 月进行. 被告强烈否认恐怖主义指控，他们谴责政治审判、调查有偏见和缺乏证据。&lt;a href=&quot;https://hackernews.betacat.io/#french-govt-says-users- of-ublock-origin-signal-etc-are-潜在恐怖分子&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36428046&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;用于为 Apple Vision Pro 创建空间体验的开发者工具&lt;/stitle>; &lt;id>;https://www.apple.com/newsroom/2023/06/developer-tools-to-create-spatial-experiences-for-apple- Vision-pro-now-available/&lt;/id>; &lt;更新>;2023-06-21T21:02:38.860116Z&lt;/更新>; &lt;link href=&quot;https://www.apple.com/newsroom/2023/06/ Developer-tools-to-create-spatial-experiences-for-apple-vision-pro-now-available/&quot;/>; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.apple.com/newsroom/images/2023/06/developers-begin-creating -spatial-computing-experiences-for-apple-vision-pro/article/Apple-Vision-Pro-SDK-availability-developer-lifestyle_big.jpg.large.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;VisionOS 软件开发套件 (SDK) 使 Apple 开发者社区能够以前所未有的方式将他们的应用程序变为现实。Apple 今天宣布推出新的软件工具和技术，使开发者能够为 Apple Vision Pro（Apple 的第一台空间计算机）创造突破性的应用程序体验。&lt;a href=&quot;https://hackernews.betacat.io/#developer-tools-to-create-spatial-experiences-for-apple-vision-pro&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36423648&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我是否收到了欺诈性的 DMCA 删除？&lt;/stitle>; &lt;id>;https ://incoherency.co.uk/blog/stories/hardbin-fake-takedowns.html&lt;/id>; &lt;更新>;2023-06-21T23:02:38.860507Z&lt;/更新>; &lt;link href=&quot;https:// incoherency.co.uk/blog/stories/hardbin-fake-takedowns.html&quot;/>; &lt;作者>; &lt;名称>;jstanley&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jstanley&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://img.incoherency.co.uk/4452/thumb&quot; style=&quot;width: 220px; height: 136px;&quot; />;&lt;br />;我今天收到了 3 封 DMCA 删除电子邮件，涉及我的 Hardbin.com IPFS 网关上的 7350 个 URL。这些 URL 涉嫌提供侵权书籍副本。奇怪的是这 7350 个 URL，在我拥有 nginx 日志期间，没有一个日志被访问过，而且在我检查过的日志中，甚至没有一个起作用。这是否意味着 DMCA 删除通知是欺诈性的？&lt;a href=&quot;https://hackernews .betacat.io/#did-i-receive-fraudulent-dmca-takedowns&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 36425433&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;免费器官&lt;/stitle>; &lt;id>;https://www.organclearinghouse.com/organs-for-sale#/3141-austin-san-francisco&lt;/id>; &lt;更新>;2023-06-21T20:02 ：38.860870Z&lt;/更新>; &lt;link href=&quot;https://www.organclearinghouse.com/organs-for-sale#/3141-austin-san-francisco&quot;/>; &lt;作者>; &lt;名称>;mhb &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mhb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该管风琴是为 1915 年巴拿马泛太平洋博览会的节日大厅建造的。后来搬迁到市政厅附近新建的公民礼堂。 &lt;a href=&quot;https://hackernews.betacat.io/#free-organ&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=36423047&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;树木年轮水印：扩散图像的隐形鲁棒指纹&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2305.20030&lt;/id>; &lt;updated>;2023-06-22T00:02:38.861226 Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs/2305.20030&quot;/>; &lt;作者>; &lt;name>;anjel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=anjel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb. png&quot; 样式=&quot;宽度：220 像素；高度：129 像素；&quot; />;&lt;br />;对生成模型的输出加水印是追踪版权和防止人工智能生成内容潜在危害的一项关键技术。在本文中，我们介绍了一种称为树环水印的新技术，该技术可以稳健地识别扩散模型输出的指纹。 &lt;a href=&quot;https://hackernews.betacat.io/#tree-ring-watermark-invisible-robust-fingerprints-of-diffusion-images&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36426136&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;科学与统计 (1976) [pdf]&lt;/stitle>; &lt;id>;https://www-sop.inria.fr/members/Ian .Jermyn/philosophy/writings/Boxonmaths.pdf&lt;/id>; &lt;更新>;2023-06-22T03:02:38.861586Z&lt;/更新>; &lt;link href=&quot;https://www-sop.inria.fr/members/ Ian.Jermyn/philosophy/writings/Boxonmaths.pdf&quot;/>; &lt;作者>; &lt;名称>;dredmorbius&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dredmorbius&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;科学与统计 (1976) 是一篇讨论科学方法各个方面的文章，强调理论与实践之间迭代的重要性。它强调了灵活性的必要性、设计有效模型的能力以及从错误中学习的重要性。本文还探讨了科学在理解自然方面的作用以及数学在物理学和统计学中的应用。 &lt;a href=&quot;https://hackernews.betacat.io/#science-and-statistics-1976-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36427374&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;为什么选择 Kakoune – 寻求更好的代码编辑器 (2016)&lt;/stitle>; &lt;id>;https://kakoune.org/why-kakoune/why-kakoune.html&lt;/ id>; &lt;更新>;2023-06-21T21:02:38.863905Z&lt;/更新>; &lt;link href=&quot;https://kakoune.org/why-kakoune/why-kakoune.html&quot;/>; &lt;作者>; &lt;名称>; r3trohack3r&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=r3trohack3r&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://kakoune. org/why-kakoune/kakoune_logo.svg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;投入时间来掌握代码编辑器是值得的，因为代码编辑是编程的重要组成部分。像 Kakoune 这样的模态文本编辑器是最佳选择，因为它们提供了方便的快捷方式、一种文本编辑语言，并使编辑变得更快、更有趣。 &lt;a href=&quot;https://hackernews.betacat.io/#why-kakoune-the-quest-for-a-better-code-editor-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36424256&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ruby 黑客指南 (2004)&lt;/stitle>; &lt;id>;https://ruby-hacking-guide.github.io&lt;/id >; &lt;更新>;2023-06-21T23:02:38.864436Z&lt;/更新>; &lt;link href=&quot;https://ruby-hacking-guide.github.io&quot;/>; &lt;作者>; &lt;名称>;swatson741&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;部分章节为预览。这意味着它们还没有经过充分审查，一些图表可能丢失，一些句子可能有点粗糙。但这也意味着它们正在接受公开审查，因此请毫不犹豫地解决问题。 &lt;a href=&quot;https://hackernews.betacat.io/#ruby-hacking-guide-2004&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36425858&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;为了可疑的好处而缩短编译时间&lt;/stitle>; &lt;id>;https://claytonwramsey.github.io/2023/06/20/fiddler-const-magic.html&lt;/id >; &lt;更新>;2023-06-22T01:02:38.864945Z&lt;/更新>; &lt;link href=&quot;https://claytonwramsey.github.io/2023/06/20/fiddler-const-magic.html&quot;/>; &lt;作者>; &lt;name>;Tyrubias&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Tyrubias&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;在过去的两年里，我一直在构建一个名为 Fiddler 的国际象棋引擎。按照国际象棋引擎的标准来看，它并不是很好，但这不是重点——我主要是为了好玩而研究它。现在，我正在重新设计我的移动生成器，以更多地使用静态的、预先计算的数据，而不是运行时生成。 &lt;a href=&quot;https://hackernews.betacat.io/#blowing-up-my-compile-times-for-dubious-benefits&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36399832&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;神经网络坦克城市传奇&lt;/stitle>; &lt;id>;https://gwern.net/tank&lt;/id>; &lt;更新>;2023-06- 21T22:02:38.865426Z&lt;/updated>; &lt;link href=&quot;https://gwern.net/tank&quot;/>; &lt;author>; &lt;name>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gwern.net/static/img/logo/logo-whitebg-large-border.png “样式=”宽度：220px;高度：249px;“ />;&lt;br />;人工智能领域的一个警示故事讲述了研究人员训练神经网络（NN）来检测照片中的坦克，却发现神经网络学到了一些无用的东西，比如一天中的时间。这个故事经常被用来警告算法的局限性以及数据收集以避免数据集偏差的重要性。然而，经过广泛的研究，得出的结论是，坦克的故事只是一个都市传说，并没有第一手资料。 &lt;a href=&quot;https://hackernews.betacat.io/#the-neural-net-tank-urban-legend&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36416895&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每个程序员都应该了解内存知识 (2007) [pdf]&lt;/stitle>; &lt;id>;https://people.freebsd.org/~lstewart/articles/cpumemory。 pdf&lt;/id>; &lt;更新>;2023-06-21T17:02:38.865941Z&lt;/更新>; &lt;link href=&quot;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&quot;/>; &lt;作者>; &lt;name>;quackulus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=quackulus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;随着 CPU 核心变得更快、更重要的是，大多数程序的限制因素现在是并且在一段时间内仍将是内存访问。硬件设计人员提出了更加复杂的内存处理和加速技术（例如 CPU 缓存），但如果没有程序员的帮助，这些技术就无法以最佳方式工作。 &lt;a href=&quot;https://hackernews.betacat.io/#what-every-programmer-should-know-about-memory-2007-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36420502&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大众支持：荷兰建筑师看到了工业化建筑的潜力&lt;/stitle>; &lt;id>;https://placesjournal.org/article/reconsidering-housing -theorist-john-habraken/&lt;/id>; &lt;更新>;2023-06-22T04:02:38.866459Z&lt;/更新>; &lt;link href=&quot;https://placesjournal.org/article/reconsidering-housing-theorist-john -habraken/&quot;/>; &lt;作者>; &lt;名称>;棱镜&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=prismatic&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://placesjournal.org/wp-content/uploads/2023/03/8346107960_90e9502646_o.CMS_.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;荷兰建筑师 John Habraken 致力于设计灵活的多户住宅建筑，以适应家庭的多样化需求。他认为，工业化建设可以让居住者参与设计过程，并带来更大的住房灵活性。他的想法挑战了建筑师的传统角色，并强调了用户参与塑造生活环境的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#mass-support-dutch-architect-saw-the-pottial-of-induscialized-building&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36399842&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：gpt-engineer – 开发人员修补 AI 编程工具的平台&lt;/stitle>; &lt;id>;https://news。 ycombinator.com/item?id=36422730&lt;/id>; &lt;更新>;2023-06-21T19:02:38.866989Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=36422730 &quot;/>; &lt;author>; &lt;name>;antonoo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=antonoo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;GPT 工程师是一个开放平台，供开发人员试验和创建自己的代码生成工具箱。该项目仍处于早期阶段，还有改进的空间。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-gpt-engineer-platform-for-devs-to-tinker-with-ai-programming-tools&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36422730&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;近乎浪漫的语言&lt;/stitle>; &lt;id>;https://dannybate.com/2022/11/ 21/the-almost-romance-languages/&lt;/id>; &lt;更新>;2023-06-22T02:02:38.867511Z&lt;/更新>; &lt;link href=&quot;https://dannybate.com/2022/11/21/ the-almost-romance-languages/&quot;/>; &lt;作者>; &lt;名称>;sokols&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sokols&lt;/uri>; &lt;/author>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://dannybate.files.wordpress.com/2022/11/20221121_104459.png?w=1000&quot; style=&quot;宽度：220px；高度：194px；&quot; />;&lt;br />;罗曼语系，包括法语、西班牙语、葡萄牙语、加泰罗尼亚语、意大利语和罗马尼亚语，都是拉丁语的后裔。然而，将一种语言分类为罗曼语并不是一个明确的二元区别，因为这些语言中的某些元素并不具有拉丁语起源。阿尔巴尼亚语和威尔士语是两种可以被视为“近乎罗曼语”的语言，因为它们受拉丁语的影响较小。 &lt;a href=&quot;https://hackernews.betacat.io/#the-almost-romance-languages&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36415891&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;高效 C 阅读日志：专业 C 编程简介&lt;/stitle>; &lt;id>;https://yongjie.codes/reading-logs/ effective-c/&lt;/id>; &lt;更新>;2023-06-21T22:02:38.868030Z&lt;/updated>; &lt;link href=&quot;https://yongjie.codes/reading-logs/ effective-c/&quot;/>; &lt;author>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;对于好奇者来说这是一本优秀的书：这些书更多的是让人困惑，而不是阐明。 ，而一个好奇的学习者可以期待几个小时的尝试（并且惨遭失败）来理解其中包含的散文，只有在简短的 Google 搜索和访问 cppreference.com（以及，上帝）之后才能完全理解该主题（以及更多内容）禁止，StackOverflow）。解释也不是很清楚，比如序列点的定义是副作用完成的时刻；与 cppreference.com 上的解释方式进行比较：=如果子表达式 E1 和 E2 之间存在序列点，则 E1 的值计算和副作用都会在 E2 的每个值计算和副作用之前排序= (并提供了sequence-before的单独定义）。 C 的几个原则之一是信任程序员，允许程序员做需要做的事情。 C 的不同实现可以有不同的行为。而且由于 C 中的某些行为是未定义的，因此仅通过编写简单的测试程序来检查这些行为是不可能理解 C 语言的。独立环境可能不提供操作系统，通常用于嵌入式编程。程序启动时调用的函数的名称和类型是实现定义的。 （例如，int main(void) {...}）C 标准文档的附录 J 中列举了五种可移植性问题：即 C 标准未指定的程序行为，并且可能在实现之间提供不同的结果，但在实现中具有一致的、记录的行为。例如，函数参数存储布局，在同一程序内的函数调用之间可能会有所不同。即，C 标准未定义的行为； “使用不可移植或错误的程序构造或错误数据时的行为，标准对此没有强加任何要求”即，在许多系统中广泛使用但不能移植到所有实现的扩展对象是存储在其中的存储你可以代表价值观； “执行环境中的数据存储区域，其内容可以表示值，……当被引用时，对象可以被解释为具有特定类型”指针可以被认为是指向内存中某个位置的地址，其中对象或函数被存储。存储持续时间是对象的生命周期。有四种可用的存储持续时间：自动、静态、线程和分配。在文件范围内声明的对象具有静态存储持续时间。这些对象的生命周期是程序的整个执行过程。还可以使用存储类说明符 static 将块作用域内的变量声明为具有静态存储持续时间。注意：范围和生命周期是完全不同的概念。范围适用于标识符，而生存期适用于对象。标识符的范围是可以通过其名称访问标识符所表示的对象的代码区域。对象的生命周期是指该对象存在的时间段。对象类型具有对齐要求，该要求对该类型的对象可以分配的地址施加限制。一般来说，C 程序员不需要关心对齐要求，因为编译器会为其各种类型选择合适的对齐方式。传统上，这是通过使用链接器命令、使用 malloc 过度分配内存然后向上舍入用户地址或涉及其他非标准设施的类似操作来完成的。每个编译器实现都会将 char 定义为与其他两个类型具有相同的对齐方式、大小、范围、表示形式和行为，但 char 仍然是与其他两个类型不同的类型。 C还提供了wchar_t类型来表示非英文字符所需的更大的字符集。使用上面时可以省略int这个词（即代替short int myShort = 10;） 无符号整数类型：unsigned char、unsigned Short int、unsigned int、unsigned long int、unsigned long long int。程序员可以使用 &lt;stdint.h>; 或 &lt;inttypes.h>; 中的定义指定实际宽度，例如 uint32_t。当用作函数返回类型时，表示该函数没有返回值。定义下标 ([]) 运算符和加法 (+) 运算符，以便 str[i] 与 *(str + i) 相同。因此 str[i] = 10 变为 。如果一元 &amp; 运算符的操作数是 [] 运算符的结果，则结果就像删除 &amp; 运算符并将 [] 运算符更改为 + 运算符一样。例如，&amp;str[10] 与 str + 10 相同。联合类型与结构类似，只是成员对象使用的内存重叠。联合可以同时包含一种类型的对象，并在不同时间包含不同类型的对象，但不能同时包含这两种对象，并且主要用于节省内存。标签不是类型名称，不能用于声明变量。例如，要使用上面的 s 标签来声明变量，必须这样做：联合和枚举的名称也是标签而不是类型。因此，名称不能单独用于声明变量：结构体、联合体和枚举的标记与普通标识符定义在不同的命名空间中，并且不会相互冲突。用 const 限定符声明的对象不可修改：即不可赋值，但可以具有常量初始值设定项 如果 const 指针指向实际上未使用 const 定义的对象，则可以丢弃指针中的 const（倒数第二个）下面的行）：上面列出的对象中的值可能会在编译器不知情的情况下发生更改；例如，即使没有 C 程序的交互，实时时钟的值也会改变。易失性确保每次应该在程序中读取该值时都会实际读取该值（否则编译器可能会优化某些读取）例如，以下代码确保读取端口的值并将其分配回端口（而不是它是一个无操作，因为它是对 self 的赋值）：与 Java 不同，C 中的 volatile 限定类型不应该用于线程之间的同步。编译器将假设通过带有限制限定指针的指针访问的对象不会被其他指针访问，从而允许更多优化。例如：声明整数类型时，除非int是唯一的关键字，否则可以将其删除。例如，long long int 与 long long 相同。使用无符号整数类型时，请记住避免使用 &lt;limits.h>; 库进行环绕（如有必要）。使用补码系统，我们可以表示与正值相比多一个负值。例如，8 位有符号整数可以表示 [-128, 127] 范围内的值。这个结果是一个有趣的边缘情况，其中 abs(-128) 不是相同位宽的表示。浮点通常使用 (a) 符号位、(b) 指数和 (c) 有效数（也称为尾数）来表示。为了避免需要单独编码指数中的负值，应用了偏移量。例如，要对 8 位指数的零值进行编码，我们可以存储值 127。指数 -127（其中每个位都是 0）和 +128（其中每个位都是 1）是为特殊数字保留的。调整尾数，使第一个数字始终为 1，这在编码方案中是隐含的。这样一个使用 1 位符号位、8 位指数位、23 位有效位的浮点数实际上可以表示 24 位精度。使用 1 位作为符号位、11 位作为指数位、52 位作为有效位的 double 可以表示 53 位精度。非常小以至于即使指数的最小值也不足以表示的非零浮点数称为次正规（也称为非正规）浮点数。在这种情况下，指数的所有位都为零，并且有效数的隐含前导一位现在是隐含的。 &lt;a href=&quot;https://hackernews.betacat.io/#reading-log-for- effective-c-an-introduction-to-professional-c-programming&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36417075&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 ANSI-C 进行面向对象编程 (1993) [pdf]&lt;/stitle>; &lt;id>;https://www. mclibre.org/descargar/docs/libros/ooc-ats.pdf&lt;/id>; &lt;更新>;2023-06-21T19:02:38.868915Z&lt;/更新>; &lt;link href=&quot;https://www.mclibre.org /descargar/docs/libros/ooc-ats.pdf&quot;/>; &lt;作者>; &lt;名称>;Tomte&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;本书不会赞扬面向对象编程或谴责旧方法。我们只是要使用 ANSI-C 来发现面向对象编程是如何完成的、它的技术是什么、为什么它们帮助我们解决更大的问题，以及我们如何利用通用性和编程来更早地发现错误。 &lt;a href=&quot;https://hackernews.betacat.io/#object-orient-programming-with-ansi-c-1993-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36422116&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过开发模式让 Figma 更好地为开发者服务&lt;/stitle>; &lt;id>;https://www.figma.com/blog/introducing-dev-mode/ &lt;/id>; &lt;更新>;2023-06-21T17:02:38.869315Z&lt;/更新>; &lt;link href=&quot;https://www.figma.com/blog/introducing-dev-mode/&quot;/>; &lt;作者>; &lt;name>;emilsjolander&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=emilsjolander&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /cdn.sanity.io/images/599r6htc/localized/3d50ba4aee877e89ed863d515b87408ceb669098-1560x1248.png?w=1560&amp;h=1248&amp;q=75&amp;fit=max&amp;auto=format&quot; style=&quot;宽度：220px；高度：176像素；” />;&lt;br />;Figma 引入了开发模式，这是一个旨在满足开发人员需求的新工作区。开发模式为开发人员提供了他们日常使用的工具，使他们能够快速有效地访问设计文件中的信息和资产。 &lt;a href=&quot;https://hackernews.betacat.io/#making-figma-better-for-developers-with-dev-mode&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36420712&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;地图扭曲了我们看待世界的方式&lt;/stitle>; &lt;id>;https://unchartedterritories.tomaspueyo.com/p/maps-tropic-how-we -see-the-world&lt;/id>; &lt;更新>;2023-06-21T18:02:38.869756Z&lt;/更新>; &lt;link href=&quot;https://unchartedterritories.tomaspueyo.com/p/maps- Distortion-how- we-see-the-world&quot;/>; &lt;作者>; &lt;名称>;yarapavan &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=yarapavan&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3。 amazonaws.com%2Fpublic%2Fimages%2F9023d572-d461-47cb-83b3-49585f7238bc_480x480.gif&quot; style=&quot;宽度：220 像素；高度：220 像素；&quot; />;&lt;br />;地图是 3D 球体的 2D 投影，会导致扭曲。墨卡托投影扭曲了我们对世界的感知，因为它以赤道和参考子午线为中心。不同地区和国家看起来比实际情况更大或更小。 &lt;a href=&quot;https://hackernews.betacat.io/#maps- Distortion-how-we-see-the-world&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36421315&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;翻新旧电脑的艺术&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/06/21/pc_officina_positive_trashware/&lt;/id>; &lt;更新>;2023-06-21T22:02:38.870168Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/06/21/pc_officina_positive_trashware/&quot;/>; &lt;作者>; &lt;名称>;samizdis &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=samizdis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia.co .uk/2023/06/20/shutterstock_usedlaptops.jpg&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;Red Hat 平台技术客户经理 Andrea Perotti 在 Devconf.cz 上发表了关于重新利用剩余 IT 设备来帮助有需要的人的演讲。 “垃圾软件”的概念涉及翻新报废的剩余套件以运行现代操作系统和软件，为那些买不起新电脑的人提供计算机知识和互联网接入。 &lt;a href=&quot;https://hackernews.betacat.io/#the-art-of-refurbing-old-computers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36416887&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;MyNOR – 小型计算机。没有CPU，没有ALU，一个或非门就足够了&lt;/stitle>; &lt;id>;http://www.mynor.org/&lt;/id>; &lt;updated>;2023-06-21T18:02:38.870549Z&lt;/updated>; &lt;link href=&quot;http://www.mynor.org/&quot;/>; &lt;作者>; &lt;名称>;ColinWright&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ColinWright&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;MyNOR 项目页面。 MyNOR 是一款具有分立 CMOS 逻辑 CPU 的 8 位单板计算机，仅使用一个或非门而不是 ALU 来进行所有计算。 &lt;a href=&quot;https://hackernews.betacat.io/#mynor-the-yet-minor-computer-no-cpu-no-alu-one-nor-gate-is-enough&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36416325&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;哈佛不诚实专家被指控不诚实&lt;/stitle>; &lt;id>;https://www.ft. com/content/a8c07365-f85d-47a0-98a4-b6f71da697ef&lt;/id>; &lt;更新>;2023-06-21T21:02:38.870957Z&lt;/更新>; &lt;link href=&quot;https://www.ft.com/content /a8c07365-f85d-47a0-98a4-b6f71da697ef&quot;/>; &lt;作者>; &lt;名称>;hansmeierbaum&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hansmeierbaum&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;哈佛不诚实专家被指控不诚实&lt;a href=&quot;https://hackernews.betacat.io/#harvard-dishonesty-expert-accused-of-dishonesty&quot; target=&quot;_blank&quot;>;[summary ]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36424090&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国 FTC 称亚马逊欺骗了数百万消费者加入 Prime&lt;/stitle>; &lt;id>;https:/ /www.reuters.com/legal/amazon-duped-millions-consumers-into-enrolling-prime-ftc-2023-06-21/&lt;/id>; &lt;更新>;2023-06-22T00:02:38.871352Z&lt;/已更新>; &lt;link href=&quot;https://www.reuters.com/legal/amazon-duped-millions-consumers-into-enrolling-prime-ftc-2023-06-21/&quot;/>; &lt;作者>; &lt;名称>; testrun&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=testrun&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cloudfront- us-east-2.images.arcpublishing.com/reuters/6HY6LI3W6ZKSRF2PDMTPXYEB4M.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;美国联邦贸易委员会指控亚马逊在未经数百万消费者同意的情况下将其纳入其付费订阅 Amazon Prime 服务，并使他们难以取消。联邦贸易委员会已起诉亚马逊，指控该公司故意欺骗消费者在不知情的情况下注册 Amazon Prime。&lt;a href=&quot;https://hackernews.betacat.io/#amazon-duped-millions-of-consumers-into-enrolling-in-prime-us- ftc-says&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36426239&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;关于 Vim、Helix 和 Kakoune 的更多事后认识&lt;/ stitle>; &lt;id>;https://phaazon.net/blog/more-hindsight-vim-helix-kakoune&lt;/id>; &lt;更新>;2023-06-22T03:02:38.871779Z&lt;/更新>; &lt;link href=&quot; https://phaazon.net/blog/more-hindsight-vim-helix-kakoune&quot;/>; &lt;author>; &lt;name>;cosmojg&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= cosmojg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Helix 是一个原生集成了许多通常是其他编辑器插件的功能的编辑器。它具有树托管支持、LSP 支持、Git 集成、寄存器和用户定义的寄存器。 Helix 中的配置是在 TOML 中完成的，并且可以动态调整和重新加载。 Helix 没有光标，而是使用选择，这允许无缝和自然的编辑操作。 &lt;a href=&quot;https://hackernews.betacat.io/#even-more-hindsight-on-vim-helix-and-kakoune&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36427267&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;敏捷是人，其余的是评论&lt;/stitle>; &lt;id>;https://buttondown.email/hillelwayne/archive/agile-is-people- the-rest-is-commentary/&lt;/id>; &lt;更新>;2023-06-21T21:02:38.872550Z&lt;/更新>; &lt;link href=&quot;https://buttondown.email/hillelwayne/archive/agile-is- people-the-rest-is-commentary/&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://buttondown.imgix.net/images/9a9c0b94-1130-4252-9377-4a04d1998309.png?w=960&amp;fit=max&quot; style=&quot;width: 220px;高度：154px；” />;&lt;br />;敏捷是一个优先考虑人员而非流程的概念。虽然敏捷宣言很简洁，但现实世界的复杂性需要开发特定的方法和技术，以使敏捷在不同的情况下发挥作用。 &lt;a href=&quot;https://hackernews.betacat.io/#agile-is-people-the-rest-is-commentary&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36424339&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;