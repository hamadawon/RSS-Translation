<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-09-04T12:06:02.796246Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;塑料钱&lt;/stitle>; &lt;id>;https://computer.rip/2023-09-03- Plastic-money.html&lt;/id>; &lt;更新>;2023-09- 04T08：05：43.869148Z &lt;/更新>; &lt;link href =“https://computer.rip/2023-09-03- Plastic-money.html”/>; &lt;作者>; &lt;名称>;伯特曼&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=bertman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;信用卡实际上并不包含金钱；余额跟踪和授权决策发生在金融机构内。然而，智能卡具有在内部存储和处理信息的能力，允许离线交易和安全身份验证。 &lt;a href=&quot;https://hackernews.betacat.io/# Plastic-money&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37378179&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Amiga Samplers：1990 年的预算舞曲&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=i9MXYZh1jcs&lt;/id>; &lt;updated>;2023-09-04T03:05： 44.000441Z&lt;/updated>; &lt;link href=&quot;https://www.youtube.com/watch?v=i9MXYZh1jcs&quot;/>; &lt;author>; &lt;name>;bane&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=bane&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/i9MXYZh1jcs&quot;frameborder=&quot;0&quot;allowfullscreen loading=&quot;懒惰&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#amiga-samplers-budget-dance-music-in-1990&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376675&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;电视博物馆将在 48 小时内消亡，除非索尼撤销 YouTube 版权警告&lt;/stitle>; &lt;id>;https://torrentfreak.com/电视博物馆将在 48 小时内死亡，除非索尼收回-youtube-copyright-strikes-230904/&lt;/id>; &lt;更新>;2023-09-04T11:05:44.001954Z&lt;/更新>; &lt; link href=&quot;https://torrentfreak.com/tv-museum-will-die-in-48-hours-unless-sony-retracts-youtube-copyright-strikes-230904/&quot;/>; &lt;作者>; &lt;名称>;CoBE10 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CoBE10&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;经典芝加哥电视博物馆 (MCCTv) 面向由于反盗版公司 Markscan 代表索尼提出版权主张，该服务可能会在 48 小时内终止。该博物馆最初是模拟广告和电视剪辑的集合，现已发展成为一个拥有超过 8000 万浏览量的受人喜爱的在线平台。然而，与 Markscan 的纠纷让 MCCTv 难以解决版权索赔并挽救该项目。 &lt;a href=&quot;https://hackernews.betacat.io/#tv-museum-will-die-in-48-hours-unless-sony-retracts-youtube-copyright-strikes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37379272&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;curl-wget 维恩图&lt;/stitle>; &lt;id>;https://daniel.haxx.se/ blog/2023/09/04/the-curl-wget-venn-diagram/&lt;/id>; &lt;更新>;2023-09-04T10:05:44.003056Z&lt;/更新>; &lt;link href=&quot;https://daniel. haxx.se/blog/2023/09/04/the-curl-wget-venn-diagram/&quot;/>; &lt;作者>; &lt;名称>;TangerineDream&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=TangerineDream&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://daniel.haxx.se/blog/wp-content/uploads/2023/09/wget-vs -curl-venn-diagram2.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;wget 不是curl 的竞争对手，而是功能重叠的配套工具。作者创建了一个维恩图来说明curl和wget之间的技术差异和相似之处。 &lt;a href=&quot;https://hackernews.betacat.io/#the-curl-wget-venn-diagram&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37378669&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;硬件随机位生成器&lt;/stitle>; &lt;id>;https://web.jfet.org/hw-rng.html&lt;/id>; &lt;更新>;2023-09-04T09： 05:44.003970Z&lt;/updated>; &lt;link href=&quot;https://web.jfet.org/hw-rng.html&quot;/>; &lt;author>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文讨论了使用反向偏置 PN 结和 ALS04 反相器的硬件随机位生成器的构造。该电路以低成本产生随机位，并且可以通过散列输出来提高安全性。 &lt;a href=&quot;https://hackernews.betacat.io/#hardware-random-bit-generator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37378450&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;科学家使用量子装置将化学过程减慢 100B&lt;/stitle>; &lt;id>;https://www.sydney.edu.au/news-opinion/news/2023/08/ 29/conical-intersection-simulation-slowed-by-quantum-computer-100-billion-times.html&lt;/id>; &lt;更新>;2023-09-04T04:05:44.005320Z&lt;/更新>; &lt;link href=&quot;https ://www.sydney.edu.au/news-opinion/news/2023/08/29/conical-intersection-simulation-slowed-by-quantum-computer-100-billion-times.html&quot;/>; &lt;作者>; &lt;name>;yoquan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yoquan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.sydney.edu.au/dam/corporate/images/news-and-opinion/news/2023/august/vanessa-olaya-aguedelo-christophe-valahu-quantum-control-lab-sydney-nanoscience-hub-photo -stefanie-zingsheim.jpg/_jcr_content/renditions/cq5dam.web.1280.1280.jpeg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;悉尼大学的科学家使用量子计算机将关键化学过程减慢了 1000 亿倍。这一突破可能在材料科学、药物设计和太阳能收集。&lt;a href=&quot;https://hackernews.betacat.io/#scientists-use-quantum-device-to-slow-chemical-process-by-factor-of-100b&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376998&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我所知道的有关软盘的一切&lt;/stitle>; &lt;id>;https://thejpster.org。 uk/blog/blog-2023-08-28/&lt;/id>; &lt;更新>;2023-09-04T02:05:44.006067Z&lt;/更新>; &lt;link href=&quot;https://thejpster.org.uk/blog/ blog-2023-08-28/&quot;/>; &lt;作者>; &lt;名称>;jnord&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;软盘驱动器是一种奇怪的东西。我们知道它们是容纳那些几乎方形的小塑料“软盘”的插槽，而我们现在只在计算机博物馆中真正看到它们。 &lt;a href=&quot;https://hackernews.betacat.io/#everything-i-know-about-floppy-disks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37376369&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Haskell 迷你模式手册（2020）&lt;/stitle>; &lt;id>;https://kowainik.github.io/posts/haskell-mini-patterns&lt;/id>; &lt;更新>;2023-09-04T05:05:44.006943Z&lt;/更新>; &lt;link href=&quot;https://kowainik.github.io/posts/haskell-mini-patterns&quot;/>; &lt;作者>; &lt;名称>;Tomte&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://kowainik.github.io /images/logo-tr.png&quot; style=&quot;宽度：220px；高度：80px；&quot; />;&lt;br />;尽管 Haskell 是一种强大的语言，有助于实现健壮且可维护的程序，但在 Haskell 的可能性海洋中航行仍然具有挑战性。该语言为您提供了大量很棒的方法，但了解如何以及在何处正确使用它们并不总是那么简单。幸运的是，与任何其他主流编程语言一样，Haskell 也有生成高质量代码的最佳实践和推荐方法。 &lt;a href=&quot;https://hackernews.betacat.io/#haskell-mini-patterns-handbook-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37377246&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;乐高 3 轴泡沫塑料切割机 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=gR0SYhG76fw&lt;/id>; &lt;更新>;2023 -09-03T23:05:44.008889Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=gR0SYhG76fw&quot;/>; &lt;作者>; &lt;名称>;pavel_lishin&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=pavel_lishin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/gR0SYhG76fw&quot;frameborder= “0”allowfullscreen loading =“lazy”>;&lt;/iframe>; &lt;a href =“https://hackernews.betacat.io/#lego-3-axis-styrofoam-cutter-video”target =“_blank”>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37375254&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用未初始化的内存来获取乐趣和利润 (2008)&lt;/stitle>; &lt;id>;https://research. swtch.com/sparse&lt;/id>; &lt;更新>;2023-09-04T01:05:44.009720Z&lt;/更新>; &lt;link href=&quot;https://research.swtch.com/sparse&quot;/>; &lt;作者>; &lt;名称>;Smaug123&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Smaug123&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://research .swtch.com/sparse0b.png&quot; style=&quot;width: 220px; height: 114px;&quot; />;&lt;br />;本文讨论了一种巧妙的技巧，允许数组值保持未初始化状态，并且在正常操作期间仍能正确运行。该技巧涉及使用两个数组（一个名为密集数组，一个名为稀疏数组）来表示稀疏整数集。密集数组按插入顺序存储集合中的元素，而稀疏数组将整数映射到密集数组中的索引。这种表示形式允许高效的集合操作和迭代，尽管它是有代价的内存使用量增加。&lt;a href=&quot;https://hackernews.betacat.io/#using-uninitialized-memory-for-fun-and-profit-2008&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37360314&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pretendo：3DS 和 Wii U 的免费开源服务器替代品&lt;/stitle>; &lt;id>;https://pretendo。网络/&lt;/id>; &lt;更新>;2023-09-04T05:05:44.010629Z&lt;/更新>; &lt;link href=&quot;https://pretendo.network/&quot;/>; &lt;作者>; &lt;name>;jonny_eh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jonny_eh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pretendo.network/assets/images /n2ds.png&quot; style=&quot;宽度: 220px; height: 231px;&quot; />;&lt;br />;Pretendo 是一个开源 Nintendo Network 替代品，旨在为 Wii U 和 3DS 系列游戏机构建自定义服务器。我们的目标是保留这些游戏机的在线功能，让玩家能够继续充分玩他们最喜欢的 Wii U 和 3DS 游戏。&lt;a href=&quot;https://hackernews.betacat.io/#pretendo-a-free-and-open-source-server-replacement-for- the-3ds-and-wii-u&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37377078&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;液体简介类型&lt;/stitle>; &lt;id>;https://goto.ucsd.edu/~ucsdpl-blog/liquidtypes/2015/09/19/liquid-types/&lt;/id>; &lt;更新>;2023-09-03T21:05： 44.012599Z&lt;/更新>; &lt;link href=&quot;https://goto.ucsd.edu/~ucsdpl-blog/liquidtypes/2015/09/19/liquid-types/&quot;/>; &lt;作者>; &lt;名称>;marvinborner&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=marvinborner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://goto.ucsd.edu /~nvazou/liquid.jpg&quot; style=&quot;width: 220px; height: 149px;&quot; />;&lt;br />;Liquid Types 通过逻辑谓词丰富了现有的类型系统，并允许您指定和自动验证代码的语义属性。它们提供了一种指定和自动验证代码的语义属性的方法。&lt;a href=&quot;https://hackernews.betacat.io/#a-gentle-introduction-to-liquid-types&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37349276&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Glove80 人体工学键盘&lt;/stitle>; &lt;id>;https://danieldk.eu/Posts/2023-09-03-Glove80.html&lt;/id>; &lt;更新>;2023-09 -04T03:05:44.013574Z&lt;/更新>; &lt;link href=&quot;https://danieldk.eu/Posts/2023-09-03-Glove80.html&quot;/>; &lt;作者>; &lt;名称>;JNRowe&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=JNRowe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://danieldk.eu/Posts/2023- 09-03-Glove80/glove80-black.jpeg&quot; style=&quot;宽度：220px;高度：129px;&quot; />;&lt;br />;Glove80 是 MoErgo 开发的一款人体工学键盘。它具有可变分体设计、拇指簇、键槽、掌托和低调的 Choc v1 开关。与 Kinesis Advantage2 相比/360 Pro，Glove80 提供改进的键孔设计，更容易接触外食指柱。&lt;a href=&quot;https://hackernews.betacat.io/#glove80-ergonomic-keyboard&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376686&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;战争游戏：战场策略和国际象棋游戏&lt;/stitle>; &lt;id>;https://www .thearticle.com/war-games-battlefield-strategy-and-the-game-of-chess&lt;/id>; &lt;更新>;2023-09-04T08:05:44.014683Z&lt;/更新>; &lt;link href=&quot;https: //www.thearticle.com/war-games-battlefield-strategy-and-the-game-of-chess&quot;/>; &lt;author>; &lt;name>;mellosouls&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=mellosouls&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s3-eu-west-2.amazonaws.com/photos.thearticle.com/应用程序/生产/作者/4/detail_330px-Raymond_Keene_1985_21.jpg&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;国际象棋游戏最初是根据古印度陆军的四个兵种：骑兵、步兵、大象和战车进行的。它最初被称为“Chaturanga”，指的是这四个兵种早在白垩纪时期，当我在德威学院学习国际象棋和历史时，我的国际象棋教育就以国际象棋棋手的战略圣经《我的系统》的作者阿伦·尼姆佐维奇的著作为基础。当时，我还形成了理论我可以进一步模仿威灵顿公爵的军事行动，特别是在西班牙/葡萄牙半岛战争中，对抗拿破仑元帅领导的法国军队。我从铁公爵那里得到的重要教训——主要是从查尔斯·奥曼爵士的《英国史》和阿瑟·布莱恩特爵士关于拿破仑战争的三部曲——都是坚不可摧的防御的建设，威灵顿在托雷斯韦德拉什防线消灭马塞纳元帅的纵队就证明了这一点。当机会出现时，牢不可破的抵抗将与闪电袭击结合起来，就像威灵顿在萨拉曼卡和维多利亚取得的决定性胜利一样。后者激发了路德维希·范·贝多芬的“战斗交响曲”。半岛战争期间，威灵顿面对法国元帅马塞纳、马尔蒙、维克多、内伊、苏尔特和拿破仑的弟弟西班牙国王约瑟夫，以智取胜。当然，他的终极杰作是滑铁卢战役，威灵顿亲自击败了拿破仑，从而结束了皇帝短暂的百日帝国重生。总的来说，令我印象深刻的是，许多最著名的陆上军事胜利都可以与国际象棋游戏找到相似之处，正如 Hieronymus Vida 在他的诗 Scacchia Ludus (1525) 中所写：“Ludimus effigiem belli, simulataque veris”（“我们玩国际象棋”）国际象棋游戏，模拟战争”）。事实上，一些军队（例如纳粹德国和苏联的军队）积极鼓励他们的军队下国际象棋。与此同时，在第二次世界大战期间，美军（在著名拳击冠军乔·路易斯的支持下）敦促部队参加要求不那么高的跳棋/跳棋游戏。最后，斯科特·布尔曼在他的著作《旷日持久的游戏：毛泽东革命战略的魏棋解读》中，通过中国古代古典围棋（也称为围棋）的折射和解释媒介，解释了毛泽东的军事行动。卫驰）。因此，我提出的平行论点是有历史、先例和事实支持的。在我看来，这些著名的战役即使不是精确的复制品，至少也能带来有趣的国际象棋相似之处：高格马拉之战（又名阿尔贝拉之战），公元前 331 年：亚历山大大帝击败了波斯万王之王大流士的大军，绕过了大流士的庞大军队。他集结军队，将侵略直接瞄准敌方君主。这里让我产生共鸣的是 1851 年阿道夫·安德森 (Adolf Anderssen) 和莱昂内尔·基塞利茨基 (Lionel Kieseritzky) 之间的不朽游戏，巨大的物质差距丝毫没有改变怀特对黑王发动检查交配袭击的目的。这场比赛结束时，白方以微小但紧凑的兵力将黑王将死，而黑军的其余部分则只能袖手旁观。在接下来的八个例子中，我邀请 TheArticle 的读者和我一起解决识别国际象棋游戏的难题，无论是您自己的游戏，还是已知的经典游戏，都符合平行法案。为了让事情顺利进行，我在每种情况下都指出了与国际象棋游戏的链接，我相信这提供了合适的相似之处。公元前 216 年坎尼之战：汉尼拔引诱拥挤的罗马中锋，然后从侧翼粉碎，近两千年后，苏丹苏莱曼·卡努尼（被称为“伟大的”）重复了这一策略，当时他从德夫希尔挑选的禁卫军消灭了罗马军队。 1526 年莫哈奇战役中匈牙利国王的基督教军队。这与 1971 年前世界冠军蒂格兰·彼得罗相 (Tigran Petrosian) 和维克多·科尔奇诺伊 (Viktor Korchnoi) 之间的国际象棋比赛类似。在这里，科尔奇诺伊 (Korchnoi) 建立了一个巨大而笨重的棋子中心，彼得罗相 (Petrosian) 从侧翼摧毁了它。法萨卢斯之战（Battle of Pharsalus）公元前 48 年：尤利乌斯·凯撒军队中训练有素的步兵击败了庞培大帝的骑兵。一场决定性的战斗最终导致罗马共和国被凯撒/奥古斯都元首统治所取代。与 1961 年约翰·利特尔伍德 (John Littlewood) 与米哈伊尔·鲍特维尼克 (Mikhail Botvinnik) 的对局进行比较，以及白方如何发动大规模的骑士式进攻，而鲍特维尼克却用他的棋子巧妙地阻止了进攻。 1415年阿金库尔战役：紧凑的英国步兵，依靠长弓，消灭了一支规模更大的马背上的法国装甲骑士。类似的例子是 1843 年皮埃尔·查尔斯·富尼耶·德·圣阿芒 (Pierre Charles Fournier de Saint Amant) 和英国伟人霍华德·斯汤顿 (Howard Staunton) 之间的比赛。斯汤顿阻止了他英勇的法国对手的每一次进攻。事实上，当时斯汤顿在巴黎这场比赛中的胜利经常被比作威灵顿在滑铁卢的胜利，尽管我保留了这种类比，正如我们将看到的，鲍比·费舍尔和鲍里斯·斯帕斯基之间的一场混战。 1645 年内斯比之战：英国内战中的一次决定性交战，奥利弗·克伦威尔 (Oliver Cromwell) 和新模范军的骑兵向查理一世的保皇党军队挥出右勾拳，基本上终止了国王在第一次内战中的抵抗。 1970 年，在我自己与欧文·欣德尔 (Owen Hindle) 的比赛中，我遵循了克伦威尔 (Cromwell) 的策略，先从一侧冲过，然后向右转动，详细摧毁了黑人的阵地。 1704 年布伦海姆战役：马尔伯勒公爵是英格兰陆战中最伟大的军事天才，他削弱了面对他的法巴军队的侧翼，然后以集结的骑兵中队从中央突破。 1960 年乔纳森·彭罗斯 (Jonathan Penrose) 和米哈伊尔·塔尔 (Mikhail Tal) 之间的比赛首先是侧翼小冲突，然后是海啸般的大规模中央推进。 1805 年奥斯特利茨战役（也称为三皇之战）：拿破仑的杰作。矛盾的是，皇帝放弃了中央高地，却在毁灭性的反击中夺回了它。这场战斗在托尔斯泰的巨著《战争与和平》中占有重要地位。 1986 年，两位伟大的国际象棋世界冠军加里·卡斯帕罗夫 (Garry Kasparov) 和阿纳托利·卡尔波夫 (Anatoly Karpov) 之间的国际象棋比赛取得了胜利，卡斯帕罗夫放弃了王后一侧和中心的大部分区域，以攻击黑王的庇护所。 1815 年滑铁卢战役：惠灵顿公爵与当时最伟大的将军拿破仑本人进行了经典的惠灵顿战役。公爵将坚不可摧的防御与致命一击相结合，恰到好处地发动反击。在我看来，这场战斗类似于另一场伟大的竞争：1972年，鲍里斯·斯帕斯基和鲍比·费舍尔这对对立的巨人之间的国际象棋比赛，标志着世界超级大国之间的同源之战——不再是大英帝国与法国，而是美国与苏联。在这场比赛的第 13 场比赛中，就像在滑铁卢一样，斯帕斯基以令人印象深刻的活力向前推进，但被费舍尔的反攻击退。经过多次“猛烈打击”后，美国人最终通过在翼上传球的前进来决定比赛，这在之前并不是主要的行动场景，这反映了布吕歇尔率领的普鲁士军队抵达滑铁卢战场的情况。 1863 年葛底斯堡战役：南方联盟将军罗伯特·E·李 (Robert E. Lee) 率领 15,000 名步兵发动拿破仑纵队攻击，称为皮克特冲锋。与滑铁卢战役一样，北方指挥官米德精心策划的集中防御火力挫败了进攻，纵队全部人力的损失使战争的天平向有利于北方的方向倾斜。此后，尤利西斯·S·格兰特将军在荒野之战中进行了旷日持久的消耗战，最终消灭了南方联盟的抵抗。每个棋手都会认识到过早和考虑不周的攻击会导致灾难的综合症。 1996 年深蓝（国际象棋计算机）击败加里·卡斯帕罗夫就是一个典型的例子：&lt;a href=&quot;https://hackernews.betacat.io/#war-games-battlefield-strategy-and-the-game- of-chess&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37378196&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Netflix DVD 死胡同的自白&lt;/stitle >; &lt;id>;https://www.theatlantic.com/ideas/archive/2023/09/netflix-dvds-mail-ending/675204/&lt;/id>; &lt;更新>;2023-09-04T01:05:44.015150Z&lt; /updated>; &lt;link href=&quot;https://www.theatlantic.com/ideas/archive/2023/09/netflix-dvds-mail-ending/675204/&quot;/>; &lt;作者>; &lt;名称>;fortran77&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=fortran77&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.theatlantic.com/thumbor /n0aqNyveA7uKHCdWnHBbOGPcII4=/0x0:4800x2700/960x540/media/img/mt/2023/09/Netflix_Final_083123/original.png&quot; style=&quot;宽度：220 像素；高度：124 像素；&quot; />;&lt;br />;尽管 Netflix DVD 服务日渐衰落，但我仍然忠于自己的 Netflix DVD 帐户 14 年。队列允许我保存标题并按顺序接收它们，这是我忠诚的主要原因。 &lt;a href=&quot;https://hackernews.betacat.io/#confessions-of-a-netflix-dvd-dead-ender&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37374753&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;丹尼斯·里奇主页&lt;/stitle>; &lt;id>;http://cm.bell-labs.co/who/dmr/&lt;/id>; &lt;更新>;2023 -09-04T02:05:44.015578Z&lt;/更新>; &lt;link href=&quot;http://cm.bell-labs.co/who/dmr/&quot;/>; &lt;作者>; &lt;名称>;colinprince&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=colinprince&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://cm.bell-labs.co/who /dmr/dmr.gif&quot; style=&quot;宽度：220px；高度：256px；&quot; />;&lt;br />;丹尼斯·里奇是一位善良、可爱、谦逊、慷慨的兄弟。他有一种冷幽默感，对生活的荒谬有着敏锐的鉴赏力。他在世界上留下了深刻的印记，他温柔的性格也广为人知。 &lt;a href=&quot;https://hackernews.betacat.io/#dennis-ritchie-home-page&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37376377&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;铜消失：PCB蚀刻背后的化学&lt;/stitle>; &lt;id>;https://hackaday.com/2023/08/31/copper-be-gone-the-chemistry-behind -pcb-etching/&lt;/id>; &lt;更新>;2023-09-04T04:05:44.016138Z&lt;/更新>; &lt;link href=&quot;https://hackaday.com/2023/08/31/copper-be-gone -the-chemistry-behind-pcb-etching/&quot;/>; &lt;作者>; &lt;名称>;rolph &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hackaday.com/wp-content/uploads/2023/08/dscf8748_featured.png?w=800&quot; style=&quot;宽度：220px；高度：147px ;” />;&lt;br />;由于快速 PCB 制造服务的便利性和低成本，PCB 的家庭蚀刻越来越不受欢迎。然而，仍然有一些原因需要蚀刻您自己的电路板，并且了解蚀刻过程背后的化学成分非常重要。 PCB蚀刻方法可分为湿法和干法两种，每种方法都有各自的优点和缺点。 &lt;a href=&quot;https://hackernews.betacat.io/#copper-be-gone-the-chemistry-behind-pcb-etching&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37375431&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;WiiLink – 日语 Wii 频道复活&lt;/stitle>; &lt;id>;https://www.wiilink24.com/&lt;/id>; &lt;更新>;2023-09 -04T02:05:44.017744Z&lt;/updated>; &lt;link href=&quot;https://www.wiilink24.com/&quot;/>; &lt;作者>; &lt;name>;mdwalters&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=mdwalters&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.wiilink24.com/Images/wiinomaicon.svg&quot; style=&quot;width: 220 像素；高度：147 像素；&quot; />;&lt;br />;WiiLink 是唯一在日本专属 Wii 频道正式关闭后重新恢复的服务。通过我们的服务，您可以在您的 Nintendo Wii 上再次体验所有这些 - 可能是第一次。 &lt;a href=&quot;https://hackernews.betacat.io/#wiilink-japanese-wii-channels-revived&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37376254&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我不想将我的自由设计工作室发展成为一家机构&lt;/stitle>; &lt;id>;https://neladunato.com/blog/why-wont-grow-freelance- studio-into-agency/&lt;/id>; &lt;更新>;2023-09-03T16:05:44.018354Z&lt;/更新>; &lt;link href=&quot;https://neladunato.com/blog/why-wont-grow-freelance- studio-into-agency/&quot;/>; &lt;作者>; &lt;名称>;taubek&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=taubek&lt;/uri>; &lt;/author>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://neladunato.com/wp-content/uploads/grow-freelance-studio-agency.jpg&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;不，作者并不打算将他们的自由设计工作室发展成为一家机构。他们更喜欢独立工作并在逐个项目的基础上与其他创意人员合作。 &lt;a href=&quot;https://hackernews.betacat.io/#i-dont-want-to-grow-my-freelance-design-studio-into-an-agency&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37371084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;费尔南多·佩索阿的无私&lt;/stitle>; &lt;id>;https://www.theparisreview.org/blog/2023/06 /23/fernando-pessoas-many-personalities/&lt;/id>; &lt;更新>;2023-09-04T01:05:44.018960Z&lt;/更新>; &lt;link href=&quot;https://www.theparisreview.org/blog/2023 /06/23/fernando-pessoas-many-personalities/&quot;/>; &lt;作者>; &lt;名称>;Caiero&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Caiero&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.theparisreview.org/blog/wp-content/uploads/2023/06/fernando-pessoa-810x1024.jpg&quot; style=&quot;width ：220px；高度：279px；” />;&lt;br />;葡萄牙作家费尔南多·佩索阿在他的诗歌和散文中通过不同的人物来表达不受欢迎的极端观点。他创造了虚构的作家，称为异名，用英语、法语和葡萄牙语写作。佩索阿最著名的异名是阿尔贝托·卡埃罗、阿尔瓦罗·德·坎波斯和里卡多·雷斯。 &lt;a href=&quot;https://hackernews.betacat.io/#fernando-pessoas-unselving&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37367896&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Cola：用于实时协作编辑的文本 CRDT&lt;/stitle>; &lt;id>;https://nomad.foo/blog/cola&lt;/id>; &lt;updated>;2023-09-03T20:05 ：44.019532Z&lt;/updated>; &lt;link href=&quot;https://nomad.foo/blog/cola&quot;/>; &lt;作者>; &lt;name>;homarp&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=homarp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://avatars.githubusercontent.com/u/59321248?v=4&quot; style=&quot;width: 220px ；高度：220px；&quot; />;&lt;br />;Cola 是一个用 Rust 编写的用于实时协作编辑的文本 CRDT。它保证所有副本的收敛，并可用于表示纯文本文档。 &lt;a href=&quot;https://hackernews.betacat.io/#cola-a-text-crdt-for-real-time-collaborative-editing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37373796&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;历史学家越来越有动力讲述戏剧性故事&lt;/stitle>; &lt;id>;https://www.ian-leslie.com/p/故事对你的智力有害&lt;/id>; &lt;更新>;2023-09-03T19:05:44.020128Z&lt;/更新>; &lt;link href=&quot;https://www.ian-leslie.com/p /stories-are-bad-for-your-intelligence&quot;/>; &lt;作者>; &lt;名称>;jseliger&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jseliger&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post -media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b102b0d-13ee-4cf2-b431-74991ebfccc7_445x556.jpeg&quot; style=&quot;宽度：220px；高度：275px；&quot; />;&lt;br />;亨利·科特 (Henry Cort) 是工业革命期间的一位发明家，他因开发出一种生产方法而彻底改变了英国的钢铁工业而受到赞誉。然而，最近的一篇论文认为，科特实际上是从牙买加的黑人奴隶那里窃取了他的创新。这篇论文引起了广泛的讨论，但已被另一位学者彻底揭穿。 &lt;a href=&quot;https://hackernews.betacat.io/#historians-have-an-increasingly-strong-incentive-to-tell-dramatic-stories&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37373257&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Raft 共识算法 (2015)&lt;/stitle>; &lt;id>;https://raft.github.io&lt;/id>; &lt;updated >;2023-09-03T13:05:44.021490Z&lt;/updated>; &lt;link href=&quot;https://raft.github.io&quot;/>; &lt;author>; &lt;name>;oumua_don17&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=oumua_don17&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raft.github.io/logo/solo.svg&quot; style= “宽度：220 像素；高度：220 像素；” />;&lt;br />;这是在浏览器中运行的 Raft 集群。您可以与其交互以查看 Raft 的运行情况。左侧显示了五台服务器，右侧显示了它们的日志。 &lt;a href=&quot;https://hackernews.betacat.io/#the-raft-consensus-algorithm-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37369826&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;他创造了片魂游戏，但即使没有他，它们也能继续发展&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/07/28/arts/ katamari-damacy-keita-takahashi.html&lt;/id>; &lt;更新>;2023-09-04T01:05:44.022107Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/07/28 /arts/katamari-damacy-keita-takahashi.html&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/ author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/07/31/multimedia/28takahashi-games8-zlgh/28takahashi-games8-zlgh-articleLarge.jpg ?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Keita Takahashi, the creator of the Katamari games, has left the franchise and does not receive any royalties from its sales. He originally trained as a sculptor but turned to video games to provide joy and fun to people. Despite his unique vision, the gaming industry often does not give individual creators ownership of their creations. &lt;a href=&quot;https://hackernews.betacat.io/#he-created-the-katamari-games-but-theyre-rolling-on-without-him&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37374489&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Investigating intentional cranial modification in 3rd to 7th century CE Japan&lt;/stitle>; &lt;id>;https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0289219&lt;/id>; &lt;updated>;2023-09-04T00:05:44.022605Z&lt;/updated>; &lt;link href=&quot;https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0289219&quot;/>; &lt;author>; &lt;name>;diodorus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=diodorus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://journals.plos.org/resource/img/logo-plos.png&quot; style=&quot;width: 220px; height: 174px;&quot; />;&lt;br />;Intentional cranial modification has a long history, being a ubiquitous practice in many cultures around the world for millennia. This study aimed to investigate the characteristics of the cranial shape of the Hirota site in Japan to clarify whether the crania were intentionally modified. &lt;a href=&quot;https://hackernews.betacat.io/#investigating-intentional-cranial-modification-in-3rd-to-7th-century-ce-japan&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37367199&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;