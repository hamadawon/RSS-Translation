<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-01T06:04:13.596835Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Pipes：雅虎 Pipes 的精神继承者&lt;/stitle>; &lt;id>;https://www.pipes.digital/docs&lt;/id>; &lt;更新>;2024-07-01T03： 03:41.055632Z&lt;/updated>; &lt;link href=&quot;https://www.pipes.digital/docs&quot;/>; &lt;作者>; &lt;name>;sea-gold&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=sea-gold&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.pipes.digital/imgs/feed_tiny.png&quot; style=&quot;宽度：220 像素；高度：123 像素；” />;&lt;br />;Pipes 是一个可视化编程编辑器，允许用户通过连接从各种来源（包括 RSS、Atom、JSON 和 HTML）获取、过滤和操作数据的块来创建自定义提要。该平台支持一系列模块，包括过滤器、排序器、提取器和中继器，这些模块可以组合起来创建复杂的数据管道和工作流程。 &lt;a href=&quot;https://hackernews.betacat.io/#pipes-a-spiritual-successor-to-yahoo-pipes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40841980&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;卷积、快速傅里叶变换和多项式（2022）&lt;/stitle>; &lt;id>;https://www.alvarorevuelta.com/posts/fft-polynomials&lt;/id >; &lt;更新>;2024-06-30T22:03:41.057504Z&lt;/更新>; &lt;link href=&quot;https://www.alvarorevuelta.com/posts/fft-polynomials&quot;/>; &lt;作者>; &lt;名称>;clearprop&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=clearprop&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com /alrevuelta/myblog/main/assets/img/time_freq.png&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;传统的多项式相乘方法的复杂度为O(n^2)，速度慢且效率低，尤其是对于大型多项式。通过使用傅里叶变换和卷积，可以以 O(nlogn) 复杂度来乘多项式，这更快、更高效，尤其是对于大型多项式。 &lt;a href=&quot;https://hackernews.betacat.io/#volvings-fast-fourier-transform-and-polynomials-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40840396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLVM 19 中的集成汇编器改进&lt;/stitle>; &lt;id>;https://maskray.me/blog/2024-06-30-integrated-assembler-improvements- in-llvm-19&lt;/id>; &lt;更新>;2024-07-01T03:03:41.057913Z&lt;/更新>; &lt;link href=&quot;https://maskray.me/blog/2024-06-30-integrated-assembler -improvements-in-llvm-19&quot;/>; &lt;作者>; &lt;名称>;MaskRay &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=MaskRay&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;LLVM MC 项目进行了重大更改，以提高性能、可读性和效率，包括对片段管理、符号处理和节创建的优化。这些更改带来了显着的性能提升、内存使用量减少以及代码库更加精简，为未来的改进铺平了道路。 &lt;a href=&quot;https://hackernews.betacat.io/#integrated-assembler-improvements-in-llvm-19&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：基于 SQLite 的直接 SQS 替换&lt;/stitle>; &lt;id>;https:// /github.com/poundifdef/SmoothMQ&lt;/id>; &lt;更新>;2024-06-30T16:03:41.058324Z&lt;/更新>; &lt;link href=&quot;https://github.com/poundifdef/SmoothMQ&quot;/>; &lt;作者>; &lt;name>;memset&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=memset&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //raw.githubusercontent.com/poundifdef/SmoothMQ/main/docs/queue.gif&quot; style=&quot;width: 220px height: 160px;&quot; />;&lt;br />;SmoothMQ 是 SQS 的直接替代品，具有更流畅的开发人员体验，提供 UI、可观察性和消息调度等功能。它可以部署为单个 Go 二进制文件并与现有 SQS 客户端一起使用，从而允许在任何云上使用私有 SQS 实例。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-drop-in-sqs-replacement-based-on-sqlite&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40837610&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;思维模型&lt;/stitle>; &lt;id>;https://tylerneylon.com/a/mind_model/mind_model.html&lt;/id>; &lt;更新>;2024-07-01T01:03:41.058717Z&lt;/更新>; &lt;link href=&quot;https://tylerneylon.com/a/mind_model/mind_model.html&quot;/>; &lt;作者>; &lt;名称>;adamesque&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=adamesque&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tylerneylon.com/a/ mind_model/img/mind_model_v2.png&quot; style=&quot;宽度: 220px 高度: 159px;&quot; />;&lt;br />;作者提出了一种思维模型，通过使用连续并行运行的模块之间的数据流图来解释人类认知的各个方面，包括代理、学习、思考和内省。该模型可以捕捉复杂的思维方式，例如预测、创造力和解决问题，甚至可以模拟内部心理对话，但作者... &lt;a href=&quot;https://hackernews.betacat.io/#a -model-of-a-mind&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841502&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新闻专线：大规模一个世纪历史新闻的结构化数据库&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2406.09490&lt;/id>; &lt;updated>;2024-07-01T00:03:41.059126Z&lt;/updated>; &lt;link href =&quot;https://arxiv.org/abs/2406.09490&quot;/>; &lt;作者>; &lt;名称>;h2odragon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=h2odragon&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height : 129 像素;&quot; />;&lt;br />;将定制的深度学习管道应用于美国当地报纸的原始图像扫描，创建了包含 1878 年至 1977 年 270 万篇公共领域新闻专线文章的综合档案。生成的数据集包括地理参考位置、标记主题、识别的命名实体和消除歧义的个体，为大型语言建模和研究各种... &lt;a href=&quot;https://hackernews.betacat.io/#newswire-a -大型结构化数据库的一个世纪的历史新闻&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40839830&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;如何获得对您的 Sleep Number 床的 root 访问权限&lt;/stitle>; &lt;id>;https://dillan.org/articles/how-to-get-root-access-to-your-sleep-number -bed&lt;/id>; &lt;更新>;2024-06-30T17:03:41.059526Z&lt;/更新>; &lt;link href=&quot;https://dillan.org/articles/how-to-get-root-access-to- your-sleep-number-bed&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj10.2e873fcb.png&amp;w=3840&amp;q=75&quot; style=&quot;宽度：220px; height: 172px;&quot; />;&lt;br />;作者描述了获得本地网络访问 Sleep Number 集线器的过程，其中涉及修改内部文件并设置 UART 设备以与集线器的控制台进行通信。作者还提供了详细信息关于如何使用集线器的 Python 2.7.18 环境设置 HTTP 服务器并通过本地网络控制床的设置。 -access-to-your-sleep-number-bed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40838167&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用户空间 Rootkit是跛脚（2022）&lt;/stitle>; &lt;id>;https://grugq.substack.com/p/userland-rootkits-are-lame&lt;/id>; &lt;更新>;2024-07-01T01:03:41.059920Z&lt;/已更新>; &lt;link href=&quot;https://grugq.substack.com/p/userland-rootkits-are-lame&quot;/>; &lt;作者>; &lt;name>;qweqwe14&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=qweqwe14&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_320,h_213,c_fill,f_auto,q_auto ：好，fl_progressive：陡峭，g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F46f87be4-6cac-45af-9fa3-9364531daeb4_1248 x702.webp&quot; 样式=“宽度：220px； height: 147px;&quot; />;&lt;br />;用户态 Rootkit 使用 LD_PRELOAD 将库注入到每个进程中以隐藏信息，但可以通过使用 busybox 等静态链接的二进制文件并检查内存映射和环境变量来轻松检测和规避。Rootkit 的试图隐藏其存在最终是徒劳的，因为可以使用简单的技术来检测它，例如比较文件列表和检查... &lt;a href=&quot;https://hackernews.betacat.io/#userland-rootkits-are-lame -2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841649&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LosslessCut：无损视频/音频编辑的瑞士军刀&lt;/stitle>; &lt;id>;https://github.com/mifi/lossless-cut&lt;/id>; &lt;更新>;2024-06-30T13:03:41.060321Z&lt;/更新>; &lt;link href=&quot;https:// github.com/mifi/lossless-cut&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://raw.githubusercontent.com/mifi/lossless-cut/master/main_screenshot.jpg”样式=“宽度：220px; height: 140px;&quot; />;&lt;br />;LosslessCut 是一个跨平台的 FFmpeg GUI，用于无损视频和音频编辑，允许快速高效地修剪、剪切和组合媒体文件。它支持各种格式和编解码器，包括 MP4 、MOV、WebM 等，并提供曲目分段、标记和导出等功能。无损视频音频编辑&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40829494&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;飞机飞行的物理学&lt;/ stitle>; &lt;id>;https://10maurycy10.github.io/misc/the_physicals_of_flight/&lt;/id>; &lt;更新>;2024-06-30T22:03:41.060709Z&lt;/更新>; &lt;link href=&quot;https://10maurycy10 .github.io/misc/the_physicals_of_flight/&quot;/>; &lt;author>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://10maurycy10.github.io/misc/the_physicals_of_flight/square.png”样式=“宽度：220px; height: 109px;&quot; />;&lt;br />;机翼不需要特定的翼型形状即可工作；任何有角度的表面都可以产生升力。然而，正确的翼型几何形状可以在失速之前产生更大的升力并产生更少的阻力，这对于高效运行至关重要&lt;a href=&quot;https://hackernews.betacat.io/#the-physicals-of-airplane-flight&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40835223&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;蝴蝶不间断地飞越大西洋 2,600 英里&lt;/stitle>; &lt;id>;https://www.smithsonianmag.com/smart-news/se-stunning-butterflies-flew -2600-miles-across-the-atlantic-ocean-without-stopping-180984602/&lt;/id>; &lt;更新>;2024-06-30T12:03:41.061098Z&lt;/更新>; &lt;link href=&quot;https://www .smithsonianmag.com/smart-news/se-stunning-butterflies-flew-2600-miles-across-the-atlantic-ocean-without-stopping-180984602/&quot;/>; &lt;作者>; &lt;名称>;raybb&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=raybb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://th-thumbnailer.cdn-si- edu.com/D5Rsy5CpB5aX2PKXSTt7GOrnp6Q=/1000x750/filters:no_upscale():focal(2117x1250:2118x1251)/https://tf-cmsv2-smithsonianmag-media.s3.amazonaws.com/filer_public/b0/c3/b0c341da-997 9- 4fef-8ae7-1865608d7fe4/una_mariposa_cardera_a_punto_de_emprender_el_vuelo_autor_roger_vila.jpg“风格=”宽度：220px;高度：165px;&quot; />;&lt;br />;昆虫学家发现，彩绘蝴蝶很可能借助有利的风力条件，从西非跨越大西洋到达法属圭亚那，这是以前从未记录过的壮举。研究人员使用了多种技术组合，包括基因组测序、同位素分析和花粉 DNA 测序，拼凑蝴蝶的迁徙路线并确定...... &lt;a href=&quot;https://hackernews.betacat.io/#butterflies-flew-2600-miles -across-the-atlantic-without-stopping&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40822532&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;最奇怪的 QNX 错误我遇到过（2021）&lt;/stitle>; &lt;id>;https://mental-reverb.com/blog.php?id=29&lt;/id>; &lt;updated>;2024-06-30T15:03:41.061869Z&lt;/已更新>; &lt;link href=&quot;https://mental-reverb.com/blog.php?id=29&quot;/>; &lt;作者>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mental-reverb.com/img/weirdestbug_debug_screenshot.png&quot; style=&quot;width: 220px; height: 133px;&quot; />;&lt;br />;我很抱歉，但您似乎提供了大量文本，这些文本似乎是各个人的评论和回复的集合。我无法概括此文本用 2 个简洁的英语句子，因为它混合了不同的主题和对话。 &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40837411&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;事务计算 [pdf]&lt;/stitle>; &lt;id>;http://www .jjj.de/fxt/#fxtbook&lt;/id>; &lt;更新>;2024-07-01T00:03:41.062641Z&lt;/更新>; &lt;link href=&quot;http://www.jjj.de/fxt/#fxtbook&quot; />; &lt;author>; &lt;name>;dataflow&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dataflow&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;FXT 是一个用于位操作、组合生成和快速转换的低级算法库，重点关注性能。该库附带 fxtbook，这是例程和演示的综合文档，并且可以免费匿名下载。 &lt;a href=&quot;https://hackernews.betacat.io/#matters-computational-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40841355&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;为 Windows 编写 GUI 应用程序很痛苦&lt;/stitle>; &lt;id>;https://tulach.cc/writing-gui-apps-for-windows-is-painful/&lt;/id>; &lt;updated>; 2024-06-30T19:03:41.063018Z&lt;/updated>; &lt;link href=&quot;https://tulach.cc/writing-gui-apps-for-windows-is-painful/&quot;/>; &lt;作者>; &lt;名称>; wild_pointer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wild_pointer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tulach. cc/assets/img/posts/7_winui.png&quot; style=&quot;宽度：220px 高度：131px；&quot; />;&lt;br />;您已经尝试了各种适用于 Windows 的 C++ GUI 库，考虑了大小、依赖性和样式等因素，并发现 Dear ImGui 通过小型、可移植的可执行文件和轻松的自定义来满足您的要求。但是，您在使用其他库（例如 Qt、wxWidgets 和 WinUI）时遇到了问题，因为它们的大小、依赖性和样式限制。 &lt;a href=&quot;https://hackernews.betacat.io/#writing-gui-apps-for-windows-is-painful&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40839208&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简化的 Python 扩散模拟&lt;/stitle>; &lt;id>;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&lt; /id>; &lt;更新>;2024-06-30T19:03:41.063394Z&lt;/更新>; &lt;link href=&quot;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9985e718-02ac -4510-a809-41adfbd60f7e_1024x1024.webp&quot;样式=&quot;宽度：220像素；高度：220像素；&quot; />;&lt;br />;本文演示了气体分子在 2D 容器中移动的 Python 模拟，使用turtle模块可视化粒子的移动和碰撞。通过将模拟区域划分为网格，本文展示了如何优化碰撞检测算法，减少运行模拟所需的时间并提高其效率。 &lt;a href=&quot;https://hackernews.betacat.io/#a-simplified-python-simulation-of-diffusion&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40838945&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;四行代码，原来是四行代码&lt;/stitle>; &lt;id>;https://boston.conman.org/2024/06/30.1&lt;/id>; &lt;更新>;2024-07-01T04:03:41.063776Z&lt;/更新>; &lt;link href=&quot;https://boston.conman.org/2024/06/30.1&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#四行代码-it-was-四行代码&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40842275&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;前端开发中的混沌工程：增强应用程序弹性&lt;/stitle>; &lt;id>;https://omid.dev/2024/07/01/chaos-engineering-in-frontend-development/&lt;/id>; &lt;更新>;2024-06-30T22:03:41.064153Z&lt;/更新>; &lt;link href=&quot;https://omid.dev/2024/07/01/chaos-engineering-in-frontend-development/&quot;/>; &lt;作者>; &lt;name>;omidfarhang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=omidfarhang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://omid.dev/opengraph/omiddev-card-base-2_hu4319d5ff4a4e9c05cba253c9f6e69f4d_117133_filter_13031943986457191075.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;混沌工程传统上用于后端系统，现在应用于前端开发，以增强弹性、改善用户体验并构建健壮的 Web 应用程序。通过模拟现实世界的混沌，开发人员可以发现漏洞、改进错误处理并提供更强大的用户体验，使混沌工程成为前端开发的重要实践&lt;a href=&quot;https://hackernews.betacat.io/#chaos-engineering-in-front-end- development-enhancing-application-resilience&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;调试硬件很难&lt;/stitle>; &lt;id>;https://blog.supermechanical.com/2024/06/27/debugging-hardware-is-hard/&lt;/id>; &lt;更新>;2024-06-30T23:03:41.064553Z&lt;/更新>; &lt;link href=&quot;https://blog.supermechanical.com/2024/06/27/debugging-hardware-is-hard/&quot;/>; &lt;作者>; &lt;name>;jkestner&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jkestner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /blog.supermechanical.com/wp-content/uploads/2024/06/20240521_144539.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;用户在调试Pickup设备中两个主芯片之间的通信问题时，发现STM32 UART出现故障并导致错误，最终追溯到MSI时钟的自动校准通过禁用自动校准，用户能够解决该问题并在 UART 传输中实现较高的成功率。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40816349&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;仅使用原始 JSON 和图像的 Pokémon 嵌入的超级有效性&lt;/ stitle>; &lt;id>;https://minimaxir.com/2024/06/pokemon-embeddings/&lt;/id>; &lt;更新>;2024-06-30T14:03:41.064940Z&lt;/更新>; &lt;link href=&quot;https:// /minimaxir.com/2024/06/pokemon-embeddings/&quot;/>; &lt;作者>; &lt;名称>;minimaxir&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=minimaxir&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://minimaxir.com/2024/06/pokemon-embeddings/featured.png&quot; style=&quot;width: 220px; height: 126px;&quot; />;&lt;br />;作者探索使用文本嵌入来分析 Pokémon 数据，使用 nomic-embed-text-v1.5 模型为超过 1,000 个 Pokémon 生成嵌入并识别它们之间的相似性。作者还尝试了图像嵌入和多模态嵌入，发现文本嵌入可用于识别 Pokémon 与其图像之间的关系，并且... &lt;a href=&quot;https://hackernews.betacat.io/#the -super-effectness-of-pokemon-embeddings-using-only-raw-json-and-images&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=40831964&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们不要在面试中问“你为什么想为我们工作？”&lt;/stitle>; &lt;id>;https://nelson.cloud/lets-stop-asking-why-do-you -want-to-work-for-us-in-interviews/&lt;/id>; &lt;更新>;2024-07-01T05:03:41.065322Z&lt;/更新>; &lt;link href=&quot;https://nelson.cloud/lets -stop-asking-why-do-you-want-to-work-for-us-in-interviews/&quot;/>; &lt;作者>; &lt;名称>;nelsonfigueroa&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=nelsonfigueroa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;大多数人出于经济原因想要在公司工作，例如支付账单、债务和养家糊口。受金钱驱动是可以的，因为公司也是受利润驱动的，即使一个人的主要动机是金钱，他仍然可以做得很好。 &lt;a href=&quot;https://hackernews.betacat.io/#let-s-stop-asking-why-do-you-want-to-work-for-us-in-interviews&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842603&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;机器编织编译器的语义和调度 (2023)&lt;/stitle>; &lt;id>;https:// textiles-lab.github.io/publications/2023-knitout-semantics/&lt;/id>; &lt;更新>;2024-06-30T20:03:41.065700Z&lt;/更新>; &lt;link href=&quot;https://textiles-lab. github.io/publications/2023-knitout-semantics/&quot;/>; &lt;作者>; &lt;名称>;fanf2&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://textiles-lab.github.io/publications/2023-knitout-semantics.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;研究人员开发了机器编织图案的形式语义，实现了正确性验证和程序转换。结理论中的“围栏缠结”概念定义了编织程序的等效性，允许在确保正确性的同时编译和优化编织程序。 &lt;a href=&quot;https://hackernews.betacat.io/#semantics-and-scheduling-for-machine-knitting-compilers-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40828754&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Rodney Brooks 谈生成式人工智能的局限性&lt;/stitle>; &lt;id>;https://techcrunch.com/2024/06/29/mit-robotics-pioneer -rodney-brooks-thinks-people-are-vastly-overestimating-generative-ai/&lt;/id>; &lt;更新>;2024-06-30T07:03:41.066078Z&lt;/更新>; &lt;link href=&quot;https://techcrunch .com/2024/06/29/mit-robotics-pioneer-rodney-brooks-thinks-people-are-vastly-overestimating-generative-ai/&quot;/>; &lt;作者>; &lt;名称>;执行者&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=doener&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://techcrunch.com/wp-content/uploads/ 2017/07/gettyimages-816888400.jpg?w=1024&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;技术专家内森·布鲁克斯 (Nathan Brooks) 认为是时候停止围绕生成人工智能的炒作了，他警告说，它的能力并不像许多人认为的那么强大，而且人类往往会高估它的能力。他还强调了使技术易于使用和专门构建的重要性，并指出人工智能无法解决所有问题，在某些情况下甚至可能会减慢速度。 &lt;a href=&quot;https://hackernews.betacat.io/#rodney-brooks-on-limitations-of-generative-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40835588&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Postzegelcode&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Postzegelcode&lt;/id>; &lt;更新>;2024-06-30T20:03 ：41.066464Z &lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Postzegelcode&quot;/>; &lt;作者>; &lt;名称>;tdeck &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=tdeck&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;postzegelcode 是荷兰的一种手写邮资盖印方法，由字母和数字组成的 3x3 网格组成，国际上则由 4x3 网格组成邮件。该密码有效期为五天，被猜到的概率很低，有 78.8 万亿种可能的组合。 &lt;a href=&quot;https://hackernews.betacat.io/#postzegelcode&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40839418&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;向 ThinkPad X1 Nano 添加 USB 端口（困难的方法）&lt;/stitle>; &lt;id>;https://jcs.org/2024/05/29/x1usb&lt;/id>; &lt;updated>;2024-06- 30T12：03：41.066851Z &lt;/更新>; &lt;link href =“https://jcs.org/2024/05/29/x1usb”/>; &lt;作者>; &lt;名称>;爱德华&lt;/名称>; &lt;uri>;https：/ /news.ycombinator.com/user?id=edward&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jcs.org/images/2024-05-29-m2_usb -335x251.jpg&quot; style=&quot;宽度:220px;高度:165px;&quot; />;&lt;br />;用户想要为其 ThinkPad X1 Nano 笔记本电脑添加内置 USB 端口，但由于联想的网卡白名单而无法实现。他们最终创建了一个定制柔性 PCB，连接到指纹读取器的 USB 端口，将电压提升至 5V，并允许他们为笔记本电脑添加 USB 端口。 &lt;a href=&quot;https://hackernews.betacat.io/#adding-a-usb-port-to-the-thinkpad-x1-nano-the-hard-way&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40833960&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Below MI – 面向黑客的 IBM i&lt;/stitle>; &lt;id>;https://silentsignal.github.io/BelowMI /&lt;/id>; &lt;更新>;2024-06-30T15:03:41.067228Z&lt;/更新>; &lt;link href=&quot;https://silentsignal.github.io/BelowMI/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;IBM i 是一个垂直集成的系统，具有独特的架构，允许用于抽象开发和完全向后兼容性，但也对利用内存安全问题提出了挑战。该系统使用内存标记、类型化指针和段边界检查来确保内存安全，但这些机制可以通过精心设计的程序绕过或利用...... &lt;a href=&quot;https://hackernews.betacat.io/#下面-mi-ibm-i-for-hackers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40837420&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算寿命：自我复制程序如何从简单的交互中产生&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2406.19108&lt;/id>; &lt;updated>;2024-06-30T12:03:41.067605Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs/2406.19108&quot;/>; &lt;作者>; &lt;名称>;jasondavies&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px;高度：129px；” />;&lt;br />;研究人员研究了计算基质，以了解自我复制器是如何出现的，发现随机程序可以在没有明确适应性景观的环境中进化为自我复制器。该研究展示了自我复制是如何通过随机相互作用和自我修改而产生的，并表明随着自我复制者的兴起，可以出现复杂的动态。 &lt;a href=&quot;https://hackernews.betacat.io/#computational-life-how-self-replicating-programs-emerge-from-simple-interaction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40820022&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;瑞士广播公司将停止调频广播&lt;/stitle>; &lt;id>;https://www.swissinfo.ch/eng/life -aging/swiss-broadcasting-corporation-to-pull-plug-on-fm-radio/81956760&lt;/id>; &lt;更新>;2024-06-30T10:03:41.067983Z&lt;/更新>; &lt;link href=&quot;https: //www.swissinfo.ch/eng/life-aging/swiss-broadcasting-corporation-to-pull-plug-on-fm-radio/81956760&quot;/>; &lt;作者>; &lt;名称>;austinallegro&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=austinallegro&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.swissinfo.ch/content/wp-内容/uploads/sites/13/2024/06/349662619_highres.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;瑞士广播公司将于 12 月底关闭其模拟 FM 发射机，因为大多数人现在通过数字音频广播 (DAB+) 或互联网收听广播。此举预计将成为新的无线电标准，DAB+ 提供更好的质量、更多的节目选择和成本效益。 &lt;a href=&quot;https://hackernews.betacat.io/#swiss-broadcasting-corporation-to-pull-plug-on-fm-radio&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40834012&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;