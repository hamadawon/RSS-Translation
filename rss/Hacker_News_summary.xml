<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-31T13:53:13.340817Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;比较 Google、Bing、Marginalia、Kagi、Mwmbl 和 ChatGPT&lt;/stitle>; &lt;id>;https://danluu.com/seo-spam/&lt;/id>; &lt;更新>; 2023-12-31T02：52：13.430250Z &lt;/更新>; &lt;link href =“https://danluu.com/seo-spam/”/>; &lt;作者>; &lt;名称>; 882542F3884314B &lt;/名称>; &lt;uri>; https： //news.ycombinator.com/user?id=882542F3884314B&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#compare-google-bing -marginalia-kagi-mwmbl-and-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821248&quot; target=&quot;_blank&quot; >;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bun、JavaScript、和 TCO&lt;/stitle>; &lt;id>;https://www.onsclom.net/posts/javascript-tco&lt;/id>; &lt;更新>;2023-12-31T12:52:13.432368Z&lt;/更新>; &lt;link href=&quot; https://www.onsclom.net/posts/javascript-tco&quot;/>; &lt;作者>; &lt;名称>;tosh&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;Bun 是一个 JavaScript 运行时，刚刚发布了 1.0 版本！它使用 Zig 进行编程，并基于 JavaScriptCore 构建。它的卖点之一是速度。 &lt;a href=&quot;https://hackernews.betacat.io/#bun-javascript-and-tco&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38823673&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;1690 年代的花生重生&lt;/stitle>; &lt;id>;https://nationalpeanutboard.org/news/a-1690s-peanut-is-reborn/&lt;/id>; &lt;更新>;2023- 12-31T11:52:13.432797Z&lt;/updated>; &lt;link href=&quot;https://nationalpeanutboard.org/news/a-1690s-peanut-is-reborn/&quot;/>; &lt;作者>; &lt;名称>;系泊物&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mooreds&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.sanity.io/图片/54y5ztcs/生产/eb5a9a9dc0b7af69ae531a021629edf7995a107c-550x550.jpg?w=650&amp;q=90&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;据信已经灭绝的卡罗莱纳非洲跑花生已被重新发现并由农民种植。这种花生于 1690 年代被带到美洲殖民地，比我们今天吃的花生更小、更甜、密度更大。它具有文化和历史意义，被厨师和工匠用于各种烹饪创作。 &lt;a href=&quot;https://hackernews.betacat.io/#a-1690s-peanut-is-reborn&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38823304&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Emacs-copilot：Emacs 的大型语言模型代码完成&lt;/stitle>; &lt;id>;https://github.com/jart/emacs-copilot&lt;/id>; &lt;updated>;2023 -12-31T06:52:13.433213Z&lt;/updated>; &lt;link href=&quot;https://github.com/jart/emacs-copilot&quot;/>; &lt;author>; &lt;name>;yla92&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=yla92&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b003f074684caa9d5b2db8c54af05967ce6ff04ecd09322ec2ca67a5ecc545f9/jart/emacs-副驾驶&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Emacs Copilot 是一个允许在 Emacs 缓冲区内完成代码的工具。它使用本地运行的语言模型 (LLM) 根据您的编辑历史记录生成代码建议。法学硕士与语言无关，可以根据您的编程语言进行定制。 &lt;a href=&quot;https://hackernews.betacat.io/#emacs-copilot-large-language-model-code-completion-for-emacs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38822164&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LuaX：带有 JSX 的 Lua 方言&lt;/stitle>; &lt;id>;https://bvisness.me/luax/&lt;/id>; &lt;更新>; 2023-12-31T06：52：13.434029Z &lt;/更新>; &lt;link href =“https://bvisness.me/luax/”/>; &lt;作者>; &lt;名称>; goranmoomin &lt;/名称>; &lt;uri>; https:// news.ycombinator.com/user?id=goranmoomin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;LuaX 是一种带有 JSX 的 Lua 方言，允许您在真正的编程语言中编写 HTML。它提供了一个能够理解 HTML 并允许在代码中添加有趣逻辑的系统。 &lt;a href=&quot;https://hackernews.betacat.io/#luax-a-lua-dialect-with-jsx&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38813677&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;帕斯卡在福斯 (1983)&lt;/stitle>; &lt;id>;http://tangentstorm.github.io/winfield-pascal-83.html&lt;/id>; &lt;更新>; 2023-12-31T05：52：13.435589Z &lt;/更新>; &lt;link href =“http://tangentstorm.github.io/winfield-pascal-83.html”/>; &lt;作者>; &lt;名称>; sph &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这是描述一组类似 Pascal 的扩展的两篇文章中的第一篇向前。目的是为 Forth 程序员提供使用类似 Pascal 的语法编写任务部分的选项。将 Forth 扩展到 Pascal 是一项有趣的练习，也是对 Forth 功能和灵活性的测试。 &lt;a href=&quot;https://hackernews.betacat.io/#pascal-in-forth-1983&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38822094&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;不使用 Git 进行提交&lt;/stitle>; &lt;id>;https://matheustavares.gitlab.io/posts/committing-without-git&lt;/id>; &lt;updated>;2023-12-31T07:52 ：13.435979Z &lt;/更新>; &lt;link href=&quot;https://matheustavares.gitlab.io/posts/committing-without-git&quot;/>; &lt;作者>; &lt;name>;matheust &lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=matheust&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://matheustavares.gitlab.io/assets/committing-without-git/ git-objects.png&quot; style=&quot;宽度：220px；高度：140px；&quot; />;&lt;br />;我们的目标是创建一个包含两次提交的分支：第一次添加单个 README 文件，第二次稍微更改此文件。所有这一切都无需运行 git。如果您点击这篇文章，我很可能不需要说服您为什么有人想要这样做……因为这很有趣！ :) 而且，它应该有助于理解 git 中的一些主要数据结构，即“git 对象”。 &lt;a href=&quot;https://hackernews.betacat.io/#committing-without-git&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38814492&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;要求不可能的事情：严格的数据库基准测试&lt;/stitle>; &lt;id>;https://erthalion.info/2023/12/29/statistics-and-benchmarking/&lt;/id>; &lt;updated>;2023- 12-31T05:52:13.436742Z&lt;/更新>; &lt;link href=&quot;https://erthalion.info/2023/12/29/statistics-and-benchmarking/&quot;/>; &lt;作者>; &lt;名称>;erthalion&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=erthalion&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://erthalion.info/public/ img/stats/lorenz.png&quot; style=&quot;宽度：220px；高度：122px；&quot; />;&lt;br />;由于数据库固有的二元性以及需要结合特定领域的专业知识和一般分析专业知识的需要，数据库中的基准测试和性能评估容易出错且复杂。理解数据库系统的性能需要全面的心智模型以及公共知识和特定知识的结合。不考虑模糊影响和未知的未知因素可能会导致基准测试不当&lt;a href=&quot;https://hackernews.betacat.io/#demand-the-impossible-rigorous-database-benchmarking&quot; target=&quot;_blank&quot;>;[summary] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809160&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为 Web 构建 ColdFusion&lt;/stitle>; &lt;id>;https://thehistoryoftheweb.com/building-coldfusion- for-the-web/&lt;/id>; &lt;更新>;2023-12-31T11:52:13.437516Z&lt;/更新>; &lt;link href=&quot;https://thehistoryoftheweb.com/building-coldfusion-for-the-web/ &quot;/>; &lt;author>; &lt;name>;paulgb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=paulgb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://thehistoryoftheweb.com/wp-json/social-image-generator/v1/image/15834”样式=“宽度：220px；高度：116px；” />;&lt;br />;ColdFusion 于 1995 年开发，是一种专门用于构建网站的编程语言。它旨在通过使用类似于 HTML 但具有更高级功能的标签来降低用户的进入门槛。多年来，ColdFusion 发展成为一个具有内置工具和实用程序的完整网站开发环境。尽管所有权和技术发生了变化，ColdFusion 仍然继续发布新版本，尽管其受欢迎程度有所下降。 &lt;a href=&quot;https://hackernews.betacat.io/#building-coldfusion-for-the-web&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38821224&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;瑞典太阳能系统&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Sweden_Solar_System&lt;/id>; &lt;更新>;2023-12-31T12:52:13.438278 Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Sweden_Solar_System&quot;/>; &lt;作者>; &lt;name>;titaniumtown&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=titaniumtown&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Ericsson_Globe_Stockholm.jpg/ 300px-Ericsson_Globe_Stockholm.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;瑞典太阳系是世界上最大的永久比例太阳系模型。太阳队的代表是斯德哥尔摩的 Avicii 体育场，这是世界第二大半球形建筑。 &lt;a href=&quot;https://hackernews.betacat.io/#sweden-solar-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38823482&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;第一个个人搜索引擎原型&lt;/stitle>; &lt;id>;https://rsdoiel.github.io/blog/2023/03/10/first-prototype-pse.html&lt;/id>; &lt;更新>;2023-12-30T23:52:13.438681Z&lt;/更新>; &lt;link href=&quot;https://rsdoiel.github.io/blog/2023/03/10/first-prototype-pse.html&quot;/>; &lt;作者>; &lt;name>;kmstout&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kmstout&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我实现了我的第一个原型使用 Bash 脚本和 SQLite 数据库的个人搜索引擎。我收集了大约 16,000 个页面，并使用 PageFind 来索引内容。原型显示了有希望的结果，但我相信至少 100,000 页的语料库会更引人注目。 &lt;a href=&quot;https://hackernews.betacat.io/#first-personal-search-engine-prototype&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38801698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;将事物切换到 Ikiwiki&lt;/stitle>; &lt;id>;https://bt.ht/posts/Switching_Things_Over_to_ikiwiki/&lt;/id>; &lt;更新>;2023-12-31T06:52： 13.439067Z&lt;/更新>; &lt;link href=&quot;https://bt.ht/posts/Switching_Things_Over_to_ikiwiki/&quot;/>; &lt;作者>; &lt;name>;bradley_taunt&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=bradley_taunt&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我的个人网站现在建立在 ikiwiki 之上，而不是 barf。我转向 ikiwiki 是因为它易于使用、灵活，并且能够以多种方式发布页面和帖子。该网站现在支持内置搜索表单和评论系统。 &lt;a href=&quot;https://hackernews.betacat.io/#switching-things-over-to-ikiwiki&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38814990&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;询问客户想要什么是行不通的&lt;/stitle>; &lt;id>;https://techbooks.substack.com/p/why-asking-your-customers-what-他们&lt;/id>; &lt;更新>;2023-12-31T02:52:13.439453Z&lt;/更新>; &lt;link href=&quot;https://techbooks.substack.com/p/why-asking-your-customers-what-they &quot;/>; &lt;作者>; &lt;名称>;AntonZ234&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=AntonZ234&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages %2F4d760e73-b299-4ab9-912b-3e6d7f5a113f_1792x1024.png&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;本文讨论了“待完成的工作”的概念以及它如何帮助公司了解客户真正想要什么。它强调了仅依赖客户反馈的局限性，并强调了确定客户试图完成的基本工作的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#asking-your-customers-what-they-want-doesn-t-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38814152&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cuis-Smalltalk&lt;/stitle>; &lt;id>;https://cuis.st/&lt;/id>; &lt;更新>;2023-12-31T00： 52:13.439831Z&lt;/updated>; &lt;link href=&quot;https://cuis.st/&quot;/>; &lt;作者>; &lt;name>;haolez&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=haolez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cuis.st/assets/imgs/screenshot.png&quot; style=&quot;宽度：220px；高度：124px ;” />;&lt;br />;Dr. Geo 交互式几何应用程序由其作者 Hilaire Fernandes 移植到 Cuis。今天，基于 Cuis 的 Dr. Geo 的第一个测试版发布了！ &lt;a href=&quot;https://hackernews.betacat.io/#cuis-smalltalk&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38820557&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Smalltalk 背后的设计原则 (1981)&lt;/stitle>; &lt;id>;https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html&lt;/id>; &lt;更新>;2023- 12-31T03:52:13.440213Z&lt;/更新>; &lt;link href=&quot;https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html&quot;/>; &lt;作者>; &lt;名称>;rodrigosetti&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=rodrigosetti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.cs. virginia.edu/~evans/cs655/readings/smalltalk_files/dpbs_figure1.gif&quot; style=&quot;宽度：220px；高度：130px；&quot; />;&lt;br />;Smalltalk 项目旨在为每个人的创造力提供计算机支持。它专注于充当人体模型和计算硬件之间的接口的编程语言，以及将人类通信系统与计算机通信系统相匹配的用户界面。 Smalltalk背后的设计原则包括个人掌握、良好的设计、语言与人类思维和交流的兼容性、面向对象的&lt;a href=&quot;https://hackernews.betacat.io/#design-principles-behind-smalltalk-1981&quot;目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821506&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Spindle，Wordle 和 PHP 魔方的结合体&lt;/stitle>; &lt;id>;https://playspindle.com/&lt;/id>; &lt;更新>;2023-12-31T02:52:13.440592Z&lt;/更新>; &lt;link href=&quot;https://playspindle.com/&quot; />; &lt;author>; &lt;name>;abbm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=abbm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;目的是重新排列网格，以便拼写出目标单词（水平或垂直）。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-spindle-a-cross- Between-wordle-and-a-rubik-s-cube-made-in-php&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821187&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ugrep – 更强大、快速、用户友好、兼容的 grep&lt;/stitle>; &lt; id>;https://ugrep.com/&lt;/id>; &lt;更新>;2023-12-30T21:52:13.440972Z&lt;/更新>; &lt;link href=&quot;https://ugrep.com/&quot;/>; &lt;作者>; &lt;name>;smartmic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /ugrep.com/ug.png&quot; style=&quot;宽度：220px；高度：149px；&quot; />;&lt;br />;Ugrep 是一个强大且快速的 grep 工具，提供了新的选项和功能。它可以搜索目录、嵌套档案和压缩文件中的文件，并支持各种搜索模式和模式。 Ugrep 与 GNU grep 兼容，可以从命令行或 TUI 中使用。 &lt;a href=&quot;https://hackernews.betacat.io/#ugrep-a-more-powerful-fast-user-Friendly-兼容-grep&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38819262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 FFmpeg 模拟非 CRT 显示器：平板显示器 (2021)&lt;/stitle>; &lt;id>;https://int10h.org/blog/ 2021/03/simulated-non-crt-monitors-ffmpeg-flat-panels/&lt;/id>; &lt;更新>;2023-12-31T02:52:13.441357Z&lt;/更新>; &lt;link href=&quot;https://int10h. org/blog/2021/03/simulated-non-crt-monitors-ffmpeg-flat-panels/&quot;/>; &lt;作者>; &lt;名称>;susam&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=susam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://int10h.org/blog/img/ffmpeg-crt/fp01-plasma-cgashow.tn.png “样式=”宽度：220px;高度：165px;“ />;&lt;br />;如果您不喜欢缓慢地模拟 CRT 显示器，那么现在您也可以缓慢地模拟各种类型的旧平板显示器！所有这些都使用相同的 FFmpeg 脚本 - 仍命名为 FFcrt，遵循扩大项目范围的古老传统，使其名称不再反映其功能！ &lt;a href=&quot;https://hackernews.betacat.io/#simulated-non-crt-monitors-with-ffmpeg-flat-panel-displays-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;语言服务器的核心&lt;/stitle>; &lt;id>; https://rust-analyzer.github.io//blog/2023/12/26/the-heart-of-a-language-server.html&lt;/id>; &lt;更新>;2023-12-31T00:52:13.441734 Z&lt;/updated>; &lt;link href=&quot;https://rust-analyzer.github.io//blog/2023/12/26/the-heart-of-a-language-server.html&quot;/>; &lt;作者>; &lt;name>;thesuperbigfrog&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thesuperbigfrog&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /rust-analyzer.github.io/assets/ferrous-logo.png&quot; style=&quot;width: 220px; height: 229px;&quot; />;&lt;br />;语言服务器开发的第一步是理解位于给定偏移处的代码。这需要确定语法树中覆盖偏移量的节点并执行语义分析。 &lt;a href=&quot;https://hackernews.betacat.io/#the-heart-of-a-language-server&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38820454&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;压缩冒险&lt;/stitle>; &lt;id>;https://jamesg.blog/2023/12/29/compression-adventures/&lt;/id>; &lt;updated>;2023- 12-31T01:52:13.442116Z&lt;/更新>; &lt;link href=&quot;https://jamesg.blog/2023/12/29/compression-adventures/&quot;/>; &lt;作者>; &lt;名称>;zerojames&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=zerojames&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;今年早些时候，作者了解了 Hutter 奖，这是一项压缩1 GB 维基百科数据文件。他们探索了各种方法，包括字典编码、量化和整数压缩。他们还尝试了不同的方式来存储压缩数据，例如使用字节。作者在这个项目上工作得很开心，并且学到了很多关于压缩的知识。 &lt;a href=&quot;https://hackernews.betacat.io/#adventures-with-compression&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38813700&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;火星快车20周年&lt;/stitle>; &lt;id>;https://www.esa.int/Science_Exploration/Space_Science/Mars_Express/20_years_of_Mars_Express_Mars_as_never_seen_before&lt;/id>; &lt;updated>;2023-12-30T23:52 ：13.442514Z&lt;/更新>; &lt;link href=&quot;https://www.esa.int/Science_Exploration/Space_Science/Mars_Express/20_years_of_Mars_Express_Mars_as_never_seen_before&quot;/>; &lt;作者>; &lt;name>;sohkamyung&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.esa.int/var/esa/storage/images/ esa_multimedia/images/2023/05/building_a_mosaic_of_mars/24894552-4-eng-GB/Building_a_mosaic_of_Mars_article.png&quot; style=&quot;宽度：220 像素；高度：112 像素；&quot; />;&lt;br />;使用欧空局火星快车的数据创建的新火星马赛克详细揭示了行星的颜色和成分。马赛克通过增强局部颜色和对比度来突出火星表面的变化，提供有关其成分的有趣信息。火星快车已经绕这颗红色星球运行了 20 年，对其表面进行成像，绘制其矿物分布图，并探索其大气和环境。 &lt;a href=&quot;https://hackernews.betacat.io/#20-years-of-mars-express&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38820329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Misty 编程语言&lt;/stitle>; &lt;id>;https://www.crockford.com/misty/&lt;/id>; &lt;更新>;2023-12-31T03:52:13.442893Z &lt;/更新>; &lt;link href=&quot;https://www.crockford.com/misty/&quot;/>; &lt;作者>; &lt;名称>;Matrixik&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=Matrixik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;公共领域 2023 Douglas Crockford &lt;a href=&quot;https://hackernews.betacat.io/#misty-programming-language&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38820305&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;高性能计算的艺术&lt;/stitle>; &lt;id>;https://theartofhpc。 com/&lt;/id>; &lt;更新>;2023-12-30T14:52:13.443274Z&lt;/更新>; &lt;link href=&quot;https://theartofhpc.com/&quot;/>; &lt;作者>; &lt;名称>;rramadass &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rramadass&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://theartofhpc.com/ewExternalFiles/frontcover -small.jpg&quot; style=&quot;宽度: 220px; height: 287px;&quot; />;&lt;br />;本书全面介绍了科学计算和高性能计算 (HPC)。涵盖计算机体系结构、并行编程和现代编程语言等主题。作者 Victor Eijkhout，是德克萨斯州高级计算中心的研究科学家。&lt;a href=&quot;https://hackernews.betacat.io/#the-art-of-high-performance-computing&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38815334&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;