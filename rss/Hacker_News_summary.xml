<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-08-23T13:48:24.427646Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Chandrayaan-3 软着陆[视频]&lt;/stitle>; &lt;id>;https://www.isro.gov.in/LIVE_telecast_of_Soft_landing.html&lt;/id>; &lt;更新>;2023 -08-23T10:47:50.060030Z&lt;/updated>; &lt;link href=&quot;https://www.isro.gov.in/LIVE_telecast_of_Soft_landing.html&quot;/>; &lt;作者>; &lt;name>;osivetsson&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=osivertsson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#chandrayaan-3 -soft-landing-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37233936&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;单机Python机器学习合集食谱（2021）&lt;/stitle>; &lt;id>;https://github.com/rougier/ML-Recipes&lt;/id>; &lt;更新>;2023-08-23T11:47:50.290724Z&lt;/更新>; &lt;link href=&quot; https://github.com/rougier/ML-Recipes&quot;/>; &lt;作者>; &lt;名称>;adbarba&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=adbarba&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/rougier/ML-Recipes/master/xkcd.png&quot; style=&quot;width: 220px; height: 261px;&quot; />;&lt;br />;这是机器学习算法的独立 Python 示例的集合。运行特定的配方以查看用法和结果。&lt;a href=&quot;https://hackernews.betacat.io /#collection-of-stand-alone-python-machine-learning-recipes-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37234169&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Zrepl – ZFS 复制&lt;/stitle>; &lt;id>;https://zrepl.github.io/&lt;/id>; &lt;更新>;2023-08-23T05:47:50.300641Z&lt;/更新>; &lt;link href =&quot;https://zrepl.github.io/&quot;/>; &lt;作者>; &lt;名称>;lnyan&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lnyan&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zrepl.github.io/_static/zrepl.svg&quot; style=&quot;width: 220px;高度：121px;&quot; />;&lt;br />;作业：prod_to_backups 类型：推送 复制：尝试#1 状态：扇出文件系统 进度：[================== ======-] 246.7 MiB / 264.7 MiB @ 11.5 MiB/s zroot STEPPING（步骤 1/2，624 B/1.2 KiB）接下来：@a =>; @b zroot/ROOT 完成（步骤 2/） 2, 1.2 KiB/1.2 KiB) * zroot/ROOT/default 步进（步骤 1/2, 123.4 MiB/129.3 MiB） 接下来：@a =>; @b zroot/tmp 步进（步骤 1/2, 29.9 KiB/44.2 KiB) 下一步：@a =>; @b zroot/usr 步进（步骤 1/2，624 B/1.2 KiB） 下一步：@a =>; @b * zroot/usr/home 步进（步骤 1/2，123.3） MiB/135.3 MiB) 接下来：@a =>; @b zroot/var 步进（步骤 1/2，624 B/1.2 KiB） 接下来：@a =>; @b zroot/var/audit 完成（步骤 2/2） , 1.2 KiB/1.2 KiB) zroot/var/crash 完成（步骤 2/2, 1.2 KiB/1.2 KiB） zroot/var/log 步进（步骤 1/2, 22.0 KiB/29.2 KiB） 接下来：@a =>; @b zroot/var/mail STEPPING（步骤 1/2，624 B/1.2 KiB） 接下来：@a =>; @b 修剪发送者：...修剪接收者：zrepl 以及本文档仍在积极开发中。 RPC 协议或配置格式没有稳定性保证，但我们尽力在变更日志中记录重大更改。记录您第一次设置 zrepl 时遇到的任何不明显/令人困惑/简单的破坏行为。检查“问题”和“项目”部分以了解要做的事情。好的第一期和文档是合适的起点。 GitHub 存储库是所有开发发生的地方。请务必阅读开发人员文档部分并在那里提出新问题或拉取请求。 &lt;a href=&quot;https://hackernews.betacat.io/#zrepl-zfs-replication&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37232103&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;问 HN：在哪里可以找到开源房屋计划？&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=37234111&lt;/id>; &lt;updated>;2023-08 -23T11:47:50.301092Z&lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=37234111&quot;/>; &lt;author>; &lt;name>;tsingy&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=tsingy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;想要建造一座房子，并寻找开源计划数据库（如果存在的话）。不完全是你正在寻找的，但仍然是开源的 house 计划：Wikihouse https://www.wikihouse.cc/ Earthships 也据说是开源的，但计划（绝对）不是免费的 https://earthshipbiotecture .com/ 您还可以查看 Studiolada 的开源主页（这些是免费的，但计划是法语的） https://www.countryliving.com/remodeling-renovation/news/g46... 考虑： - 购买一些建筑书籍。许多（好的）都有优秀建筑师的计划。好的样本位于 [0]。如果你的品味不那么“建筑学校”，还有其他的。 - 查看您当地的开发批准。计划通常对所有人开放。他们（想必）今天就能达到您所在地区的标准。在我看来，“开源”的概念并不适用于房屋，因为监管、施工方法和品味可能因当地而异，并且会随着时间的推移而变化。这是您正在寻找的那种开源房屋计划吗？我认为没有人将它们编译到“开源房屋计划数据库”中，但这是一个非常巧妙的想法。检查当地议会网站。至少在澳大利亚，我们需要提交公开一段时间的开发批准。作为这些批准的一部分，将有平面图和建筑图纸。它们（通常）不足以构建，但如果您正在寻找想法、成本计算以及当地议会愿意批准的内容，它们是一个很好的灵感来源。如果使用计划的人可以返回并添加拉取请求，以了解他们在实际使用后增强计划的方式，那就真的很酷了。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-where-to-find-open-source-house-plans&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37234111&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;现代计算机体系结构和组织 - 第二版（2022）&lt;/stitle>; &lt;id>;https://www.packtpub.com/product/modern -computer-architecture-and-organization-second-edition/9781803234519&lt;/id>; &lt;更新>;2023-08-23T06:47:50.301556Z&lt;/更新>; &lt;link href=&quot;https://www.packtpub.com/产品/modern-computer-architecture-and-organization-second-edition/9781803234519&quot;/>; &lt;作者>; &lt;名称>;teleforce&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.packt-cdn.com/products/9781803234519/graphics/Images/B18111_01_01.png&quot; style=&quot;width: 220px ；高度：258px；&quot; />;&lt;br />;自动化计算系统的架构已经从近两个世纪前建造的第一个机械计算器发展到我们每天直接或间接使用的广泛的现代电子计算机技术。在此过程中，出现了一系列渐进的技术改进，其中穿插着颠覆性的进步，彻底改变了行业的发展轨迹。 &lt;a href=&quot;https://hackernews.betacat.io/#modern-computer-architecture-and-organization-second-edition-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37231273&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;没有人想要简单&lt;/stitle>; &lt;id>;https://lukeplant.me.uk/blog/posts/no-one-actually-wants- simple/&lt;/id>; &lt;更新>;2023-08-23T06:47:50.302427Z&lt;/更新>; &lt;link href=&quot;https://lukeplant.me.uk/blog/posts/no-one-actually-wants- simple/&quot;/>; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;现代 Web 开发之所以变得如此复杂，是因为没有人真正希望事情变得简单。我们只是认为我们这样做了，但事实证明我们的选择并非如此。 &lt;a href=&quot;https://hackernews.betacat.io/#no-one-wants-simplicity&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37229435&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;第一个符合标准的 M1 GPU 驱动程序&lt;/stitle>; &lt;id>;https://rosenzweig.io/blog/first-conformant-m1-gpu-driver.html&lt;/id>; &lt;更新>; 2023-08-22T15:47:50.304999Z&lt;/更新>; &lt;link href=&quot;https://rosenzweig.io/blog/first-conformant-m1-gpu-driver.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rosenzweig.io /blog/vkinstancing2.webp&quot; style=&quot;宽度：220px；高度：119px；&quot; />;&lt;br />;符合 OpenGL ES 3.1 的驱动程序现已可用于 M1 和 M2 系列 GPU。我们的逆向工程、免费和开源图形驱动程序是世界上唯一适用于 M1 和 M2 系列图形硬件的符合 OpenGL ES 3.1 的实现。 &lt;a href=&quot;https://hackernews.betacat.io/#the-first-conformant-m1-gpu-driver&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37224042&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;世界上最古老的照片（2022）&lt;/stitle>; &lt;id>;https://www.artandobject.com/news/what-you-might-not-know-about -worlds-oldest-photograph&lt;/id>; &lt;更新>;2023-08-23T08:47:50.305426Z&lt;/更新>; &lt;link href=&quot;https://www.artandobject.com/news/what-you-might- not-know-about-worlds-oldest-photograph&quot;/>; &lt;author>; &lt;name>;kaycebasques&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kaycebasques&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.artandobject.com/sites/default/files/styles/gallery_item/public/joseph-nicephore-niepce-view-window-le-gras-增强版-helmut-gersheim-performed-c-1952-c-1826.jpg？h=2f7db585&amp;itok=y81rg8Tt&quot; style=&quot;宽度：220px；高度：153px；&quot; />;&lt;br />;约瑟夫·尼塞福尔·尼埃普斯 (Joseph Nicéphore Niépce) 的《Le Gras 窗外风景》乍一看并没有特别令人印象深刻，它是一块灰色的白镴盘子，上面有模糊的林线和建筑物的阴影形状。尽管这张照片的外观并不起眼，但它对现代摄影的发展来说是不可或缺的。 &lt;a href=&quot;https://hackernews.betacat.io/#the-world-s-oldest-photograph-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37231354&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;拯救办公经济“不是我的责任”&lt;/stitle>; &lt;id>;https://www.wsj.com/articles/its-not-my-responsibility -to-save-the-office-economy-901dafce&lt;/id>; &lt;更新>;2023-08-23T11:47:50.305855Z&lt;/更新>; &lt;link href=&quot;https://www.wsj.com/articles/ its-not-my-responsibility-to-save-the-office-economy-901dafce&quot;/>; &lt;author>; &lt;name>;cebert&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= cebert&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.wsj.net/im-793815/?width=1278&amp;size=1&quot; style=&quot;width: 220px;高度：220px；” />;&lt;br />;数百名员工告诉我们他们为什么不回到办公室 如果说目前工作场所存在一个首要事实，那就是：许多员工不想回到办公室。很多老板都说他们应该这样做。 &lt;a href=&quot;https://hackernews.betacat.io/#its-not-my-responsibility-to-save-the-office-economy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37234327&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;fungeoid 是一种典型的多维语言，类似于 Befunge&lt;/stitle>; &lt;id>;https://esolags.org/wiki/Fungeoid&lt; /id>; &lt;更新>;2023-08-23T09:47:50.306307Z&lt;/更新>; &lt;link href=&quot;https://esolangs.org/wiki/Fungeoid&quot;/>; &lt;作者>; &lt;名称>;pyinstallwoes&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pyinstallwoes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Fungeoids 是多维语言，其中指令由指令指针（IP ）具有方向感和速度感。他们有条件董事，根据特定数据确定知识产权的动向。 Fungeoid 还处理指令执行顺序，并且经常使用单字符指令。 &lt;a href=&quot;https://hackernews.betacat.io/#a-fungeoid-is-a-典型地-multi-Dimension-language-similar-to-befunge&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37231179&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;眼部扫描可在诊断前七年检测出帕金森病的迹象&lt;/stitle>; &lt;id>;https://www.moorfields .nhs.uk/news/eye-scans-detect-signs-parkinson-s-disease-seven-years-diagnosis&lt;/id>; &lt;更新>;2023-08-23T01:47:50.306753Z&lt;/更新>; &lt;link href =&quot;https://www.moorfields.nhs.uk/news/eye-scans-detect-signs-parkinson-s-disease-seven-years-diagnosis&quot;/>; &lt;作者>; &lt;名称>;clouddrover &lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=clouddrover&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.moorfields.nhs.uk/站点/default/files/styles/news_listing_501px_wide/public/wf_tvASU.jpeg?itok=CuwGYnBZ&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;一组研究人员已经确定了一些标志物，这些标志物可以表明患者在临床表现前七年就患有帕金森病。这一发现是通过迄今为止最大规模的帕金森病视网膜成像研究实现的，该研究使用人工智能来分析眼睛扫描。 &lt;a href=&quot;https://hackernews.betacat.io/#eye-scans-detect-signs-of-parkinsons-disease-up-to-seven-years-before-diagnosis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37230843&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么迷走神经对科学家如此令人兴奋&lt;/stitle>; &lt;id>;https://www.theguardian .com/society/2023/aug/23/the-key-to-depression-obesity-alcoholism-and-more-why-the-vagus-nerve-is-so-exciting-to-scientists&lt;/id>; &lt;已更新>;2023-08-23T10:47:50.307216Z&lt;/更新>; &lt;link href=&quot;https://www.theguardian.com/society/2023/aug/23/the-key-to-depression-obesity-alcoholism- and-more-why-the-vagus-nerve-is-so-exciting-to-scientists&quot;/>; &lt;author>; &lt;name>;acallaghan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=acallaghan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.guim.co.uk/img/media/61f26c42d739fd690f0ef7d664064842e3412416/0_0_2832_3806/master/2832.jpg？宽度=445&amp;dpr=1&amp;s=无&quot; style=&quot;宽度：220px; height: 296px;&quot; />;&lt;br />;迷走神经是大脑与心脏、肺和腹部器官之间的双向通讯通道。它有助于控制不自主的过程，是副交感神经系统的一部分。科学兴趣迷走神经刺激正在不断增长，研究调查了其治疗各种疾病的潜力。&lt;a href=&quot;https://hackernews.betacat.io/#why-the-vagus-nerve-is-so-exciting-to-scientists &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37233977&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将 iPhone 安装在摩托车上可能会损坏其摄像头 (2022)&lt; /stitle>; &lt;id>;https://old.reddit.com/r/motorcycles/comments/v7d6rn/learned_the_hard_way_that_mounting_your_phone_on/&lt;/id>; &lt;更新>;2023-08-23T00:47:50.307652Z&lt;/更新>; &lt;link href =&quot;https://old.reddit.com/r/motorcycles/comments/v7d6rn/learned_the_hard_way_that_mounting_your_phone_on/&quot;/>; &lt;作者>; &lt;name>;behnamoh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=behnamoh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.redditstatic.com/new-icon.png&quot; style=&quot;width: 220px;高度：220px;&quot; />;&lt;br />;我的相机很好，但使用微距镜头时，我无法再拍摄清晰的照片，焦点一直在晃动。链接到... &lt;a href=&quot;https://hackernews .betacat.io/#mounting-your-iphone-on-your-motorcycle-can-damage-its-camera-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37230198&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;排列迭代和随机访问&lt;/stitle>; &lt;id>;https://blog.demofox.org/2023/08/22/permutation-iteration-and-random-access /&lt;/id>; &lt;更新>;2023-08-23T06:47:50.308096Z&lt;/更新>; &lt;link href=&quot;https://blog.demofox.org/2023/08/22/permutation-iteration-and-random -access/&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://demofox2.files.wordpress.com/2023/08/image-9.png?w=284&quot; style=&quot;宽度：220px; height: 321px;&quot; />;&lt;br />;本文讨论了排列的概念以及如何计算字母可能排列的数量。还解释了如何确定特定排列字符串的索引或字典顺序。&lt;a href =&quot;https://hackernews.betacat.io/#permutation-iteration-and-random-access&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=37232451&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过文件和行详细信息增强 Rust 错误&lt;/stitle>; &lt;id>;https://crates.io/crates/wherr&lt;/id>; &lt;updated>;2023-08-23T05:47:50.308527 Z&lt;/updated>; &lt;link href=&quot;https://crates.io/crates/wherr&quot;/>; &lt;作者>; &lt;name>;JoelJacobson&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=JoelJacobson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#enhance-rust-errors-with-file-and-line-details &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37232229&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;macOS 13.5 不再允许设置系统范围的 ulimit&lt;/stitle>; &lt; id>;https://developer.apple.com/forums/thread/735798&lt;/id>; &lt;更新>;2023-08-23T08:47:50.308959Z&lt;/更新>; &lt;link href=&quot;https://developer.apple .com/forums/thread/735798&quot;/>; &lt;作者>; &lt;名称>;hashhar&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hashhar&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;从 macOS 13.5 开始，不再可能在系统范围内增加 ulimit。这给使用 Vite 的开发者带来了问题，因为它需要更多数量的打开文件。 &lt;a href=&quot;https://hackernews.betacat.io/#macos-13-5-no-longer-allows-setting-system-wide-ulimits&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37233295&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;编写包管理器&lt;/stitle>; &lt;id>;https://antonz.org/writing-package-manager/&lt;/id>; &lt;更新>;2023-08-23T00:47:50.309390Z&lt;/更新>; &lt;link href=&quot;https://antonz.org/writing-package-manager/&quot;/>; &lt;作者>; &lt;名称>;celiktom&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=celiktom&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://antonz.org/writing-package -manager/cover.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;编写包管理器并不是最常见的编程任务之一。毕竟，有很多开箱即用的可用。 &lt;a href=&quot;https://hackernews.betacat.io/#writing-a-package-manager&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37220953&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;猪鱼即使死了也能用皮肤“看见”&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/08/22/science/hogfish- Skin-camouflage-dead.html&lt;/id>; &lt;更新>;2023-08-23T01:47:50.309810Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/08/22/science /hogfish-skin-camouflage-dead.html&quot;/>; &lt;作者>; &lt;名称>;gumby&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gumby&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/08/22/autossell/22tb-hogfish/22tb-hogfish-superJumbo.jpg&quot; style=&quot;width: 220 像素；高度：147 像素；&quot; />;&lt;br />;猪鱼即使在死后也有伪装的能力，这要归功于它们皮肤深处的一种神秘的新型细胞。这些细胞充满了视蛋白，使猪鱼能够监视周围环境并编辑其肤色。这些细胞的排列表明，猪鱼的皮肤不仅用于观察外部世界，还用于过滤光线以更好地躲避捕食者。 &lt;a href=&quot;https://hackernews.betacat.io/#hogfish-see-with-their-skin-even-when-theyre-dead&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37223995&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;麦克尼利苦乐参半的备忘录向 Sun 告别 (2010)&lt;/stitle>; &lt;id>;https://www.cnet.com/culture/ mcnealys-bittersweet-memo-bids-good-bye-to-sun-20000017/&lt;/id>; &lt;更新>;2023-08-23T05:47:50.312299Z&lt;/更新>; &lt;link href=&quot;https://www.mcnealys-bittersweet-memo-bids-good-bye-to-sun-20000017/&lt;/id>; cnet.com/culture/mcnealys-bittersweet-memo-bids-good-bye-to-sun-20000017/&quot;/>; &lt;作者>; &lt;名称>;ecliptik &lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Sun Microsystems 联合创始人斯科特·麦克尼利 (Scott McNealy) 在一份备忘录中向公司告别，其中结合了怀旧之情和号召采取行动员工加入 Oracle。麦克尼利表达了他对资本主义的热爱，并希望美国重拾对资本主义的热爱。 &lt;a href=&quot;https://hackernews.betacat.io/#mcnealy-s-bittersweet-memo-bids-good-bye-to-sun-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37231991&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;青蛙检流镜&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Frog_galvanscope&lt;/id>; &lt;更新>; 2023-08-23T04:47:50.312885Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Frog_galvanscope&quot;/>; &lt;作者>; &lt;name>;arittr&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=arittr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;青蛙检流器是 18 世纪末和 19 世纪用于检测电压的灵敏电气仪器。它由一条剥了皮的青蛙腿组成，并与神经电连接。 &lt;a href=&quot;https://hackernews.betacat.io/#frog-galvanscope&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37218765&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;电阻-晶体管逻辑 (RTL)&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Resistor%E2%80%93transistor_logic&lt;/id>; &lt;更新>;2023-08-23T07 ：47：50.313350Z &lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Resistor%E2%80%93transistor_logic&quot;/>; &lt;作者>; &lt;名称>;peter_d_sherman &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=peter_d_sherman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/拇指/8/8b/RTL_NPN_NOR_Gate.svg/200px-RTL_NPN_NOR_Gate.svg.png&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;电阻晶体管逻辑（RTL）是一类使用电阻器作为输入网络和双极结型晶体管（BJT）作为开关器件构建的数字电路。 RTL 电路是最早的一类晶体管数字逻辑电路，后来被二极管晶体管逻辑 (DTL) 和晶体管晶体管逻辑 (TTL) 所继承。 &lt;a href=&quot;https://hackernews.betacat.io/#resistor-transistor-logic-rtl&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37232626&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;C++ 中的内存顺序 (2022)&lt;/stitle>; &lt;id>;https://www.sobyte.net/post/2022-06/cpp-memory-order/&lt;/id>; &lt;已更新>;2023-08-23T04:47:50.313785Z&lt;/已更新>; &lt;link href=&quot;https://www.sobyte.net/post/2022-06/cpp-memory-order/&quot;/>; &lt;作者>; &lt; name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;C++11 将多线程作为标准。一旦涉及到多线程，就会出现并发、数据竞争、线程同步等问题。C++ 为此提供了 std::mutex 和 std::atomic 等标准库。 &lt;a href=&quot;https://hackernews.betacat.io/#memory-order-in-c-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37231636&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;