<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-25T20:04:38.546998Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;人工智能解决国际数学奥林匹克银牌级别的问题&lt;/stitle>; &lt;id>;https://deepmind.google/discover/blog/ai-solves-imo-problems-at- silver-medal-level/&lt;/id>; &lt;更新>;2024-07-25T16:04:33.335155Z&lt;/更新>; &lt;link href=&quot;https://deepmind.google/discover/blog/ai-solves-imo- issues-at-silver-medal-level/&quot;/>; &lt;author>; &lt;name>;ocfnash&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ocfnash&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://lh3.googleusercontent.com/AdiABEMQViHaJJIcquROUJAEQXGtkk04SAamLoG0w06W2j5ZBEL-hGgRpwQVfmMnonQud_Ol6y0VTuQxdTScqiE8KrXdNtCalLiU7CJ6R093lRD5pQ=w1072- h603-n-nu&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;基于强化学习的系统 AlphaProof 和改进的几何求解系统 AlphaGeometry 2 首次共同解决了国际数学奥林匹克 (IMO) 六道题中的四道，达到了与银牌获得者相同的水平。这些系统接受了数百万个问题的训练，并使用正式的数学语言来证明或反驳解决方案，... &lt;a href=&quot;https://hackernews.betacat.io/#ai-解决国际数学奥林匹克问题银牌级别问题&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 41069829&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;人工智能爬虫需要更加尊重&lt;/stitle>; &lt;id>;https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/&lt;/id>; &lt;updated>;2024-07- 25T19：41：33.336926Z &lt;/更新>; &lt;link href =“https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/”/>; &lt;作者>; &lt;名称>; pneff &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pneff&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://about.readthedocs.com/图片/headers/ai-crawlers.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;Read the Docs 是一个社区支持的托管开源文档的网站，该网站一直遭受来自 AI 产品和服务的滥用网站爬行，导致大量带宽费用和服务器负载问题。该网站正在要求人工智能公司更加尊重他们正在爬行的网站，并在其爬行器中实施基本检查以防止滥用，并且正在寻求爬行协议...... &lt;a href=&quot;https://hackernews.betacat.io/ #ai-crawlers-need-to-be-more-respectful&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41072549&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每个人的逆向工程&lt;/stitle>; &lt;id>;https://0xinfection.github.io/reversing/&lt;/id>; &lt;updated>;2024-07-25T15:04:33.337474Z&lt;/updated>; &lt;link href=&quot;https ://0xinfection.github.io/reversing/&quot;/>; &lt;作者>; &lt;名称>;udev4096 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=udev4096&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://0xinfection.github.io/reversing/cover.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;逆向工程是解构人造物体以揭示其设计、架构或代码的过程，类似于科学研究。本教程集涵盖 x86、x64、32 位 ARM 和64 位架构，旨在使逆向工程变得简单且易于初学者和那些希望刷新知识的人使用。 _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069256&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;共产主义者无法忍受的计算机天才&lt;/stitle>; &lt;id>;https: //culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand&lt;/id>; &lt;更新>;2024-07-25T19:04:33.338026Z&lt;/更新>; &lt;link href=&quot;https://culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand&quot;/>; &lt;作者>; &lt;名称>;janisz&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=janisz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://api.culture.pl/sites/default/files /styles/1200_630/public/field/image/k-202_ulotka.jpg?itok=9nHxuir8&quot; style=&quot;宽度：220px;高度：116px;&quot; />;&lt;br />;波兰工程师 Jacek Karpiński 发明了 K-202，这是一款革命性的计算机，可以装进公文包，每秒执行一百万次操作，但被共产主义政权阻止生产尽管取得了成就，卡尔宾斯基还是面临反对并最终被迫离开波兰，但他的技术在共产主义垮台后仍然存在于自由的波兰&lt;a href=&quot;https://hackernews.betacat.io/#the- Computer-genius-the-communists-couldn-t-stand&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41072026&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示HN：Wat – Python 对象的深度检查&lt;/stitle>; &lt;id>;https://github.com/igrek51/wat&lt;/id>; &lt;updated>;2024-07-25T17:04:33.338574Z&lt;/updated>; &lt;link href=&quot;https://github.com/igrek51/wat&quot;/>; &lt;作者>; &lt;名称>;igrek51&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=igrek51&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/igrek51/wat/master/docs/img/wat-datetime.png&quot; style=&quot;width: 220px; height: 171px;&quot; />;&lt;br />;WAT Inspector 是一个强大的工具，可以让你检查和探索 Python 中的未知对象，提供对象的类型、模块、父级和方法等信息，使其更容易理解并使用对象。它可以通过使用除法运算符来快速检查对象，并且还提供诸如列出方法、函数和子模块等功能。 betacat.io/#show-hn-wat-deep-inspection-of-python-objects&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=41070428&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;启动 HN: Undermind (YC S24) – 用于发现科学论文的人工智能代理&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=41069909&lt;/id>; &lt;updated>; 2024-07-25T16:04:33.339118Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=41069909&quot;/>; &lt;作者>; &lt;名称>;jramette&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=jramette&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Undermind 正在构建一个针对复杂科学研究的搜索引擎，旨在帮助研究人员快速找到相关的论文并避免在手动搜索上浪费时间。该搜索系统使用模仿人类研究策略的管道，仔细搜索结果并提供报告，其目标是实现结果的高精度和详尽性。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-undermind-yc-s24-ai-agent-for-discovering-scientific-papers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069909&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：具有 &lt; 1 秒语音响应的个性化 AI 导师&lt;/stitle>; &lt;id>;https://educationbot.cerebrium。 ai/&lt;/id>; &lt;更新>;2024-07-25T19:04:33.339662Z&lt;/更新>; &lt;link href=&quot;https://educationbot.cerebrium.ai/&quot;/>; &lt;作者>; &lt;名称>;za_mike157&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=za_mike157&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://educationbot.cerebrium.ai /social.png&quot; style=&quot;宽度: 220px 高度: 124px;&quot; />;&lt;br />;当今的教育资源已经高度数字化，这意味着任何人、任何地方都可以通过笔记本电脑观看世界上一些最著名的机构和个人的教育视频。然而，这一过程中一直缺乏的一部分是拥有自己的私人导师的能力……直到现在。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-a-personalized-ai-tutor-with-1s-voice-responses&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41057030&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Haystack – 用于在无限画布上探索和编辑代码的 IDE&lt;/stitle>; &lt;id>;https://haystackeditor。 com/&lt;/id>; &lt;更新>;2024-07-25T19:04:33.340188Z&lt;/更新>; &lt;link href=&quot;https://haystackeditor.com/&quot;/>; &lt;作者>; &lt;名称>;akshaysg &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=akshaysg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://framerusercontent.com/images/9bx5KI14yg2zRgbrESEvKFOdFM .png&quot;样式=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;基于画布的 IDE，使导航和重构速度提高 10 倍&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-haystack-an-ide-for-exploring-and- edit-code-on-an-infinite-canvas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41068719&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不时尚的安全：为什么我们使用隔离虚拟机&lt;/stitle>; &lt;id>;https://blog.thinkst.com/2024/07/unfashionously-secure-why-we-use-isolated-vms.html&lt;/id>; &lt;updated>;2024- 07-25T17:04:33.340738Z&lt;/更新>; &lt;link href=&quot;https://blog.thinkst.com/2024/07/unfashionically-secure-why-we-use-isolated-vms.html&quot;/>; &lt;作者>; &lt;name>;mh_&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mh_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=960%2C436&amp;ssl=1&quot; style=&quot;宽度：220px 高度：100px; ” />;&lt;br />;安全公司 Canary 选择使用独特的架构，在单独的虚拟机上运行每个客户的服务，提供完全的客户隔离和强大的安全边界，尽管这种架构不太时尚且价格更高。这种方法使 Canary 能够避免常见的安全漏洞，并在安全评估中被证明是有效的，提供了高水平的... &lt;a href=&quot;https://hackernews.betacat.io/#unfashionously-secure-why-we- use-isolated-vms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070870&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Node.js 添加了对 TypeScript 的实验性支持&lt; /stitle>; &lt;id>;https://github.com/nodejs/node/pull/53725&lt;/id>; &lt;更新>;2024-07-25T03:04:33.341278Z&lt;/更新>; &lt;link href=&quot;https:// /github.com/nodejs/node/pull/53725&quot;/>; &lt;作者>; &lt;名称>;magnio&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=magnio&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/19f5ceaed7bfd96bbe1ff3ec94e0670c2a75f0f1ef358d41c5fb71258a8184eb/nodejs/node/pull/53725&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;TypeScript 文件可以通过设置实验标志 --experimental-strip-types 来执行，它将代码转换为 JavaScript，而无需类型检查或保留类型。使用 @swc/wasm-typescript 包是为了简单起见，因为它是一个小包，带有 wasm 和 js 文件来绑定它，并且经过了 Deno 的实际测试。 &lt;a href=&quot;https://hackernews.betacat.io/#node-js-adds-experimental-support-for-typescript&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41064351&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Tiny Moon – 计算月相的 Swift 库&lt;/stitle>; &lt;id>;https://github.com/mannylopez/TinyMoon&lt;/id>; &lt;更新>;2024-07-25T16:04:33.341839Z&lt;/更新>; &lt;link href=&quot;https://github.com/mannylopez/TinyMoon&quot;/>; &lt;作者>; &lt;名称>;mannylopez &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=mannylopez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/mannylopez/TinyMoon/ main/images/TinyMoonIcon_256x256.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;TinyMoon 库计算任何给定日期和时间的月相，离线工作并与未来的更新兼容。它提供两种类型的计算：Moon（优先考虑主要相位）和 ExactMoon（返回特定日期和时间的精确值）。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-tiny-moon-swift-library-to-calculate-the-moon-phase&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069681&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我最喜欢的算法：线性时间中值查找（2018）&lt;/stitle>; &lt;id>;https://rcoh.me/posts / Linear-time-median-finding/ &lt;/ id>; &lt;更新>; 2024-07-25T10：04：33.342860Z &lt;/更新>; &lt;link href =“https://rcoh.me/posts/linear-time-median” -finding/&quot;/>; &lt;作者>; &lt;名称>;skanderbm &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=skanderbm&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://rcoh.me/images/medians-graph.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;中位数中位数算法是一种确定性线性时间方法，用于查找列表的中位数，使用快速选择和主元选择算法来实现线性性能。该算法被证明是线性时间的，但其实现很复杂，并且由于计算时间慢而在实践中不常用。 &lt;a href=&quot;https://hackernews.betacat.io/#my-favorite-algorithm-linear-time-median-finding-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41066536&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lisp 宏的防御：以汽车领域为例&lt;/stitle>; &lt;id>;https://mihaiolteanu.me/defense-of-lisp -macros&lt;/id>; &lt;更新>;2024-07-25T11:04:33.343387Z&lt;/更新>; &lt;link href=&quot;https://mihaiolteanu.me/defense-of-lisp-macros&quot;/>; &lt;作者>; &lt; name>;molteanu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=molteanu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;汽车行业受到大量工具、语言和文件格式，导致开发人员和供应商的碎片化和额外的工作量。对一种强大的语言来征服软件领域的追求导致了工具开发的永无止境的循环，每个工具都引入了自己的语言、语法和文件格式，在系统和...之间造成了裂痕。 “https://hackernews.betacat.io/#defense-of-lisp-macros-the-automotive-field-as-a-case-in-point” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41066544&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;化学家解释无咖啡因咖啡背后的化学成分&lt;/stitle>; &lt;id>;https://theconversation.com/retaining-flavor-while-删除咖啡因-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196&lt;/id>; &lt;更新>;2024-07-25T13:04:33.343910Z&lt;/更新>; &lt;link href=&quot;https:/ /theconversation.com/retaining-flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.theconversation.com/files/602926/original /file-20240625-17-dvtep.jpg?ixlib=rb-4.1.0&amp;rect=0%2C0%2C5243%2C3508&amp;q=20&amp;auto=format&amp;w=320&amp;fit=clip&amp;dpr=2&amp;usm=12&amp;cs=strip&quot; style=&quot;width: 220px; height: 148px;&quot; />;&lt;br />;脱咖啡因方法，如二氧化碳、瑞士水和溶剂法，可以去除咖啡豆中的大部分咖啡因，同时保留风味和香气化合物。这些方法具有丰富的咖啡因含量历史上，使用高压二氧化碳、热水和有机溶剂等各种技术来提取咖啡因，其中一些方法能够将风味化合物重新引入咖啡豆中。 a-chemist-explains-the-chemistry-behind-decaf-coffee&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41067616&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;从 STM32 映射 FPGA 的内存&lt;/stitle>; &lt;id>;https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html&lt;/id>; &lt;更新>;2024-07-25T15:04:33.344432Z&lt;/更新>; &lt;link href=&quot;https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html&quot; />; &lt;author>; &lt;name>;hasheddan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hasheddan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://serd.es/assets/fmc-test-800.jpg”样式=“宽度：220px； height: 164px;&quot; />;&lt;br />;作者描述了大型嵌入式项目的自定义设置，使用 AMD Xilinx Kintex-7 或 Artix FPGA 与 STM32H735 MCU 配对，并在它们之间具有内存映射接口。设置允许高速数据平面和控制平面，具有分散引脚排列、安全边界和灵活的内存控制器等功能。 an-fpga-from-an-stm32&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41068995&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;调查损坏的 Winamp 皮肤&lt; /stitle>; &lt;id>;https://jordaneldredge.com/notes/corrupted-skins/&lt;/id>; &lt;更新>;2024-07-25T05:04:33.344944Z&lt;/更新>; &lt;link href=&quot;https:// jordaneldredge.com/notes/corrupted-skins/&quot;/>; &lt;作者>; &lt;名称>;treve &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=treve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jordaneldredge.com/notion-mirror/84ebb48c-616a-4f51-ae9a-991a4e0a7e9b/e94461bd-1f9c-4ef4-bbda-23acc32ef0df/EsErCPFVoAACjOn.jpeg&quot;样式=“宽度：220px； height: 241px;&quot; />;&lt;br />;用户探索了损坏的 Winamp 皮肤，找到了各种文件，包括 PDF、图像和加密的 zip 文件，这导致了一系列意外的发现。用户发现了敏感信息，例如电子邮件密码和传记，甚至发现了一个潜在的恶意可执行文件，后来发现该文件是无害的。 >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41064645&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;生成数独只是为了乐趣而不盈利&lt;/stitle>; &lt;id>;https://tn1ck。 com/blog/how-to-generate-sudokus&lt;/id>; &lt;更新>;2024-07-25T11:04:33.345446Z&lt;/更新>; &lt;link href=&quot;https://tn1ck.com/blog/how-to -generate-sudokus&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://tn1ck.com/how-to-generate-sudokus/benchmark_bruteForceWithValidCheck.csv_correlation.png&quot; style=&quot;宽度：220px; height: 275px;&quot; />;&lt;br />;作者创建了一个免费开源数独应用程序，并通过使用各种算法生成数独并对其迭代次数进行基准测试来分析数独的难度。分析表明，迭代次数与难度级别，但作者指出，这可能不是人类如何看待难度的完美指标。利润&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41062072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;安全启动在 5 家大型设备制造商的 200 款型号上被破坏&lt; /stitle>; &lt;id>;https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromished-on-200-models-from-5-big-device-makers/&lt;/id>; &lt;更新>;2024-07-25T19:04:33.345995Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromished-on-200- models-from-5-big-device-makers/&quot;/>; &lt;作者>; &lt;名称>;verifex&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=verifex&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/rootkit-800x533.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;安全启动是一项旨在防止 BIOS 恶意软件的安全功能，由于密钥泄露，已在 200 多种设备型号上受到损害。此次泄露使攻击者能够绕过安全启动并在运行期间执行恶意软件系统启动，引发了对 300 多种其他设备型号上安全启动完整性的担忧。 5-big-device-makers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41071708&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;五种小语言及其发展历程：HOPL 演讲（1993）&lt;/stitle>; &lt;id>;https://www.bell-labs.com/usr/dmr/www/hopl.html&lt;/id>; &lt;updated>;2024-07-25T14:04： 33.346537Z&lt;/更新>; &lt;link href=&quot;https://www.bell-labs.com/usr/dmr/www/hopl.html&quot;/>; &lt;作者>; &lt;名称>;fanf2&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bell-labs.com/usr/dmr /www/hoplgifs/y.1.gif&quot; style=&quot;宽度：220px; height: 170px;&quot; />;&lt;br />;演讲者讨论了五种编程语言之间的异同：Bliss、Pascal、Algol 68、BCPL 和 C。他认为 C 的成功在于其连接和促进的能力人们需要做什么，以及它在 Unix 系统上的实现。 1993&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41032097&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：与 10 岁孩子一起学习机器人技术的最佳方式?&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=41070703&lt;/id>; &lt;更新>;2024-07-25T17:04:33.347060Z&lt;/更新>; &lt;link href=&quot;https ://news.ycombinator.com/item?id=41070703&quot;/>; &lt;作者>; &lt;名称>;hersko&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hersko&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;您和您的儿子想要从头开始构建一个小型战斗机器人，但缺乏电气工程和机器人技术知识。您正在寻找资源和书籍来共同学习基础知识，而不是购买预制的套件。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-best-way-to-learn-robotics-with-a-10-year-old&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41070703&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;免调整个性化图像生成&lt;/stitle>; &lt;id>;https://ai.meta.com/research/ Publications/imagine-yourself-tuning-free-personalized-image- Generation/&lt;/id>; &lt;更新>;2024-07-25T16:04:33.347581Z&lt;/更新>; &lt;link href=&quot;https://ai.meta. com/research/publications/imagine-yourself-tuning-free-personalized-image- Generation/&quot;/>; &lt;作者>; &lt;名称>;LarsDu88&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =LarsDu88&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;抱歉，出了点问题。我们正在努力尽快修复此问题。 &lt;a href=&quot;https://hackernews.betacat.io/#tuning-free-personalized-image- Generation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=41069886&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Veles：用于二进制数据分析的开源工具&lt;/stitle>; &lt;id>;https://codisec.com/veles/&lt;/id>; &lt;更新>;2024-07-25T11 ：04：33.348096Z &lt;/更新>; &lt;link href =“https://codisec.com/veles/”/>; &lt;作者>; &lt;名称>;LorenDB &lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://codisec.com/wp-content/uploads/2016/12/binary_visualization.png&quot; 样式=“宽度：220像素；高度：126像素；” />;&lt;br />;Veles 是一种二进制数据分析工具，它将先进的十六进制探索和数据可视化功能与可扩展的分析框架相结合，支持逆向工程和隐写术等任务。该工具使用客户端-服务器架构并且是开源的，重点是通过夺旗竞赛进行社区驱动的开发和测试。 &lt;a href=&quot;https://hackernews.betacat.io/#veles-open-source-tool-for-binary-data-analysis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41026480&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每个公司都应该由员工拥有&lt;/stitle>; &lt;id>;https://www.elysian.press/p/employee-ownership&lt;/id >; &lt;更新>;2024-07-25T07:04:33.348610Z&lt;/更新>; &lt;link href=&quot;https://www.elysian.press/p/employee-ownership&quot;/>; &lt;作者>; &lt;名称>;ellegriffin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ellegriffin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image /fetch/w_1456,c_limit,f_auto,q_auto:好,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5dd334d7-440e-4ea9-9385-1be0186d010a_2464x1856.png “样式=”宽度：220px;高度：166px;“ />;&lt;br />;Central States Manufacturing 是一家价值十亿美元的公司，由其员工拥有，员工获得一定比例工资的股票所有权，促进财富平等。这种被称为员工持股计划 (ESOP) 的模式越来越受欢迎，美国有 6,533 家公司采用该模式，有助于缩小贫富差距。 &lt;a href=&quot;https://hackernews.betacat.io/#every-company-should-be-owned-by-its-employees&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41065227&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;constexpr 分配有什么难的？&lt;/stitle>; &lt;id>;https://brevzin.github.io/c++/2024/07/24/constexpr -alloc/&lt;/id>; &lt;更新>;2024-07-25T14:04:33.349124Z&lt;/更新>; &lt;link href=&quot;https://brevzin.github.io/c++/2024/07/24/constexpr-alloc /&quot;/>; &lt;author>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者讨论了在 C++20 中允许持久 constexpr 分配的挑战，包括需要确保分配在运行时不会发生变化以及其内容可以用作常量表达式。作者提出了几种解决方案，包括引入新的 cv 限定符“propconst”和将分配标记为不可变的库函数，以及... &lt;a href=&quot;https://hackernews.betacat.io/#what- s-so-hard-about-constexpr-allocation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41068294&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple 地图网络发布测试版&lt;/stitle>; &lt;id>;https://www.apple.com/newsroom/2024/07/apple-maps-on-the-web-launches-in-beta/&lt;/id>; &lt;更新>;2024-07-25T07:04:33.349655Z&lt;/更新>; &lt;link href=&quot;https://www.apple.com/newsroom/2024/07/apple-maps-on-the-web-launches-in- beta/&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://www.apple.com/newsroom/images/logos/quick-reads-logos/Apple-Maps.jpg.square_social.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Apple 地图现已在网络上推出公开测试版，提供驾驶和步行路线、地点信息以及订餐等操作。该功能目前在 Safari、Chrome 和 Edge 上提供英语版本，将来还会支持其他语言、浏览器和平台。 &lt;a href=&quot;https://hackernews.betacat.io/#apple-maps-on-the-web-launches-in-beta&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41065326&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;让我们将 CAP 放入好奇柜&lt;/stitle>; &lt;id>;https://brooker.co.za/blog/2024/07/25/ cap-again.html&lt;/id>; &lt;更新>;2024-07-25T15:04:33.350168Z&lt;/更新>; &lt;link href=&quot;https://brooker.co.za/blog/2024/07/25/cap -again.html&quot;/>; &lt;作者>; &lt;名称>;nalgeon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nalgeon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://brooker.co.za/blog/images/bernstein_das_fig2.png&quot; style=&quot;宽度：220px；高度：103px；&quot; />;&lt;br />;CAP 定理通常被认为对分布式系统工程师很重要，但对于大多数云式分布式系统和应用程序来说几乎无关紧要，在这些系统和应用程序中，其他权衡实际上更为重要。该定理与间歇性连接的移动和物联网应用程序更相关，通常被认为是常识，而设计这些系统的工程师...... &lt;a href=&quot;https://hackernews.betacat.io/#let-s-consign -cap-to-the-cabinet-of-curiosities&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41069403&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;地下城和龙教我如何编写替代文本&lt;/stitle>; &lt;id>;https://ericwbailey.website/published/dungeons-and-dragons-taught-me-how-to-write-alt-text/&lt;/id>; &lt;更新>;2024-07-24T21:04:33.350682Z&lt;/更新>; &lt;link href=&quot;https://ericwbailey.website/published/dungeons-and-dragons-taught-me-how-to-write-alt-text /&quot;/>; &lt;作者>; &lt;名称>;ohjeez&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ohjeez&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://ericwbailey.website/img/posts/dungeons-and-dragons-taught-me-how-to-write-alt-text/share-image-facebook.png&quot; style=&quot;宽度：220px ; height: 116px;&quot; />;&lt;br />;作者回顾了他们玩《龙与地下城》的经历，强调了描述性故事讲述和优先考虑关键信息的重要性。他们还讨论了替代文本的写作艺术，强调了其在传达意义和表达意义方面的重要性。创造身临其境的体验。 &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41061755&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Postgres 进行版本化的有限状态机 (2019)&lt;/stitle>; &lt;id>;https://raphael.medaer .me/2019/06/12/pgfsm.html&lt;/id>; &lt;更新>;2024-07-25T09:04:33.351218Z&lt;/更新>; &lt;link href=&quot;https://raphael.medaer.me/2019/ 06/12/pgfsm.html&quot;/>; &lt;作者>; &lt;名称>;mirzap &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mirzap&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://raphael.medaer.me/assets/img/pgfsm-intro.jpg&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;用户使用 PostgreSQL 实现了数据库有限状态机 (FSM)，通过使用状态和事件的枚举来改进 Felix Geisendorfer 的原始实现，并为转换创建映射表。用户还向 FSM 添加了版本控制，允许在不破坏现有数据的情况下更改转换函数和表，并引入触发器来限制... &lt;a href=&quot;https://hackernews.betacat.io/#versioned-finite-state -machines-with-postgres-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41066303&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;当对象不够用时 ( 2021）&lt;/stitle>; &lt;id>;https://www.tonysm.com/when-objects-are-not-enough/&lt;/id>; &lt;更新>;2024-07-25T10:04:33.351733Z&lt;/更新>; &lt;link href=&quot;https://www.tonysm.com/when-objects-are-not-enough/&quot;/>; &lt;作者>; &lt;name>;o2l&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=o2l&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.tonysm.com/assets/images/oop/01-objects.png&quot;样式=“宽度：220px； height: 234px;&quot; />;&lt;br />;作者探讨了面向对象编程 (OOP) 的概念及其演变，强调了原始 Smalltalk 方法与现代实现之间的差异。作者讨论了封装“消息”的重要性在类中，将方法提升为对象，并将操作用作类，同时还涉及 OOP 的局限性以及对更多... &lt;a href=&quot;https://hackernews.betacat.io/#when-objects -are-not-enough-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41039647&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;