<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-05-01T04:04:58.842496Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;使用 CSS 网格打印音乐&lt;/stitle>; &lt;id>;https://cruncher.ch/blog/printing-music-with-css-grid/&lt;/id>; &lt;updated>; 2024-04-30T21:04:43.764725Z&lt;/更新>; &lt;link href=&quot;https://cruncher.ch/blog/printing-music-with-css-grid/&quot;/>; &lt;作者>; &lt;名称>;speckx&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=speckx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cruncher.ch/ static/blog/printing-music/images/template-rows.png&quot; style=&quot;宽度：220px 高度：167px；&quot; />;&lt;br />;本文介绍了一种使用 CSS 网格在网络上呈现乐谱的新方法。作者为网格定义了两个轴：垂直轴，由五线谱（五线谱）定义，具有固定大小的网格行；水平轴，由时间线定义，具有可变的列数。五线谱由名为“.stave”的类定义，并具有固定大小的网格行，其名称基于音高。时间线由名为“.time”的类定义，并且具有基于拍号的可变数量的列。作者还定义了一个名为“.note”的类来表示各个注释，并使用数据属性将元素映射到特定的网格列和行。本文还讨论了在网络上呈现乐谱的一些挑战，例如处理节奏和跨浏览器兼容性。 &lt;a href=&quot;https://hackernews.betacat.io/#printing-music-with-css-grid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40216057&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Pyinfra：使用 Python 自动化基础设施&lt;/stitle>; &lt;id>;https://pyinfra.com/&lt;/id>; &lt;updated>;2024-04-30T15:04:43.766674Z&lt; /updated>; &lt;link href=&quot;https://pyinfra.com/&quot;/>; &lt;作者>; &lt;name>;InitEnabler&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=InitEnabler&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pyinfra.com/static/example_deploy.gif&quot; style=&quot;width: 220px; height: 143px;&quot; />;&lt;br />;Pyinfra 使用 Python 实现高效的基础设施自动化，从单个服务器扩展到数千个服务器，并支持命令执行和配置管理等任务。它结合了库存、操作和 Python 编码，以促进多功能部署。 &lt;a href=&quot;https://hackernews.betacat.io/#pyinfra-automate-infrastruct-using-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40211655&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Borgo 是一种编译为 Go 的静态类型语言&lt;/stitle>; &lt;id>;https://github.com/borgo-lang/borgo&lt;/id>; &lt;updated>;2024- 04-30T16:04:43.767095Z&lt;/updated>; &lt;link href=&quot;https://github.com/borgo-lang/borgo&quot;/>; &lt;作者>; &lt;name>;manx&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=manx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/borgo-lang/borgo-lang .github.io/main/borgo.jpg&quot; style=&quot;宽度: 220px 高度: 154px;&quot; />;&lt;br />;作者希望有一种语言能够将 Go 的简单性与 Rust 的表现力融为一体，但又没有其复杂性。 Borgo 是一种转译为 Go 的新语言，提供与 Go 库的完全兼容性和增强的类型安全功能。 &lt;a href=&quot;https://hackernews.betacat.io/#borgo-is-a-statically-typed-language-that-c​​ompiles-to-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40211891&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Run0，一个基于 systemd 的 sudo 替代品，已发布&lt;/stitle>; &lt;id>;https://mastodon.social/@pid_eins/112353324518585654 &lt;/id>; &lt;更新>;2024-04-30T16:04:43.767504Z&lt;/更新>; &lt;link href=&quot;https://mastodon.social/@pid_eins/112353324518585654&quot;/>; &lt;作者>; &lt;名称>;CoolCold&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=CoolCold&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了 systemd v256 版本的新功能，并重点介绍了传统的Linux 中“sudo”命令的重要性和功能。 &lt;a href=&quot;https://hackernews.betacat.io/#run0-a-systemd-based-alternative-to-sudo-announced&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40205714&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;文件文件系统（2021）&lt;/stitle>; &lt;id>;https://mgree.github.io/ffs/&lt;/id>; &lt;更新>;2024 -04-30T19:04:43.767908Z&lt;/更新>; &lt;link href=&quot;https://mgree.github.io/ffs/&quot;/>; &lt;作者>; &lt;名称>;wegwerff&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=wegwerff&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mgree.github.io/ffs/assets/images/inplace_demo .gif&quot;样式=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文讨论了 Unix shell 对于现代数据格式的限制，并介绍了 ffs，这是一种将半结构化数据挂载为文件系统以便于操作的工具。它指定了安装要求和使用命令，并注明了用于 JSON 处理的 jq 和 gron 等工具。 &lt;a href=&quot;https://hackernews.betacat.io/#the-file-filesystem-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40213731&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;高斯级别：百万平方米的实时视图合成&lt;/stitle>; &lt;id>;https://zju3dv.github.io/LoG_webpage/&lt;/id>; &lt;updated>;2024 -04-30T20:04:43.768314Z&lt;/更新>; &lt;link href=&quot;https://zju3dv.github.io/LoG_webpage/&quot;/>; &lt;作者>; &lt;名称>;corysama&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=corysama&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zju3dv.github.io/LoG_webpage/img/teaser.jpg “样式=”宽度：220px;高度：104px;“ />;&lt;br />;本文引入了高斯级别 (LoG) 来高效实时渲染大型 3D 场景，根据观看者距离调整细节级别。 LoG 通过使用树结构来实现可扩展的高质量渲染，从而改进了 3DGS。 &lt;a href=&quot;https://hackernews.betacat.io/#level-of-gaussians-real-time-view-synthesis-for-millions-of-square-meters&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40215424&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;原住民Linux&lt;/stitle>; &lt;id>;https://landley.net/aboriginal/about.html&lt;/id >; &lt;更新>;2024-05-01T01:04:43.768716Z&lt;/更新>; &lt;link href=&quot;https://landley.net/aboriginal/about.html&quot;/>; &lt;作者>; &lt;名称>;swatson741&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Aboriginal Linux 是一个用于创建可启动系统映像的构建系统。它被设计为一个极简且灵活的系统，可用于构建各种 Linux 发行版。该系统是作为一系列 bash 脚本实现的，这些脚本被设计为可读且易于理解。每个脚本都会按照需要安装的顺序收集配置、构建和安装适当的包所需的一系列命令，以满足它们的依赖关系。该系统被设计为与版本无关，这意味着它可用于跨多个体系结构构建相同的包，并立即在模拟器内运行结果。该系统被设计为在相当新的发行版上作为普通用户运行，并且它使用交叉编译器来构建运行系统所需的本机工具。该系统被设计为可扩展的，这意味着可以轻松地对其进行修改以添加或删除软件包，或者以各种方式更改系统的行为。该系统被设计为可读的，这意味着它可以用作文档来解释系统为何执行其操作。 &lt;a href=&quot;https://hackernews.betacat.io/#aboriginal-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40218095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Arti：Rust 中的 Tor 实现&lt;/stitle>; &lt;id>;https://tpo.pages.torproject.net/core/arti/&lt;/id>; &lt;更新>;2024-04-30T19:04： 43.769098Z&lt;/updated>; &lt;link href=&quot;https://tpo.pages.torproject.net/core/arti/&quot;/>; &lt;author>; &lt;name>;acheong08&lt;/name>; &lt;uri>;https://news.43.769098Z&lt;/updated>; &lt;link href=&quot;https://tpo.pages.torproject.net/core/arti/&quot;/>; ycombinator.com/user?id=acheong08&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Arti 是一个用 Rust 编程语言实现 Tor 匿名协议的项目。目前，Arti 提供了一个可用的 Tor 客户端。初步支持连接到洋葱服务，但需要做更多的工作才能实现与 Ctor 实现同等的安全性。在 Arti 更加成熟之前，我们建议仅将其用于实验用途。 &lt;a href=&quot;https://hackernews.betacat.io/#arti-a-tor-implementation-in-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40214763&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我制作了一个 CLI 工具来创建 Web 扩展，无需构建配置&lt;/stitle>; &lt;id>;https://github.com/cezaraugusto/extension.js&lt; /id>; &lt;更新>;2024-04-30T14:04:43.769529Z&lt;/更新>; &lt;link href=&quot;https://github.com/cezaraugusto/extension.js&quot;/>; &lt;作者>; &lt;名称>;cezaraugustodev&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cezaraugustodev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images .githubusercontent.com/4672033/316628309-01a90694-4705-416e-898c-20bf845984e7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..uw4Nv5fmmO2Gem-XqNDq7kP3yMP _9crhWsuL-K9T_Cs&quot;样式=&quot;宽度：220px；高度：138px；&quot; />;&lt;br />;Extension.js 通过支持 TypeScript 和 React 促进跨浏览器扩展开发，允许开发人员使用 Chrome 扩展示例启动项目。它还提供与 Edge 等多种浏览器的兼容性，并使现有扩展能够与其构建系统集成。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-a-cli-tool-to-create-web-extensions-with-no-build-configuration&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40210627&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;爱丽丝在可微仙境中的冒险&lt;/stitle>; &lt;id>;https://www. sscardapane.it/alice-book&lt;/id>; &lt;更新>;2024-04-30T17:04:43.769918Z&lt;/更新>; &lt;link href=&quot;https://www.sscardapane.it/alice-book&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://www.sscardapane.it/assets/alice/Alice.png&quot; style=&quot;宽度：220px 高度：281px；&quot; />;&lt;br />;神经网络在语言处理和机器人等各种应用中运行。本入门书对可微分编程进行了易于掌握的介绍，重点关注核心设计技术并弥合理论与实际代码之间的差距。 &lt;a href=&quot;https://hackernews.betacat.io/#alice-s-adventures-in-a- Differentiable-wonderland&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40213292&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;波音工程师向参议院讲述“制造捷径”[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=PP0xhIe1LFE&lt; /id>; &lt;更新>;2024-05-01T02:04:43.770313Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=PP0xhIe1LFE&quot;/>; &lt;作者>; &lt;名称>;aledalgrande &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=aledalgrande&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com /embed/PP0xhIe1LFE&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#boeing-engineer-tells-senate-about-manufacturing-shortcuts -video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40218461&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Rama 证明了 Clojure 的强大功能&lt;/stitle >; &lt;id>;https://blog.redplanetlabs.com/2024/04/30/rama-is-a-testament-to-the-power-of-clojure/&lt;/id>; &lt;更新>;2024-04-30T19 ：04：43.770706Z &lt;/更新>; &lt;link href =“https://blog.redplanetlabs.com/2024/04/30/rama-is-a-testament-to-the-power-of-clojure/”/ >; &lt;作者>; &lt;名称>;winkywooster&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=winkywooster&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://i0.wp.com/blog.redplanetlabs.com/wp-content/uploads/2023/04/cropped-RPL-Twitter.png?fit=512%2C512&amp;ssl=1” style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;Rama是一个集成和泛化后端开发的编程平台，它使用新的编程语言，实现了新的编程范式，与“面向对象”、“命令式”处于同一水平”、“逻辑”和“函数”范例。Rama 的 Clojure API 可以直接访问这种新语言，它的 Java API 是该语言子集的薄包装器。Rama 的语言是图灵完备的，并且主要通过 Clojure 宏定义它将函数的概念概括为“片段”，可以多次输出到多个“输出流”，并在发出 Rama 之间或之后执行更多工作，并以常规 Clojure 代码和 Rama 代码的混合形式实现。 Rama 核心的新语言是重新表述几乎所有编程语言（函数）基础的语言的一个例子，而 Spectre 并不是这种混合范例的唯一例子。用于查询和操作数据结构的库。它也是 Rama API 的关键部分（因为 Rama 中的视图称为 PState，是任何组合的持久数据结构），并且它是 Rama 实现的关键部分。 Rama 的源代码和测试中大约 1% 的代码行是 Spectre 调用点。 Clojure 在 Lisp 中是独一无二的，因为它强调不变性。它的核心 API 面向使用不可变数据结构。此外，Clojure 鼓励使用简单的数据结构来表示程序状态，并使用富有表现力的 API 来处理这些数据结构。 “让 100 个函数在一个数据结构上运行比让 10 个函数在 10 个数据结构上运行要好”这句话是 Clojure 基本原理的一部分。这些哲学对 Rama 的发展产生了重大影响，为管理 Rama 实施中的复杂性提供了巨大帮助。在一段代码中需要考虑的状态越少，推理就越容易。当一个项目像 Rama 一样大（190k 行源代码、220k 行测试）、具有多层抽象和无数子系统时，就不可能将整个系统的一小部分保留在“头脑中”进行推理。降低系统复杂性（其中不变性占很大一部分）所带来的红利随着代码库的增大而变得越来越复杂。 Clojure 并不强制每种情况都保持不变，这也很重要。 Rama 跟踪许多不同类型的状态，我们发现在某些情况下使用可变性要简单得多，而不是像通过 Haskell 中的 State Monad 那样间接处理状态。还有一些算法在实现中使用易失性内部时编写起来要简单得多。也就是说，Rama 中的绝大多数代码都是以不可变的风格编写的。当我们使用可变性时，它几乎总是被隔离在单个线程内。我们不使用原子之类的东西来实现并发可变性，而是使用 volatile 并将事件发送到其所属线程以与其交互。 Rama 拥抱并扩展了 Clojure 的不变性和围绕数据结构编写代码的原则。这些原则是 Rama 表达端到端后端的方法的基础。许多 Rama 编程都围绕物化视图 (PState) 展开，这些视图实际上只是使用与内存中数据结构交互完全相同的 Spectre API 进行交互的数据结构。这与数据库形成鲜明对比，数据库具有固定的数据模型和用于与其交互的特殊 API。任何数据库都可以在 PState 中复制表现力和性能，因为数据模型只是数据结构的特定组合（例如，键/值是映射，面向列是排序映射的映射，文档是地图等）。 Rama 的语言将 Clojure 的不可变原则扩展到编写分布式、容错和异步代码。与 Clojure 有很多相似之处，例如带有词法闭包的匿名操作、不可变的局部变量以及阴影时相同的语义。 Rama 在分布式计算方面更进一步，进行范围分析等操作来确定哪些变量需要跨网络边界传输。 Rama 的循环具有与 Clojure 类似的语法，并且具有能够在循环迭代期间在集群中跳跃的分布式计算的附加功能。对于 Rama，这一切都是通过数据流的力量线性编写的，切换线程/节点是像其他操作一样的操作（称为“分区器”）。 Clojure 的原则只是合理的想法，确实对简化软件开发产生了巨大的影响。这些原则在历史上已经过于复杂的分布式系统/数据库中更加相关。这就是为什么这些原则对于罗摩及其实施如此核心。 &lt;a href=&quot;https://hackernews.betacat.io/#rama-is-a-testament-to-the-power-of-clojure&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40214692&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;IMEI 代码：您手机的其他号码&lt;/stitle>; &lt;id>;https://tedium.co/2024/04/27/mobile-电话-imei-number-history/&lt;/id>; &lt;更新>;2024-04-30T15:04:43.771107Z&lt;/更新>; &lt;link href=&quot;https://tedium.co/2024/04/27/mobile-电话-imei-number-history/&quot;/>; &lt;作者>; &lt;名称>;shortformblog&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=shortformblog&lt;/uri>; &lt;/author>; &lt;内容类型 =“html”>;&lt;img src =“https://images.tedium.co/uploads/tedium042724.gif”样式 =“宽度：220 像素；高度：92 像素；” />;&lt;br />;Tedium 探讨了 IMEI 代码的起源和用途：手机的唯一标识符，强调了它在设备跟踪和公共安全中的作用。序列码对于产品跟踪、防止盗窃和管理复杂的制造至关重要。 &lt;a href=&quot;https://hackernews.betacat.io/#the-imei-code-your-phones-other-number&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40202203&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我为 iPad 构建了一个 Java IDE&lt;/stitle>; &lt;id>;https://apps.apple.com/de/app/codebrew-ide- for-java/id6475267297?l=en-GB&lt;/id>; &lt;更新>;2024-04-30T16:04:43.771502Z&lt;/更新>; &lt;link href=&quot;https://apps.apple.com/de/app /codebrew-ide-for-java/id6475267297?l=en-GB&quot;/>; &lt;作者>; &lt;名称>;coolius&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=coolius&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://is1-ssl.mzstatic.com/image/thumb/Purple221/v4/e0/45/8a/e0458ab1-d483-e472 -4438-bb2fff37f9bd/AppIcon-0-0-1x_U007emarketing-0-6-0-85-220.png/1200x630wa.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;CodeBrew 作为适用于 iPad 和 iPhone 的 Java IDE 推出，提供使用 Java 17 JDK 进行动态编码以及智能代码补全等功能。它简化了游戏开发并为具有不同专业知识的用户提供示例项目。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-a-java-ide-for-ipad&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40211994&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ECMO 如何重新定义死亡&lt;/stitle>; &lt;id>;https://www.newyorker.com/science/annals-of-medicine/how -ecmo-is-redefining-death&lt;/id>; &lt;更新>;2024-04-30T19:04:43.771887Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/science/annals-of- Medicine/how-ecmo-is-redefining-death&quot;/>; &lt;author>; &lt;name>;_xerces_&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=_xerces_&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/662fee03cc64942f78b50abf/master/w_2560%2Cc_limit/Dalton_final.jpg&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;23 岁的囊性纤维化患者 Shania Arms 在 TikTok 上分享了她在 ICU 的生活，描述了她在等待肺移植时对 ECMO 机器的依赖。本文探讨了 ECMO 在现代医学中挽救生命但在伦理上复杂的作用，强调了它的历史演变和当前的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#how-ecmo-is-redefining-death&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40214525&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;酶开辟了通用献血的新途径&lt;/stitle>; &lt;id>;https://www.dtu.dk/english/newsarchive/2024/04/enzymes-open-new-通用供体血液路径&lt;/id>; &lt;更新>;2024-04-30T17:04:43.772275Z&lt;/更新>; &lt;link href=&quot;https://www.dtu.dk/english/newsarchive/2024 /04/enzymes-open-new-path-to-universal-donor-blood&quot;/>; &lt;作者>; &lt;名称>;gnabgib&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gnabgib &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.dtu.dk/english/-/media/dtudk/nyheder/webnyheder/2024/blodplasma_1920x1080_colourbox.jpg?rw =960&amp;rh=0&amp;hash=4B6BDDC039926ED7B4C7B3B452F46D61&quot; style=&quot;宽度: 220px 高度: 124px;&quot; />;&lt;br />;斯堪的纳维亚半岛的主要血型是A型，占40-45%，大多数为RhD阳性； O 占 40%，然后是 B 占 10%，AB 占 5%。只有 O 型红细胞被普遍接受用于输血。 &lt;a href=&quot;https://hackernews.betacat.io/#enzymes-open-new-path-to-universal-donor-blood&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40213024&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;StoryDiffusion：远程图像和视频生成&lt;/stitle>; &lt;id>;https://storydiffusion.github.io/&lt;/id>; &lt;updated>; 2024-05-01T01:04:43.773016Z&lt;/updated>; &lt;link href=&quot;https://storydiffusion.github.io/&quot;/>; &lt;author>; &lt;name>;doodlesdev&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=doodlesdev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://storydiffusion.github.io/MagicStory_files/comics/1.jpg&quot;样式=“宽度：220像素；高度：128像素；” />;&lt;br />;StoryDiffusion：用于长距离图像和视频生成的一致自注意力&lt;a href=&quot;https://hackernews.betacat.io/#storydiffusion-long-range-image-and-video- Generation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40218021&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国药物管制机构将重新对大麻进行分类&lt;/stitle>; &lt;id >;https://apnews.com/article/marijuana-biden-dea-criminal-justice-pot-f833a8dae6ceb31a8658a5d65832a3b8&lt;/id>; &lt;更新>;2024-04-30T18:04:43.773433Z&lt;/更新>; &lt;link href=&quot; https://apnews.com/article/marijuana-biden-dea-criminal-justice-pot-f833a8dae6ceb31a8658a5d65832a3b8&quot;/>; &lt;author>; &lt;name>;JacobHenner&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=JacobHenner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dims.apnews.com/dims4/default/e2b259b/2147483647/strip/true/crop/ 4032x2686+0+169/调整大小/599x399!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F88%2F69%2F257c7566aae5844cf62c6433d6ea%2Fd3ce6a937b8440d4a2824435407 5e13d&quot;样式=&quot;宽度：220px；高度：147px;&quot; />;&lt;br />;美国缉毒局 (DEA) 决定将大麻重新分类为危险性较低的类别，承认其医疗用途并减少其滥用潜力。这一转变（正在等待审查）可能会放松监管，并反映出对毒品政策的看法不断变化。 &lt;a href=&quot;https://hackernews.betacat.io/#us-drug-control-agency-will-move-to-reclassify-marijuana&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40213591&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;手表中的日历类型&lt;/stitle>; &lt;id>;https://arslan.io/2024/04/29/calendar-types-in-手表/&lt;/id>; &lt;更新>;2024-04-30T15:04:43.773830Z&lt;/更新>; &lt;link href=&quot;https://arslan.io/2024/04/29/calendar-types-in-watches/ &quot;/>; &lt;author>; &lt;name>;farslan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=farslan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://arslan.io/content/images/size/w1200/2024/04/7c75e25d32e0ceba90e39538460becc8b7037b5b-2.jpg”样式=“宽度：220px;高度：91px;&quot; />;&lt;br />;腕表提供除计时之外的复杂功能，如日期和月相；机械表则难以满足这些功能。万年历可根据不同的月份长度和闰年进行调整，标志着制表复杂性的顶峰。 &lt;a href=&quot;https://hackernews.betacat.io/#calendar-types-in-watches&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40201528&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Pydantic Logfire&lt;/stitle>; &lt;id>;https://pydantic.dev/logfire&lt;/id>; &lt;更新>;2024-04-30T16:04:43.774226Z&lt;/更新>; &lt;link href=&quot;https://pydantic.dev/logfire&quot;/>; &lt;作者>; &lt;名称>;ellieh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ellieh&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pydantic.dev/cdn-cgi/image/width=1080,quality=75,format=auto/https://pydantic.dev/assets /logfire/tabbed-code-blocks/openai/left-code-block.svg&quot; style=&quot;width: 220px; height: 236px;&quot; />;&lt;br />;Pydantic Logfire 是一个新的可观察性平台，为 Python 应用程序提供直观的监控和轻松集成，扩展了 OpenTelemetry 的功能。它简化了跨语言的数据收集和应用程序洞察，而无需专门的团队。&lt;a href=&quot;https://hackernews.betacat.io/#pydantic-logfire&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40212490&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;Frid​​geLock：通过内存加密防止挂起的 Linux 上的数据被盗（2020）&lt;/stitle>; &lt;id>;https://www.sec.in.tum.de/i20/publications/fridgelock-preventing-data-theft- on-suspended-linux-with-usable-memory-加密&lt;/id>; &lt;更新>;2024-04-30T20:04:43.774612Z&lt;/更新>; &lt;link href=&quot;https://www.sec.in.tum .de/i20/publications/fridgelock-preventing-data-theft-on-suspended-linux-with-usable-memory-encryption&quot;/>; &lt;author>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文讨论了全磁盘加密 (FDE) 在保护移动设备免受未经授权的物理数据访问方面的重要性。然而，设备经常被挂起而不是关闭，导致 RAM 中的机密数据容易受到冷启动、JTAG 或 DMA 攻击。作者提出了 FridgeLock，这是一个 Linux 内核模块 (LKM)，它在挂起时添加内存加密以防止数据被盗。使用动态内核模块支持 (DKMS) 可以轻松部署该实现，并且对性能影响较小。作者希望他们的工具能够对现实使用场景中的内存加密进行更详细的评估。 &lt;a href=&quot;https://hackernews.betacat.io/#fridgelock-preventing-data-theft-on-suspended-linux-with-memory-encryption-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40194842&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;苹果将推出支持人工智能的 Safari 以及新操作系统&lt;/stitle>; &lt;id>;https://appleinsider.com/articles /24/04/30/apple-to-unveil-ai-enabled-safari-browser-alongside-new-operating-systems&lt;/id>; &lt;更新>;2024-05-01T01:04:43.775003Z&lt;/更新>; &lt; link href=&quot;https://appleinsider.com/articles/24/04/30/apple-to-unveil-ai-enabled-safari-browser-alongside-new-operating-systems&quot;/>; &lt;作者>; &lt;名称>; nateb2022&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://photos5. appleinsider.com/gallery/59483-121415-Safari-update2-xl.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;Apple 正在测试 Safari 18，其中包括新的 UI 调整、高级内容拦截功能以及名为“智能搜索”的人工智能工具。该软件预计将于 2024 年晚些时候首次亮相，包括用于定制流行页面控件的新用户界面、“Web 橡皮擦”功能以及人工智能驱动的内容摘要工具。智能搜索使用 Apple 的设备端 AI 技术来识别网页中作为摘要基础的主题和关键短语。网页橡皮擦允许用户删除网页的特定部分，新的页面控制菜单可以快速访问以前位于不同菜单和共享表中的多个选项。 Apple 还在开发更强大的视觉搜索功能，计划于 2025 年集成。 &lt;a href=&quot;https://hackernews.betacat.io/#apple-to-unveil-ai-enabled-safari-alongside-new-operating -systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40218403&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Polytomic Connect – 用于双向 ETL 的 API并与客户同步数据&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40213570&lt;/id>; &lt;updated>;2024-04-30T18:04:43.775387Z&lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=40213570&quot;/>; &lt;作者>; &lt;名称>;gms&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gms &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;来自 Polytomic 的 Ghalib 和 Nathan 介绍了 Polytomic Connect，这是一个在不同系统之间同步客户数据并处理身份验证和扩展的 API。该产品支持多种平台，并提供自动同步和自定义查询选项。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-polytomic-connect-api-for-two-way-etl-and-data-syncs-with-customers&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40213570&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CLIPS 之旅 (2022)&lt;/stitle>; &lt;id>;https://ryjo.codes/ tour-of-clips.html&lt;/id>; &lt;更新>;2024-04-30T16:04:43.776165Z&lt;/更新>; &lt;link href=&quot;https://ryjo.codes/tour-of-clips.html&quot;/ >; &lt;author>; &lt;name>;ryjo&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ryjo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者分享他们的体验学习 CLIPS，这是 NASA 在 80 年代开发的一种编程语言，强调了它的积极发展和 Rete 算法等独特功能。本教程旨在通过规则引擎和专家系统指导新手，重点是文档和社区支持。 &lt;a href=&quot;https://hackernews.betacat.io/#tour-of-clips-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40201729&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;仅限崩溃的软件：不只是表面上看到的 (2006)&lt;/stitle>; &lt;id>;https://lwn.net/Articles/191059/&lt;/id>; &lt;updated>;2024- 04-30T17:04:43.776932Z&lt;/updated>; &lt;link href=&quot;https://lwn.net/Articles/191059/&quot;/>; &lt;author>; &lt;name>;hui-zheng&lt;/​​name>; &lt;uri>;https: //news.ycombinator.com/user?id=hui-zheng&lt;/​​uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了仅崩溃软件的概念，该软件旨在安全崩溃并恢复与常规关闭/重新启动程序相比，速度更快，通常会产生更强大的系统。它还解决了有关仅崩溃设计的误解，强调其需要严格的实现而不是懒惰的编码。 &lt;a href=&quot;https://hackernews.betacat.io/#crash-only-software-more-than-meets-the-eye-2006&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40212967&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;足够好了（2013）&lt;/stitle>; &lt;id>;https://ep2013.europython.eu/conference/talks/good-足够了&lt;/id>; &lt;更新>;2024-04-30T18:04:43.777717Z&lt;/更新>; &lt;link href=&quot;https://ep2013.europython.eu/conference/talks/good-enough -is-Good-Enoge“/>; &lt;aunder>; &lt;Name>; hypertexthero &lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=hypertexthero &lt;/uri>; &lt;/uri>; &lt;/uri>; &lt;content>; &lt;content类型= “ HTML”>;文章批评在软件开发中追求完美的追求，提倡简单，早期发射和迭代性改进。它是指理查德·加布里埃尔（Richard Gabriel）偏爱务实的“更糟糕的是更好”的理论哲学。 &lt;a href=&quot;https://hackernews.betacat.io/#good-enough-is-good-enough-2013&quot; target=&quot;_blank&quot;>; [摘要] &lt;/a>; &lt;A href =” https：// news.ycombinator.com/item?id=40213718“ target =“ _ blank”>; [注释] &lt;/a>; &lt;/a>; &lt;/content>; &lt;/entry>; &lt;/entry>; &lt;/feed>;