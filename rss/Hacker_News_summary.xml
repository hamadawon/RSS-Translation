<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-08-27T09:53:51.690478Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;通过从 Profobuf 解密和剥离广告来阻止 AppleTV 上的 YouTube 广告&lt;/stitle>; &lt;id>;https://ericdraken.com/pfsense-decrypt-ad-traffic/&lt;/id>; &lt;更新>;2023-08-27T03:53:17.325346Z&lt;/更新>; &lt;link href=&quot;https://ericdraken.com/pfsense-decrypt-ad-traffic/&quot;/>; &lt;作者>; &lt;名称>;rolph&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ericdraken.com/files /eric-draken.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;让我们使用 FreeBSD 和 pfSense 构建一个加密强度高的路由器，以完全阻止 YouTube 广告，利用 Google Protocol Buffer 格式中的缺陷完全阻止 Apple 上的前贴片、中贴片和片尾 YouTube 广告电视和 iPhone，全网络。 &lt;a href=&quot;https://hackernews.betacat.io/#block-youtube-ads-on-appletv-by-decrypting-and-stripping-ads-from-profobuf&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37279109&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ubus（OpenWrt 微总线架构）&lt;/stitle>; &lt;id>;https://openwrt.org/docs/techref /ubus&lt;/id>; &lt;更新>;2023-08-27T05:53:17.326076Z&lt;/更新>; &lt;link href=&quot;https://openwrt.org/docs/techref/ubus&quot;/>; &lt;作者>; &lt;名称>; todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Ubus 是一个在 OpenWrt 中开发的项目，旨在提供交互进程守护进程和应用程序之间的通信。它由守护进程、库和额外的帮助程序组成，其中 ubusd 守护进程是核心。该项目使用 Unix 套接字和 TLV 消息。该代码在 LGPL 2.1 许可证下发布，可以在 git.openwrt.org 上找到。 &lt;a href=&quot;https://hackernews.betacat.io/#ubus-openwrt-micro-bus-architecture&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279773&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;OpenWrt 安全建议&lt;/stitle>; &lt;id>;https://openwrt.org/advisory/start&lt;/id>; &lt;更新>;2023-08-27T07:53:17.326561Z&lt; /updated>; &lt;link href=&quot;https://openwrt.org/advisory/start&quot;/>; &lt;作者>; &lt;name>;fulafel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= fulafel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;OpenWrt 安全公告 - OpenWrt 中已发现多个安全问题，包括缓冲区溢出、远程代码执行和跨站点脚本漏洞。 &lt;a href=&quot;https://hackernews.betacat.io/#openwrt-security-advisories&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37280338&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;适用于 Unix 系统的便携式 OpenBSD vi&lt;/stitle>; &lt;id>;https://github.com/johnsonjh/OpenVi&lt;/id>; &lt;更新>;2023-08-27T06:53:17.327185Z&lt;/已更新>; &lt;link href=&quot;https://github.com/johnsonjh/OpenVi&quot;/>; &lt;作者>; &lt;name>;rdpintqogeogsaa&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rdpintqogeogsaa &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://repository-images.githubusercontent.com/451329808/4b611da2-1788-4e97-a416-2a51b8e0b36f&quot; style=&quot;width: 220 像素；高度：190 像素；&quot; />;&lt;br />;OpenVi 是 Berkeley vi / ex 文本编辑器的增强型和可移植实现，最初由 Bill Joy 开发。它基本上符合相关标准，并且可以轻松移植到大多数具有类 UNIX 操作系统的平台。 &lt;a href=&quot;https://hackernews.betacat.io/#portable-openbsd-vi-for-unix-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37271001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Commodore 64 上的 Linux&lt;/stitle>; &lt;id>;https://github.com/onnokort/semu-c64&lt;/id>; &lt;更新>;2023-08-26T23 :53:17.327725Z&lt;/updated>; &lt;link href=&quot;https://github.com/onnokort/semu-c64&quot;/>; &lt;作者>; &lt;name>;johnwbyrd&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=johnwbyrd&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/onnokort/semu-c64/master/booted。 jpeg&quot; style=&quot;宽度：220px；高度：198px；&quot; />;&lt;br />;“但是它运行 Linux 吗？”现在，Commodore C64 终于可以得到肯定的答复了！当然，有一个问题（而不是：几个）：它运行速度非常慢，并且需要 RAM 扩展单元 (REU)，因为没有机会将其全部装入 64KiB。 &lt;a href=&quot;https://hackernews.betacat.io/#linux-on-a-commodore-64&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37277907&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;电子墨水是如此复古&lt;/stitle>; &lt;id>;https://rmkit.dev/eink-is-so-retropunk/&lt;/id>; &lt;更新>;2023-08 -26T13：53：17.328283Z &lt;/更新>; &lt;link href =“https://rmkit.dev/eink-is-so-retropunk/”/>; &lt;作者>; &lt;名称>;raisjn &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=raisjn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.imgur.com/8760cI9.jpg&quot; 样式=“宽度：220像素；高度：220像素；” />;&lt;br />;电子墨水是黑客的梦想，让人想起80、90年代电脑的神奇感觉。它具有简单性、低功耗和紧密联系的爱好者社区。 &lt;a href=&quot;https://hackernews.betacat.io/#e-ink-is-so-retropunk&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37272652&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;关于什么在数学圈中有效的想法&lt;/stitle>; &lt;id>;https://buttondown.email/j2kun/archive/thoughts-about-what-worked-in-math-circles /&lt;/id>; &lt;更新>;2023-08-26T21:53:17.328818Z&lt;/更新>; &lt;link href=&quot;https://buttondown.email/j2kun/archive/thoughts-about-what-worked-in-math -circles/&quot;/>; &lt;作者>; &lt;名称>;sberens&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sberens&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://buttondown.imgix.net/images/281bd56a-61a7-4e26-84c1-98dfd6638c8b.jpg?w=960&amp;fit=max&quot; style=&quot;宽度：220px；高度：207px；&quot; />;&lt;br />;在与 7-8 岁的孩子一起进行了 7 个月的数学圈之后，作者反思了哪些有效，哪些无效。作者发现，引人入胜的故事比抽象的数学概念更能有效地吸引孩子们的注意力。 &lt;a href=&quot;https://hackernews.betacat.io/#thoughts-about-what-worked-in-math-circles&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37276502&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如果您对眼动追踪感兴趣，我有兴趣为您提供资金&lt;/stitle>; &lt;id>;https://twitter.com/paulg/status /1695596853864321055&lt;/id>; &lt;更新>;2023-08-27T00:53:17.329255Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/paulg/status/1695596853864321055&quot;/>; &lt;作者>; &lt;名称>; pg&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#if-you-re-interested-in-eye-tracking-im-interested-in-funding-you&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37278345&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;带音频的交互式平假名图表&lt;/stitle>; &lt;id>;https://japanesecomplete.com/hiragana-chart&lt;/ id>; &lt;更新>;2023-08-27T05:53:17.329813Z&lt;/更新>; &lt;link href=&quot;https://japanesecomplete.com/hiragana-chart&quot;/>; &lt;作者>; &lt;名称>;sova&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=sova&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jpc0.b-cdn.net/ img/jpc-gring-sm.png&quot; style=&quot;宽度：220px；高度：222px；&quot; />;&lt;br />;在日本平安时代，女性使用平假名在纸上写下自己的想法，而男性则使用汉字和片假名。到 10 世纪，平假名在日本各地广泛使用，现在是日语的注音文字。 &lt;a href=&quot;https://hackernews.betacat.io/#interactive-hiragana-chart-with-audio&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279589&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;祝 Bugzilla 25 岁生日快乐&lt;/stitle>; &lt;id>;https://www.bugzilla.org/blog/2023/08/26/bugzilla-celebrates-25-years/&lt; /id>; &lt;更新>;2023-08-27T05:53:17.330377Z&lt;/更新>; &lt;link href=&quot;https://www.bugzilla.org/blog/2023/08/26/bugzilla-celebrates-25-years /&quot;/>; &lt;作者>; &lt;名称>;buovjaga&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=buovjaga&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://www.bugzilla.org/assets/img/banner.png&quot; style=&quot;宽度：220px；高度：80px；&quot; />;&lt;br />;Bugzilla是一个使用开源工具实现的bug系统，于1998年首次发布。它最初是用TCL编写的，后来移植到Perl。 Bugzilla 现在由 Zarro Boogs Corporation 监管。 &lt;a href=&quot;https://hackernews.betacat.io/#happy-25th-birthday-to-bugzilla&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279543&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;场景原型：让 Amiga 500 变得有趣的&lt;/stitle>; &lt;id>;https://www.datagubbe.se/scenearch/&lt;/id>; &lt;更新>;2023-08- 27T03：53：17.330917Z &lt;/更新>; &lt;link href =“https://www.datagubbe.se/scenearch/”/>; &lt;作者>; &lt;名称>; zdw &lt;/名称>; &lt;uri>; https://news。 ycombinator.com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;演示场景与计算机有关，就像绘画与画笔和蛋彩画有关一样。某些美学是由特定平台硬件鼓励或决定的，例如 Amiga 500。 &lt;a href=&quot;https://hackernews.betacat.io/#scene-archetypes-the-ones-making-amiga-500-fun&quot; target =&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>; Cody – 了解整个代码库的人工智能&lt;/stitle>; &lt;id>;https://about.sourcegraph.com/cody&lt;/id>; &lt;updated>;2023-08-26T23:53:17.331557Z&lt;/updated>; &lt;link href=&quot;https://about.sourcegraph.com/cody&quot;/>; &lt;作者>; &lt;名称>;adocomplete&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=adocomplete&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pbs.twimg.com/media/FzJ4uXuXgAMZsGB?format=jpg&amp;name=small&quot; style=&quot;宽度：220px；高度：198px；&quot; />;&lt;br />;Cody 是一款 AI 编码助手，可以回答代码问题、编写代码并根据您的整个代码库提供代码建议。它还可以生成代码、编写文档和编写单元测试。 Cody 可在 Cody 应用程序和 IDE 扩展中供个人使用，还有用于私有代码库的 Cody 企业版。 &lt;a href=&quot;https://hackernews.betacat.io/#cody-the-ai-that-knows-your-entire-codebase&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37277722&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何在睡眠中编程&lt;/stitle>; &lt;id>;https://bellmar.medium.com/how-to-program-in-your- sleep-58f448a90afb&lt;/id>; &lt;更新>;2023-08-27T01:53:17.332758Z&lt;/更新>; &lt;link href=&quot;https://bellmar.medium.com/how-to-program-in-your-sleep -58f448a90afb&quot;/>; &lt;作者>; &lt;名称>;姆贝洛蒂&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mbellotti&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://miro.medium.com/v2/resize:fit:1358/1*--g9Tiv-l39GHlOzDevVPA.jpeg&quot; style=&quot;宽度：220px；高度：102px；&quot; />;&lt;br />;睡眠中编程的现象（也称为潜伏期）是一种常见现象，潜意识在睡眠期间继续处理复杂的问题。这个过程通常会导致你醒来时发现一个解决方案或新的想法来测试。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-program-in-your-sleep&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37252225&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;工程过程中的熵&lt;/stitle>; &lt;id>;https://ological.li/blog/entropy/&lt;/id>; &lt;updated>;2023-08-27T02:53 ：17.333307Z&lt;/updated>; &lt;link href=&quot;https://ological.li/blog/entropy/&quot;/>; &lt;作者>; &lt;name>;herTTTz&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=herTTTz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;熵是一个简单的概念，但经常被误解。它是过程中不确定性的空间大小。对于完美可再现的过程，过程的熵为零，并且当所有结果具有相同的概率时，过程的熵最大化。 &lt;a href=&quot;https://hackernews.betacat.io/#entropy-in-engineering-processes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37270908&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;怜悯营销的兴起&lt;/stitle>; &lt;id>;https://www.newstatesman.com/culture/social-media/2023/08/rise-pity-marketing-edinburgh-fringe &lt;/id>; &lt;更新>;2023-08-26T23:53:17.333770Z&lt;/更新>; &lt;link href=&quot;https://www.newstatesman.com/culture/social-media/2023/08/rise-pity- marketing-edinburgh-fringe&quot;/>; &lt;作者>; &lt;名称>;miiiiiiike&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=miiiiiiike&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://dl6pgk4f88hky.cloudfront.net/2023/08/15/pity-marketing-1038x778.jpg&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;怜悯营销，即寻求怜悯以谋取个人利益的行为，已成为社交媒体上一种利润丰厚的策略。人们分享悲伤的故事是为了获得支持和关注，从而提高参与度，甚至带来经济利益。这种将失败的叙述货币化的趋势吸引了我们基本的人类冲动，并依赖于他人的同情。 &lt;a href=&quot;https://hackernews.betacat.io/#the-rise-of-pity-marketing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37247413&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Gojekyll：Jekyll 的快速、部分兼容的 Go 克隆&lt;/stitle>; &lt;id>;https://github.com/osteele/gojekyll&lt;/id>; &lt;更新>;2023-08 -26T20:53:17.335208Z&lt;/updated>; &lt;link href=&quot;https://github.com/osteele/gojekyll&quot;/>; &lt;作者>; &lt;name>;danogentili&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=danogentili&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://avatars.githubusercontent.com/u/674?v=4?s= 100&quot; 样式=&quot;宽度：220 像素；高度：220 像素；&quot; />;&lt;br />;Gojekyll 是 Jekyll 静态站点生成器的部分兼容克隆，用 Go 编程语言编写。它提供构建和服务命令，以及目录监视和实时重新加载。 &lt;a href=&quot;https://hackernews.betacat.io/#gojekyll-a-fast-partially-filled-go-clone-of-jekyll&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37276424&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;历史算法有助于突破最短路径问题&lt;/stitle>; &lt;id>;https://cacm.acm.org/news/275684-historic -algorithms-help-unlock-shortest-path-problem-breakthrough/fulltext&lt;/id>; &lt;更新>;2023-08-26T18:53:17.336283Z&lt;/更新>; &lt;link href=&quot;https://cacm.acm. org/news/275684-historic-algorithms-help-unlock-shortest-path-problem-breakthrough/fulltext&quot;/>; &lt;作者>; &lt;名称>;nxten&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=nxten&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;计算机科学先驱 Edsger Dijkstra 的算法构成了许多计算机子例程的支柱，但当需求发生变化时，它们可能无法提供准确的答案。组合技术的最新突破表明了如何复兴这些早期算法。 &lt;a href=&quot;https://hackernews.betacat.io/#historic-algorithms-help-unlock-shortest-path-problem-breakthrough&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37275676&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;阿拉伯匕首&lt;/stitle>; &lt;id>;https://www.fordemilitaryantiques.com/articles/2020/9/8/the-arab-dagger &lt;/id>; &lt;更新>;2023-08-26T23:53:17.336915Z&lt;/更新>; &lt;link href=&quot;https://www.fordemilitaryantiques.com/articles/2020/9/8/the-arab-dagger&quot; />; &lt;author>; &lt;name>;nelsondev&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nelsondev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://images.squarespace-cdn.com/content/v1/5c321e8c710699b10e8ba7c2/1603534515226-JY324EG6F669YZAIMK5Z/Middle_east%2Bwiki.jpg&quot; style=&quot;宽度：220px；高度：185px；&quot; />;&lt;br />;阿拉伯的 jambiya 和 khanjar 匕首仍然具有重要的文化意义，并作为古董进行交易。它们被用作自卫武器和身份象征，每种武器的设计都标志着所有者的社会地位。也门的 jambiyas 和沙特阿拉伯的 khanjars 是最常见的类型，其设计和装饰各不相同。 &lt;a href=&quot;https://hackernews.betacat.io/#the-arab-dagger&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37270138&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;显示 HN：TRS-GPT – TRS-80 的 ChatGPT 客户端/服务器&lt;/stitle>; &lt;id>;https://druid77.github.io/trs-gpt/&lt;/id>; &lt;更新>;2023-08-26T21:53:17.338013Z&lt;/更新>; &lt;link href=&quot;https://druid77.github.io/trs-gpt/&quot;/>; &lt;作者>; &lt;名称>;druid77&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=druid77&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://druid77.github.io/trs-gpt /images/Atari-800XL.jpeg&quot; style=&quot;宽度：220px；高度：113px；&quot; />;&lt;br />;一位中年男子通过将他的TRS-80连接到互联网并使用OpenAI的ChatGPT实现聊天程序，实现了他儿时与计算机进行智能交互的梦想。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-trs-gpt-chatgpt-client-server-for-the-trs-80&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37276026&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将特技赛车移植到 Commodore Plus/4&lt;/stitle>; &lt;id>;https://cobbpg.github.io/ articles/stunt-car-racer-plus4-port.html&lt;/id>; &lt;更新>;2023-08-26T22:53:17.338636Z&lt;/更新>; &lt;link href=&quot;https://cobbpg.github.io/articles /stunt-car-racer-plus4-port.html&quot;/>; &lt;作者>; &lt;名称>;msephton&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=msephton&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cobbpg.github.io/assets/stunt-car-racer-plus4-port/gameplay-c64-debug.png&quot; style=&quot;width: 220 像素；高度：138 像素；&quot; />;&lt;br />;我最近发布了 Stunt Car Racer 的 Plus/4 端口，这是一款来自 8 位时代的复杂游戏。在这篇文章中，我概述了我如何将 C64 版本的游戏适配到 Commodore Plus/4 上。 &lt;a href=&quot;https://hackernews.betacat.io/#porting-stunt-car-racer-to-the-commodore-plus-4&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37269173&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Firefox 1.0 纽约时报广告 (2004)&lt;/stitle>; &lt;id>;https://www.scribd.com/document/393519605/Firefox -1-0-New-York-Times-Ad&lt;/id>; &lt;更新>;2023-08-27T04:53:17.339132Z&lt;/更新>; &lt;link href=&quot;https://www.scribd.com/document/ 393519605/Firefox-1-0-New-York-Times-Ad&quot;/>; &lt;作者>; &lt;名称>;tones411&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tones411&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://sf.scribdassets.com/webpack/assets/images/shared/gr_table_reading.9f6101a1.png&quot; style=&quot;width: 220px; height : 156 像素;&quot; />;&lt;br />;Firefox 1.0 纽约时报广告 - 免费下载 PDF 文件 (.pdf)、文本文件 (.txt) 或免费在线阅读。 Firefox 1.0 纽约时报发布广告，包含所有支持者姓名 &lt;a href=&quot;https://hackernews.betacat.io/#firefox-1-0-new-york-times-ad-2004&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37279318&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;裸机太空入侵者&lt;/stitle>; &lt;id>;https://blog.fponzi.me/2023 -08-13-bare-metal-space-invaders.html&lt;/id>; &lt;更新>;2023-08-27T00:53:17.339641Z&lt;/更新>; &lt;link href=&quot;https://blog.fponzi.me/ 2023-08-13-bare-metal-space-invaders.html&quot;/>; &lt;作者>; &lt;名称>;lukastyrychtr&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lukastyrychtr&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.fponzi.me/2023-08-13-bare-metal-space-invaders/dhat.png&quot; style=&quot;width ：220px；高度：89px；” />;&lt;br />;裸机编程是在没有操作系统的硬件上进行编程。在这篇文章中，我将分享我在用 Rust 编写类似太空入侵者的游戏后获得的一些知识。 &lt;a href=&quot;https://hackernews.betacat.io/#bare-metal-space-invaders&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37270979&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;第谷·布拉赫到底是怎么死的（2001）&lt;/stitle>; &lt;id>;https://www.ips-planetarium.org/page/a_jacobsen2001&lt;/id>; &lt;updated>;2023-08- 26T18:53:17.340234Z&lt;/updated>; &lt;link href=&quot;https://www.ips-planetarium.org/page/a_jacobsen2001&quot;/>; &lt;作者>; &lt;name>;benbreen&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;第谷·布拉赫 (Tycho Brahe)，一位著名的丹麦天文学家，于 1601 年在布拉格去世。关于他的死因有不同的说法。死亡，有人认为他的膀胱在一次宴会上破裂。然而，现代调查表明，他可能患有前列腺肥大或其他泌尿系统疾病，并可能因汞中毒而加剧。 &lt;a href=&quot;https://hackernews.betacat.io/#how-tycho-brahe-really-died-2001&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37255069&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Slack 向蜂窝架构的迁移&lt;/stitle>; &lt;id>;https://slack.engineering/slacks-migration-to-a-cellular-architecture/&lt;/id>; &lt;更新>;2023-08-26T18:53:17.340692Z&lt;/更新>; &lt;link href=&quot;https://slack.engineering/slacks-migration-to-a-cellular-architecture/&quot;/>; &lt;作者>; &lt;名称>;serial_dev&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=serial_dev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://slack .engineering/wp-content/uploads/sites/7/2023/08/image2.jpg?w=640&quot; style=&quot;宽度：220px；高度：150px；&quot;近年来，Slack 已将其面向用户的关键服务从整体架构迁移到基于单元的架构。此迁移旨在增加冗余并限制站点故障的影响。蜂窝架构允许检测和缓解单个可用区 (AZ) 内的故障。 &lt;a href=&quot;https://hackernews.betacat.io/#slacks-migration-to-a-cellular-architecture&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37274871&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;COBOL 在 Watsonx 和 AI 的帮助下在云中获得新生&lt;/stitle>; &lt;id>;https://www.silverlinedsinfo.com/apps-services/ibm-watsonx- Brings-cobol-cloud-era-ai&lt;/id>; &lt;更新>;2023-08-26T21:53:17.341535Z&lt;/更新>; &lt;link href=&quot;https://www.silverlinedsinfo.com/apps-services/ibm -watsonx-brings-cobol-cloud-era-ai&quot;/>; &lt;作者>; &lt;名称>;rmason&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rmason&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://qtxasset.com/cdn-cgi/image/format=auto,fit=contain,w=500,quality=100,metadata=none/https ://qtxasset.com/quartz/qcloud4/media/image/Rakuten%20Symphony%20Logo%201%20white_0.png?VersionId=KAf57mD1JkuG176TBxcxPbmOLnVBJZDi&quot; style=&quot;宽度：220px；高度：95px；&quot; />;&lt;br />;COBOL 应用程序通常很复杂，可扩展 3000 万到 1 亿行并运行关键任务工作负载。如今寻找 COBOL 程序员非常困难 | IBM watsonx Code Assistant for Z 可帮助那些努力寻找能够管理古老大型机代码并将这些应用程序引入混合云的员工的组织。 &lt;a href=&quot;https://hackernews.betacat.io/#cobol-gets-new-life-in-the-cloud-thanks-to-watsonx-and-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37277191&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;硅谷精英被揭露为 8 亿美元湾区土地掠夺背后的投资者&lt;/stitle>; &lt;id>;https://www .sfchronicle.com/bayarea/article/solano-new-city-investors-silicon-valley-18331296.php&lt;/id>; &lt;更新>;2023-08-27T05:53:17.341982Z&lt;/更新>; &lt;link href=&quot; https://www.sfchronicle.com/bayarea/article/solano-new-city-investors-silicon-valley-18331296.php&quot;/>; &lt;作者>; &lt;名称>;乔纳&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=jonah&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;px-captcha &lt;a href=&quot;https://hackernews.betacat.io/#silicon-valley- Elites-revealed-as-investors-behind-800m-bay-area-land-grab&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37279521&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Linux 6.5 最后一刻修复了性能下降，基准下降了 34%&lt;/stitle>; &lt;id>;https://www.phoronix.com/news/Linux-6.5-x86-Fix-34p-Drop &lt;/id>; &lt;更新>;2023-08-27T01:53:17.342589Z&lt;/更新>; &lt;link href=&quot;https://www.phoronix.com/news/Linux-6.5-x86-Fix-34p-Drop&quot; />; &lt;author>; &lt;name>;mikece&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mikece&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.phoronix.com/assets/categories/linuxkernel.webp&quot; style=&quot;宽度：220px； height: 221px;&quot; />;&lt;br />;Linux 6.5 即将发布，并在最后一刻进行了修复，其中包括一个性能回归补丁，导致基准测试下降 34.6%。该回归是由于缺少一组 X86_FEATURE_OSXSAVE 造成的，这是在英特尔对 Linux 内核进行 0day 测试期间发现的。 &lt;a href=&quot;https://hackernews.betacat.io/#linux-6-5-last- 分钟-fixes-a-performance-regression-34- drop-in-a-benchmark&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37278390&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/内容>; &lt;/条目>; &lt;/提要>;