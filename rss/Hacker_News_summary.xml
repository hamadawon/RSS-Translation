<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-08-27T13:57:25.376876Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;通过从 Profobuf 解密和剥离广告来阻止 AppleTV 上的 YouTube 广告&lt;/stitle>; &lt;id>;https://ericdraken.com/pfsense-decrypt-ad-traffic/&lt;/id>; &lt;更新>;2023-08-27T03:56:04.127453Z&lt;/更新>; &lt;link href=&quot;https://ericdraken.com/pfsense-decrypt-ad-traffic/&quot;/>; &lt;作者>; &lt;名称>;rolph&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ericdraken.com/files /eric-draken.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;让我们使用 FreeBSD 和 pfSense 构建一个加密强度高的路由器，以完全阻止 YouTube 广告，利用 Google Protocol Buffer 格式中的缺陷完全阻止 Apple 上的前贴片、中贴片和片尾 YouTube 广告电视和 iPhone，全网络。 &lt;a href=&quot;https://hackernews.betacat.io/#block-youtube-ads-on-appletv-by-decrypting-and-stripping-ads-from-profobuf&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37279109&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Waku：带有服务器组件的极简 React 框架&lt;/stitle>; &lt;id>;https://waku.gg/&lt; /id>; &lt;更新>;2023-08-27T11:56:04.406307Z&lt;/更新>; &lt;link href=&quot;https://waku.gg/&quot;/>; &lt;作者>; &lt;名称>;bpierre&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=bpierre&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;带有服务器组件&lt;a href=&quot;https://hackernews.betacat.io/# waku-the-minimalist-react-framework-with-server-components&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37281630&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >; Ubuntu 中的 i386 不会消亡&lt;/stitle>; &lt;id>;https://popey.com/blog/2023/08/i386-in-ubuntu-wont-die/&lt;/id>; &lt;updated>;2023-08- 27T09:56:04.406947Z&lt;/updated>; &lt;link href=&quot;https://popey.com/blog/2023/08/i386-in-ubuntu-wont-die/&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Ubuntu 23.04 用户在从 Ubuntu 安装 Steam deb 软件包时遇到困难存档，但它被发现是一个错误，并提交了一个错误。目前尚不确定 Ubuntu 23.04 的 ISO 映像是否会被重建，或者问题是否仍然存在。 2019 年曾提议从 Ubuntu 中删除 i386 支持，但在被推迟后，创建了 i386 deb 软件包的“白名单”以满足用户的需求。 &lt;a href=&quot;https://hackernews.betacat.io/#i386-in-ubuntu-won-t-die&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37280878&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Overthewire.org&lt;/stitle>; &lt;id>;https://overthewire.org/wargames/&lt;/id>; &lt;更新>;2023-08-27T11:56:04.407989Z &lt;/更新>; &lt;link href=&quot;https://overthewire.org/wargames/&quot;/>; &lt;作者>; &lt;name>;ghostfoxgod&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= Ghostfoxgod&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;OverTheWire 社区提供的战争游戏可以帮助您以充满乐趣的游戏形式学习和实践安全概念。游戏页面上提供了有关如何使用 SSH 连接到每个游戏的信息。 &lt;a href=&quot;https://hackernews.betacat.io/#overthewire-org&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37281745&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Google Android 开发的囚徒&lt;/stitle>; &lt;id>;https://solutional.ee/blog/2023-08-26-Prisoners-of-Google-Android-Development.html&lt;/id>; &lt;更新>;2023-08-27T09:56:04.408481Z&lt;/更新>; &lt;link href=&quot;https://solutional.ee/blog/2023-08-26-Prisoners-of-Google-Android-Development.html&quot;/>; &lt;作者>; &lt;名称>;jarm0 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jarm0&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://solutional.ee/img/blog/prisoners-of-google-android-development/google-email.png&quot; style=&quot;width: 220px; height: 222px;&quot; />;&lt;br />;关于开发 Android（或 iOS）应用程序时事情如何快速变得非常糟糕的现实案例研究。本文描述了更新旧版 Android 应用以满足 Google API 级别要求时所面临的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#prisoners-of-google-android-development&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37280972&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;WTFPython：通过令人惊讶的片段探索和理解 Python&lt;/stitle>; &lt;id>;https://github.com/satwikkansal/wtfpython&lt;/id>; &lt;更新>;2023-08-27T11 ：56：04.409083Z &lt;/更新>; &lt;link href=&quot;https://github.com/satwikkansal/wtfpython&quot;/>; &lt;作者>; &lt;名称>;Tomte &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/satwikkansal/wtfpython/master/images/logo.png&quot;样式=“宽度：220像素；高度：165像素；” />;&lt;br />;Python 为程序员提供了许多方便的功能，但有时 Python 代码片段的结果可能看起来并不明显。本文探讨并解释了 Python 中一些反直觉的片段和鲜为人知的功能。 &lt;a href=&quot;https://hackernews.betacat.io/#wtfpython-exploring-and-understanding-python-through-surprising-snippets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37281692&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;古代文化每 60 年就会烧毁自己的家园&lt;/stitle>; &lt;id>;https://daily.jstor.org/burned-house-mystery-why -did-this-ancient-culture-torch-its-own-homes-every-60-years/&lt;/id>; &lt;更新>;2023-08-27T08:56:04.411304Z&lt;/更新>; &lt;link href=&quot;https ://daily.jstor.org/burned-house-mystery-why-did-this-ancient-culture-torch-its-own-homes-every-60-years/&quot;/>; &lt;作者>; &lt;名称>;samizdis&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=samizdis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://daily.jstor. org/wp-content/uploads/2023/08/burned_house_mystery_why_did_this_ancient_culture_torch_its_own_homes_every_60_years_800_3.jpg&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;库库泰尼-特里皮利亚文化是欧洲的一个古老社会，建造了令人印象深刻的建筑并种植了农作物。然而，他们的定居点每隔60至80年就会被反复烧毁，这种现象被称为“烧毁的房屋地平线”。研究人员仍在争论这些故意焚烧的原因。 &lt;a href=&quot;https://hackernews.betacat.io/#ancient-culture-torched-its-own-homes-every-60-years&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37247906&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;反 AI 炒作 LLM 阅读列表&lt;/stitle>; &lt;id>;https://gist.github.com/veekaybee/be375ab33085102f9027853128dc5f0e&lt;/id>; &lt;更新>;2023-08-27T09:56:04.411859Z&lt;/更新>; &lt;link href=&quot;https://gist.github.com/veekaybee/be375ab33085102f9027853128dc5f0e&quot;/>; &lt;作者>; &lt;名称>;atg_abhishek&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=atg_abhishek&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;script src=&quot;https://gist.github.com/veekaybee/ be375ab33085102f9027853128dc5f0e.js&quot;>;&lt;/script>; &lt;a href=&quot;https://hackernews.betacat.io/#anti-ai-hype-llm-reading-list&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37281020&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ubus（OpenWrt 微总线架构）&lt;/stitle>; &lt;id>;https://openwrt.org/docs/techref/ubus&lt; /id>; &lt;更新>;2023-08-27T05:56:04.412532Z&lt;/更新>; &lt;link href=&quot;https://openwrt.org/docs/techref/ubus&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Ubus 是一个在 OpenWrt 中开发的项目，用于提供进程间通信守护进程和应用程序。它由守护进程、库和额外的帮助程序组成，其中 ubusd 守护进程是核心。该项目使用 Unix 套接字和 TLV 消息。该代码在 LGPL 2.1 许可证下发布，可以在 git.openwrt.org 上找到。 &lt;a href=&quot;https://hackernews.betacat.io/#ubus-openwrt-micro-bus-architecture&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279773&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;电子墨水是如此复古&lt;/stitle>; &lt;id>;https://rmkit.dev/eink-is-so-retropunk/&lt;/id>; &lt;更新>;2023-08 -26T13：56：04.413169Z &lt;/更新>; &lt;link href =“https://rmkit.dev/eink-is-so-retropunk/”/>; &lt;作者>; &lt;名称>;raisjn &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=raisjn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.imgur.com/8760cI9.jpg&quot; 样式=“宽度：220像素；高度：220像素；” />;&lt;br />;电子墨水是黑客的梦想，让人想起80、90年代电脑的神奇感觉。它具有简单性、低功耗和紧密联系的爱好者社区。 &lt;a href=&quot;https://hackernews.betacat.io/#e-ink-is-so-retropunk&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37272652&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;适用于 Unix 系统的便携式 OpenBSD vi&lt;/stitle>; &lt;id>;https://github.com/johnsonjh/OpenVi&lt;/id>; &lt;更新>;2023-08-27T06:56： 04.413687Z&lt;/更新>; &lt;link href=&quot;https://github.com/johnsonjh/OpenVi&quot;/>; &lt;作者>; &lt;name>;rdpintqogeogsaa&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=rdpintqogeogsaa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://repository-images.githubusercontent.com/451329808/4b611da2-1788-4e97-a416-2a51b8e0b36f&quot;样式=“宽度：220像素；高度：190像素；” />;&lt;br />;OpenVi 是 Berkeley vi / ex 文本编辑器的增强型和可移植实现，最初由 Bill Joy 开发。它基本上符合相关标准，并且可以轻松移植到大多数具有类 UNIX 操作系统的平台。 &lt;a href=&quot;https://hackernews.betacat.io/#portable-openbsd-vi-for-unix-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37271001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;静静地躺在床上&lt;/stitle>; &lt;id>;https://ognjen.io/lie-still-in-bed/&lt;/id>; &lt;更新>;2023-08 -27T09：56：04.414180Z &lt;/更新>; &lt;link href =“https://ognjen.io/lie-still-in-bed/”/>; &lt;作者>; &lt;名称>; rognjen &lt;/名称>; &lt;uri>; https ://news.ycombinator.com/user?id=rognjen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ognjen.io/images/profile.jpg&quot; 样式=“宽度：220像素；高度：221像素；” />;&lt;br />;要建立规律的睡眠模式，每天在同一时间上床睡觉并避免使用手机或看电视等干扰因素很重要。通过持续练习，可以改善睡眠习惯并成为早起的人。同样的原则可以应用于生活的其他领域，例如保持床铺整洁或养成新习惯。 &lt;a href=&quot;https://hackernews.betacat.io/#lie-still-in-bed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37281060&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Commodore 64 上的 Linux&lt;/stitle>; &lt;id>;https://github.com/onnokort/semu-c64&lt;/id>; &lt;更新>;2023-08-26T23:56:04.414735 Z&lt;/updated>; &lt;link href=&quot;https://github.com/onnokort/semu-c64&quot;/>; &lt;作者>; &lt;name>;johnwbyrd&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=johnwbyrd&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/onnokort/semu-c64/master/booted.jpeg&quot; style= “宽度：220 像素；高度：198 像素；” />;&lt;br />;“但是它运行 Linux 吗？”现在，Commodore C64 终于可以得到肯定的答复了！当然，有一个问题（而不是：几个）：它运行速度非常慢，并且需要 RAM 扩展单元 (REU)，因为没有机会将其全部装入 64KiB。 &lt;a href=&quot;https://hackernews.betacat.io/#linux-on-a-commodore-64&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37277907&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;如果您对眼动追踪感兴趣，我有兴趣资助您&lt;/stitle>; &lt;id>;https://twitter.com/paulg/status/1695596853864321055&lt;/ id>; &lt;更新>;2023-08-27T00:56:04.415787Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/paulg/status/1695596853864321055&quot;/>; &lt;作者>; &lt;名称>;pg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但不要担心 - 让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#if-you-re-interested-in-eye-tracking-im-interested-in-funding-you&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37278345&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cody – 了解整个代码库的人工智能&lt;/stitle>; &lt;id>;https://about.sourcegraph.com /cody&lt;/id>; &lt;更新>;2023-08-26T23:56:04.417695Z&lt;/更新>; &lt;link href=&quot;https://about.sourcegraph.com/cody&quot;/>; &lt;作者>; &lt;名称>;adocomplete&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=adocomplete&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pbs.twimg. com/media/FzJ4uXuXgAMZsGB?format=jpg&amp;name=small&quot; style=&quot;宽度：220px；高度：198px；&quot; />;&lt;br />;Cody 是一款 AI 编码助手，可以回答代码问题、编写代码并根据您的整个代码库提供代码建议。它还可以生成代码、编写文档和编写单元测试。 Cody 可在 Cody 应用程序和 IDE 扩展中供个人使用，还有用于私有代码库的 Cody 企业版。 &lt;a href=&quot;https://hackernews.betacat.io/#cody-the-ai-that-knows-your-entire-codebase&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37277722&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;祝 Bugzilla 25 岁生日快乐&lt;/stitle>; &lt;id>;https://www.bugzilla.org/blog/2023/08/26/bugzilla-celebrates -25-years/&lt;/id>; &lt;更新>;2023-08-27T05:56:04.418319Z&lt;/更新>; &lt;link href=&quot;https://www.bugzilla.org/blog/2023/08/26/bugzilla -celebrates-25-years/&quot;/>; &lt;作者>; &lt;名称>;buovjaga&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=buovjaga&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.bugzilla.org/assets/img/banner.png&quot; style=&quot;宽度：220px；高度：80px；&quot; />;&lt;br />;Bugzilla是一个使用开源工具实现的bug系统，于1998年首次发布。它最初是用TCL编写的，后来移植到Perl。 Bugzilla 现在由 Zarro Boogs Corporation 监管。 &lt;a href=&quot;https://hackernews.betacat.io/#happy-25th-birthday-to-bugzilla&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279543&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;场景原型：让 Amiga 500 变得有趣的&lt;/stitle>; &lt;id>;https://www.datagubbe.se/scenearch/&lt;/id>; &lt;更新>;2023-08- 27T03：56：04.420672Z &lt;/更新>; &lt;link href =“https://www.datagubbe.se/scenearch/”/>; &lt;作者>; &lt;名称>; zdw &lt;/名称>; &lt;uri>; https://news。 ycombinator.com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;演示场景与计算机有关，就像绘画与画笔和蛋彩画有关一样。某些美学是由特定平台硬件鼓励或决定的，例如 Amiga 500。 &lt;a href=&quot;https://hackernews.betacat.io/#scene-archetypes-the-ones-making-amiga-500-fun&quot; target =&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;错误识别人才（2022）&lt;/stitle>; &lt;id>;https://danluu.com/talent/&lt;/id>; &lt;updated>;2023-08-27T04:56:04.421458Z&lt;/updated>; &lt;link href=&quot;https: //danluu.com/talent/&quot;/>; &lt;作者>; &lt;名称>;imadj&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=imadj&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#misidentifying-talent-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37270500&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;怜悯营销的兴起&lt;/stitle>; &lt;id>;https://www.newstatesman.com/culture/social-media/2023/08/rise-pity-marketing -edinburgh-fringe&lt;/id>; &lt;更新>;2023-08-26T23:56:04.422094Z&lt;/更新>; &lt;link href=&quot;https://www.newstatesman.com/culture/social-media/2023/08/ rise-pity-marketing-edinburgh-fringe&quot;/>; &lt;作者>; &lt;名称>;miiiiiiike&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=miiiiiiike&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://dl6pgk4f88hky.cloudfront.net/2023/08/15/pity-marketing-1038x778.jpg”样式=“宽度：220px; height: 165px;&quot; />;&lt;br />;怜悯营销，即为了个人利益而寻求怜悯的行为，已成为社交媒体上一种有利可图的策略。人们分享悲伤的故事来获得支持和关注，从而提高参与度，甚至带来经济利益.这种将失败的叙述货币化的趋势吸引了我们基本的人类冲动，并依赖于他人的同情。&lt;a href=&quot;https://hackernews.betacat.io/#the-rise-of-pity-marketing&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37247413&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;工程过程中的熵&lt;/stitle>; &lt;id>;https://ological. li/blog/entropy/&lt;/id>; &lt;更新>;2023-08-27T02:56:04.422699Z&lt;/更新>; &lt;link href=&quot;https://ological.li/blog/entropy/&quot;/>; &lt;作者>; &lt;name>;herTTTz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=herTTTz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;熵是一个简单的概念，但通常情况下误解了。它是过程中不确定性的空间大小。对于完美可再现的过程，过程的熵为零，并且当所有结果具有相同的概率时，过程的熵最大化。 &lt;a href=&quot;https://hackernews.betacat.io/#entropy-in-engineering-processes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37270908&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;