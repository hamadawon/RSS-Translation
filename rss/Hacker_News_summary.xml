<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-16T19:57:39.881240Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;增强 Web AI 模型测试：WebGPU、WebGL 和 Headless Chrome&lt;/stitle>; &lt;id>;https://developer.chrome.com/blog/supercharge-web-ai-testing &lt;/id>; &lt;更新>;2024-01-16T19:16:19.714244Z&lt;/更新>; &lt;link href=&quot;https://developer.chrome.com/blog/supercharge-web-ai-testing&quot;/>; &lt;作者>; &lt;name>;kaycebasques&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kaycebasques&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //developer.chrome.com/blog/supercharge-web-ai-testing/image/initial_epoch_timing.gif&quot; style=&quot;width: 220px; height: 183px;&quot; />;&lt;br />;让收藏保持井然有序 根据您的喜好保存内容并对其进行分类。好消息！您已经构建了一个很酷的 Web AI 应用程序，可以直接在用户设备上运行机器学习模型。它完全运行在客户端网络浏览器上，不依赖于云。这种设备上的设计增强了用户隐私，提高了性能，并显着降低了成本。 &lt;a href=&quot;https://hackernews.betacat.io/#supercharge-web-ai-model-testing-webgpu-webgl-and-headless-chrome&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39017607&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TinyML：超低功耗机器学习&lt;/stitle>; &lt;id>;https://www.ikkaro.net/what-tinyml- is/&lt;/id>; &lt;更新>;2024-01-16T16:57:19.716327Z&lt;/更新>; &lt;link href=&quot;https://www.ikkaro.net/what-tinyml-is/&quot;/>; &lt;作者>; &lt;name>;Gedxx&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Gedxx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.ikkaro.net/wp-content/uploads/2019/06/logo-ikkaro-grey.svg&quot; style=&quot;宽度：220px；高度：184px；&quot; />;&lt;br />;TinyML，即Tiny Machine Learning，是指在资源有限、功耗低的微控制器中使用机器学习。它涉及压缩大型模型以供微控制器使用。它在物联网、工业、无障碍等各个领域都有应用。 &lt;a href=&quot;https://hackernews.betacat.io/#tinyml-ultra-low-power-machine-learning&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39014866&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;人工智能对知识工作者生产力和质量的现场实验证据&lt;/stitle>; &lt;id>;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4573321 &lt;/id>; &lt;更新>;2024-01-16T16:57:19.716872Z&lt;/更新>; &lt;link href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4573321&quot;/>; &lt;作者>; &lt;name>;CharlesW&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CharlesW&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //papers.ssrn.com/Organizations/OrgBrandings/304078_15864.gif&quot; style=&quot;width: 220px; height: 127px;&quot; />;&lt;br />;该研究探讨了人工智能对现实、复杂和知识密集型任务的性能影响。使用人工智能的顾问的工作效率显着提高，并产生了更高质量的结果。然而，对于人工智能能力之外的任务，使用人工智能的顾问不太可能提供正确的解决方案。 &lt;a href=&quot;https://hackernews.betacat.io/#field-experimental-evidence-of-ai-on-knowledge-worker-productivity-and-quality&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39014521&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;吉尼斯黑啤酒酵母的起源&lt;/stitle>; &lt;id>;https://www.nature.com/articles/s42003 -023-05587-3&lt;/id>; &lt;更新>;2024-01-16T17:57:19.717396Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles/s42003-023-05587- 3&quot;/>; &lt;作者>; &lt;名称>;bookofjoe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://media.springernature.com/w215h120/springer-static/image/art%3A10.1038%2Fs41598-020-71864-4/MediaObjects/41598_2020_71864_Fig1_HTML.png&quot; style=&quot;宽度：220px;高度: 123 像素;&quot; />;&lt;br />;用于酿造吉尼斯黑啤酒的酵母的起源已通过全基因组测序确定。分析表明，吉尼斯酵母菌株与其他历史上的爱尔兰酿造酵母不同，并且源自共同的祖先。 &lt;a href=&quot;https://hackernews.betacat.io/#the-origins-of-the-guinness-stout-yeast&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38989917&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;欺诈理论&lt;/stitle>; &lt;id>;https://www.thediff.co/archive/a-theory-of-grift/&lt;/id>; &lt;更新>;2024-01-16T15:57:19.717878Z&lt;/更新>; &lt;link href=&quot;https://www.thediff.co/archive/a-theory-of-grift/&quot;/>; &lt;作者>; &lt;名称>;停泊处&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mooreds&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www .thediff.co/content/images/2022/12/non-covid-19-headshot.PNG&quot; style=&quot;宽度：220px；高度：255px；&quot; />;&lt;br />;由于供需因素的共同作用，世界上的骗子越来越多。使人们成为好骗子的特征过去有合法的应用，但现在有更多的机会利用人们。然而，这种情况并不稳定。 &lt;a href=&quot;https://hackernews.betacat.io/#a-theory-of-grift&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39014737&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Speedbump – 用于模拟可变网络延迟的 TCP 代理&lt;/stitle>; &lt;id>;https://github.com/kffl/speedbump&lt;/id>; &lt;更新>;2024-01-16T12： 57:19.718347Z&lt;/updated>; &lt;link href=&quot;https://github.com/kffl/speedbump&quot;/>; &lt;作者>; &lt;name>;sph&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=sph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b47186da4819e3a6bca8b3b381f88c3403828d2e7254f31b1e26bbbe4d2889f5/kffl/speedbump&quot; style=&quot;width: 220px;高度：110px；” />;&lt;br />;用于模拟可变且可预测的网络延迟的 TCP 代理 :globe_with_meridians::hourglass_flowing_sand: - GitHub - kffl/speedbump：用于模拟可变且可预测的网络延迟的 TCP 代理 :globe_with_meridians::hourglass_flowing_sand: &lt;a href=&quot; https://hackernews.betacat.io/#speedbump-a-tcp-proxy-to-simulate-variable-network-latency&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=39012697&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;关于被列为一名艺术家，其作品被用来训练 Midjourney&lt;/stitle>; &lt;id>;https://catandgirl.com/4000-of-my-closest-朋友/&lt;/id>; &lt;更新>;2024-01-16T18:57:19.718887Z&lt;/更新>; &lt;link href=&quot;https://catandgirl.com/4000-of-my-closest-friends/&quot;/>; &lt;作者>; &lt;name>;earthboundkid&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=earthboundkid&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https ://hackernews.betacat.io/#on-being-listed-as-an-artist-whose-work-was-used-to-train-midjourney&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39016395&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;了解 x86_64 分页&lt;/stitle>; &lt;id>;https://zolutal.github.io/understanding-paging/&lt;/id>; &lt;更新>;2024-01-16T16:57:19.719379Z&lt;/更新>; &lt;link href=&quot;https://zolutal.github.io/understanding-paging/&quot;/>; &lt;作者>; &lt;名称>;signa11&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;理解 x86_64 Paging 并不容易，但这篇博文旨在提供全面的解释的主题。它涵盖了页表的结构、地址转换的过程以及页表条目的解码。 &lt;a href=&quot;https://hackernews.betacat.io/#understanding-x86-64-paging&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39015377&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;为什么一切都是兰花？&lt;/stitle>; &lt;id>;https://worldsensorium.com/why-is-everything-an-orchid/&lt;/id>; &lt;updated>;2024-01 -16T16：57：19.719853Z &lt;/更新>; &lt;link href =“https://worldsensorium.com/why-is-everything-an-orchid/”/>; &lt;作者>; &lt;名称>; dnetesn &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=dnetesn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://worldsensorium.com/wp-content/uploads /2023/12/orchid-2100554_1280.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;查尔斯·达尔文对兰花着迷，并将其视为探索选择性进化力量的模型。兰花的起源仍然存在争议，但最近的研究表明它们起源于劳亚大陆，并在中美洲南部经历了快速的物种形成。兰花进化出了独特的授粉策略，例如模仿传粉者的配偶或最喜欢的零食。然而，兰花正面临气候变化和栖息地破坏的威胁，其物种的迅速丧失可能是不可逆转的。 &lt;a href=&quot;https://hackernews.betacat.io/#why-is-everything-an-orchid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39015159&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;LeftoverLocals：允许从 GPU 内存恢复数据的漏洞&lt;/stitle>; &lt;id>;https://leftoverlocals.com/&lt;/id>; &lt;更新>;2024-01-16T18： 57:19.720323Z&lt;/updated>; &lt;link href=&quot;https://leftoverlocals.com/&quot;/>; &lt;作者>; &lt;name>;ks6g10&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=ks6g10&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://leftoverlocals.com/leftoverlocals.png&quot; style=&quot;width: 220px; height: 177px;&quot; />;&lt;br />;LeftoverLocals 是一个允许从 Apple、Qualcomm 和 AMD GPU 上的 GPU 内存恢复数据的漏洞。它影响 GPU 应用程序的安全性，尤其是法学硕士和机器学习模型。 &lt;a href=&quot;https://hackernews.betacat.io/#leftoverlocals-a-vulnerability-that-allows-data-recovery-from-gpu-memory&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39016405&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Infowars 和 Goop 销售完全相同的伪科学“健康”产品&lt;/stitle>; &lt;id>;https://qz.com/1010684/所有-the-wellness-products-american-love-to-buy-are-sold-on-both-infowars-and-goop&lt;/id>; &lt;更新>;2024-01-16T19:01:19.721819Z&lt;/更新>; &lt;link href=&quot;https://qz.com/1010684/all-the-wellness-products-american-love-to-buy-are-sold-on-both-infowars-and-goop&quot;/>; &lt;作者>; &lt;name>;Anon84&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Anon84&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /i.kinja-img.com/image/upload/c_fill,h_900,q_60,w_1600/c3e68401deeb46bb4b60c60dcda80523.jpg&quot; style=&quot;宽度: 220px; 高度: 124px;&quot; />;&lt;br />;Infowars 和 Goop 销售完全相同的伪科学“健康”产品。 &lt;a href=&quot;https://hackernews.betacat.io/#infowars-and-goop-sell-the-same-exact-pseudoscientific-wellness-products&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39017350&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLM AI 模型和 API 托管提供商的基准和比较&lt;/stitle>; &lt;id>;https://artificialanalysis.ai&lt;/id>; &lt;更新>;2024-01-16T16:57:19.722336Z&lt;/更新>; &lt;link href=&quot;https://artificialanalysis.ai&quot;/>; &lt;作者>; &lt;名称>;Gcam&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=Gcam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://artificialanalysis.ai/img/logos/mistral_small.png&quot; style= “宽度：220 像素；高度：200 像素；” />;&lt;br />;人工智能模型和托管提供商分析 - 为您的用例选择最佳模型和提供商。模型质量和吞吐量之间存在权衡，较高质量的模型通常具有较低的吞吐量。 &lt;a href=&quot;https://hackernews.betacat.io/#benchmarks-and-comparison-of-llm-ai-models-and-api-hosting-providers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39014985&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过 WebAssembly 在浏览器中使用 ZBar 条形码扫描套件&lt;/stitle>; &lt;id>;https://barkeywolf.consulting/posts /barcode-scanner-web assembly/#meet-zbar&lt;/id>; &lt;更新>;2024-01-16T13:57:19.722833Z&lt;/更新>; &lt;link href=&quot;https://barkeywolf.consulting/posts/barcode-scanner -web assembly/#meet-zbar&quot;/>; &lt;作者>; &lt;名称>;akbarnama&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=akbarnama&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://barkeywolf.consulting/posts/barcode-scanner-web assembly/images/screenshot.jpg&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;我想为一个涉及库存管理的研究项目制作一个跨平台条形码扫描仪。在查看了几个 Javascript 库后，我发现了 ZBar，一个广泛用于条形码扫描的 C 库。我决定将 ZBar 编译为 WebAssembly，最终得到了一个漂亮的浏览器内条形码扫描仪。 &lt;a href=&quot;https://hackernews.betacat.io/#using-the-zbar-barcode-scanning-suite-in-the-browser-with-web assembly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39013229&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ruby (3.3) on Rails (1.0)&lt;/stitle>; &lt;id>;https://nashby.github.io/2024 /01/15/ruby-3-on-rails-1/&lt;/id>; &lt;更新>;2024-01-16T11:57:19.723796Z&lt;/更新>; &lt;link href=&quot;https://nashby.github.io /2024/01/15/ruby-3-on-rails-1/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://github-production-user-asset-6210df.s3.amazonaws.com/200500/296873934-1b81569a-5265-4e37- 8d33-596c1c130f4b.png?X-Amz-算法=AWS4-HMAC-SHA256&amp;X-Amz-凭证=AKIAVCDYLSA53PQK4ZA%2F20240116%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-日期=20240116T155003Z &amp;X-Amz-过期=300&amp;X-Amz-签名=3f16a1bc2dd227b49166ce5318bb0a6847c3435b018a53caec27b3338c2af825&amp;X-Amz-SignedHeaders=主机&amp;actor_id=0&amp;key_id=0&amp;repo_id=358621496&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Rails 8.0 最近在 Github 上进行了分支，作者想看看是否可以在最新的 Ruby 版本上运行 Rails 1.0。他们对代码库进行了一些修改以更新语法并替换已弃用的方法，最终让应用程序生成并显示欢迎屏幕。 &lt;a href=&quot;https://hackernews.betacat.io/#ruby-3-3-on-rails-1-0&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39012235&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google 变得更糟了吗？搜索引擎优化垃圾邮件的纵向调查 [pdf]&lt; /stitle>; &lt;id>;https://downloads.webis.de/publications/papers/bevendorff_2024a.pdf&lt;/id>; &lt;更新>;2024-01-16T16:57:19.724270Z&lt;/更新>; &lt;link href=&quot;https ://downloads.webis.de/publications/papers/bevendorff_2024a.pdf&quot;/>; &lt;作者>; &lt;名称>;DanielleMolloy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=DanielleMolloy&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;网络搜索引擎面临着低质量内容和搜索引擎优化 (SEO) 垃圾邮件的问题，这正在影响搜索结果的质量。本文通过分析产品评论页面的 SEO 特性以及 SEO 和搜索引擎之间持续的竞争，调查了 Google 的恶化程度。研究发现，&lt;a href=&quot;https://hackernews.betacat.io/#is-google-getting-worse-a-longitudinal-investigation-of-seo-spam-in-search-pdf&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39013497&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;五位密码学巨头将入选 NSA 密码学荣誉殿堂&lt;/stitle>; &lt;id >;https://www.nsa.gov/Press-Room/Press-Releases-Statements/Press-Release-View/Article/3631341/ Five-cryptologic-giants-to-be-inducted-into-nsas-cryptologic-hall -of-honor/&lt;/id>; &lt;更新>;2024-01-16T15:57:19.724797Z&lt;/更新>; &lt;link href=&quot;https://www.nsa.gov/Press-Room/Press-Releases-Statements /Press-Release-View/Article/3631341/ Five-cryptologic-giants-to-be-inducted-into-nsas-cryptologic-hall-of-honor/&quot;/>; &lt;作者>; &lt;名称>;keepamovin&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=keepamovin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.defense.gov/2019/十一月/13/2002210357/1920/1080/0/191113-D-IM742-9001.JPG&quot; style=&quot;宽度：220px;高度：158px;&quot; />;&lt;br />;国家安全局 (NSA) 密码学历史中心将于 2023 年将五位主要密码学人物纳入密码学荣誉堂。入选者包括 Evelyn Akeley、James Lovell、Joseph Mauborgne、James雷德福和哈里·拉什鲍姆。&lt;a href=&quot;https://hackernews.betacat.io/# Five-cryptologic-giants-to-be-inducted-into-nsa-s-cryptologic-hall-of-honor&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39012262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Postgres 的 BSON 扩展&lt;/stitle>; &lt;id>;https:// /github.com/buzzm/postgresbson&lt;/id>; &lt;更新>;2024-01-16T12:57:19.725300Z&lt;/更新>; &lt;link href=&quot;https://github.com/buzzm/postgresbson&quot;/>; &lt;作者>; &lt;name>;buzzm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=buzzm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //opengraph.githubassets.com/51403dca9625a5d7e9ffe0a0fb8a3b77609af60863352db26ce35f09b906c473/buzzm/postgresbson&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;buzzm/postgresbson 此提交不属于此存储库上的任何分支，并且可能属于存储库外部的分支。 &lt;a href=&quot;https://hackernews.betacat. io/#show-hn-bson-extension-for-postgres&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39000905&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>; Std：Clamp 生成的程序集效率低于 std:min(max,std:max(min,v))&lt;/stitle>; &lt;id>;https://1f6042.blogspot.com/2024/01/stdclamp-still-generates- less-efficient.html&lt;/id>; &lt;更新>;2024-01-16T10:57:19.726253Z&lt;/更新>; &lt;link href=&quot;https://1f6042.blogspot.com/2024/01/stdclamp-still-generates -less-efficient.html&quot;/>; &lt;作者>; &lt;名称>;x1f604&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=x1f604&lt;/uri>; &lt;/作者>; &lt;内容类型=即使在最新版本的 GCC (13.2) 和 Clang (17.0.1) 上，“html&quot;>;std::clamp 生成的汇编效率仍然低于 std::min(max, std::max(min, v))。 &lt;a href=&quot;https://hackernews.betacat.io/#std-clamp-generates-less-efficient-assemble-than-std-min-max-std-max-min-v&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39011850&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大纲：可自托管、实时、Markdown 兼容的知识库&lt;/stitle>; &lt;id>;https:// /github.com/outline/outline&lt;/id>; &lt;更新>;2024-01-16T11:57:19.726748Z&lt;/更新>; &lt;link href=&quot;https://github.com/outline/outline&quot;/>; &lt;作者>; &lt;name>;msk-lywenn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=msk-lywenn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://opengraph.githubassets.com/2dfa04f375b6ed662a4b47ab5bb32d60899a85a323e11510bf02703bf7b1a82f/outline/outline&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;成长型团队最快的知识库。美观、实时协作、功能丰富且兼容 Markdown。 - GitHub - outline/outline：成长型团队最快的知识库。美观、实时协作、功能丰富且兼容 Markdown。 &lt;a href=&quot;https://hackernews.betacat.io/#outline-self-hostable-realtime-markdown-filled-knowledge-base&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39012054&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Unity3D 中的 PID 控制器&lt;/stitle>; &lt;id>;https://vazgriz.com/621/pid-controllers/&lt;/id>; &lt;updated>;2024 -01-16T10：57：19.727232Z &lt;/更新>; &lt;link href =“https://vazgriz.com/621/pid-controllers/”/>; &lt;作者>; &lt;名称>;signa11 &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://vazgriz.com/wp-content/uploads/2021 /12/pid_controller1.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;PID控制器是一种用于自动化的控制回路。它可以通过配置控制器的输出来处理不断变化的目标值和不断变化的外部条件。 &lt;a href=&quot;https://hackernews.betacat.io/#pid-controllers-in-unity3d&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39011630&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;CISA 已知可利用漏洞的开源检测器&lt;/stitle>; &lt;id>;https://github.com/Ostorlab/KEV&lt;/id>; &lt;更新>;2024-01-16T07:57 ：19.727702Z&lt;/更新>; &lt;link href=&quot;https://github.com/Ostorlab/KEV&quot;/>; &lt;作者>; &lt;name>;alaeddine001&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=alaeddine001&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/85c22916c30ea4c4f9032d9675d2cd931d9faff0d2ac4d386f18b685f039a268/Ostorlab/KEV&quot; style=&quot;width: 220px; height : 110 像素;&quot; />;&lt;br />;Ostorlab KEV：一个命令即可检测最远程已知的可利用漏洞。源自 CISA KEV、Google 的 Tsunami、Ostorlab 的 Asteroid 和 Bug Bounty 计划。 - GitHub - Ostorlab/KEV:Ostorlab KEV：检测最远程已知可利用漏洞的一个命令。源自 CISA KEV、Google 的 Tsunami、Ostorlab 的 Asteroid 和 Bug Bounty 计划。 &lt;a href=&quot;https://hackernews.betacat.io/#open-source- detector-of-cisa-s-known-exploitable-vulnerability&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39010454&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;NetBSD/amd64 guest 虚拟机现在可以在 18 毫秒内启动&lt;/stitle>; &lt;id>;https://old.reddit.com/r/BSD/评论/197vfmq/a_netbsdamd64_guest_can_now_boot_in_40ms_details/&lt;/id>; &lt;更新>;2024-01-16T16:57:19.728192Z&lt;/更新>; &lt;link href=&quot;https://old.reddit.com/r/BSD/comments/197vfmq/ a_netbsdamd64_guest_can_now_boot_in_40ms_details/&quot;/>; &lt;author>; &lt;name>;bleusink&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bleusink&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://preview.redd.it/fva671v8qqcc1.png?width=715&amp;auto=webp&amp;s=7c8e0e903eb9d8b32f3aa9bcd169de9121893652&quot; style=&quot;宽度：220px；高度：233px；&quot; />;&lt;br />;NetBSD/amd64 现在可以在 PVH 模式下启动，使用 qemu 的 -kernel 标志或支持 PVH 的 AWS Firecracker 版本直接进入内核。 NetBSD 还支持内存映射支持的设备，如 ld(4) 或 vioif(4)。 &lt;a href=&quot;https://hackernews.betacat.io/#a-netbsd-amd64-guest-can-now-boot-in-18ms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39015036&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lichee Console 4A – RISC-V 迷你笔记本电脑：回顾、基准测试和早期问题&lt;/stitle>; &lt;id>;https://3.14.by/ en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review&lt;/id>; &lt;更新>;2024-01-16T05:57:19.728685Z&lt;/更新>; &lt;link href= &quot;https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review&quot;/>; &lt;作者>; &lt;名称>;BarsMonster&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=BarsMonster&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s.14.by/lv0.jpg “样式=”宽度：220px;高度：156px;“ />;&lt;br />;Lichee Console 4A 是一款微型 RISC-V 迷你笔记本电脑，具有坚固的结构和高品质的键盘。它运行在四核 RISC-V SoC 上，最大配置为 16GB RAM 和 128GB eMMC。电池续航时间约为 2.5 小时，并且存在一些需要改进的软件问题。 &lt;a href=&quot;https://hackernews.betacat.io/#lichee-console-4a-risc-v-mini-laptop-review-benchmarks-and-early-issues&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39009745&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无密码：另一种地狱？&lt;/stitle>; &lt;id>;https://jcarlosroldan.com/post/ 315/passwordless-a- different-kind-of-hell&lt;/id>; &lt;更新>;2024-01-16T13:57:19.729660Z&lt;/更新>; &lt;link href=&quot;https://jcarlosroldan.com/post/315 /passwordless-a- different-kind-of-hell&quot;/>; &lt;作者>; &lt;名称>;juancroldan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=juancroldan&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jcarlosroldan.com/static/172.png&quot; style=&quot;width: 220px; height: 126px;&quot; />;&lt;br />;服务身份验证变得更加安全，但以牺牲用户体验为代价。本文探讨了身份验证方法的演变，从古老的密码到现代的复杂性，并根据用户体验和安全等级对其进行评级。 &lt;a href=&quot;https://hackernews.betacat.io/#passwordless-a- Different-kind-of-hell&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39013036&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Niklaus Wirth，或简单的重要性&lt;/stitle>; &lt;id>;https://cacm.acm.org/blogs/blog-cacm/279178-niklaus-wirth -or-the-importance-of-being-simple/fulltext&lt;/id>; &lt;更新>;2024-01-15T19:57:19.730125Z&lt;/更新>; &lt;link href=&quot;https://cacm.acm.org/ blogs/blog-cacm/279178-niklaus-wirth-or-the-importance-of-being-simple/fulltext&quot;/>; &lt;作者>; &lt;名称>;madmax108&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=madmax108&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cacm.acm.org/system/assets/0002/4144/062916_Bertrand-Meyer- 250.large.jpg？1476779509&amp;1467203315&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;著名计算机科学家 Niklaus Wirth 意外去世。作者回顾了他与沃斯的个人关系以及他对计算机科学领域的影响。 &lt;a href=&quot;https://hackernews.betacat.io/#niklaus-wirth-or-the-importance-of-being-simple&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39004526&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;