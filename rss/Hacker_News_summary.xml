<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-06-24T10:02:10.064974Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;规则规定，“公园内禁止车辆”&lt;/stitle>; &lt;id>;https://novehiclesinthepark.com/&lt;/id>; &lt;updated>;2023-06-24T00: 00:33.187522Z&lt;/updated>; &lt;link href=&quot;https://novehiclesinthepark.com/&quot;/>; &lt;作者>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这个游戏是关于语言和规则的。它由 27 个问题组成，但在前 7 个问题之后，您可以跳到最后。最后，我会告诉你你的结果与其他人的结果相比如何，并讨论我制作这款游戏​​的原因。 &lt;a href=&quot;https://hackernews.betacat.io/#the-rule-says-no-vehicles-in-the-park&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36453856&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;终于得到了二进制补码&lt;/stitle>; &lt;id>;https://neugierig.org/software/blog/2023/06/twos-complement.html&lt; /id>; &lt;更新>;2023-06-24T07:00:33.189243Z&lt;/更新>; &lt;link href=&quot;https://neugierig.org/software/blog/2023/06/twos-complement.html&quot;/>; &lt;作者>; &lt;name>;thepbone&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thepbone&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://neugierig.org/software/blog/2023/06/unsigned.png&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;二进制补码是计算机表示负数的一种方式。选择它是为了让数学计算出来。即使跨越负/正边界，相同的旋转规则也适用。 &lt;a href=&quot;https://hackernews.betacat.io/#finally-getting-two-s-complement&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36451907&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;CSS 仅深色模式，无 JS&lt;/stitle>; &lt;id>;https://simondalvai.com/blog/css-only-darkmode/&lt;/id>; &lt;更新>;2023-06 -24T08:00:33.189802Z&lt;/updated>; &lt;link href=&quot;https://simondalvai.com/blog/css-only-darkmode/&quot;/>; &lt;author>; &lt;name>;dulvui&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=dulvui&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;上周我在网站上实现了深色模式，没有使用任何 JS，仅使用现代 CSS 媒体查询。很确定，黑暗模式只能使用 JS 来实现，但快速的在线搜索证明我错了。 &lt;a href=&quot;https://hackernews.betacat.io/#css-only-dark-mode-without-js&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36456513&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个基于网络的开源抽认卡学习系统&lt;/stitle>; &lt;id>;https://github.com/hwgilbert16/scholarsome&lt;/id>; &lt;updated>;2023-06 -24T03:00:33.190294Z&lt;/updated>; &lt;link href=&quot;https://github.com/hwgilbert16/scholarsome&quot;/>; &lt;作者>; &lt;name>;hwgilbert16&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=hwgilbert16&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/7746423417e239bc27ee7a621ebe07cdde3faa2e2ecaa1ad9eed673b7bdfa53d/68747470733a2f2 f692e696d6775722e636f6d2f4d7368544f614c2e706e67”样式=“宽度：220px ；高度：114px；&quot; />;&lt;br />;Scholarsome 是一个开源学习系统，旨在成为任何学习工作流程的直接替代品。它提供了核心功能，例如用于练习记忆术语和定义的抽认卡，并通过在本地保存用户数据来优先考虑数据安全。 &lt;a href=&quot;https://hackernews.betacat.io/#an-open-source-web-based-flashcard-stuying-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36454783&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作者的日程、管理者的日程（2009）&lt;/stitle>; &lt;id>;http://www.paulgraham.com/makersschedule.html&lt;/id>; &lt;更新>;2023-06-24T06:00:33.190777Z&lt;/更新>; &lt;link href=&quot;http://www.paulgraham.com/makersschedule.html&quot;/>; &lt;作者>; &lt;名称>;mad2021 &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=mad2021&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;程序员不喜欢开会，因为他们的日程安排与其他人不同。有两种类型的时间表：经理的时间表，分为一小时的间隔，以及制造商的时间表，更喜欢半天或更长的单位。会议会打乱创客的日程安排，并对生产力产生连锁反应。 &lt;a href=&quot;https://hackernews.betacat.io/#maker-s-schedule-manager-s-schedule-2009&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36455843&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过更好地使用数据缓存让您的程序运行得更快（2020）&lt;/stitle>; &lt;id>;https://johnnysswlab.com/make-your-programs- run-faster-by-better-using-the-data-cache/&lt;/id>; &lt;更新>;2023-06-24T01:00:33.191260Z&lt;/更新>; &lt;link href=&quot;https://johnnysswlab.com/ make-your-programs-run-faster-by-better-using-the-data-cache/&quot;/>; &lt;author>; &lt;name>;eatonphil&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=eatonphil&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;开发人员经常尝试通过创建复杂性较低的新算法来提高程序性能。然而，当这不可能时，可以使用低级优化来挤出更多性能。其中一种优化是更好地利用数据高速缓冲存储器。 &lt;a href=&quot;https://hackernews.betacat.io/#make-your-programs-run-faster-by-better-using-the-data-cache-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36453790&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么成千上万的棋盘游戏被埋在曼凯托之下&lt;/stitle>; &lt;id>;https://www.startribune.com /anti-monopoly-mankato-landfill-board-game-history/600279625/&lt;/id>; &lt;更新>;2023-06-24T03:00:33.192178Z&lt;/更新>; &lt;link href=&quot;https://www.startribune .com/anti-monopoly-mankato-landfill-board-game-history/600279625/&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://chorus.stimg.co/24696069/136_06042013_210001013a.jpg?h=630&amp;w=1200&amp;fit=crop&amp;bg=999&amp;crop=faces&quot;样式=“宽度：220像素；高度：116像素；” />;&lt;br />;在明尼苏达州南部的某个地方，埋藏着大约 40,000 种棋盘游戏的残余物，这些棋盘游戏曾经作为大卖大富翁的反体制替代品而被创造和销售。 《反垄断》游戏在曼凯托制作，在 20 世纪 70 年代中期美国通货膨胀猖獗和制度不信任的背景下取得了成功。 &lt;a href=&quot;https://hackernews.betacat.io/#why-thousands-of-board-games-are-buried-beneath-mankato&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36454824&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;杰西卡·利文斯顿 (2015)&lt;/stitle>; &lt;id>;http://www.paulgraham.com/jessica.html&lt;/id>; &lt;已更新>;2023-06-23T18:00:33.193465Z&lt;/更新>; &lt;link href=&quot;http://www.paulgraham.com/jessica.html&quot;/>; &lt;作者>; &lt;名称>;cperciva &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=cperciva&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Jessica Livingston 在 Y Combinator 的成功中发挥了至关重要的作用。她是四位创始人之一，负责 YC 的日常运营、定义文化，并利用她卓越的判断力挑选优秀的创始人。 &lt;a href=&quot;https://hackernews.betacat.io/#jessica-livingston-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36449894&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Go 1.21 将（可能）默认按需下载更新的工具链&lt;/stitle>; &lt;id>;https://utcc.utoronto.ca/~cks/space/blog/programming/Go121ToolchainDownloads&lt;/id >; &lt;更新>;2023-06-24T03:00:33.193873Z&lt;/更新>; &lt;link href=&quot;https://utcc.utoronto.ca/~cks/space/blog/programming/Go121ToolchainDownloads&quot;/>; &lt;作者>; &lt; name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;从 Go 1.21 开始，Go 将拒绝当旧版本的 Go 尝试使用需要新版本 Go 的模块执行某些操作时，请保持乐观。 Go 保证模块始终至少使用其最低版本的 Go 进行处理，如果不可能，Go 将停止并显示明确的错误消息。 &lt;a href=&quot;https://hackernews.betacat.io/#go-1-21-will-probously-download-newer-toolchains-on-demand-by-default&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36454895&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无需借用检查、引用计数或跟踪 GC 即可确保 C++ 安全&lt;/stitle>; &lt;id>;https://verdagon .dev/blog/vale-memory-safe-cpp&lt;/id>; &lt;更新>;2023-06-23T17:00:33.194259Z&lt;/更新>; &lt;link href=&quot;https://verdagon.dev/blog/vale-内存安全-cpp&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;本文讨论了在不使用引用计数、跟踪垃圾收集或借用检查的情况下使 C++ 内存安全的不同方法。它探索了十一种不同的方法，包括约束引用、世代引用、区域、竞技场等等。作者还介绍了 unique_ptr 的概念，并概述了 C++ 中内存安全的一些规则。 &lt;a href=&quot;https://hackernews.betacat.io/#making-c-safe-without-borrow-checking-reference-counting-or-tracing-gc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36448759&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;历史就是一件又一件该死的事情&lt;/stitle>; &lt;id>;https://collabfund.com/blog/how- this-all-happened/&lt;/id>; &lt;更新>;2023-06-24T05:00:33.194660Z&lt;/更新>; &lt;link href=&quot;https://collabfund.com/blog/how-this-all-happened/ &quot;/>; &lt;作者>; &lt;名称>;prakhar897&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=prakhar897&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://collabfund.com/uploads/pasted%20image%200.png&quot; style=&quot;宽度：220px；高度：154px；&quot; />;&lt;br />;这是一个关于二战结束以来美国经济发生变化的短篇故事。事情非常不确定，然后非常好，然后很糟糕，然后非常好，然后非常糟糕，现在我们就到了这里。有一个叙述将所有这些事件联系在一起。 &lt;a href=&quot;https://hackernews.betacat.io/#history-is-just-one-damn-thing-after-another&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36455697&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;带有 Apache NuttX 实时操作系统的 64 位 RISC-V&lt;/stitle>; &lt;id>;https://lupyuen.codeberg.page/articles/ riscv.html&lt;/id>; &lt;更新>;2023-06-24T00:00:33.195061Z&lt;/更新>; &lt;link href=&quot;https://lupyuen.codeberg.page/articles/riscv.html&quot;/>; &lt;作者>; &lt;name>;lupyuen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lupyuen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /lupyuen.codeberg.page/images/riscv-title.png&quot; style=&quot;宽度：220px；高度：202px；&quot; />;&lt;br />;Apache NuttX 是一个实时操作系统 (RTOS)，可以在从 8 位到 64 位的多种设备上运行。 NuttX 的工作方式就像 Linux 的微型版本，因此命令看起来很熟悉。 &lt;a href=&quot;https://hackernews.betacat.io/#64-bit-risc-v-with-apache-nuttx-real-time-operating-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36453810&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;研究人员表示，数百万个 GitHub 存储库可能容易受到 RepoJacking&lt;/stitle>; &lt;id>;https://www.bleepingcomputer.com /news/security/millions-of-github-repos-likely-vulnerable-to-repojacking-researchers-say/&lt;/id>; &lt;更新>;2023-06-23T22:00:33.195452Z&lt;/更新>; &lt;link href= “https://www.bleepingcomputer.com/news/security/millions-of-github-repos-likely-vulnerable-to-repojacking-researchers-say/”/>; &lt;作者>; &lt;名称>;pyeri&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=pyeri&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bleepstatic.com/content/ hl-images/2022/04/08/GitHub__headpic.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;数百万个 GitHub 存储库可能容易受到依赖存储库劫持（也称为“RepoJacking”）的攻击，这可能有助于攻击者部署影响大量用户的供应链攻击。 AquaSec 的安全团队“Nautilus”分析了 125 万个 GitHub 存储库的样本，发现其中约 2.95% 容易受到 RepoJacking 的攻击。通过将此百分比推断到 GitHub 超过 3 亿个的整个存储库库，研究人员估计该问题影响了大约 900 万个项目。 &lt;a href=&quot;https://hackernews.betacat.io/#millions-of-github-repos-likely-vulnerable-to-repojacking-researchers-say&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36452322&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;影响 Linux 上 Firefox 用户的严重崩溃高峰&lt;/stitle>; &lt;id>;https://fosstodon.org/@gabrielesvelto/110592904713090347&lt; /id>; &lt;更新>;2023-06-24T05:00:33.195837Z&lt;/更新>; &lt;link href=&quot;https://fosstodon.org/@gabrielesvelto/110592904713090347&quot;/>; &lt;作者>; &lt;名称>;sohkamyung&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;周一早上，我们 (Mozilla) 检测到一个非常大的崩溃峰值，影响了 # Linux 上的 Firefox 用户，特别是基于 Debian 的旧版本发行版的用户。事实证明，这是一个涉及#Linux 内核和#Google JavaScript 代码的有趣错误，所以让我告诉您相关信息。一个线程 🧵 https://bugzilla.mozilla.org/show_bug.cgi?id=1839669 1/6 &lt;a href=&quot;https://hackernews.betacat.io/#a-large-crash-spike-affecting-firefox -users-on-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36455627&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PDF 子页面导航&lt;/stitle>; &lt; id>;https://nibblestew.blogspot.com/2023/06/pdf-subpage-navigation.html&lt;/id>; &lt;更新>;2023-06-24T02:00:33.196238Z&lt;/更新>; &lt;link href=&quot;https ://nibblestew.blogspot.com/2023/06/pdf-subpage-navigation.html&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNX9aSbr81YEYnyTOan3LX-2Qz0M2bVybxtBMsPEv4jzqb5fYSSp5aSq2AZeQRoknWRa5YwgL9n7y UujUi8yAOjQPAccjj5KSijgxg_1OeeRosvl9T4KldOZ7cAfRnAk33bjppyRRoSzooOOg0yYF6ureUfqeubDg3ys7VB8tZWIYQcuiAGZRyinULDEo/s320/subnav.png&quot;样式=“宽度：220px； height: 97px;&quot; />;&lt;br />;一个常见的演示文稿要求是当您向前单击时，项目符号点会逐一出现。大多数 PDF 演示文稿通过多个页面来实现这一点，每个页面对应一个州。但是，PDF 规范有称为子页面导航的功能，允许项目符号点出现在同一页面上。此功能并未广泛使用，支持它的 PDF 查看器是 Acrobat Reader。&lt;a href=&quot;https://hackernews.betacat.io/ #pdf-subpage-navigation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36454556&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;铁燃料展现了它的勇气&lt;/stitle >; &lt;id>;https://spectrum.ieee.org/iron-fuel&lt;/id>; &lt;更新>;2023-06-23T15:00:33.196627Z&lt;/更新>; &lt;link href=&quot;https://spectrum.ieee .org/iron-fuel&quot;/>; &lt;作者>; &lt;名称>;mfiguiere &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mfiguiere&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee.org/media-library/a-photograph-of-a-large-metal-struct-with-a-person-stand-on-top.jpg ?id=34143005&amp;宽度=1200&amp;高度=900&quot; style=&quot;宽度：220px;高度：165px;&quot; />;&lt;br />;荷兰一座名为 IRON+ 的 1 兆瓦发电厂将燃烧铁燃料来产生用于酿造啤酒的热量。铁燃料是一种具有潜在吸引力的清洁能源，易于储存和运输。 &lt;a href=&quot;https://hackernews.betacat.io/#iron-fuel-shows-its-mettle&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36447566&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;欧空局可重复使用火箭发动机的完全点火&lt;/stitle>; &lt;id>;https://www.esa.int/Enabling_Support/Space_Transportation/Full_ignition_for_ESA_s_reusable_rocket_engine&lt;/id>; &lt;updated>;2023-06 -23T17:00:33.197041Z&lt;/updated>; &lt;link href=&quot;https://www.esa.int/Enabling_Support/Space_Transportation/Full_ignition_for_ESA_s_reusable_rocket_engine&quot;/>; &lt;作者>; &lt;name>;ZacnyLos&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=ZacnyLos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.esa.int/var/esa/storage/图片/esa_multimedia/images/2023/06/prometheus_full_ignition_arianegroup_test_centre_vernon_france_22_june_2023/24947721-1-eng-GB/Prometheus_full_ignition_ArianeGroup_test_centre_Vernon_France_22_June_2023_article.png&quot; style=&quot;width: 22 0 像素；高度：130px;&quot; />;&lt;br />;为欧洲火箭开发可重复使用发动机的工作正在取得进展，普罗米修斯的早期原型已完全点火。100吨推力级的普罗米修斯广泛使用了新材料和设计的制造技术将其成本降低至 Ariane 5 的 Vulcain 2 的十分之一。 &lt;a href=&quot;https://hackernews.betacat.io/#full-ignition-for-esas-reusable-rocket-engine&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36448791&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;任何深度 ReLU 网络都很浅&lt;/stitle>; &lt;id>;https://arxiv.org/ abs/2306.11827&lt;/id>; &lt;更新>;2023-06-23T21:00:33.197773Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2306.11827&quot;/>; &lt;作者>; &lt;名称>;headalgorithm &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=headalgorithm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv .org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;我们建设性地证明，每个深度 ReLU 网络都可以重写为功能相同的三层网络，其权重以扩展实数表示。基于此证明，我们提供了一种算法，给定深度 ReLU 网络，找到相应浅层网络的显式权重。&lt;a href=&quot;https://hackernews.betacat.io/#any-deep-relu-network-is-shallow&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36451149&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;适用于 Mac 的开源鼠标和触控板实用程序&lt;/stitle>; &lt;id>;https://linearmouse .app/&lt;/id>; &lt;更新>;2023-06-23T17:00:33.198152Z&lt;/更新>; &lt;link href=&quot;https://linearmouse.app/&quot;/>; &lt;作者>; &lt;名称>;cowjan&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cowjan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://linearmouse.app/_next/静态/媒体/feature-1.5065d76a.png&quot; style=&quot;width: 220px; height: 170px;&quot; />;&lt;br />;如果您对使用鼠标时的自然滚动感到不舒服，LinearMouse可以帮助您反转滚动方向。LinearMouse可以让您找到舒适的指针加速度和速度，并帮助您移动鼠标指针更快、更准确。&lt;a href=&quot;https://hackernews.betacat.io/#an-open-source-mouse-and-trackpad-utility-for-mac&quot; target=&quot;_blank&quot;>;[summary]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36448367&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;开源许可证需要摆脱 20 世纪 80 年代的束缚，并不断发展以应对人工智能&lt;/stitle>; &lt;id>;https:// www.theregister.com/2023/06/23/open_source_licenses_ai/&lt;/id>; &lt;更新>;2023-06-24T06:00:33.198527Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/ 2023/06/23/open_source_licenses_ai/&quot;/>; &lt;作者>; &lt;名称>;gumby&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gumby&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>;&lt;img src=“https://regmedia.co.uk/2023/06/22/1980s.jpg”样式=“宽度：220px; height: 220px;&quot; />;&lt;br />;自由软件和开源许可证需要发展以处理人工智能模型和数据集。为软件设计的开源许可证可能并不最适合人工智能工件。开源社区正在努力关于定义对开源人工智能原则的共同理解。&lt;a href=&quot;https://hackernews.betacat.io/#open-source-licenses-need-to-leave-the-1980s-and-evolve-to-deal -with-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36444854&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Mailpit – 带有 API 的电子邮件和 SMTP 测试工具&lt;/stitle>; &lt;id>;https://github.com/axllent/mailpit&lt;/id>; &lt;更新>;2023-06-23T22:00:33.198903Z&lt;/更新>; &lt;link href=&quot;https://github.com/mailpit&quot; com/axllent/mailpit&quot;/>; &lt;作者>; &lt;名称>;qa-guy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=qa-guy&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://raw.githubusercontent.com/axllent/mailpit/develop/docs/screenshot.png”样式=“宽度：220px; height: 111px;&quot; />;&lt;br />;Mailpit 是一个电子邮件和 SMTP 测试工具，它既充当 SMTP 服务器，又提供 Web 界面来查看捕获的电子邮件。它提供快速 SMTP 处理和存储、SMTP 中继和消息发布. Mailpit Web UI 默认监听 http://0.0.0.0:8025，SMTP 端口监听 0.0.0.0:1025。它可以通过brew tap axllent/apps 和brew install mailpit 安装。 &lt;a href=&quot; https://hackernews.betacat.io/#mailpit-an-email-and-smtp-testing-tool-with-api&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=36448686&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为 macOS 构建自定义 Mach-O 内存加载器&lt;/stitle>; &lt;id>;https://blog.xpnsec.com/building-a-mach-o-memory -loader-part-1/&lt;/id>; &lt;更新>;2023-06-23T20:00:33.199285Z&lt;/更新>; &lt;link href=&quot;https://blog.xpnsec.com/building-a-mach-o -memory-loader-part-1/&quot;/>; &lt;作者>; &lt;名称>;jshchnz&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jshchnz&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://assets.xpnsec.com/macho-loader-part1/image6.png”样式=“宽度：220px; height: 108px;&quot; />;&lt;br />;本文探讨了为 macOS 构建自定义 Mach-O 内存加载器的过程。它讨论了 Mach-O 文件的布局、加载命令的结构以及符号的处理和 dylib 参考。本文还提供了用于理解概念的代码示例和建议。&lt;a href=&quot;https://hackernews.betacat.io/#building-a-custom-mach-o-memory-loader-for-macos &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36447555&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;颜色和对比度的交互式指南&lt;/stitle>; &lt;id>; https://colorandcontrast.com/&lt;/id>; &lt;更新>;2023-06-23T23:00:33.199656Z&lt;/更新>; &lt;link href=&quot;https://colorandcontrast.com/&quot;/>; &lt;作者>; &lt;名称>;warrenm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=warrenm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;颜色和对比度是关于颜色的综合指南用户界面设计师。 &lt;a href=&quot;https://hackernews.betacat.io/#an-interactive-guide-to-color-and-contrast&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36449072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OpenSuse Tumbleweed：最先进的桌面和服务器操作系统&lt;/stitle>; &lt;id>;https://get.opensuse.org/tumbleweed/&lt; /id>; &lt;更新>;2023-06-24T05:00:33.200037Z&lt;/更新>; &lt;link href=&quot;https://get.opensuse.org/tumbleweed/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://get.opensuse.org/资产/图像/徽标/tumbleweed_header.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Tumbleweed 是一款最先进的桌面和服务器操作系统，提供自由与安全、控制与安全、技术与稳定性。它提供频繁的更新、全面的测试和轻松的包管理，使其适用于工作站、笔记本电脑和笔记本电脑。 Tumbleweed 采用最新的内核版本、Spectre/Meltdown 缓解补丁和强大的安全策略构建。它使用户能够完全控制其系统并确保与各种硬件的兼容性。 &lt;a href=&quot;https://hackernews.betacat.io/#opensuse-tumbleweed-state-of-the-art-desktop-and-server-operating-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36455510&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;扑灭硬件垃圾箱火灾&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/pdf/ 10.1145/3593856.3595903&lt;/id>; &lt;更新>;2023-06-23T14:00:33.200436Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/pdf/10.1145/3593856.3595903&quot;/>; &lt;作者>; &lt;name>;peter_d_sherman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=peter_d_sherman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;现代计算机硬件的复杂性包括移动电话和数据中心服务器，会导致系统软件出现错误和漏洞。传统操作系统无法解决此问题，因为它们仅在机器的一小部分上运行。相反，需要硬件和软件平台的高级模型来捕获不同组件之间必要的信任关系。 &lt;a href=&quot;https://hackernews.betacat.io/#putting-out-the-hardware-dumpster-fire&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36446787&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;