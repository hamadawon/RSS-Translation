<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-09-10T02:01:21.771362Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;美国火山发现的锂可能是迄今为止发现的最大矿床&lt;/stitle>; &lt;id>;https://www.chemistryworld.com/news/lithium-discovery-in-us-volcano -could-be-biggest-deposit-ever-found/4018032.article&lt;/id>; &lt;更新>;2023-09-09T23:01:11.668599Z&lt;/更新>; &lt;link href=&quot;https://www.chemistryworld. com/news/lithium-discovery-in-us-volcano-could-be-biggest-deposit-ever-found/4018032.article&quot;/>; &lt;作者>; &lt;名称>;jseliger&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=jseliger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2cbg94ubxgsnp.cloudfront.net/Pictures/480x270/6/3/ 8/528638_shutterstock_2197455677_894095.jpg&quot;样式=&quot;宽度：220px；高度：124px;&quot; />;&lt;br />;在内华达州和俄勒冈州边境发现了世界一流的锂矿床，可能会满足对这种金属不断增长的需求。该矿床位于约 1600 万年形成的火山口内此前，估计蕴藏有 20 至 4000 万吨锂金属，超过了玻利维亚此前最大的矿藏。这一发现可能对全球锂市场产生重大影响。&lt;a href=&quot;https://hackernews.betacat.io/ #lithium-discovery-in-us-volcano-could-be-biggest-deposit-ever-found&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=37450915&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;旧局域网派对的回忆&lt;/stitle>; &lt;id>;https://thomask.sdf.org/blog/2023/09/09/memories-from-old-lan-parties.html&lt; /id>; &lt;更新>;2023-09-10T00:01:11.797497Z&lt;/更新>; &lt;link href=&quot;https://thomask.sdf.org/blog/2023/09/09/memories-from-old-lan -parties.html&quot;/>; &lt;作者>; &lt;名称>;ecliptik&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html ”我在 2000 年代参加了很多 LAN 比赛，有时在私人家里，有时在专用的 LAN 场地。在这些活动中发生了许多奇怪而奇妙的事情，这些事情在今天看来毫无意义。 &lt;a href=&quot;https://hackernews.betacat.io/#memories-from-old-lan-parties&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37451518&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我在 iPadOS 17 中使用 Game Boy 摄像头进行 Facetime 视频通话&lt;/stitle>; &lt;id>;https://www.macstories.net/stories/i-used-a-game -boy-camera-for-facetime-video-calls-in-ipados-17-and-it-was-glorious/&lt;/id>; &lt;更新>;2023-09-09T18:01:11.799726Z&lt;/更新>; &lt;链接href=&quot;https://www.macstories.net/stories/i-used-a-game-boy-camera-for-facetime-video-calls-in-ipados-17-and-it-was-glorious/&quot; />; &lt;作者>; &lt;名称>;cocacola1&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cocacola1&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://cdn.macstories.net/thursday-07-sep-2023-02-03-36-1694045023969.png&quot; style=&quot;宽度：220px；高度：170px；&quot; />;&lt;br />;iPadOS 17 现在支持 UVC 设备，允许 iPad 识别外部网络摄像头、摄像头和视频采集卡。作者对不同的硬件进行了有趣的尝试，包括使用 Game Boy 相机作为 iPad Pro 的网络摄像头。 &lt;a href=&quot;https://hackernews.betacat.io/#i-used-a-game-boy-camera-for-facetime-video-calls-in-ipados-17&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37428491&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;向 60 名法学硕士提出 20 个问题&lt;/stitle>; &lt;id>;https://benchmarks.llmonitor。 com&lt;/id>; &lt;更新>;2023-09-09T14:01:11.800444Z&lt;/更新>; &lt;link href=&quot;https://benchmarks.llmonitor.com&quot;/>; &lt;作者>; &lt;名称>;vincelt &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=vincelt&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;HellaSwag 等基准测试过于抽象，无法评估现实世界的性能。编写了一个脚本来测试 60 个模型的提示并将答案存储在数据库中。结果包括解决数学问题、翻译短语、解释代码错误等等。 &lt;a href=&quot;https://hackernews.betacat.io/#asking-60-llms-a-set-of-20-questions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37445401&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;罐装咖啡&lt;/stitle>; &lt;id>;https://one-from-nippon.ghost.io/coffee-in-a-can/ &lt;/id>; &lt;更新>;2023-09-10T01:01:11.801302Z&lt;/更新>; &lt;link href=&quot;https://one-from-nippon.ghost.io/coffee-in-a-can/&quot;/ >; &lt;作者>; &lt;名称>;kizunajp&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kizunajp&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://one-from-nippon.ghost.io/content/images/size/w960/2023/09/15683542322_0fb25e58a2_b.jpg”样式=“宽度：220像素；高度：147像素；” />;&lt;br />;罐装咖啡诞生于日本，作为购买和携带咖啡的便捷方式。尽管最初受到质疑，但它通过营销活动和冷热自动售货机的引入而受到欢迎。如今，罐装咖啡在日本是一个蓬勃发展的产业。 &lt;a href=&quot;https://hackernews.betacat.io/#coffee-in-a-can&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37451728&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;解压 Elixir：实时和延迟&lt;/stitle>; &lt;id>;https://underjord.io/unpacking-elixir-realtime-latency.html&lt;/id>; &lt;更新>;2023- 09-09T22:01:11.802131Z&lt;/更新>; &lt;link href=&quot;https://underjord.io/unpacking-elixir-realtime-latency.html&quot;/>; &lt;作者>; &lt;名称>;lawik&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=lawik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://underjord.io/img/logo2.svg “样式=“宽度：220像素；高度：221像素；” />;&lt;br />;Elixir 基于 Erlang 构建，提供始终如一的低延迟和近乎实时的体验。它适用于延迟很重要并且需要高级动态系统的系统。 &lt;a href=&quot;https://hackernews.betacat.io/#unpacking-elixir-real-time-and-latency&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37431588&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SmartKnob – 带有软件定义的终点挡块和虚拟制动器的触觉输入旋钮&lt;/stitle>; &lt;id>;https://github.com/scottbez1/smartknob&lt;/id>; &lt;更新>;2023-09-09T19:01:11.803006Z&lt;/updated>; &lt;link href=&quot;https://github.com/scottbez1/smartknob&quot;/>; &lt;author>; &lt;name>;e3a8&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=e3a8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/baf70fb4505eccbb2266b4a2fb24d30d58f623cb75385f7be3852632ed807466/68747470733a 2f2f696d672e796f75747562652e636f6d2f76692f6970363431576d593470412f6d617872657364656661756c742e6a7067“样式= “宽度：220 像素；高度：124 像素；” />;&lt;br />;无刷万向节电机与磁性编码器配对，提供闭环扭矩反馈控制，从而可以动态创建和调整制动装置和限位器的感觉。 SmartKnob View 是优质的 SmartKnob 体验，具有集成显示屏，如我的演示视频所示。 &lt;a href=&quot;https://hackernews.betacat.io/#smartknob-haptic-input-knob-with-software-define-endstops-and-virtual-detents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37448659&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;研究人员利用人工智能寻找新的磁性材料&lt;/stitle>; &lt;id>;https://phys.org/news/2023- 09-ai-magnet-materials-ritic-elements.html&lt;/id>; &lt;更新>;2023-09-09T21:01:11.803692Z&lt;/更新>; &lt;link href=&quot;https://phys.org/news/2023 -09-ai-Magnetic-materials-ritic-elements.html&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/researchers-use-ai-to-5.jpg&quot; 样式=“宽度：220像素；高度：136像素；” />;&lt;br />;艾姆斯国家实验室的一组科学家开发了一种新的机器学习模型，用于发现无关键元素的永磁材料。该模型预测新材料组合的居里温度。 &lt;a href=&quot;https://hackernews.betacat.io/#researchers-use-ai-to-find-new-magic-materials&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37412845&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我构建了一个 Python Web 框架&lt;/stitle>; &lt;id>;https://github.com/ZeroIntensity/view.py&lt;/id>; &lt;更新>;2023-09-09T19:01:11.804891Z&lt;/更新>; &lt;link href=&quot;https://github.com/ZeroIntensity/view.py&quot;/>; &lt;作者>; &lt;名称>;零强度&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=zerointensity&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/254a72e1e51c4ea062a1bbd08a7fbc1257fa32e943c722b003ccaa17496235ad/ ZeroIntensity/view.py&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;从 view.components 导入视图 import h1 app = view.new_app() @app.get(&amp;#34;/&amp;#34;) async def index(): return h1(&amp;#34;Hello , view.py!&amp;#34;) app.run() 不要害怕！ view.py 目前处于非常高的 alpha 开发阶段，并且一直在寻找新的贡献者。如果您有兴趣，可以查看问题选项卡或 CONTRIBUTING.md。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-a-python-web-framework&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37448914&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;乐高 (2022) 使用的每种塑料&lt;/stitle>; &lt;id>;https://bricknerd.com/home/every-type-of- Plastic-used-by-lego-5-20-22&lt;/id>; &lt;更新>;2023-09-09T12:01:11.805427Z&lt;/更新>; &lt;link href=&quot;https://bricknerd.com/home/every -type-of- Plastic-used-by-lego-5-20-22&quot;/>; &lt;作者>; &lt;名称>;nkurz&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nkurz &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All +乐高+塑料+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;乐高积木由多种材料制成，包括 ABS、聚苯乙烯、电木、SAN、聚丙烯、聚碳酸酯、聚酰胺、POM、TP、聚乙烯、MTPO、TPU 和 SEBS。每种材料在乐高套装中都有其自己的属性和用途。 &lt;a href=&quot;https://hackernews.betacat.io/#every-type-of- Plastic-used-by-lego-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37444268&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;微软宣布购买 31.5 万吨二氧化碳清除量&lt;/stitle>; &lt;id>;https://www.heirloomcarbon.com/news/heirloom-and-microsoft -sign-permanent-co2-removal-deal&lt;/id>; &lt;更新>;2023-09-09T22:01:11.805946Z&lt;/更新>; &lt;link href=&quot;https://www.heirloomcarbon.com/news/heirloom- and-microsoft-sign-permanent-co2-removal-deal&quot;/>; &lt;作者>; &lt;名称>;cdr_fyi&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cdr_fyi&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://uploads-ssl.webflow.com/63a39979efca11f574c3742c/64f925ea779d034a9b1b737b_Microsoft_Inline.png&quot; style=&quot;宽度：220px；高度：179px；&quot; />;&lt;br />;微软已签署一份长期合同，从 Direct Air Capture 公司 Heirloom 购买多达 315,000 吨二氧化碳清除量。这笔交易解锁了项目融资，并支持微软到 2030 年实现碳负排放的目标。 &lt;a href=&quot;https://hackernews.betacat.io/#microsoft-announces-purchase-of-315k-tonnes-of-co2-removal&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37450536&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;勒吉恩戒律&lt;/stitle>; &lt;id>;https:// seths.blog/2023/09/the-leguin-precepts/&lt;/id>; &lt;更新>;2023-09-09T21:01:11.806442Z&lt;/更新>; &lt;link href=&quot;https://seths.blog/2023/ 09/the-leguin-precepts/&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://149521506.v2.pressablecdn.com/wp-content/themes/godin/img/seth.webp&quot; style=&quot;宽度：220px；高度：267px；&quot; />;&lt;br />;传说作家乌苏拉·勒吉恩 (Ursula Le Guin) 的办公桌上挂着一个标语：这是真的吗？有必要或者至少有用吗？它是富有同情心的还是至少是无害的？不错的起点。 &lt;a href=&quot;https://hackernews.betacat.io/#the-le-guin-precepts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37430857&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;FFmpeg 补丁可将 Apple ProRes 解码速度提高 20%&lt;/stitle>; &lt;id>;https://ffmpeg.org/pipermail/ffmpeg-devel/2023-September/314167.html&lt;/ id>; &lt;更新>;2023-09-09T16:01:11.806946Z&lt;/更新>; &lt;link href=&quot;https://ffmpeg.org/pipermail/ffmpeg-devel/2023-September/314167.html&quot;/>; &lt;作者>; &lt;name>;mfiguiere&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mfiguiere&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;FFmpeg 补丁可实现 20% 的加速Apple ProRes 解码。 &lt;a href=&quot;https://hackernews.betacat.io/#ffmpeg-patches-for-a-20-speedup-of-apple-prores-decoding&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37446430&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PAROL6 桌面机器人手臂&lt;/stitle>; &lt;id>;https://github.com/PCrnjak/PAROL6-Desktop-robot-arm&lt; /id>; &lt;更新>;2023-09-09T15:01:11.807570Z&lt;/更新>; &lt;link href=&quot;https://github.com/PCrnjak/PAROL6-Desktop-robot-arm&quot;/>; &lt;作者>; &lt;名称>;tildef&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tildef&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph .githubassets.com/03c344c338c47b065ea978c8479424d7afbfceba2233044dc62654ca818cb79d/PCrnjak/PAROL6-Desktop-robot-arm&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;PAROL6是一款高性能3D打印桌面机械臂。 PAROL6 的设计方法在机械设计、控制软件和可用性方面与工业机器人类似。 &lt;a href=&quot;https://hackernews.betacat.io/#parol6-desktop-robot-arm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37445951&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;对类人猿刺激序列的记忆测试&lt;/stitle>; &lt;id>;https://neurosciencenews.com/sequential-memory- human-trait-23888/&lt;/id>; &lt;更新>;2023-09-09T20:01:11.808764Z&lt;/更新>; &lt;link href=&quot;https://neurosciencenews.com/sequential-memory- human-trait-23888/&quot;/>; &lt;作者>; &lt;名称>;gardenfelder&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gardenfelder&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://neurosciencenews.com/files /2023/09/sequential-memory- human-trait-neurosicnes.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;新的研究揭示了人类独特的识别和记忆顺序信息的能力，而我们的近亲倭黑猩猩却没有这种能力。这种能力被认为是许多独特的人类行为和能力的基础，例如语言和高级计划。 &lt;a href=&quot;https://hackernews.betacat.io/#a-test-of-memory-for-stimulus-sequences-in-great-apes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37419739&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一名小镇警察拿下了一个大型网球比赛造假团伙&lt;/stitle>; &lt;id>;https://www. Washingtonpost.com/world/interactive/2023/tennis-match-fixing-gambling-investigation-belgium/&lt;/id>; &lt;更新>;2023-09-09T16:01:11.809280Z&lt;/更新>; &lt;link href=&quot;https: //www.washingtonpost.com/world/interactive/2023/tennis-match-fixing-gambling-investigation-belgium/&quot;/>; &lt;author>; &lt;name>;saeedesmaili&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=saeedesmaili&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https ://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/I3KXLRPA2C6ZFKNXQQRYRYV3EU_size-normalized.jpg&amp;high_res=true&amp;w=2048&quot; style=&quot;width: 220px;高度：147px;&quot; />;&lt;br />;一名小镇警察拿下了一个大型网球比赛造假场。&lt;a href=&quot;https://hackernews.betacat.io/#a-small-town- Police-officer-took-down-a-large-match-fixing-ring-in-tennis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37432336&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;《花样年华》的时代美学&lt;/stitle>; &lt;id>;https://www.newyorker.com/culture/touchstones/wong-kar-wais-in-the -mood-for-love&lt;/id>; &lt;更新>;2023-09-09T19:01:11.809709Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/culture/touchstones/wong-kar- wais-in-the-mood-for-love&quot;/>; &lt;author>; &lt;name>;herbertl&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=herbertl&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/64f12d983ba3a9452db80a6c/master/w_600,c_limit/kehuy.jpeg&quot; style=&quot;width: 220px;高度：147px;&quot; />;&lt;br />;《花样年华》定义时代的美学是一系列成分的集合，唤起带有一丝坚韧的魅力和漂泊的感觉。这是一件艺术作品两千年前的象征，编码了一种普遍的、矛盾的感觉。&lt;a href=&quot;https://hackernews.betacat.io/#the-era-defining-aesthetic-of-in-the-mood-for-love &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37413027&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1804 年的青少年名人&lt;/stitle>; &lt;id>;https: //daily.jstor.org/a-teen-celebrity-in-1804/&lt;/id>; &lt;更新>;2023-09-09T21:01:11.810128Z&lt;/更新>; &lt;link href=&quot;https://daily. jstor.org/a-teen-celebrity-in-1804/&quot;/>; &lt;作者>; &lt;名称>;CoBE10&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=CoBE10&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://daily.jstor.org/wp-content/uploads/2020/04/to_be_or_not_to_be_hamlet_1050x700.jpg&quot; style=&quot;width: 220px;身高：147px;&quot; />;&lt;br />;1804年，一位名叫威廉·亨利·韦斯特·贝蒂的十三岁演员从爱尔兰抵达英国，导致人群涌向剧院，引发骚乱和混乱。这种现象被称为“贝蒂狂热” ，是精心策划和营销策略的结果。然而，贝蒂的名气是短暂的，他在成年之前就从公众视野中消失了。&lt;a href=&quot;https://hackernews.betacat.io/#a-teen-名人-in-1804&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37433784&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PowerPoint 开发者丹尼斯·奥斯汀 (Dennis Austin) 去世&lt;/stitle>; &lt;id>;https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/&lt;/id>; &lt;更新>;2023-09-09T17： 01:11.810547Z&lt;/更新>; &lt;link href=&quot;https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/&quot;/>; &lt;作者>; &lt;名称>;sonabinu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sonabinu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// www.washingtonpost.com/wp-apps/imrs.php?src=https://s3.amazonaws.com/arc-authors/washpost/f9c12add-27fb-46ff-8deb-93ff5bc46f45.png&amp;w=196&amp;h=196&quot;样式= “宽度：220px； height: 220px;&quot; />;&lt;br />;PowerPoint 软件开发人员丹尼斯·奥斯汀 (Dennis Austin) 去世，享年 76 岁。作为 PowerPoint 的主要软件开发人员，他在塑造现代社会信息交流方式方面发挥了重要作用。办公室职员、教师和官僚所采用的程序。&lt;a href=&quot;https://hackernews.betacat.io/#dennis-austin-developer-of-powerpoint-has-died&quot; target=&quot;_blank&quot;>;[summary] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37440696&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;约翰·勒卡雷 (John le Carré) 创作《锅匠裁缝士兵间谍》的英国小屋&lt;/stitle>; &lt;id>;https://lithub .com/look-inside-the-gorgeous-english-cottage-where-john-le-carre-wrote-tinker-tailor-soldier-spy/&lt;/id>; &lt;更新>;2023-09-09T20:01:11.811409Z &lt;/更新>; &lt;link href=&quot;https://lithub.com/look-inside-the-gorgeous-english-cottage-where-john-le-carre-wrote-tinker-tailor-soldier-spy/&quot;/>; &lt;author>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://s26162.pcdn.co/wp-content/uploads/2023/09/1-1240x930.png&quot; style=&quot;宽度：220px;高度：165px;&quot; />;&lt;br />;Tregiffian Cottage 是小说家约翰·勒卡雷 (John Le Carré) 在康沃尔郡的家，现以 370 万美元的价格出售。勒卡雷在这座小屋里写下了他的许多著作，包括《修补匠、裁缝、士兵、间谍》。 5,000 平方英尺的房子占地 3.3 英亩，享有壮丽的景色。&lt;a href=&quot;https://hackernews.betacat.io/#the-english-cottage-where-john-le-carre-wrote-tinker-tailor-士兵间谍&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37449439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;桌面 GUI 极简主义&lt;/stitle>; &lt;id>; https://mycophobia.org/desktop_gui_minimalism.html&lt;/id>; &lt;更新>;2023-09-09T19:01:11.811833Z&lt;/更新>; &lt;link href=&quot;https://mycophobia.org/desktop_gui_minimalism.html&quot;/ >; &lt;作者>; &lt;名称>;netdoll&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=netdoll&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://mycophobia.org/media/mate_screenshot.jpg”样式=“宽度：220px； height: 124px;&quot; />;&lt;br />;我花了数年时间探索不同的 Linux 环境和 UI 范例，从 KDE 3 到简约的窗口管理器。但是，我一直被原始 Macintosh 界面的简单性和高效性所吸引。我的梦想是创建一个现代 GUI 环境，将窗口管理器的可用性与 GUI 的直观性结合起来，同时最大限度地减少不必要的组件。&lt;a href=&quot;https://hackernews.betacat.io/#on-desktop-gui-极简主义&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37448554&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;佛罗里达州的“努布城”，居民砍掉自己的附属物保险&lt;/stitle>; &lt;id>;https://allthatsinteresting.com/nub-city-vernon-florida&lt;/id>; &lt;更新>;2023-09-10T01:01:11.813096Z&lt;/更新>; &lt;link href=&quot; https://allthatsinteresting.com/nub-city-vernon-florida&quot;/>; &lt;作者>; &lt;名称>;qwertyuiop_&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=qwertyuiop_&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://allthatsinteresting.com/wordpress/wp-content/uploads/2017/11/nub-city-farmer-crop.jpg&quot; style= “宽度：220px；高度：117px;&quot; />;&lt;br />;在 20 世纪 50 年代末和 60 年代初，佛罗里达州狭长地带的弗农镇因广泛存在的保险诈骗而被称为“努布城”。居民会故意肢解自己，以从他们的财产中获得巨额赔偿。人寿保险保单。骗局于 20 世纪 60 年代末结束，当时保险公司停止在该地区开展业务。&lt;a href=&quot;https://hackernews.betacat.io/#floridas-nub-city-where-residents-cut-off-他们自己的附加物用于保险&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37451579&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1999 年的网页设计错误（1999）&lt;/stitle>; &lt;id>;https://www.nngroup.com/articles/the-top-ten-web-design-mistakes-of-1999/&lt;/id>; &lt;更新>;2023-09-10T00 :01:11.813513Z&lt;/updated>; &lt;link href=&quot;https://www.nngroup.com/articles/the-top-ten-web-design-mistakes-of-1999/&quot;/>; &lt;作者>; &lt;名称>;selalipop&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=selalipop&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media .nngroup.com/static/img/logo-817x388.png&quot; style=&quot;width: 220px; height: 105px;&quot; />;&lt;br />;新技术和惯例导致了 Web 设计中的几类新的可用性问题。我在 1996 年发现的十大设计错误仍然不利于 Web 可用性，并且仍然在许多网站上发现。所以从这个意义上说，过去三年并没有太大变化。但不幸的是，新的网络技术和新的网络应用程序引入了全新的错误类别。&lt;a href=&quot;https://hackernews.betacat.io /#web-design-mistakes-of-1999-1999&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37451230&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作发行版，第 1 部分&lt;/stitle>; &lt;id>;https://www.funtoo.org/Making_the_Distribution,_Part_1&lt;/id>; &lt;updated>;2023-09-09T16:01:11.813927Z&lt;/updated>; &lt;link href= &quot;https://www.funtoo.org/Making_the_Distribution,_Part_1&quot;/>; &lt;作者>; &lt;名称>;badrabbit&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=badrabbit&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Daniel Robbins 讲述了他使用 Linux 的经历，包括成为一名 Stampede Linux 开发人员以及最终创建了自己的发行版 Enoch。他强调了 Linux 提供的改进和变革的潜力，以及社区和帮助他人的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#making-the-distribution-part-1&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37446509&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;道格拉斯·亚当斯的伯克利酒店人质&lt;/stitle>; &lt;id>;https://www.thebookseller.com/features/berkeley-hotel-hostage&lt;/id>; &lt;updated>;2023 -09-09T12:01:11.814346Z&lt;/更新>; &lt;link href=&quot;https://www.thebookseller.com/features/berkeley-hotel-hostage&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://drsw10gc90t0z.cloudfront.net/AcuCustom/站点名称/DAM/001/21bsImgSubscribeThumbAltTemp.png&quot; style=&quot;宽度：220px；高度：292px；&quot; />;&lt;br />;已故的伟大道格拉斯·亚当斯发现写作如此艰巨，以至于他的出版商索尼·梅塔被迫采取极端措施。尼克·韦伯在研究他授权的作者传记时，向梅塔询问了他如何让亚当斯按时完成任务的回忆。 &lt;a href=&quot;https://hackernews.betacat.io/#the-berkeley-hotel-hostage-of-douglas-adams&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37444066&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;