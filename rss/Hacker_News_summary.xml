<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-01T10:00:10.466929Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;城市需要更多树木&lt;/stitle>; &lt;id>;https://herman.bearblog.dev/cities-need-more-trees/&lt;/id>; &lt;更新>;2024-07 -01T08：59：40.002694Z &lt;/更新>; &lt;link href =“https://herman.bearblog.dev/cities-need-more-trees/”/>; &lt;作者>; &lt;名称>;赫尔曼马丁努斯&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=HermanMartinus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://bear-images.sfo2.cdn.digitaloceanspaces .com/herman-1719820418.jpg&quot; style=&quot;宽度：220px 高度：166px;&quot; />;&lt;br />;约翰内斯堡的植树活动旨在减少灰尘和热量，从而使城市拥有明显的遮荫、减少噪音并增加生物多样性。城市绿树成荫的街道对居民的生活质量产生了积极的影响，使步行和户外活动变得更加愉快和愉快。 &lt;a href=&quot;https://hackernews.betacat.io/#cities-need-more-trees&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40843720&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;RegreSSHion：基于 glibc 的 Linux 系统上 OpenSSH 服务器中的 RCE&lt;/stitle>; &lt;id>;https://www.qualys.com/2024/07/01/cve-2024-6387 /regresshion.txt&lt;/id>; &lt;更新>;2024-07-01T08:59:40.004647Z&lt;/更新>; &lt;link href=&quot;https://www.qualys.com/2024/07/01/cve-2024- 6387/regresshion.txt&quot;/>; &lt;作者>; &lt;名称>;robinhoodexe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=robinhoodexe&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;Qualys 安全通报报告了基于 glibc 的 Linux 系统上 OpenSSH 服务器 (sshd) 中的远程代码执行漏洞，允许未经身份验证的远程攻击者以 root 身份执行任意代码。该漏洞是由 SIGALRM 处理程序中的信号处理程序竞争条件引起的，可以通过中断对 free() 的调用并稍后在另一个... &lt;a href=&quot;https://hackernews.betacat.io /#regresshion-rce-in-openssh-s-server-on-glibc-based-linux-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40843778&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;我的微调模型击败了 OpenAI 的 GPT-4&lt;/stitle>; &lt;id>;https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation.html&lt; /id>; &lt;更新>;2024-07-01T08:59:40.005196Z&lt;/更新>; &lt;link href=&quot;https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation.html &quot;/>; &lt;author>; &lt;name>;majc2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=majc2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-22-output-1.png”样式=“宽度：220px; height: 181px;&quot; />;&lt;br />;作者在新闻稿中的结构化数据提取任务上评估了多个finetuned模型和OpenAI模型的性能，finetuned模型总体优于OpenAI模型。作者计算了准确率分数对于各种属性，包括事件类型、省份、目标群体和领导者被杀死/捕获，经过微调的模型实现了... &lt;a href=&quot;https://hackernews.betacat.io/#my-finetuned-models-beat -openai-s-gpt-4&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40843848&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我创建了一个After Effects 替代方案&lt;/stitle>; &lt;id>;https://pikimov.com/&lt;/id>; &lt;updated>;2024-07-01T08:59:40.005722Z&lt;/updated>; &lt;link href=&quot;https://pikimov. com/&quot;/>; &lt;作者>; &lt;名称>;clementpiki&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=clementpiki&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://pikimov.com/pikimov-cover.png&quot; style=&quot;宽度：220px; height: 133px;&quot; />;&lt;br />;Pikimov 是一款免费的基于网络的动作设计和视频编辑器&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-created-an-after -effects-alternative&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40843867&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pipes：Yahoo Pipes 的精神继承者&lt;/ stitle>; &lt;id>;https://www.pipes.digital/docs&lt;/id>; &lt;更新>;2024-07-01T02:59:40.006219Z&lt;/更新>; &lt;link href=&quot;https://www.pipes. digital/docs&quot;/>; &lt;作者>; &lt;名称>;sea-gold&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sea-gold&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.pipes.digital/imgs/feed_tiny.png&quot; style=&quot;宽度：220px; height: 123px;&quot; />;&lt;br />;Pipes 是一个可视化编程编辑器，允许用户通过连接从各种来源（包括 RSS、Atom、JSON 和 HTML）获取、过滤和操作数据的块来创建自定义提要。平台支持一系列块，包括过滤器、排序器、提取器和中继器，它们可以组合起来创建复杂的数据管道和工作流程。 -successor-to-yahoo-pipes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841980&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;程序员永远不应该信任任何人，甚至他们自己也没有&lt;/stitle>; &lt;id>;https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html&lt;/id>; &lt;updated>;2024-07-01T05:59： 40.006750Z&lt;/更新>; &lt;link href=&quot;https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html&quot;/>; &lt;作者>; &lt;名称>;kiyanwang&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kiyanwang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;编程中的抽象既有用又危险，隐藏了复杂性并使其看起来很复杂就好像我们知道的比我们实际做的还要多。为了降低抽象失败的风险，程序员应该努力更深入地理解他们使用的抽象，并愿意验证和学习比他们需要的更多的东西。 &lt;a href=&quot;https://hackernews.betacat.io/#programmers-should-never-trust-anyone-not-even-themselves&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40842867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：Bitly 的开源替代品&lt;/stitle>; &lt;id>;https://github.com/ccbikai/Sink&lt;/id>; &lt;更新>;2024-07-01T08:59:40.007799Z&lt;/更新>; &lt;link href=&quot;https://github.com/ccbikai/Sink&quot;/>; &lt;作者>; &lt;name>;ccbikai&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ccbikai&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/ccbikai/Sink/master /public/image.png&quot; style=&quot;宽度: 220px 高度: 116px;&quot; />;&lt;br />;NUXT_CF_API_TOKEN 创建 Cloudflare API 令牌。此令牌至少需要 Account.Account Analytics 权限。参考.. 分析引擎绑定。将变量名称 ANALYTICS 绑定到接收器数据集，并为您的帐户启用 Cloudflare Analytics Engine beta。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-an-open-source-alternative-to-bitly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40843683&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;四行代码，原来是四行代码&lt;/stitle>; &lt;id>;https://boston.conman.org/2024/06/30.1&lt; /id>; &lt;更新>;2024-07-01T03:59:40.008297Z&lt;/更新>; &lt;link href=&quot;https://boston.conman.org/2024/06/30.1&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.conman .org/people/spc/about/2024/0604.t.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;由于特定的代码差异，TCP 服务可能比 TLS 服务花费更多时间，特别是 TCP 实现中的 Linux 专用字段和 ioctl 系统调用，而 TLS 实现中不存在。删除此代码解决了该问题，因为它仅适用于本地域套接字，并导致 TCP 服务在可写性和可读性之间来回切换，直到内核... &lt;a href=&quot;https://hackernews.betacat.io/#four -lines-of-code-it-was-four-lines-of-code&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40842275&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;卷积、快速傅里叶变换和多项式（2022）&lt;/stitle>; &lt;id>;https://www.alvarorevuelta.com/posts/fft-polynomials&lt;/id>; &lt;updated>;2024-06-30T21:59 ：40.008795Z &lt;/更新>; &lt;link href=&quot;https://www.alvarorevuelta.com/posts/fft-polynomials&quot;/>; &lt;作者>; &lt;名称>;clearprop &lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=clearprop&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/alrevuelta/myblog/main/assets/img/ time_freq.png&quot; style=&quot;宽度: 220px 高度: 110px;&quot; />;&lt;br />;传统的多项式相乘方法的复杂度为O(n^2)，速度慢且效率低，尤其是对于大型多项式。通过使用傅里叶变换和卷积，可以以 O(nlogn) 复杂度来乘多项式，这更快、更高效，尤其是对于大型多项式。 &lt;a href=&quot;https://hackernews.betacat.io/#volvings-fast-fourier-transform-and-polynomials-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40840396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLVM 19 中的集成汇编器改进&lt;/stitle>; &lt;id>;https://maskray.me/blog/2024-06-30-integrated-assembler-improvements- in-llvm-19&lt;/id>; &lt;更新>;2024-07-01T02:59:40.009335Z&lt;/更新>; &lt;link href=&quot;https://maskray.me/blog/2024-06-30-integrated-assembler -improvements-in-llvm-19&quot;/>; &lt;作者>; &lt;名称>;MaskRay &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=MaskRay&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;LLVM MC 项目进行了重大更改，以提高性能、可读性和效率，包括对片段管理、符号处理和节创建的优化。这些更改带来了显着的性能提升、内存使用量减少以及代码库更加精简，为未来的改进铺平了道路。 &lt;a href=&quot;https://hackernews.betacat.io/#integrated-assembler-improvements-in-llvm-19&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40842173&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Elixir 中的统一&lt;/stitle>; &lt;id>;https://www.ericpfahl.com/from-pattern-matching-to-unification/&lt;/id>; &lt;更新>; 2024-07-01T03:59:40.009829Z&lt;/更新>; &lt;link href=&quot;https://www.ericpfahl.com/from-pattern-matching-to-unification/&quot;/>; &lt;作者>; &lt;名称>;天气灯&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=weatherlight&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ericpfahl. com/content/images/size/w100/2023/01/angry_ human-1.png&quot; style=&quot;宽度：220px 高度：243px；&quot; />;&lt;br />;模式匹配是 Elixir 中的一个强大工具，本文探讨了统一的概念，这是一种求解符号方程的算法，以及如何使用它来创建逻辑编程语言。本文提供了统一的详细解释，包括其在 Elixir 中的实现，并展示了如何使用它来创建逻辑编程语言...... &lt;a href=&quot;https://hackernews.betacat.io/#unification- in-elixir&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40840315&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国宇航局奥西里斯-雷克斯小行星样本中令人惊讶的磷酸盐发现&lt; /stitle>; &lt;id>;https://www.nasa.gov/missions/osiris-rex/surprising-磷酸盐-finding-in-nasas-osiris-rex-asteroid-sample/&lt;/id>; &lt;更新>;2024-07 -01T03：59：40.010311Z &lt;/更新>; &lt;link href =“https://www.nasa.gov/missions/osiris-rex/surprising-磷酸盐-finding-in-nasas-osiris-rex-asteroid-sample/ &quot;/>; &lt;作者>; &lt;名称>;kumarm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kumarm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://www.nasa.gov/wp-content/uploads/2024/06/osiris-rex-bennu-磷酸盐-figure-17-topleft.jpg？w=1536”样式=“宽度：220px;高度：160px;&quot; />;&lt;br />;OSIRIS-REx任务的样本分析显示，小行星Bennu的尘埃富含生命必需的碳、氮和有机化合物，并且含有磷酸镁钠，这是一个令人惊讶的发现。样本的成分反映了地球上的洋中脊岩石，并暗示了这颗小行星的水过去，提供了有关其历史条件和地球上生命起源的线索&lt;a href=&quot;https://hackernews.betacat.io/#。令人惊讶的磷酸盐发现在 NASA-s-osiris-rex-asteroid-sample&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40816631&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;心灵模型&lt;/stitle>; &lt;id>;https://tylerneylon.com/a/mind_model/mind_model.html&lt;/id>; &lt;更新>;2024-07-01T00:59:40.010851Z&lt; /updated>; &lt;link href=&quot;https://tylerneylon.com/a/mind_model/mind_model.html&quot;/>; &lt;作者>; &lt;name>;adamesque&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=adamesque&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tylerneylon.com/a/mind_model/img/mind_model_v2.png&quot; style=&quot;width: 220px ; height: 159px;&quot; />;&lt;br />;作者提出了一种思维模型，通过使用连续并行运行的模块之间的数据流图来解释人类认知的各个方面，包括代理、学习、思考和内省。该模型可以捕捉复杂的思维方式，例如预测、创造力和解决问题，甚至可以模拟内部心理对话，但作者... &lt;a href=&quot;https://hackernews.betacat.io/#a -model-of-a-mind&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841502&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新闻专线：大规模一个世纪历史新闻的结构化数据库&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2406.09490&lt;/id>; &lt;updated>;2024-06-30T23:59:40.011315Z&lt;/updated>; &lt;link href =&quot;https://arxiv.org/abs/2406.09490&quot;/>; &lt;作者>; &lt;名称>;h2odragon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=h2odragon&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;将定制的深度学习管道应用于美国当地报纸的原始图像扫描，以创建包含 1878 年至 1977 年 270 万篇公共领域新闻专线文章的综合档案。生成的数据集包括地理参考位置、标记主题、识别命名实体和消除歧义的个体，为大型语言建模和研究各种...&lt;a href=&quot;https://hackernews.betacat.io/#newswire-a-large-scale-structed-一个世纪的历史新闻数据库&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40839830&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;四元数信号和图像处理&lt;/stitle>; &lt;id>;https://ieeexplore.ieee.org/document/10243497&lt;/id>; &lt;updated>;2024-07-01T05:59:40.011829Z&lt;/updated>; &lt;link href= &quot;https://ieeexplore.ieee.org/document/10243497&quot;/>; &lt;作者>; &lt;名称>;teleforce&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ieeexplore.ieee.org/assets/img/ieee_logo_smedia_200X200.png&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;四元数经常被误解为一种“奇异的”信号表示形式，但它们在信号和图像处理中具有实际用途。本文旨在通过提供关键方面的全面概述来揭开四元数代数的神秘面纱，模型和方法，并重点介绍旗舰应用&lt;a href=&quot;https://hackernews.betacat.io/#quaternions-in-signal-and-image-processing&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842898&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何获得睡眠号码床的 root 访问权限&lt;/stitle>; &lt;id>;https://dillan.org/articles/如何获取根访问您的睡眠号码床&lt;/id>; &lt;更新>;2024-06-30T16:59:40.012320Z&lt;/更新>; &lt;link href=&quot;https://dillan .org/articles/how-to-get-root-access-to-your-sleep-number-bed&quot;/>; &lt;author>; &lt;name>;jandeboevrie&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=jandeboevrie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj10。 2e873fcb.png&amp;w=3840&amp;q=75&quot; style=&quot;宽度: 220px; height: 172px;&quot; />;&lt;br />;作者描述了获得本地网络访问 Sleep Number 集线器的过程，其中涉及修改内部文件并设置 UART 设备以与集线器的控制台进行通信。作者还提供了详细信息关于如何使用集线器的 Python 2.7.18 环境设置 HTTP 服务器并通过本地网络控制床的设置。 -access-to-your-sleep-number-bed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40838167&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;更好将工作流程与 Jujutsu 合并&lt;/stitle>; &lt;id>;https://ofcr.se/jujutsu-merge-workflow&lt;/id>; &lt;updated>;2024-07-01T05:59:40.012865Z&lt;/updated>; &lt;link href=&quot; https://ofcr.se/jujutsu-merge-workflow&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ofcr.se/assets/images/cover/jujutsu-merge-workflow.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;作者讨论了使用 Jujutsu（一种新的版本控制系统 (VCS) 工具）来管理多个代码分支和合并提交的好处，从而使处理单独的功能和测试变得更加容易作者分享了一个名为“奥斯汀大型合并策略”的工作流程，该工作流程允许用户将多个分支合并在一起，并将合并的合并提交保留在他们的工作中...... &lt;a href=&quot;https://hackernews.betacat .io/#a-better-merge-workflow-with-jujutsu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842762&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;抽水蓄能水力发电&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Pumped-storage_Hydrelectricity&lt;/id>; &lt;更新>;2024-07-01T04:59:40.013352Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Pumped-storage_Hydroelectricity&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Raccoon_Mountain_Pumped-Storage_Plant.svg/300px-Raccoon_Mountain_Pumped -Storage_Plant.svg.png&quot; style=&quot;width: 220px; height: 127px;&quot; />;&lt;br />;抽水蓄能（PHES）是水力发电储能的一种，通过在非高峰时段将水从海拔较低的水库抽送到海拔较高的水库来储存能量，然后释放PHES 是可用的最大容量的电网储能形式，装机容量超过 181 GW ... &lt;a href=&quot;https://hackernews.betacat.io/#pumped&quot; -storage-Hydroelectricity&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40834377&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;飞机飞行的物理学&lt;/stitle>; &lt; id>;https://10maurycy10.github.io/misc/the_physicals_of_flight/&lt;/id>; &lt;更新>;2024-06-30T21:59:40.013832Z&lt;/更新>; &lt;link href=&quot;https://10maurycy10.github. io/misc/the_physicals_of_flight/&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://10maurycy10.github.io/misc/the_physicals_of_flight/square.png&quot; style=&quot;宽度：220px; height: 109px;&quot; />;&lt;br />;机翼不需要特定的翼型形状即可工作；任何有角度的表面都可以产生升力。然而，正确的翼型几何形状可以在失速之前产生更大的升力并产生更少的阻力，这对于高效运行至关重要&lt;a href=&quot;https://hackernews.betacat.io/#the-physicals-of-airplane-flight&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40835223&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;前端开发中的混沌工程：增强应用程序弹性&lt;/stitle>; &lt;id>;https://omid.dev/2024/07/01/chaos-engineering-in- frontend-development/&lt;/id>; &lt;更新>;2024-06-30T21:59:40.014307Z&lt;/更新>; &lt;link href=&quot;https://omid.dev/2024/07/01/chaos-engineering-in- frontend-development/&quot;/>; &lt;author>; &lt;name>;omidfarhang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=omidfarhang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://omid.dev/opengraph/omiddev-card-base-2_hu4319d5ff4a4e9c05cba253c9f6e69f4d_117133_filter_13031943986457191075.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;混沌工程传统上用于后端系统，现在应用于前端开发，以增强弹性、改善用户体验并构建健壮的 Web 应用程序。通过模拟现实世界的混沌，开发人员可以发现漏洞、改进错误处理并提供更强大的用户体验，使混沌工程成为前端开发的重要实践&lt;a href=&quot;https://hackernews.betacat.io/#chaos-engineering-in-front-end- development-enhancing-application-resilience&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40840488&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我遇到过的最奇怪的 QNX 错误遇到（2021）&lt;/stitle>; &lt;id>;https://mental-reverb.com/blog.php?id=29&lt;/id>; &lt;更新>;2024-06-30T14:59:40.014841Z&lt;/更新>; &lt; link href=&quot;https://mental-reverb.com/blog.php?id=29&quot;/>; &lt;author>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mental-reverb.com/img/weirdestbug_debug_screenshot.png&quot; style=&quot;width: 220px; height: 133px;&quot; />;&lt;br />;我很抱歉，但您似乎提供了大量文本，这些文本似乎是各个人的评论和回复的集合。我无法概括此文本用 2 个简洁的英语句子，因为它混合了不同的主题和对话。 &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40837411&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;艺术与技巧&lt;/stitle>; &lt;id>;https://harpers.org /archive/2024/07/art-and-artifice-donna-tartt/&lt;/id>; &lt;更新>;2024-07-01T02:59:40.015329Z&lt;/更新>; &lt;link href=&quot;https://harpers.org /archive/2024/07/art-and-artifice-donna-tartt/&quot;/>; &lt;作者>; &lt;名称>;棱镜&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=prismatic&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://harpers.org/wp-content/uploads/2019/11/9-Harpers-FINAL-480x350-c-default. jpg&quot; 样式=&quot;宽度:220px; height: 161px;&quot; />;&lt;br />;JF Martel 的《在技巧时代回收艺术》一书探讨了艺术作为解放和超越手段的重要性，并将其与受功利和意识形态驱动的技巧区分开来。凭借其无意识和非线性的本质，它有能力帮助我们思考世界，而不是思考它，并可以引导我们走向真实。 -artifice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40835181&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为 Windows 编写 GUI 应用程序很痛苦&lt;/stitle>; &lt; id>;https://tulach.cc/writing-gui-apps-for-windows-is-painful/&lt;/id>; &lt;更新>;2024-06-30T18:59:40.016838Z&lt;/更新>; &lt;link href=&quot; https://tulach.cc/writing-gui-apps-for-windows-is-painful/&quot;/>; &lt;author>; &lt;name>;wild_pointer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=wild_pointer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tulach.cc/assets/img/posts/7_winui.png&quot; style=&quot;width: 220px; height: 131px;&quot; />;&lt;br />;您已经尝试了各种适用于 Windows 的 C++ GUI 库，考虑了大小、依赖性和样式等因素，并发现 Dear ImGui 通过小型、可移植的可执行文件和轻松的自定义来满足您的要求。但是，您在使用其他库（例如 Qt、wxWidgets 和 WinUI）时遇到了问题，因为它们的大小、依赖项和样式限制 &lt;a href=&quot;https://hackernews.betacat.io/#writing-gui。 -apps-for-windows-is-painful&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40839208&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简化的 Python 模拟扩散&lt;/stitle>; &lt;id>;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&lt;/id>; &lt;updated>;2024-06-30T18:59:40.017328Z&lt;/updated >; &lt;link href=&quot;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:好，fl_progressive：陡峭/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9985e718-02ac-4510-a809-41adfbd60f7e_1024x1024.webp&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;文章演示了Python模拟气体分子在2D容器中的运动，使用turtle模块可视化粒子的运动和碰撞。通过将模拟区域划分为网格，文章展示如何优化碰撞检测算法，减少运行模拟所需的时间并提高其效率。扩散&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40838945&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：基于 SQLite 的直接 SQS 替换&lt;/ stitle>; &lt;id>;https://github.com/poundifdef/SmoothMQ&lt;/id>; &lt;更新>;2024-06-30T15:59:40.017818Z&lt;/更新>; &lt;link href=&quot;https://github.com/ poundifdef/SmoothMQ&quot;/>; &lt;作者>; &lt;名称>;memset&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=memset&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://raw.githubusercontent.com/poundifdef/SmoothMQ/main/docs/queue.gif&quot; style=&quot;width: 220px; height: 160px;&quot; />;&lt;br />;SmoothMQ 是 SQS 的直接替代品，具有更流畅的开发人员体验，提供 UI、可观察性和消息调度等功能。它可以部署为单个 Go 二进制文件并与现有的一起使用SQS 客户端，允许在任何云上使用私有 SQS 实例。 _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40837610&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google 如何将数十亿行代码从 Perforce 迁移到 Piper&lt;/stitle>; &lt;id >;https://graphite.dev/blog/google-perforce-to-piper-migration&lt;/id>; &lt;更新>;2024-07-01T06:59:40.018318Z&lt;/更新>; &lt;link href=&quot;https://石墨.dev/blog/google-perforce-to-piper-migration&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://graphite.dev/_next/image?url=%2Fimages%2Fcta-footer%2Fcta_footer_product_screenshot_1.png&amp;w=3840&amp;q=75&quot; style=&quot;宽度：220px； height: 181px;&quot; />;&lt;br />;Google 的源代码控制系统 Perforce 每天有超过 12,000 名用户使用，尽管已经捉襟见肘并经历了 TCP 连接故障，但已经运行了 11 年。Google 最终开发了一个新系统名为 Piper，它部署并迁移了 Google 的整个 monorepo，降低了运营风险并解锁了新系统&lt;a href=&quot;https://hackernews.betacat.io/#how-google-migrate-billions-of-lines-of-。 code-from-perforce-to-piper&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842968&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;事项计算 [pdf] &lt;/stitle>; &lt;id>;http://www.jjj.de/fxt/#fxtbook&lt;/id>; &lt;更新>;2024-06-30T23:59:40.018849Z&lt;/更新>; &lt;link href=&quot;http:// /www.jjj.de/fxt/#fxtbook&quot;/>; &lt;作者>; &lt;名称>;数据流&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dataflow&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;FXT 是一个用于位操作、组合生成和快速转换的低级算法库，非常注重性能。该库附带 fxtbook，这是例程和演示的综合文档，并且可以免费匿名下载。 &lt;a href=&quot;https://hackernews.betacat.io/#matters-computational-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40841355&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;