<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-06-21T13:58:00.914854Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;艾伦·麦克唐纳拒绝批准挑战者发射，暴露掩盖事实（2021）&lt;/stitle>; &lt;id>;https://www.npr.org/2021/03/07/974534021 /remembering-allan-mcdonald-he-refused-to-approve-challenger-launch-expose-cover&lt;/id>; &lt;更新>;2024-06-21T11:57:34.846030Z&lt;/更新>; &lt;link href=&quot;https: //www.npr.org/2021/03/07/974534021/remembering-allan-mcdonald-he-refused-to-approve-challenger-launch-exposed-cover&quot;/>; &lt;author>; &lt;name>;EndXA&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=EndXA&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/资产/img/2021/03/07/mcdonald-with-commemorative-2aa6ac2dbf80eea3029d8d1d7e7d7c60230627d0.jpg?s=1100&amp;c=15&amp;f=jpeg&quot; style=&quot;width: 220px;高度：165px;&quot; />;&lt;br />;美国国家航空航天局 (NASA) 承包商艾伦·麦克唐纳 (Allan McDonald) 出于对冰冻温度、冰层形成和波涛汹涌的海洋的担忧，拒绝签署挑战者号的发射，后来揭露了美国国家航空航天局 (NASA) 的掩盖事实。过着正直的生活，倡导道德决策和无悔的生活，并因跌倒和脑损伤而去世，享年 83 岁，留下了在正确的地方做正确的事情的遗产...... &lt;a href=&quot;https ://hackernews.betacat.io/#allan-mcdonald-refused-to-approve-challenger-launch-exposed-cover-up-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40748371&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;MeshAnything – 将 3D 表示转换为高效的 3D 网格&lt;/stitle>; &lt;id>;https://buaacyw.github.io/mesh-anything/&lt;/id >; &lt;更新>;2024-06-21T05:57:34.847895Z&lt;/更新>; &lt;link href=&quot;https://buaacyw.github.io/mesh-anything/&quot;/>; &lt;作者>; &lt;name>;flockonus&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=flockonus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://buaacyw.github.io/ mesh-anything/remesh.png&quot; style=&quot;width: 220px; height: 145px;&quot; />;&lt;br />;MeshAnything 是一个模型，可从 3D 资源生成艺术家创建的网格 (AM)，从而提高存储、渲染和模拟效率。它仅使用 VQ-VAE 和形状条件解码器变压器以更少的面产生 AM，实现与以前的方法相当的精度_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40746310&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/条目>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;机电月球着陆器&lt;/stitle>; &lt;id>;http://www.chrisfenton。 com/electricmechanical-lunar-lander/&lt;/id>; &lt;更新>;2024-06-21T10:57:34.848485Z&lt;/更新>; &lt;link href=&quot;http://www.chrisfenton.com/electricmechanical-lunar-lander/ &quot;/>; &lt;author>; &lt;name>;soopurman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=soopurman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“http://www.chrisfenton.com/wp-content/uploads/2017/04/lander_complete-1024x768.jpeg”样式=“宽度：220px; height: 166px;&quot; />;&lt;br />;作者为 2016 年 NYCRes​​istor Interactive 展会制作了一款机电月球着陆器游戏，用 3D 打印的宇宙飞船和纸质月亮重现了街机游戏的机制。该游戏具有简单的控制功能接口、用于高度控制的线性步进电机和用于推力方向的伺服系统，允许玩家驾驶宇宙飞船安全着陆在月球表面。月球着陆器&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40740616&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：我做了一个益智游戏，轻轻地介绍了我最喜欢的数学谜题&lt;/stitle>; &lt;id>;https://www.rahulilango.com/coloring/&lt;/id>; &lt;updated>;2024-06-20T15:57:34.848979Z&lt;/updated>; &lt;link href=&quot;https ://www.rahulilango.com/coloring/&quot;/>; &lt;作者>; &lt;名称>;MCSP&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=MCSP&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;给英国 + 爱尔兰的地图上色，这样两个物理边界区域就不会具有相同的颜色 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made -a-puzzle-game-that-gently-introduces-my-favorite-math-mysteries&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40740021&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;代码模型&lt;/stitle>; &lt;id>;https://openjdk.org/projects/babylon/articles/code-models&lt;/id>; &lt;更新>;2024-06-21T08:57:34.849485Z&lt; /updated>; &lt;link href=&quot;https://openjdk.org/projects/babylon/articles/code-models&quot;/>; &lt;作者>; &lt;name>;ludovicianul&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=ludovicianul&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;代码反射是一种 Java 功能，可以访问 Java 代码的符号表示，从而可以操作和分析 Java 程序。代码模型是特定 Java 类的实例，由 Java 编译器生成，可以遍历它来分析代码结构、识别表达式和语句，并为 GPU 等用例生成惯用的 C 代码... &lt;a href= “https://hackernews.betacat.io/#code-models” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40716801&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;日本糖果的算法拟合&lt;/stitle>; &lt;id>;https://www.candyjapan.com/behind-the-scenes/algorithmic-fitting-of-japanese-candy&lt;/id>; &lt;updated>;2024-06-21T07 :57:34.849963Z&lt;/updated>; &lt;link href=&quot;https://www.candyjapan.com/behind-the-scenes/algorithmic-fitting-of-japanese-candy&quot;/>; &lt;作者>; &lt;名称>;EndXA&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=EndXA&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.candyjapan. com/static/bin_packing.png&quot; style=&quot;宽度：220px；高度：184px；&quot; />;&lt;br />;用户（一名程序员）编写了一种算法来优化在 23x17x4cm 包裹中包装糖果的算法，考虑各种组合和旋转以使糖果适合包裹的体积。该算法涉及测试糖果的对齐方式，消除“孤岛”和不必要的组合，并使用启发式方法加速该过程，目标是找到......的最佳序列&lt;a href=&quot;https://hackernews.betacat .io/#algorithmic-fitting-of-japanese-candy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40726529&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;俄罗斯方块字体（2020）&lt;/stitle>; &lt;id>;https://erikdemaine.org/fonts/tetris/&lt;/id>; &lt;更新>;2024-06-20T13:57:34.850904Z&lt;/更新>; &lt;link href=&quot;https ://erikdemaine.org/fonts/tetris/&quot;/>; &lt;author>; &lt;name>;Bluestein&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Bluestein&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;受俄罗斯方块启发的字体使用俄罗斯方块来创建字母和数字，并具有解决难题的挑战。该字体由 BurrTools 设计，灵感来自 BRIDGES 2017 与 Kadon Enterprises 的合作。 &lt;a href=&quot;https://hackernews.betacat.io/#tetris-font-2020&quot; target=&quot;_blank&quot;>;[summary]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40737294&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;追踪 SAT 求解器中的错误&lt;/stitle>; &lt;id>;https://ochagavia.nl/blog/chasing -a-bug-in-a-sat-solver/&lt;/id>; &lt;更新>;2024-06-21T06:57:34.851360Z&lt;/更新>; &lt;link href=&quot;https://ochagavia.nl/blog/chasing -a-bug-in-a-sat-solver/&quot;/>; &lt;作者>; &lt;名称>;wofo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wofo&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ochagavia.nl/images/headshot.jpg&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;用户与 Prefix.dev 合作修复了基于 SAT 的依赖关系解析器 resolvo 中的一个错误，该错误在遇到无法访问的代码时意外地发生了恐慌。社区成员 Sumanth 贡献了一个最小的可重现示例和单元测试，使用户可以更轻松地在短短几个小时内调试和修复问题。 &lt;a href=&quot;https://hackernews.betacat.io/#chasing-a-bug-in-a-sat-solver&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40725568&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bomb Jack 显示硬件&lt;/stitle>; &lt;id>;https://github.com/martinpiper/BombJack/blob/master/README.md&lt;/id>; &lt;已更新>;2024-06-21T03:57:34.852373Z&lt;/已更新>; &lt;link href=&quot;https://github.com/martinpiper/BombJack/blob/master/README.md&quot;/>; &lt;作者>; &lt;名称>;mrandish &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mrandish&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent .com/martinpiper/BombJack/master/Capture.PNG&quot; style=&quot;宽度：220px 高度：214px；&quot; />;&lt;br />;作者使用 Proteus 创建了数字显示驱动程序模拟，以复制原始 Bomb Jack 街机硬件的视频显示部分，添加原始设计中不存在的额外功能。该仿真可用于调试原始板中的故障，并提供接受数字信号的数字显示驱动程序模型，使其成为了解... &lt;a href=&quot;https://hackernews.betacat.io/#炸弹杰克-显示硬件&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40745830&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Stellarium Web 在线星图&lt;/ stitle>; &lt;id>;https://stellarium-web.org/&lt;/id>; &lt;更新>;2024-06-21T01:57:34.852843Z&lt;/更新>; &lt;link href=&quot;https://stellarium-web.org /&quot;/>; &lt;author>; &lt;name>;susam&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=susam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Stellarium Web 是在网络浏览器中运行的天文馆。它显示了逼真的星图，就像您用肉眼、双筒望远镜或望远镜看到的一样。 &lt;a href=&quot;https://hackernews.betacat.io/#stellarium-web-online-star-map&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40716856&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我们不再使用 LangChain 来构建我们的 AI 代理&lt;/stitle>; &lt;id>;https://www.octomind.dev/blog/why-we-no-longer-use- langchain-for-building-our-ai-agents&lt;/id>; &lt;更新>;2024-06-20T15:57:34.853304Z&lt;/更新>; &lt;link href=&quot;https://www.octomind.dev/blog/why -we-no-longer-use-langchain-for-building-our-ai-agents&quot;/>; &lt;author>; &lt;name>;ma_za&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =ma_za&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.prod.website-files.com/647618f73e4f16d380e8eed9/666abdd1a2dd970e1452b269_DYI-octos.webp&quot; style=&quot;width: 220 像素；高度：126 像素；” />;&lt;br />;作者分享了他们与 LangChain（一个用于构建 LLM 支持的应用程序的框架）的斗争，以及其严格的高级抽象如何使他们的代码库变得更加复杂和难以维护。他们最终用模块化构建块方法取代了 LangChain，这使他们的团队能够更快地开发且摩擦更少，并推荐这种方法用于其他 AI ... &lt;a href=&quot;https://hackernews.betacat.io/#我们不再使用langchain-for-building-our-ai-agents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40739982&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Show HN：使用 Ollama、Transformers 和 Coqui TTS 工具包的本地语音助手&lt;/stitle>; &lt;id>;https://github.com/mezbaul-h/june&lt;/id>; &lt;更新>;2024-06- 20T22:57:34.853788Z&lt;/updated>; &lt;link href=&quot;https://github.com/mezbaul-h/june&quot;/>; &lt;作者>; &lt;name>;mezba&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=mezba&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/58864a1d95c6a698e09af849ccb3dc3e05e5ac00d09b0f2f9f570e9c60dd5440/mezbaul-h/june&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;June-va 是一款本地语音助手，结合了语言模型功能、语音识别和文本到语音合成，允许在本地机器上进行语音辅助交互，而无需向外部服务器发送数据。可以使用配置文件来自定义助手，该文件会覆盖默认设置并允许进行部分修改以适应特定的用例。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-local-voice-assistant-using-ollama-transformers-and-coqui-tts-toolkit&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40744293&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;模糊地图&lt;/stitle>; &lt;id>;https://www.fuzzmap.io/&lt;/id>; &lt;更新>;2024-06-20T19:57:34.854277Z&lt;/updated>; &lt;link href=&quot;https://www.fuzzmap.io/&quot;/>; &lt;author>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jyc-static.com/a8ae38d4673b62a50982cb85907ed112fc3f43ae35362eff1499ece5bb591826&quot; style=&quot;width: 220像素；高度：98像素；” />;&lt;br />;Fuzz Map 是一种使用代码覆盖率自动识别 GUI 应用程序中的状态并构建可视化地图以帮助开发人员理解应用程序行为的工具。该工具使用代码覆盖率来识别它已经看到的状态，使其比随机模糊测试更有效，并允许它更有效地探索状态。 &lt;a href=&quot;https://hackernews.betacat.io/#fuzz-map&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40742014&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;阿特金森抖动 (2021)&lt;/stitle>; &lt;id>;https://beyondloom.com/blog/dither.html&lt;/id>; &lt;更新>;2024-06-20T15:57:34.854731Z&lt;/更新>; &lt;link href=&quot;https://beyondloom.com/blog/dither.html&quot;/>; &lt;作者>; &lt;name>;jdblair&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= jdblair&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://beyondloom.com/blog/dither-figures/david.png&quot; style=&quot;width: 220px; height: 263px ;” />;&lt;br />;Macintosh 计算机配备了分辨率为 512x342 的方形像素黑白显示屏，使用 Floyd-Steinberg 和 Atkinson 抖动等技术的抖动图像来模拟灰度。这些算法在相邻像素之间分配误差以创建视觉上令人愉悦的图像，阿特金森算法以牺牲一些细节为代价产生更丰富的对比度。 &lt;a href=&quot;https://hackernews.betacat.io/#atkinson-dithering-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40739710&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Wc2：研究优化 Unix 字数统计程序“wc”&lt;/stitle>; &lt;id>;https://github.com/robertdavidgraham/wc2&lt;/id>; &lt;更新>;2024-06-20T13 :57:34.855197Z&lt;/updated>; &lt;link href=&quot;https://github.com/robertdavidgraham/wc2&quot;/>; &lt;作者>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/d520f1b849f9a23127f82e98833de661ea918e7e43bbd69b1117d1b4ffa0dd87/robertdavidgraham/wc2&quot; style=&quot;width: 220px高度：110px；” />;&lt;br />;该项目使用异步状态机解析器实现字数统计程序，该程序比传统方法更快且更具可扩展性。该算法用 C 和 JavaScript 实现，并在各种输入文件上进行测试，以证明其效率和可扩展性。 &lt;a href=&quot;https://hackernews.betacat.io/#wc2-investigates-optimizing-wc-the-unix-word-count-program&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40738833&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;信封背面 (1984) [pdf]&lt;/stitle>; &lt;id>;https://www.seltzer.com/margo/teaching /CS508.19/background/p180-bentley.pdf&lt;/id>; &lt;更新>;2024-06-21T05:57:34.855668Z&lt;/更新>; &lt;link href=&quot;https://www.seltzer.com/margo/ education/CS508.19/background/p180-bentley.pdf&quot;/>; &lt;作者>; &lt;名称>;tjalfi&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tjalfi&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;0 0 0 1 - 0 7 8 2 / 8 4 / 0 3 0 0 - 0 1 8 0 可靠性/可用性 &lt;a href=&quot;https://hackernews.betacat.io /#the-back-of-the-envelope-1984-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40730178&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;沼泽砾石过滤：大自然净化的水（2015）&lt;/stitle>; &lt;id>;https://www.pondtrademag.com/bog-gravel-filter-water-cleaned-by-mother-nature/&lt;/id>; &lt;更新>;2024-06-20T22:57:34.856156Z&lt;/更新>; &lt;link href=&quot;https://www.pondtrademag.com/bog-gravel-filter-water-cleaned-by-mother-nature/&quot;/ >; &lt;作者>; &lt;名称>;ciconia&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ciconia&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://www.pondtrademag.com/wp-content/uploads/1507bog008a.jpg”样式=“宽度：220px； height: 198px;&quot; />;&lt;br />;沼泽砾石过滤器是一种将废物转化为资源的自然而有效的方法，将鱼类和植物废物转化为肥料，供过滤器中生长的植物消耗，从而产生清澈的水和通过建造具有正确设计、植物和砾石的沼泽砾石过滤器，池塘所有者可以享受一个繁荣的生态系统，只需最少的维护，并且不会产生任何回调。 &lt;a href=&quot;https://hackernews.betacat.io /#bog-gravel-filter-water-cleaned-by-mother-nature-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40734564&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;让我们从头开始编写一款视频游戏，就像 1987 年一样&lt;/stitle>; &lt;id>;https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html&lt;/id>; &lt;updated>;2024-06-20T13: 57:34.856633Z&lt;/updated>; &lt;link href=&quot;https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html&quot;/>; &lt;author>; &lt;name>;LorenDB&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/gaultier/minesweeper-from-scratch/master /screenshot.png&quot; style=&quot;宽度: 220px; height: 239px;&quot; />;&lt;br />;作者使用 X11 协议、低级 GUI 库和 Odin 编程语言创建了一个扫雷游戏，从而生成了一个可以在任何 Unix 系统上运行的小型独立可执行文件。本文提供了有关如何使用 X11 创建 GUI 应用程序的分步指南，包括实现游戏逻辑、处理事件和渲染图形。 -s-write-a-video-game-from-scratch-like-it-s-1987&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=40737370&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;吉利德疫苗可预防试验中的所有艾滋病毒病例&lt;/stitle>; &lt;id>;https://www.bloomberg.com/news/articles/2024-06-20/gilead-shot-prevents-100 -of-hiv-cases-in-trial-of-african-women&lt;/id>; &lt;更新>;2024-06-20T19:57:34.857110Z&lt;/更新>; &lt;link href=&quot;https://www.bloomberg. com/news/articles/2024-06-20/gilead-shot-prevents-100-of-hiv-cases-in-trial-of-african-women&quot;/>; &lt;作者>; &lt;名称>;toomuchtodo&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=tooomuchtodo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;吉利德科学公司的实验性疫苗lenacapavir 预防了非洲女性 100% 的艾滋病毒病例和女孩们在一次成功的审判中。与每日服药或每两个月注射一次相比，每年两次注射可以提供更易于使用的艾滋病毒预防选择。 &lt;a href=&quot;https://hackernews.betacat.io/#gilead-shot-prevents-all-hiv-cases-in-trial&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40742163&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为视频生成音频&lt;/stitle>; &lt;id>;https://deepmind.google/discover/blog/generate-audio-for-video/&lt;/ id>; &lt;更新>;2024-06-20T22:57:34.858062Z&lt;​​/更新>; &lt;link href=&quot;https://deepmind.google/discover/blog/generate-audio-for-video/&quot;/>; &lt;作者>; &lt;name>;rvnx&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rvnx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /lh3.googleusercontent.com/Lzihw4F171DQeSgZ9q0MUONzbt1BkbK1sOgnqvLAV3AUIQQ1UJ4niEXOTgWiiyKZrJaCpE4Q6APwV8RRQj7a86_2yDlbIV6WUzD6S_Gu2mjuZDyVWqo=w1072-h603-n -nu&quot;样式=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;Google 的 V2A 技术通过将视频像素与自然语言文本提示相结合来生成同步的视听内容，从而实现丰富的音景和逼真的音效。该技术采用基于扩散的方法，可以为任何视频输入生成无限数量的音轨，并提供使用积极或消极提示的可选指导。 &lt;a href=&quot;https://hackernews.betacat.io/#generate-audio-for-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40744098&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;NASA 发布以新指向模式拍摄的哈勃图像&lt;/stitle>; &lt;id>;https://science.nasa.gov/missions/hubble/nasa-releases-hubble-image-taken-in -new-pointing-mode/&lt;/id>; &lt;更新>;2024-06-20T13:57:34.858518Z&lt;/更新>; &lt;link href=&quot;https://science.nasa.gov/missions/hubble/nasa-releases -hubble-image-taken-in-new-pointing-mode/&quot;/>; &lt;作者>; &lt;名称>;isaacfrond&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=isaacfrond&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://science.nasa.gov/wp-content/uploads/2024/06/hubble-ngc1546-stsci-h-p24026a-f- 4032x3701-1.jpg?w=4096&amp;format=jpeg&quot; style=&quot;宽度: 220px 高度: 202px;&quot; />;&lt;br />;美国宇航局的哈勃太空望远镜自从切换到使用陀螺仪的新操作模式以来拍摄了第一张新图像。新图像展示了附近的星系 NGC 1546，具有尘埃带和活跃的恒星形成。 &lt;a href=&quot;https://hackernews.betacat.io/#nasa-releases-hubble-image-taken-in-new-pointing-mode&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40725924&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;婴儿和幼儿如何学习理解语言&lt;/stitle>; &lt;id>;https://lithub.com/how-babies-and-young -children-learn-to-understand-language/&lt;/id>; &lt;更新>;2024-06-20T23:57:34.858993Z&lt;/更新>; &lt;link href=&quot;https://lithub.com/how-babies-and -young-children-learn-to-understand-language/&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Hooke&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s26162.pcdn.co/wp-content/themes/rigel/images/social_logo.png&quot; style=&quot;宽度：220px；高度：123px ;” />;&lt;br />;认为儿童的语言发展反映了人类祖先的语言发展的观点是有问题的，相反，研究人员关注的是如何通过专门的心理过程或通用学习来获得语言。婴儿通过识别音节之间的转换概率来学习语言，从而使他们能够识别单词并理解其含义，正如 1996 年的...... &lt;a href=&quot;https://hackernews.betacat.io/#how-babies-and- young-children-learn-to-understand-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40744558&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;欧盟理事会已撤回对聊天控制的投票&lt;/stitle>; &lt;id>;https://stackdiary.com/eu-council-has-withdrawn-the-vote-on-chat-c​​ontrol/&lt;/id>; &lt;更新>;2024-06- 20T13:57:34.859464Z&lt;/updated>; &lt;link href=&quot;https://stackdiary.com/eu-council-has-withdrawn-the-vote-on-chat-c​​ontrol/&quot;/>; &lt;作者>; &lt;名称>;熟练&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=skilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://stackdiary. com/wp-content/uploads/2024/06/EU-Council-Chat-Control-1044x587.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;由于缺乏多数票，欧盟理事会撤回了对聊天控制计划的投票，该计划旨在监控所有聊天消息和数字通信。该提案包括客户端扫描对于端到端加密服务，受到了专家和隐私倡导者的批评，他们认为这会破坏加密并引入漏洞。 Pulled-the-vote-on-chat-c​​ontrol&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40736771&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;塔吉克斯坦注释&lt;/stitle>; &lt;id>;https://mattlakeman.org/2024/06/20/notes-on-tajikistan/&lt;/id>; &lt;更新>;2024-06-20T17:57:34.859936Z&lt;/更新>; &lt;link href=&quot;https://mattlakeman.org/2024/06/20/notes-on-tajikistan/&quot;/>; &lt;作者>; &lt;名称>;petesivak&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=petesivak&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-城市定位器.webp?w=760&quot; style=&quot;width: 220px;高度：183px;&quot; />;&lt;br />;作者前往塔吉克斯坦，观察了该国独特的苏联时代基础设施与伊斯兰文化的融合，注意到政府对宗教活动的严格控制和总统的独裁统治。作者还深入研究了塔吉克斯坦该国复杂的历史，包括 20 世纪 90 年代蹂躏该国的内战以及现任总统从……上台执政 &lt;a href=&quot;https://hackernews.betacat.io/#notes-on-tajikistan&quot; target =&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40741068&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;信息的形状&lt;/stitle>; &lt;id>;https://kucharski .substack.com/p/the-shape-of-information&lt;/id>; &lt;更新>;2024-06-20T15:57:34.860372Z&lt;/更新>; &lt;link href=&quot;https://kucharski.substack.com/ p/the-shape-of-information&quot;/>; &lt;作者>; &lt;名称>;效果&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=effect&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://substackcdn.com/image/fetch/w_1200，h_600，c_fill，f_jpg，q_auto：好，fl_progressive：steep，g_auto/https％3A％2F％2Fsubstack- post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3641c91e-b93e-43f6-b166-6f2306407f64_1748x1150.png&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;作者讨论了“集中测试”的概念，即使用有限数量的测试来识别众多测试中的受污染物品，并以识别有毒酒瓶为例。这种方法是也应用于流行病学，例如传染病检测，可用于估计人群中病原体的流行率。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40723024&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算帝国：1500 年以来技术与力量的谱系&lt;/stitle >; &lt;id>;https://calculateempires.net/&lt;/id>; &lt;更新>;2024-06-20T14:57:34.860758Z&lt;/更新>; &lt;link href=&quot;https://calculateempires.net/&quot;/>; &lt;作者>; &lt;name>;zazerr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zazerr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://calculateempires.net/content/calculate-empires-og.png&quot; style=&quot;width: 220px;高度：116px;&quot; />;&lt;br />;计算帝国是一个大规模的研究可视化，探索技术和社会结构如何在五个世纪中共同进化。以思想、设备、基础设施和系统的更长轨迹来观察当代时期&lt;a href=&quot;https://hackernews.betacat.io/#calculated-empires-a-genealogy-of-technology-and-power-since-1500&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40739384&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;小额索赔法庭成为 Meta 的客户服务热线&lt;/stitle>; &lt;id>;https://www.engadget.com/how -small-claims-court-became-metas-customer-service-hotline-160224479.html&lt;/id>; &lt;更新>;2024-06-20T17:57:34.861135Z&lt;/更新>; &lt;link href=&quot;https:// www.engadget.com/how-small-claims-court-became-metas-customer-service-hotline-160224479.html&quot;/>; &lt;作者>; &lt;名称>;jmsflknr &lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=jmsflknr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://s.yimg.com/ny/api/res/1.2/dLhq2owLjytYR3kKn4ZVYg- -/YXBwaWQ9aGlnaGxhbmRlcjt3PTM4NDA7aD0yMTYw/https://s.yimg.com/os/creatr-uploaded-images/2024-06/211f3da0-2f1c-11ef-9f6e-040e851ea6c0&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Meta 缺乏客户支持，导致用户在小额索赔法庭起诉该公司，要求重新获得其帐户的访问权限。许多人都取得了成功，一些人赢得了经济损失，另一些人则拿回了自己的帐户&lt;a href=&quot;https://hackernews.betacat.io/#small-claims-court-became-meta-s-customer-service-hotline&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40741197&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;