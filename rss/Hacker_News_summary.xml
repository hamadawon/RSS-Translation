<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-29T03:54:21.213364Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;日本战俘营中建造的小型车床（1949 年）&lt;/stitle>; &lt;id>;http://www.lathes.co.uk/bradley-pow-lathe/&lt;/ id>; &lt;更新>;2024-04-28T18:54:07.763843Z&lt;/更新>; &lt;link href=&quot;http://www.lathes.co.uk/bradley-pow-lathe/&quot;/>; &lt;作者>; &lt;名称>;CommieBobDole&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CommieBobDole&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www .lathes.co.uk/bradley-pow-lathe/img0.jpg&quot; style=&quot;宽度：220px 高度：327px；&quot; />;&lt;br />;如果您认为在家制作车床很困难，这可能会鼓励您尝试一下。这是人类聪明才智的真实证明。 &lt;a href=&quot;https://hackernews.betacat.io/#a-small-lathe-built-in-a-japanese-prison-camp-1949&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40190542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我在 Wayback Machine 上找到了我的第一个程序（Java，2011）并且它运行&lt;/stitle>; &lt;id>;https:// /github.com/khiner/CrosswordFiller&lt;/id>; &lt;更新>;2024-04-28T23:54:07.766101Z&lt;/更新>; &lt;link href=&quot;https://github.com/khiner/CrosswordFiller&quot;/>; &lt;作者>; &lt;name>;khiner&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=khiner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //raw.githubusercontent.com/khiner/CrosswordFiller/main/ScreenRecording.gif&quot; style=&quot;width: 220px height: 124px;&quot; />;&lt;br />;作者回忆起他们早期的填字游戏程序，该程序是通过 Wayback Machine 重新发现的，由于 Java 兼容性，该程序仍然可以在现代 MacBook 上运行。他们记得它在渲染解决方案方面非常高效，并且是在第一次 GitHub 提交之前编码的。 &lt;a href=&quot;https://hackernews.betacat.io/#i-found-one-of-my-first-programs-java-2011-on-the-wayback-machine-and-it-runs&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40177553&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;6502 – 逆向工程指南（如何阅读模具镜头）[pdf]&lt; /stitle>; &lt;id>;https://downloads.reactivemicro.com/Electronics/Reverse%20Engineering/6502%20-%20Guideline%20to%20Reverse%20Engineering%20v1.0.pdf&lt;/id>; &lt;更新>;2024-04 -28T22：54：07.766526Z &lt;/更新>; &lt;link href =“https://downloads.reactivemicro.com/Electronics/Reverse%20Engineering/6502%20-%20Guideline%20to%20Reverse%20Engineering%20v1.0.pdf &quot;/>; &lt;author>; &lt;name>;siraben&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=siraben&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章描述了在显微镜下可观察到的晶体管细节，强调了 p 区和 n+ 区之间的清晰划分，以及晶体管存在时需要多晶硅线穿过有源区。它还涉及处理器中逻辑门的功能，特别是反相器和或非门，并解释了总线系统中的传输门如何控制数据流。 &lt;a href=&quot;https://hackernews.betacat.io/#6502-guideline-to-reverse-engineering-how-to-read-die-shots-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Dotenv，如果它是 Unix 实用程序&lt;/stitle>; &lt;id>;https://github.com/gyf304 /dotenv&lt;/id>; &lt;更新>;2024-04-28T20:54:07.766924Z&lt;/更新>; &lt;link href=&quot;https://github.com/gyf304/dotenv&quot;/>; &lt;作者>; &lt;名称>;gyf304&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=gyf304&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets. com/2542618be1fce54d96610652734ec399c4f20cfbb96ffb3e7e87552eb7fecebb/gyf304/dotenv&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;Dotenv 将环境变量从 .env 文件加载到脚本中；用 C 编译器安装并 make。它支持键值对，忽略空格，并允许使用井号进行注释。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-dotenv-if-it-is-a-unix-utility&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40191510&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;连续编译的本质 (1993) [pdf]&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/ pdf/10.1145/173262.155113&lt;/id>; &lt;更新>;2024-04-28T22:54:07.767709Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/pdf/10.1145/173262.155113&quot;/ >; &lt;作者>; &lt;名称>;swatson741&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;a href= “https://hackernews.betacat.io/#the-essence-of-compiling-with-continuations-1993-pdf” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40192579&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;个人计算为个人图书馆科学铺平了道路&lt;/stitle>; &lt;id>;https://www.bramadams.dev/issue-55/&lt;/id>; &lt;updated>; 2024-04-28T22：54：07.768091Z &lt;/更新>; &lt;link href =“https://www.bramadams.dev/issue-55/”/>; &lt;作者>; &lt;名称>; _bramses &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=_bramses&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bramadams.dev/content/images/ 2024/04/卡米尔-柯罗-缪斯.jpeg&quot; style=&quot;width: 220px; height: 294px;&quot; />;&lt;br />;本文探讨了个人图书馆学的演变和影响，并将其与个人计算的兴起进行了比较，强调了从企业技术到由用户需求驱动的个性化解决方案的历程，并展望了未来未来，个人图书馆将成为数据交互和遗产不可或缺的一部分。 _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192359&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;观看汽车使用遗传算法进化&lt;/stitle>; &lt;id>;https://rednuht .org/genic_cars_2/&lt;/id>; &lt;更新>;2024-04-28T13:54:07.768491Z&lt;/更新>; &lt;link href=&quot;https://rednuht.org/genic_cars_2/&quot;/>; &lt;作者>; &lt;名称>; memalign&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=memalign&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该程序使用遗传算法和 Box2D 物理；它通过seedrandom.js 实现一致的轨迹和可变的遗传变异。它允许暂停查看顶级赛车，但性能可能会因重新运行而有所不同。 &lt;a href=&quot;https://hackernews.betacat.io/#watch-cars-evolve-using-genic-algorithm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40177599&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;再入 - 轨道模拟器&lt;/stitle>; &lt;id>;https://reentrygame.com/&lt;/id>; &lt;updated>;2024-04-28T21:54:07.768878Z &lt;/更新>; &lt;link href=&quot;https://reentrygame.com/&quot;/>; &lt;作者>; &lt;名称>;belter&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt; /uri>; &lt;/wurs>; &lt;content type =“ html”>; &lt;img src =” e =图像％2fpng＆nighoreaspectratio＆ressize =415%2B276&amp;提取=0%2B0%2B415%2B269&quot; style=&quot;宽度: 220px 高度: 143px;&quot; />;&lt;br />;再入通过现实和虚构的任务模拟太空飞行，教授如何在沉浸式环境中操作航天器系统。玩家通过手册和清单进行学习，体验真实性和可玩性之间的平衡。 &lt;a href=&quot;https://hackernews.betacat.io/#reentry-an-orbital-simulator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40188173&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;加快 C++ 构建时间&lt;/stitle>; &lt;id>;https://www.figma.com/blog/speeding-up-build-times/&lt;/id>; &lt;updated>;2024- 04-28T18:54:07.769267Z&lt;/updated>; &lt;link href=&quot;https://www.figma.com/blog/speeding-up-build-times/&quot;/>; &lt;作者>; &lt;name>;熟练&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=skilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.sanity.io/图片/599r6htc/localized/d52b738e1057214775d55e92e0333f8033fa6e7a-3840x2160.png?w=3840&amp;h=2160&amp;q=75&amp;fit=max&amp;auto=format&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Figma 通过针对不必要的包含、创建 DIWYDU 和includes.py 等工具以及引入用于前向声明的 Fwd.h 文件来解决 C++ 缓慢的构建时间问题，从而将构建时间缩短了 50%。他们的方法包括自动识别多余的标头和优化开发生产力。 &lt;a href=&quot;https://hackernews.betacat.io/#speeding-up-c-build-times&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40178634&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;OSWorld：在真实计算机中对开放式任务的多模式代理进行基准测试&lt;/stitle>; &lt;id>;https://os-world.github.io/&lt;/id>; &lt;更新>; 2024-04-28T19:54:07.770022Z&lt;/updated>; &lt;link href=&quot;https://os-world.github.io/&quot;/>; &lt;author>; &lt;name>;kristianpaul&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=kristianpaul&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://os-world.github.io/static/images/ task_demonstration.png&quot; style=&quot;宽度: 220px 高度: 136px;&quot; />;&lt;br />;OSWorld 是一种新颖的多模式代理环境，支持跨操作系统平台的多样化、开放式计算机任务，并附带 369 个基准任务。尽管进行了广泛的评估，但与人类表现相比，当前模型的能力有限。 &lt;a href=&quot;https://hackernews.betacat.io/#osworld-benchmarking-multimodal-agents-for-open-ending-tasks-in-real-computers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191047&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;与内存对话：Intel 8088 处理器总线接口状态机内部&lt;/stitle>; &lt;id>;http://www.righto .com/2024/04/intel-8088-bus-state-machine.html&lt;/id>; &lt;更新>;2024-04-28T15:54:07.770425Z&lt;/更新>; &lt;link href=&quot;http://www. righto.com/2024/04/intel-8088-bus-state-machine.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/8086-bus8088/die-labeled-w600.jpg&quot; style=&quot;width ：220像素；高度：230像素；” />;&lt;br />;Intel 8088 微处理器于 1979 年推出，作为 1981 年 IBM PC 的关键组件，巩固了 x86 架构的成功。 IBM 选择 8088 是因为它的熟悉性和 8 位总线兼容性，它允许通过复杂的六步总线周期（包括两个未记录的步骤）进行复杂的计时和高效的内存操作。 &lt;a href=&quot;https://hackernews.betacat.io/#talking-to-memory-inside-the-intel-8088-processor-s-bus-interface-state-machine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40189447&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;失速的飞机&lt;/stitle>; &lt;id>;https://fearoflanding.com/accidents/accident -reports/the-unstallable-plane-that-stalled/&lt;/id>; &lt;更新>;2024-04-28T15:54:07.770824Z&lt;/更新>; &lt;link href=&quot;https://fearoflanding.com/accidents/accident -reports/the-unstallable-plane-that-stalled/&quot;/>; &lt;作者>; &lt;名称>;sni&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sni&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://fearoflanding.com/files/2024/04/N914ST_Cessna_A185Floats_PAE_11JUL12_7553419848-640x427.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;这架改装有浮筒和其他套件的塞斯纳 185 Skywagon 飞机因飞行员在起飞时管理不善而坠毁，造成一人溺水身亡。尽管飞行员经验丰富，但他缺乏失速改出练习，而且飞机的大量改装也没有完整记录。 &lt;a href=&quot;https://hackernews.betacat.io/#the-unstallable-plane-that-stalled&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40189346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;DEC PDP-1 模拟器运行已知最早的数字视频游戏“Spacewar”&lt;/stitle>; &lt;id>;https://www.masswerk.at/spacewar/index.html&lt; /id>; &lt;更新>;2024-04-28T21:54:07.771203Z&lt;/更新>; &lt;link href=&quot;https://www.masswerk.at/spacewar/index.html&quot;/>; &lt;作者>; &lt;名称>;smartmic &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.masswerk .at/spacewar/images/cbs-opening.png&quot; style=&quot;宽度：220px 高度：223px；&quot; />;&lt;br />;虚拟 DEC PDP-1 模拟器运行原创视频游戏“Spacewar！”，并增加了对游戏手柄的支持，以提供真实的体验；它使用历史代码版本进行维护，并提供各种游戏选项和设置。 &lt;a href=&quot;https://hackernews.betacat.io/#dec-pdp-1-emulator-running-spacewar-the-earliest-known-digital-video-game&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192240&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大麦植物通过含糖分泌物微调根部微生物群落&lt;/stitle>; &lt;id>;https://phys.org /news/2024-04-barley-fine-tune-root-microbial.html&lt;/id>; &lt;更新>;2024-04-28T17:54:07.771608Z&lt;/更新>; &lt;link href=&quot;https://phys. org/news/2024-04-barley-fine-tune-root-microbial.html&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= wglb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2024/barley-plants-fine-tun。 jpg&quot; 样式=&quot;宽度:220px;高度:146px;&quot; />;&lt;br />;不同的大麦品种通过分泌特定的糖和化合物来吸引独特的土壤微生物；一项研究表明，这些关系随植物遗传学的不同而变化，影响植物的生长和健康。未来的谷物育种可能会利用这些相互作用来提高作物的恢复力。 &lt;a href=&quot;https://hackernews.betacat.io/#barley-plants-fine-tune-root-microbial-communities-through-sugary-secretions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40165329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;第二次机会的神话&lt;/stitle>; &lt;id>;https://ft.pressreader.com/article/282557318242321&lt;/id >; &lt;更新>;2024-04-28T17:54:07.772346Z&lt;/更新>; &lt;link href=&quot;https://ft.pressreader.com/article/282557318242321&quot;/>; &lt;作者>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;来自世界领先的全球商业出版物《金融时报》的新闻、分析和评论&lt;a href=&quot;https://hackernews.betacat.io/#the-myth-of-the-second-chance&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40189928&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如果 null 是 Java 中的对象怎么办？&lt;/stitle>; &lt;id>;https://donraab.medium.com/what-if-null-was-an-object -in-java-3f1974954be2&lt;/id>; &lt;更新>;2024-04-28T16:54:07.773118Z&lt;/更新>; &lt;link href=&quot;https://donraab.medium.com/what-if-null-was- an-object-in-java-3f1974954be2&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://miro.medium.com/v2/da:true/resize:fit:1200/0*9g0ruViNF2_mcdeD”样式=“宽度：220px; height: 165px;&quot; />;&lt;br />;Smalltalk 是一种纯粹的面向对象语言，其中所有元素都是对象，这与 Java 不同，Java 也有基元；本文探讨了 Java 中“null”和 Smalltalk 中“nil”的处理。解释了 Smalltalk 中的“nil”是一个实际对象，而 Java 中的“null”则不然，并暗示了这给 Smalltalk 带来的一致性。 if-null-was-an-object-in-java&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40178325&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我的鼠标爬上了墙，现在无法正常工作&lt;/stitle>; &lt;id>;https://www.theregister.com/2024/04/26/on_call/&lt;/id>; &lt;updated>;2024-04-28T22： 54:07.773503Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2024/04/26/on_call/&quot;/>; &lt;作者>; &lt;名称>;CHB0403085482 &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=CHB0403085482&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia.co.uk/2024/04/24/ Shutterstock_vintage_mouse.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Barry 是一名 IT 实习生，他遇到一位架构师无法将鼠标指针移到屏幕中点之外，因为他不知道如何重新定位鼠标指针。这一事件强调了永远不要假设用户知识。 &lt;a href=&quot;https://hackernews.betacat.io/#my-mouse-climbed-a-wall-and-now-it-doesn-t-work-right&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40186374&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：OpenLIT – 使用 OpenTelemetry 的开源 LLM 可观察性&lt;/stitle>; &lt;id>;https://github。 com/openlit/openlit&lt;/id>; &lt;更新>;2024-04-28T16:54:07.773886Z&lt;/更新>; &lt;link href=&quot;https://github.com/openlit/openlit&quot;/>; &lt;作者>; &lt;名称>;aman_041&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=aman_041&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw .githubusercontent.com/openlit/.github/main/profile/assets/wide-logo-no-bg.png&quot; style=&quot;width: 220px; height: 79px;&quot; />;&lt;br />;OpenLIT 通过一行代码行轻松简化了与 GenAI 项目的可观察性集成，支持流行的库和数据库。它符合 OpenTelemetry 标准，可实现透明、供应商中立的应用程序监控。&lt;a href= “https://hackernews.betacat.io/#show-hn-openlit-open-source-llm-observability-with-opentelemetry” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40167461&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们在制作高效软件方面是否迷失了方向？&lt;/stitle>; &lt;id>;https://rufatmammadli.medium.com/did-we-lose-our- way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4&lt;/id>; &lt;更新>;2024-04-28T16:54:07.775070Z&lt;/更新>; &lt;link href=&quot;https ://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4&quot;/>; &lt;作者>; &lt;名称>;rumad &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rumad&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium .com/v2/resize:fit:1200/0*DMufC1Qq6Sz7Bous.jpg&quot; style=&quot;width: 220px; height: 151px;&quot; />;&lt;br />;由于性能问题，该人发现 Google Docs 不足以处理 30 MB 的文档文件，导致他们改用 LibreOffice，效果很顺利。这一经历促使他们质疑现代办公软件的效率软件开发和网络应用程序高规格硬件的趋势。 &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40189682&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ollama v0.1.33 以及 Llama 3、Phi 3 和 Qwen 110B&lt;/stitle >; &lt;id>;https://github.com/ollama/ollama/releases/tag/v0.1.33-rc5&lt;/id>; &lt;更新>;2024-04-28T20:54:07.775455Z&lt;/更新>; &lt;link href= “https://github.com/ollama/ollama/releases/tag/v0.1.33-rc5”/>; &lt;author>; &lt;name>;ashvardanian&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=ashvardanian&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/cc9c5b5f4bebffb646b0e214f4bf124b559e8e59334ae92821c87433dd875be4/ollama/ollama/releases/tag/v0.1.33-rc5 “样式=”宽度：220px; height: 110px;&quot; />;&lt;br />;Meta的Llama 3是目前最先进的开放式LLM，而Eric Hartford在其上构建的Dolphin Llama 3技能多样。Qwen 110B超过100B的参数，在测试中表现出色。 &lt; a href=&quot;https://hackernews.betacat.io/#ollama-v0-1-33-with-llama-3-phi-3-and-qwen-110b&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191723&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zilog Z80 CPU – 现代、免费和开源的硅克隆&lt;/stitle>; &lt;id>;https://github.com /rejunity/z80-open-silicon&lt;/id>; &lt;更新>;2024-04-28T11:54:07.775838Z&lt;/更新>; &lt;link href=&quot;https://github.com/rejunity/z80-open-silicon&quot; />; &lt;author>; &lt;name>;jnord&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://raw.githubusercontent.com/rejunity/z80-open-silicon/main/docs/tt07_z80.png”样式=“宽度：220px； height: 318px;&quot; />;&lt;br />;Zilog 宣布 Z80 CPU 寿命终止，促使开源社区使用 OpenROAD 和 Skywater PDK 开发 FOSS Z80 进行生产。最初的 FOSS Z80 设计即将进行制造2024 年 6 月，模仿原始 Z80 布局，实现更便宜的芯片制造。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40187656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Docker 恐惧症：使用树形图分析 Docker 镜像大小&lt;/stitle>; &lt;id>;https://github.com/remorses/docker-phobia&lt;/id>; &lt;更新>;2024-04-28T13:54:07.776218Z&lt;/更新>; &lt;link href=&quot;https:// github.com/remorses/docker-phobia&quot;/>; &lt;author>; &lt;name>;remorses&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=remorses&lt;/uri>; &lt;/author>; &lt;内容类型 =“html”>; &lt;img src =“https://raw.githubusercontent.com/remorses/docker-phobia/main/website/public/example-docker-phobia.png” style =“宽度：220px; height: 165px;&quot; />;&lt;br />;本文讨论了一种名为 docker-phobia 的工具，该工具可以可视化 Docker 映像的内容，将文件夹和文件显示为根据其占用的空间大小的矩形，并用颜色指示层。&lt;a href= “https://hackernews.betacat.io/#show-hn-docker-phobia-analyze-docker-image-size-with-a-treemap” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40188282&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;碎片化思维对心流状态的威胁比中断更大&lt;/stitle>; &lt;id>;https://blog.stackblitz.com/posts/flow -state/&lt;/id>; &lt;更新>;2024-04-28T10:54:07.776593Z&lt;/更新>; &lt;link href=&quot;https://blog.stackblitz.com/posts/flow-state/&quot;/>; &lt;作者>; &lt;name>;nickwritesit&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nickwritesit&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //blog.stackblitz.com/posts/flow-state/hero.png&quot; style=&quot;width: 220px; height: 114px;&quot; />;&lt;br />;开发人员和同事努力平衡心流状态和工作中断，没有意识到实现心流的细微差别很复杂，而且经常被误解。最近的研究表明，内部障碍是心流的主要干扰因素，倡导正念和组织变革以提高生产力。 &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40155713&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /条目>; &lt;/提要>;