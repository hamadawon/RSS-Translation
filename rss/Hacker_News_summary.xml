<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-06T16:02:13.731389Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;浏览器内代码游乐场&lt;/stitle>; &lt;id>;https://antonz.org/in-browser-code-playgrounds/&lt;/id>; &lt;更新>;2024-01- 06T14：01：57.337777Z &lt;/更新>; &lt;link href =“https://antonz.org/in-browser-code-playgrounds/”/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://antonz.org/in-browser-code-playgrounds/ cover.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;我非常喜欢各种技术写作中的交互式代码片段，从产品文档到在线课程再到博客文章。就像这个：事实上，我什至构建了一个名为 Codapi1 的开源工具来嵌入此类片段。 &lt;a href=&quot;https://hackernews.betacat.io/#in-browser-code-playgrounds&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38891177&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Chromium 错误赏金金钱树浏览器&lt;/stitle>; &lt;id>;https://lyra.horse/misc/chromium_vrp_tree.html&lt;/id>; &lt;更新>;2024-01-06T10:01： 57.339997Z&lt;/updated>; &lt;link href=&quot;https://lyra.horse/misc/chromium_vrp_tree.html&quot;/>; &lt;author>; &lt;name>;admp&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=admp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#chromium-bug-bounty-money-tree-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38889833&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Csvlens：命令行 CSV 文件查看器。喜欢 less，但为 CSV 制作&lt;/stitle>; &lt;id>;https://github.com/YS-L/csvlens&lt;/id>; &lt;updated>;2024-01-06T10:01:57.340845Z&lt;/updated>; &lt;link href =&quot;https://github.com/YS-L/csvlens&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/YS-L/csvlens/main/.github/demo.gif&quot; style=&quot;width: 220px;高度：118px；” />;&lt;br />;Csvlens 是一个命令行 CSV 文件查看器，与 less 类似，但专门为 CSV 文件设计。 &lt;a href=&quot;https://hackernews.betacat.io/#csvlens-command-line-csv-file-viewer-like-less-but-made-for-csv&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38889820&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;关于宗教、神话、民俗等的最大在线书籍档案&lt;/stitle>; &lt;id>;https://sacred -texts.com/&lt;/id>; &lt;更新>;2024-01-06T10:01:57.341264Z&lt;/更新>; &lt;link href=&quot;https://sacred-texts.com/&quot;/>; &lt;作者>; &lt;名称>; Woods369&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Woods369&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://sacred- texts.com/content/uploads/2023/07/t_USB-1.jpg&quot; style=&quot;宽度：220px；高度：108px；&quot; />;&lt;br />;ISTA Flash 9.0 是有史以来最全面的宗教、神话、民俗和深奥书籍合集。它包含 1700 多本圣书，其中许多都是稀有且难以找到的。 &lt;a href=&quot;https://hackernews.betacat.io/#largest-archive-of-online-books-about-religion-mythology-folklore-and-more&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38865472&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;瑞士火车实时地图&lt;/stitle>; &lt;id>;https://maps.vasile.ch/transit-sbb/&lt; /id>; &lt;更新>;2024-01-06T15:01:57.341662Z&lt;/更新>; &lt;link href=&quot;https://maps.vasile.ch/transit-sbb/&quot;/>; &lt;作者>; &lt;名称>;ano-其他&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ano-ther&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// maps.vasile.ch/transit-sbb/static/images/embed_social_200px.png&quot; style=&quot;宽度：220 像素；高度：221 像素；&quot; />;&lt;br />;此地图是根据瑞士联邦铁路 (SBB) 网络的官方时刻表制作的动画。 &lt;a href=&quot;https://hackernews.betacat.io/#live-map-of-swiss-trains&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38891712&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;凯尔经 (2018)&lt;/stitle>; &lt;id>;https://www.worldhistory.org/Book_of_Kells/&lt;/id>; &lt;更新>;2024-01-06T14:01 ：57.342062Z&lt;​​/updated>; &lt;link href=&quot;https://www.worldhistory.org/Book_of_Kells/&quot;/>; &lt;作者>; &lt;name>;YeGoblynQueenne&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=YeGoblynQueenne&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.worldhistory.org/img/r/p/500x600/8039.jpg?v =1689906843&quot; style=&quot;宽度：220px；高度：292px；&quot; />;&lt;br />;《凯尔斯书》是基督教新约四福音书的泥金手稿。它以其复杂的插图而闻名，是作为祭坛的展示品而创作的。 &lt;a href=&quot;https://hackernews.betacat.io/#book-of-kells-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38865408&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Fortran vs Python：Python 在科学计算领域的反直觉崛起（2020）&lt;/stitle>; &lt;id>;https://fortran-lang.discourse.group/t/the-counter -intuitive-rise-of-python-in-scientific-computing/469&lt;/id>; &lt;更新>;2024-01-06T14:01:57.342478Z&lt;/更新>; &lt;link href=&quot;https://fortran-lang. discourse.group/t/the-counter-intuitive-rise-of-python-in-scientific-computing/469&quot;/>; &lt;作者>; &lt;name>;zaikunzhang&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=zaikunzhang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://canada1.discourse-cdn.com/free1/uploads/fortran_lang/original/1X/ 3b29a95d726c1e37d4dde6671227b8811d3efbe2.png&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;作者觉得这篇博文很有趣，但不同意结论。他们认为，并不是 Python 作为编程语言本身的敏捷性，而是发达的库基础设施、在线文档和学习资源使 Bob 能够快速找到 Python kdtree。有一个可用于 Fortran 的 kdtree 库，它提供与成熟的 C 和 C++ 库相似的性能。 &lt;a href=&quot;https://hackernews.betacat.io/#fortran-vs-python-the-counter-intuitive-rise-of-python-in-scientific-computing-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38891232&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个小型手工制作的 CPU 模拟器、C 编译器和操作系统&lt;/stitle>; &lt;id>;https:// /github.com/rswier/swieros&lt;/id>; &lt;更新>;2024-01-06T12:01:57.343252Z&lt;/更新>; &lt;link href=&quot;https://github.com/rswier/swieros&quot;/>; &lt;作者>; &lt;name>;seansh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=seansh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //opengraph.githubassets.com/b56791b81ff5b9613a2735f496a45d19b8b9c146a34f2d075f8e313fbb4a722e/rswier/swieros&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;一个微型手工制作的 CPU 模拟器、C 编译器和操作系统 - GitHub - rswier/swieros：一个微型手工制作的 CPU 模拟器、C 编译器和操作系统 &lt;a href=&quot;https://hackernews. betacat.io/#a-tiny-hand-crafted-cpu-emulator-c-compiler-and-operating-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news .ycombinator.com/item?id=38890540&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed .xml&quot;>; &lt;title type=&quot;text&quot;>;深海采矿的可疑经济学&lt;/stitle>; &lt;id>;https://nautil.us/the-durious-economics-of-deep-sea-mining-309597 /&lt;/id>; &lt;更新>;2024-01-06T11:01:57.343634Z&lt;/更新>; &lt;link href=&quot;https://nautil.us/the-durious-economics-of-deep-sea-mining-309597 /&quot;/>; &lt;作者>; &lt;名称>;dnetesn&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=dnetesn&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://assets.nautil.us/sites/3/nautilus/pxR2vcnz-Keim_BREAKER.png?auto=compress&amp;fm=png&amp;ixlib=php-3.3.1&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;关于深海采矿的争论主要集中在环境影响上，但很少关注其经济效益。一些反对者认为，深海采矿不仅对生态造成灾难性影响，而且也是一项糟糕的投资。实际挑战、高成本、不确定的责任以及深海金属需求的潜在下降使人们对该行业的财务可行性产生了怀疑。 &lt;a href=&quot;https://hackernews.betacat.io/#the-durious-economics-of-deep-sea-mining&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38890238&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;NetSurf Web 浏览器&lt;/stitle>; &lt;id>;https://www.netsurf-browser.org/&lt;/id>; &lt;更新>;2024-01-06T08： 01:57.344022Z&lt;/更新>; &lt;link href=&quot;https://www.netsurf-browser.org/&quot;/>; &lt;作者>; &lt;名称>;jszymborski&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=jszymborski&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.netsurf-browser.org/about/screenshots/images/riscosthumb-wikipedia。 png&quot; style=&quot;宽度：220px；高度：166px；&quot; />;&lt;br />;像老鼠一样小，像猎豹一样快，而且免费。 NetSurf 是一款多平台 Web 浏览器，适用于 RISC OS、类 UNIX 平台（包括 Linux）、Mac OS X 等。 &lt;a href=&quot;https://hackernews.betacat.io/#netsurf-web-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38863933&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;糟糕的科学代码胜过遵循“最佳实践”的代码（2014）&lt;/stitle>; &lt;id>;https://yosefk.com/blog/why-bad-scientific-code-beats-code-following -best-practices.html&lt;/id>; &lt;更新>;2024-01-06T04:01:57.344783Z&lt;/更新>; &lt;link href=&quot;https://yosefk.com/blog/why-bad-scientific-code- beats-code-following-best-practices.html&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;科学家编写的科学代码通常比软件工程师参与的结果更糟糕。最大的混乱是由那些将自己定义为程序员的程序员造成的。科学代码可以受益于更好的软件工程，但很难相信软件工程师能够提供这些好处。 &lt;a href=&quot;https://hackernews.betacat.io/#bad-scientific-code-beats-code-following-best-practices-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38872325&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;因笑话而被解雇的电台记者在仲裁员认为笑话有趣后恢复了工作&lt;/stitle>; &lt;id>;https://apnews.com/article/philadelphia- comedian-fired-whyy-9b5da652a795d77904b660e0c901195d&lt;/id>; &lt;更新>;2024-01-06T15:01:57.345545Z&lt;/更新>; &lt;link href=&quot;https://apnews.com/article/philadelphia-comedian-fired-whyy -9b5da652a795d77904b660e0c901195d&quot;/>; &lt;作者>; &lt;名称>;geox&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=geox&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://dims.apnews.com/dims4/default/97aef9f/2147483647/strip/true/crop/1851x1233+31+0/resize/599x399!/quality/90/?url=https%3A %2F%2Fassets.apnews.com%2F09%2Fb2%2Fe083d41b214e2e867f1620a5c712%2F637edf68f9434ed98d95a05640c1f445&quot; style=&quot;width: 220px;身高：147px;&quot; />;&lt;br />;一名因单口喜剧而被解雇的记者通过仲裁员恢复了费城一家公共广播电台的工作，仲裁员同意他的笑话在某些方面很有趣.&lt;a href=&quot;https://hackernews.betacat.io/#radio-reporter-fired-over-jokes-is-reinstated-after-仲裁员-finds-them-funny&quot; target=&quot;_blank&quot;>;[摘要] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38891555&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;挨家挨户修复 Mac&lt;/stitle>; &lt;id>;https://matduggan.com/fixing-macs-门到门/&lt;/id>; &lt;更新>;2024-01-06T00:01:57.346293Z&lt;/更新>; &lt;link href=&quot;https://matduggan.com/fixing-macs-door-to-door/ &quot;/>; &lt;author>; &lt;name>;jnord&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://www.manhattanportage.com/media/catalog/product/cache/5d6092f643b784d9c9e99823eee7dcab/1/7/1714_blk_angle_3_1.jpg”样式=“宽度：220px; height: 220px;&quot; />;&lt;br />;2008 年大学毕业后，作者搬到了芝加哥，并在 Apple 授权维修中心找到了一份工作。他们是 AppleCare Dispatch 计划的一部分，他们将在那里为客户提供服务&#39; 的家庭修理他们的台式 Mac。这项工作涉及乘坐公共交通工具到城市各处，并与各种客户互动，包括阴谋论者和 &lt;a href=&quot;https://hackernews.betacat.io/#fixing-macs -door-to-door&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38886030&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Gerhard Behles 和 Robert Henke 在 Ableton 上 ( 2016）&lt;/stitle>; &lt;id>;https://roberthenke.com/interviews/ableton.html&lt;/id>; &lt;更新>;2024-01-06T10:01:57.346696Z&lt;/更新>; &lt;link href=&quot;https: //roberthenke.com/interviews/ableton.html&quot;/>; &lt;author>; &lt;name>;antidnan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=antidnan&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://roberthenke.com/files_images/interviews/ableton/GB_RH_2016.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Ableton 的创始人 Gerhard Behles 和 Robert Henke 通过共同的朋友相识，最初相处并不融洽。但是，他们在大学重新建立了联系，并开始一起探索音乐。他们的合作是在他们不同的技能组合的推动下，他们开发了一套音序器系统，该系统后来成为 Ableton Live 的基础。&lt;a href=&quot;https://hackernews.betacat.io/#gerhard-behles-and-robert-henke-on- ableton-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38864623&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;焦点和流程：程序员生产力的权衡 ( 2021）&lt;/stitle>; &lt;id>;https://www.aaronbuxbaum.com/focus-and-flow/&lt;/id>; &lt;更新>;2024-01-06T05:01:57.347086Z&lt;/更新>; &lt;link href= &quot;https://www.aaronbuxbaum.com/focus-and-flow/&quot;/>; &lt;作者>; &lt;名称>;danboarder&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=danboarder&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;程序员总是在寻找提高生产力的方法。本文探讨了心流状态的概念和番茄工作法作为提高生产力的方法。它还讨论了深度工作的重要性，并提供了管理干扰和提高注意力的技巧。 &lt;a href=&quot;https://hackernews.betacat.io/#focus-and-flow-trade-offs-in-programmer-productivity-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38888442&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过 musl 发行版维护者的视角进行系统化&lt;/stitle>; &lt;id>;https://catfox.life/2024/01/05/systemd -through-the-eyes-of-a-musl-distribution-maintainer/&lt;/id>; &lt;更新>;2024-01-06T08:01:57.347835Z&lt;/更新>; &lt;link href=&quot;https://catfox.life /2024/01/05/systemd-through-the-eyes-of-a-musl-distribution-maintainer/&quot;/>; &lt;作者>; &lt;名称>;awilfox&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=awilfox&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://foxdotlife.files.wordpress.com/2018/10/cropped-cat-5- 512-85909.png?w=350&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Systemd 作为一个服务管理器，实际上本身并不是一个糟糕的软件。事实上，它既可以充当服务管理器，也可以替代 inetd(8)，这真的很酷。单元文件格式非常漂亮且富有表现力。定义机制并将策略留给管理员是一个很好的设计。单元文件很容易手动编写，也很容易以自动化方式生成。您可以用几行代码编写一个基本服务，然后根据需要逐步使用其他功能，或者您可以编写一个非常详细的文件，长达数十行，使其准确无误。并行服务启动和套接字激活也是一等公民，这对于使启动更快、更可靠非常重要。它最好的部分是这样的概念：此配置准确地描述了系统在运行时应出现和存在的方式。此外，每个托管单元使用 cgroup 意味着进程跟踪始终可用，无需混乱的 pid 文件或要求守护进程永不分叉。没有理由不存在另一个具有所有这些功能的服务管理器。事实上，我希望社区能够认真对待 systemd 的竞争。让一个包满足所有用例的所有需求会导致严重的问题。 systemd 的变化必然会影响每一个用户——这似乎是显而易见的，但这意味着它的发展更加困难。系统的演变可能（在某些情况下已经）破坏了大量的用例和机器。此外，如果没有竞争，就不会有外部压力推动它走向维护者可能不确定的想法和概念。 GCC 和 Clang 从彼此的成功和失败中学习，并利用这些知识使彼此变得更好。目前还没有任何软件包可以使用 systemd 来执行此操作。如果没有选择，创新就会受到抑制。任何讨论，包括解决，如果不提及它存在的主要原因，那就是nspawn，那就是失职。这是一个有趣的介于 chroot 和像 Docker 这样的完整容器之间的方式。它有特定的用途，我对它没有任何真正的疑虑，但我从未发现它在我的任何工作中有用，所以我没有太多的经验。 networkd 还不成熟，对高级用例没有太多支持，并且没有面向最终用户的 GUI。 timedated 似乎是一种允许用户通过 PolicyKit 操作更改时区的可爱方式，但除此之外，似乎最好由 Chrony 或 NTP 等“真正的”NTP 客户端来处理。 systemd-boot 仅支持 EFI，这使得它不可移植且不灵活。我不喜欢的是它试图在没有其他选择的情况下接管他们所说的“系统层”。我在使用 systemd 时遇到的问题是显而易见的，而不仅仅是挥手说“Unix 好，sysd 坏”。如果有人努力将 systemd 与它所发展的所有其他触角分开，我会真诚地推动将它作为阿德利的服务管理器。 &lt;a href=&quot;https://hackernews.betacat.io/#systemd-through-the-eyes-of-a-musl-distribution-maintainer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38889156&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我制作了一个比较时区的工具&lt;/stitle>; &lt;id>;https://time.fyi/timezones&lt;/id>; &lt;更新>;2024-01-06T01:01:57.348213Z&lt;/更新>; &lt;link href=&quot;https://time.fyi/timezones&quot;/>; &lt;作者>; &lt;名称>;kamranahmedse &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=kamranahmedse&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://time.fyi/brand.png&quot; style=&quot;width ：220px；高度：220px；” />;&lt;br />;time.fyi 在一个地方提供所有与时间相关的工具。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-a-tool-to-compare-time-zones&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38876707&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Microsoft Phi-2 模型将许可证更改为 MIT&lt;/stitle>; &lt;id>;https://huggingface.co/microsoft/phi-2 /commit/7e10f3ea09c0ebd373aebc73bc6e6ca58204628d&lt;/id>; &lt;更新>;2024-01-06T09:01:57.348962Z&lt;/更新>; &lt;link href=&quot;https://huggingface.co/microsoft/phi-2/commit/7e10f3ea09c0ebd373aebc73bc6e6ca58 204628d&quot;/>; &lt;作者>; &lt;名称>;regularfry&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=regularfry&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/product/uploads/1666203761402-6157454831624da88210e627.jpeg?w=200&amp;h=200&amp;f=face&quot; style=&quot;width: 220px; height : 221 像素;&quot; />;&lt;br />;这些许可条款是您与 Microsoft Corporation（或其附属公司之一）之间的协议。它们适用于本许可证随附的源代码、目标代码、机器学习模型或数据（统称为“材料”）。您有权将这些材料用于非商业、非创收、研究目的。 &lt;a href=&quot;https://hackernews.betacat.io/#microsoft-phi-2-model-changes-licence-to-mit&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38889539&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们是否将 Git 提交视为差异、快照和/或历史记录？&lt;/stitle>; &lt;id>;https://jvns.ca/blog/ 2024/01/05/do-we-think-of-git-commits-as-diffs--snapshots--or-histories/&lt;/id>; &lt;更新>;2024-01-06T05:01:57.349338Z&lt;/更新>; &lt;link href=&quot;https://jvns.ca/blog/2024/01/05/do-we-think-of-git-commits-as-diffs--snapshots--or-histories/&quot;/>; &lt;作者>; &lt;name>;soheilpro&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=soheilpro&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://jvns.ca/images/git-commit-poll.png&quot; style=&quot;宽度：220px；高度：114px；&quot; />;&lt;br />;理解 git 提交是如何实现的对我来说感觉非常简单，但要弄清楚其他人如何看待提交则要困难得多。 Mastodon 上的一项民意调查显示，人们认为 Git 提交要么是快照，要么是差异。 Git 提交存储为快照，但它们也可以在内部表示为差异。 &lt;a href=&quot;https://hackernews.betacat.io/#do-we-think-of-git-commits-as-diffs-snapshots-and-or-histories&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38888527&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;HortusFox – 自托管协作工厂管理系统&lt;/stitle>; &lt;id>;https://github.com/ danielbrendel/hortusfox-web&lt;/id>; &lt;更新>;2024-01-06T02:01:57.349725Z&lt;/更新>; &lt;link href=&quot;https://github.com/danielbrendel/hortusfox-web&quot;/>; &lt;作者>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /repository-images.githubusercontent.com/696013725/e51979ca-a8f0-4cae-949c-87f464e49f6a&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;HortusFox 是一个自托管的协作植物管理系统，允许用户在自己的环境中管理他们的植物。它具有用户身份验证、任务、库存管理、协作聊天和历史日志的功能。要安装HortusFox，用户需要设置PHP环境、MySQL数据库和Composer。然后，他们可以克隆或下载存储库并安装所需的依赖项。 &lt;a href=&quot;https://hackernews.betacat.io/#hortusfox-a-self-hosted-collaborative-plant-management-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38887579&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;蔡司的“Holocam”将玻璃窗变成相机&lt;/stitle>; &lt;id>;https://www.digitalcameraworld.com/news/this-holographic-camera -turns-any-window-into-an-invisible-camera&lt;/id>; &lt;更新>;2024-01-05T18:01:57.350101Z&lt;/更新>; &lt;link href=&quot;https://www.digitalcameraworld.com/ news/this-holography-camera-turns-any-window-into-an-invisible-camera&quot;/>; &lt;author>; &lt;name>;toss1&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=toss1&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.mos.cms.futurecdn.net/tzwXNMkCUsLmT5HLhKdqaD-320-80.jpg&quot; style=&quot;width ：220px；高度：124px；” />;&lt;br />;蔡司将其 Holocam 技术带到 CES 2024，该技术可以将任何玻璃屏幕变成相机。该技术消除了对切口或打孔的需要，并允许与屏幕上的人进行直接目光接触。 &lt;a href=&quot;https://hackernews.betacat.io/#zeiss-s-holocam-turns-glass-windows-into-cameras&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38881981&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;BBN 和 ARPAnet 的发展&lt;/stitle>; &lt;id>;https://www.freaktakes.com/p/the-third-university-of -cambridge&lt;/id>; &lt;更新>;2024-01-06T02:01:57.350496Z&lt;/更新>; &lt;link href=&quot;https://www.freaktakes.com/p/the-third-university-of-cambridge&quot; />; &lt;author>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages% 2Fb0b76a5a-b354-4027-aa35-0717871912ff_1125x756.jpeg”样式=“宽度：220像素；高度：148像素；” />;&lt;br />;BBN 是为 ARPAnet 的诞生付出最多努力的承包商，体现了“学术界和商业界之间的中间立场”。 BBN 的结构为在公司结构内部署研究人员进行雄心勃勃的研究项目提供了理想的管理框架。 &lt;a href=&quot;https://hackernews.betacat.io/#bbn-and-the-development-of-the-arpanet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38873635&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;应用程序可以成为一顿家常饭菜（2020）&lt;/stitle>; &lt;id>;https://www.robinsloan.com/notes/home-cooked- app/&lt;/id>; &lt;更新>;2024-01-05T16:01:57.350876Z&lt;/更新>; &lt;link href=&quot;https://www.robinsloan.com/notes/home-cooked-app/&quot;/>; &lt;作者>; &lt;name>;distcs&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=distcs&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://www.robinsloan.com/img/boopsnoop-card-v2.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Tapstack 是 Robin Sloan 为其家人创建的一款消息应用程序，是他们保持联系的一种简单而亲密的方式。该应用程序有来自手机摄像头的实时反馈、代表家庭成员的面孔网格以及查看后消失的消息。尽管用户基数较小且收入不足，Tapstack 仍提供了独特的个性化通信体验。 &lt;a href=&quot;https://hackernews.betacat.io/#an-app-can-be-a-home-cooked-meal-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38877423&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;