<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-02-05T09:59:18.610121Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;2023 年的 Deno&lt;/stitle>; &lt;id>;https://deno.com/blog/deno-in-2023&lt;/id>; &lt;更新>;2024-02-05T09:25 ：48.627645Z&lt;/updated>; &lt;link href=&quot;https://deno.com/blog/deno-in-2023&quot;/>; &lt;author>; &lt;name>;olestr&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=olestr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1080190?v=4&quot; style= “宽度：220 像素；高度：220 像素；” />;&lt;br />;2023 年，Deno 在 Node/npm 兼容性和性能方面取得了重大进步。它现在可以理解 package.json 文件并可以导入内置 Node 模块。 Web 服务器 API Deno.serve 已稳定，HTTP 吞吐量也有所提高。 Deno 的配置文件 deno.json 现在兼作导入映射。 Deno 还在编辑器集成、Web 框架功能和语言服务器协议方面进行了改进。它集成了 WebGPU，添加了对 Jupyter 的支持，并发布了几个有用的 Rust crate。 Fresh Web 框架通过新功能和性能改进得到了增强。 Deno Subhosting 成为自助服务，并且推出了云原语。 Deno 2 正在准备改进兼容性和依赖管理。 &lt;a href=&quot;https://hackernews.betacat.io/#deno-in-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39259068&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;WebAssembly Playground&lt;/stitle>; &lt;id>;https://observablehq.com/@chaosalchemist/wasm-playground&lt;/id>; &lt;更新>;2024-02-05T05:58:48.629665Z&lt;/更新>; &lt;link href=&quot;https://observablehq.com/@chaosalchemist/wasm-playground&quot;/>; &lt;作者>; &lt;name>;ifree&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =ifree&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;https://en.wikipedia.org/wiki/WebAssembly https://developer.mozilla.org/en-US/docs/WebAssembly 工具链运行时Wasmer、Wasmtime、更多编译器 emscripten 在网络上运行 emscripten：clang-js、Emception、wasm-clang 其他 更喜欢手动编写 wasm？ ->; wasmtoy &lt;a href=&quot;https://hackernews.betacat.io/#webassemble-playground&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=39257529&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;超越自我注意力：小型语言模型如何预测下一个标记&lt;/stitle>; &lt;id>;https://shyam.blog/posts/beyond-self-attention/&lt;/id>; &lt;updated>; 2024-02-04T18:58:48.630746Z&lt;/更新>; &lt;link href=&quot;https://shyam.blog/posts/beyond-self-attention/&quot;/>; &lt;作者>; &lt;名称>;tplrbv &lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=tplrbv&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shyam.blog/posts/beyond-自我注意/图像/a9f2adc6c1c25ebb263caf42df37f4429c4ed44eda0a0a228cba52b7a00aeb9d.png“风格=”宽度：220px;高度：124px;“ />;&lt;br />;每个转换器块都会学习将给定提示与训练语料库中找到的一类字符串相关联的权重。训练语料库中这些字符串后面的标记分布是块输出的下一个标记的预测。最终的变压器输出是每个块的预测的线性组合。 &lt;a href=&quot;https://hackernews.betacat.io/#beyond-self-attention-how-a-small-language-model-predicts-the-next-token&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39251909&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DEF CON 32 已取消。我们取消了它&lt;/stitle>; &lt;id>;https://forum.defcon.org/node/248360&lt;/id>; &lt;updated>;2024-02-05T03:58:48.631261Z&lt;/updated>; &lt;link href= &quot;https://forum.defcon.org/node/248360&quot;/>; &lt;作者>; &lt;名称>;Spodera&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Spodera&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;(filedata/fetch?id=248362&amp;amp;d=1707096806) DEF CON 已取消。我们取消了它。在与 DEF CON 建立了 25 年的良好合作关系后，凯撒突然终止了与 DEF CON 的合同，导致我们没有举办 DC 32 的场地，距离 Con 只剩下大约七个月的时间了！我们不知道为什么凯撒取消了我们，除了 &lt;a href=&quot;https://hackernews.betacat.io/#def-con-32-was-canceled-we-un-canceled-它&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39256930&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple iPod Shuffle USB 接口引脚排列&lt;/stitle>; &lt;id>; https://pinoutguide.com/PortableDevices/ipod_shuffle_pinout.shtml&lt;/id>; &lt;更新>;2024-02-05T02:58:48.631736Z&lt;/更新>; &lt;link href=&quot;https://pinoutguide.com/PortableDevices/ipod_shuffle_pinout .shtml&quot;/>; &lt;作者>; &lt;名称>;gibspaulding&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gibspaulding&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://pinoutguide.com/visual/gen/ipod_shuffle.jpg&quot; style=&quot;宽度：220px；高度：171px；&quot; />;&lt;br />;请记住，此插孔也是耳机插孔。从音频到 USB 数据（+ 和 -）的转换发生在适配器底座内的电路板上。 VCC 和 GND 之间还有一个公共二极管，以确保 VCC 完美隔离。当需要从底座以外的任何地方充电时，请将引脚 3 接地，并将 Vcc 应用到音频插孔上的引脚 1、2 和 4。 &lt;a href=&quot;https://hackernews.betacat.io/#apple-ipod-shuffle-usb-interface-pinout&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39256687&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我也黑了我的车&lt;/stitle>; &lt;id>;https://goncalomb.com/blog/2024/01/30/f57cf19b-how-i-also-hacked -my-car&lt;/id>; &lt;更新>;2024-02-05T00:58:48.632229Z&lt;/更新>; &lt;link href=&quot;https://goncalomb.com/blog/2024/01/30/f57cf19b-how- i-also-hacked-my-car&quot;/>; &lt;作者>; &lt;名称>;goncalomb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=goncalomb&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://goncalomb.com/blog/files/f57cf19b/avn-0.jpg”样式=“宽度：220px；高度：153px；” />;&lt;br />;作者通过利用固件中的后门攻击了他们的汽车 Dacia Sandero 的信息娱乐系统。他们使用带有 autorun.sh 脚本的 USB 驱动器来获得 root 访问权限并运行自定义软件。他们还发现了一种新的二进制协议，用于更新设备上的文件，并在小工具模式下使用 Raspberry Pi 来模拟 Android 设备并注入后门。 &lt;a href=&quot;https://hackernews.betacat.io/#i-also-hacked-my-car&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39231052&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Stract：开源、非盈利搜索引擎&lt;/stitle>; &lt;id>;https://stract.com/&lt;/id>; &lt;更新>;2024-02-04T20： 58:48.632687Z&lt;/updated>; &lt;link href=&quot;https://stract.com/&quot;/>; &lt;作者>; &lt;name>;FLpxpyJ&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=FLpxpyJ&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;使用光学器件自定义您的搜索：&lt;a href=&quot;https://hackernews.betacat.io/#stract-open-souce-non- profit-search-engine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39254172&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;UUID 基准战&lt;/stitle>; &lt;id >;https://ardentperf.com/2024/02/03/uuid-benchmark-war/&lt;/id>; &lt;更新>;2024-02-05T02:58:48.633161Z&lt;/更新>; &lt;link href=&quot;https:// /ardentperf.com/2024/02/03/uuid-benchmark-war/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ardentperf.files.wordpress.com/2024/02/image-4.png?w=1024&quot; style=&quot;width ：220像素； height: 123px;&quot; />;&lt;br />;本文讨论了 PostgreSQL 中四种不同存储主键方法之间的基准之战。作者将 UUIDv7 与其他方法的性能进行了比较，并强调了 bigint 的大小优势。 &lt;a href =&quot;https://hackernews.betacat.io/#uuid-benchmark-war&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =39254871&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;Sapling：受 vi 启发的实验性编辑器，您可以在其中编辑代码，而不是文本&lt;/stitle>; &lt;id>;https://github.com/kneasle/sapling&lt;/id>; &lt;updated>;2024-02-04T20:58 ：48.633624Z &lt;/更新>; &lt;link href=&quot;https://github.com/kneasle/sapling&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b150fec0c50d1ae51de45a34190b7f272d7fcf950333479218cd91a7e71fc8eb/kneasle/sapling&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;一个高度实验性的 vi 风格编辑器，您可以在其中编辑代码，而不是文本。 - GitHub - kneasle/sapling：一个高度实验性的 vi 风格编辑器，您可以在其中编辑代码，而不是文本。&lt;a href=&quot;https://hackernews.betacat.io/#sapling-experimental-vi-inspired-editor-where-you-edit-code-not-text&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39253798&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一位记者探究美国如何资助原子弹的旅程&lt;/stitle>; &lt;id>;https://www.nytimes.com/2024/ 01/17/us/politics/atomic-bomb-secret-funding-congress.html&lt;/id>; &lt;更新>;2024-02-05T03:58:48.634108Z&lt;/更新>; &lt;link href=&quot;https://www .nytimes.com/2024/01/17/us/politics/atomic-bomb-secret-funding-congress.html&quot;/>; &lt;author>; &lt;name>;occamschainsaw&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=occamschainsaw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/12/08/multimedia/00dc -atomic-01-tlqf/00dc-atomic-01-tlqf-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220px; height: 273px;&quot; />;&lt;br />;作者反思了美国政府如何资助原子弹项目及其周围的秘密。&lt;a href=&quot;https://hackernews.betacat.io/#a-reporter- s-journey-into-how-the-us-funded-the-bomb&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 39187529&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;文本&quot;>;Tindallgrams&lt;/stitle>; &lt;id>;https://www.nasa.gov/history/alsj/alsj-Tindallgrams.html&lt;/id>; &lt;更新>;2024-02-05T02:58:48.634588Z&lt;/更新>; &lt;link href=&quot;https://www.nasa.gov/history/alsj/alsj-Tindallgrams.html&quot;/>; &lt;作者>; &lt;name>;hubraumhugo&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=hubraumhugo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;阿波罗 8 号登月任务比任何其他任务都产生了更多的兴奋和问题。比尔·廷德尔组织了会议来回答这些问题，这廷德尔会以可读的方式总结讨论，人们热切地等待下一个廷德尔图。 &lt;a href=&quot;https://hackernews.betacat.io/#tindallgrams&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 39174373&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;浏览器扩展被低估：可破解软件的承诺（2019）&lt;/stitle>; &lt;id>;https://www.geoffreylitt.com/2019/07/29/browser-extensions&lt;/id>; &lt;updated>;2024 -02-04T15：58：48.635071Z &lt;/更新>; &lt;link href =“https://www.geoffreylitt.com/2019/07/29/browser-extensions”/>; &lt;作者>; &lt;名称>; mufty &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mufty&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.geoffreylitt.com/图片/article_images/legos.jpg?1705878965&quot; style=&quot;宽度：220px；高度：90px；&quot; />;&lt;br />;浏览器扩展是一个特殊的生态系统，允许用户以创造性的方式修改应用程序。它们对我们如何使用计算机提供深度控制，并允许我们个性化自己的使用方式。 &lt;a href=&quot;https://hackernews.betacat.io/#browser-extensions-are-undererated-the-promise-of-hackable-software-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39251095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;代码片段如何失败&lt;/stitle>; &lt;id>;https://www.bbc.com/future/article/20240202-what-发生在代码片段&lt;/id>; &lt;更新>;2024-02-04T20:58:48.635564Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/future/article/20240202-what -happened-to-the-codpiece&quot;/>; &lt;作者>; &lt;名称>;rntn&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rntn&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src=“https://ichef.bbci.co.uk/images/ic/480xn/p0h8ywt4.jpg.webp”样式=“宽度：220像素；高度：124像素；” />;&lt;br />;在文艺复兴时期，上流社会的男士穿着 codpieces，这是一种穿在胯部的织物口袋，并填充以形成各种形状。这些装饰性服装让男人们能够展示自己的下体，甚至被用来展示军事实力。然而，到了 16 世纪末，codpieces 不再流行，而且尺寸开始缩小。 &lt;a href=&quot;https://hackernews.betacat.io/#how-the-codpiece-flopped&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39253603&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Dijkstra 在荷兰电视台的采访 (2000)&lt;/stitle>; &lt;id>;https://pncnmnp.github.io/blogs/translated-dijkstra.html&lt;/id>; &lt;更新>;2024- 02-04T20:58:48.636036Z&lt;/更新>; &lt;link href=&quot;https://pncnmnp.github.io/blogs/translated-dijakstra.html&quot;/>; &lt;作者>; &lt;名称>;pncnmnp &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=pncnmnp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;著名计算机科学家 Edsgar W. Dijkstra 强调了质量、正确性、和计算机编程的优雅。他认为编程应该以谦逊的态度进行，而不是依赖聪明的技巧。 Dijkstra 还强调了编程的复杂性以及需要仔细的控制机制以避免错误。 &lt;a href=&quot;https://hackernews.betacat.io/#dijkstra-s-interview-on-dutch-tv-2000&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39253944&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;麻省理工学院和 IBM 找到了围绕暴力数学的聪明的人工智能方法&lt;/stitle>; &lt;id>;https://spectrum.ieee.org/mathematical-model-ai&lt; /id>; &lt;更新>;2024-02-05T04:58:48.637879Z&lt;/更新>; &lt;link href=&quot;https://spectrum.ieee.org/mathematical-model-ai&quot;/>; &lt;作者>; &lt;名称>;Brajeshwar &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee .org/media-library/dots-of-light-starting-from-the-outside-in.jpg?id=51285289&amp;width=1200&amp;height=801&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;研究人员找到了一种使用类脑神经网络更有效地求解基本方程的新方法。通过将神经网络与物理模拟器相结合，这种称为物理增强深度代理（PEDS）模型的新方法在处理偏微分方程时的准确度可以达到其他神经网络的三倍。此方法将所需的训练数据减少至少 100 倍，以实现 5% 的目标误差。 &lt;a href=&quot;https://hackernews.betacat.io/#mit-and-ibm-find-clever-ai-ways-around-brute-force-math&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39239765&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;戒掉智能手机的实用指南&lt;/stitle>; &lt;id>;https://www.nytimes.com/2024/02 /01/technology/iphone-mental-health-flip-phone.html&lt;/id>; &lt;更新>;2024-02-05T01:58:48.638369Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes. com/2024/02/01/technology/iphone-mental-health-flip-phone.html&quot;/>; &lt;作者>; &lt;名称>;lxm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=lxm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2024/02/01/multimedia/01FlipPhone-pktf/01FlipPhone- pktf-articleLarge.jpg？quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;宽度：220px；高度：298px；&quot; />;&lt;br />;去年5月，纽瓦克的厨柜制造商Fabuwood实施了开会期间禁止使用电话的政策。该公司在会议室外安装了“设备架”，并向放弃智能手机的员工提供翻盖手机。员工发现，在会议期间不使用智能手机可以提高他们的参与度和工作效率。 &lt;a href=&quot;https://hackernews.betacat.io/#a-practical-guide-to-quitting-your-smartphone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39256176&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DNS 查询可以返回多少个 IP 地址？ （2015）&lt;/stitle>; &lt;id>;https://www.ethanheilman.com/x/21/index.html&lt;/id>; &lt;更新>;2024-02-04T19:58:48.639777Z&lt;/更新>; &lt;link href=&quot;https://www.ethanheilman.com/x/21/index.html&quot;/>; &lt;作者>; &lt;名称>;EthanHeilman&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =EthanHeilman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ethanheilman.com/x/21/figs/tumblr_inline_nbe9tcvlmS1qf5p6p.png&quot; style=&quot;width: 220px;高度：133px；” />;&lt;br />;一次DNS查询最多可以返回4095个IP地址。域名的长度会影响可以返回的IP地址数量。 &lt;a href=&quot;https://hackernews.betacat.io/#how-many-ip-addresses-can-a-dns-query-return-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39252206&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pkl，一种用于配置的编程语言&lt;/stitle>; &lt;id>;https://pkl-lang.org/blog/introducing-pkl .html&lt;/id>; &lt;更新>;2024-02-04T09:58:48.640236Z&lt;/更新>; &lt;link href=&quot;https://pkl-lang.org/blog/introducing-pkl.html&quot;/>; &lt;作者>; &lt;name>;bioballer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bioballer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //pkl-lang.org/blog/_images/introducing-pkl/intellij-autocomplete.gif&quot; style=&quot;width: 220px; height: 109px;&quot; />;&lt;br />;Pkl 是一种用于生成配置的开源编程语言。它结合了静态语言和通用语言的最佳功能，允许用户使用编程语言的功能编写声明性和简单的代码。 &lt;a href=&quot;https://hackernews.betacat.io/#pkl-a-programming-language-for-configuration&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39232976&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无聊的 Python：依赖管理（2022）&lt;/stitle>; &lt;id>;https://www.b-list.org/weblog/2022/may/13/boring- python-dependency/&lt;/id>; &lt;更新>;2024-02-04T22:58:48.640693Z&lt;/更新>; &lt;link href=&quot;https://www.b-list.org/weblog/2022/may/13/ Boring-python-dependency/&quot;/>; &lt;作者>; &lt;名称>;bruh2 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bruh2&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;本文以无聊的方式讨论如何构建/管理/部署Python应用程序。作者强调了使用可靠的工具和流程来最大限度地减少错误和意外的重要性。本文重点介绍使用 setuptools、pip 和虚拟环境管理依赖项。 &lt;a href=&quot;https://hackernews.betacat.io/#boring-python-dependency-management-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39188029&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;解决暗网之谜（2022）&lt;/stitle>; &lt;id>;https://sizeof.life/posts/darknet-riddle/&lt;/id>; &lt;更新>;2024-02- 04T20:58:48.641163Z&lt;/updated>; &lt;link href=&quot;https://sizeof.life/posts/darknet-riddle/&quot;/>; &lt;作者>; &lt;name>;FLpxpyJ&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=FLpxpyJ&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://sizeof.life/img/darknet-riddle.png&quot; style= “宽度：220 像素；高度：130 像素；” />;&lt;br />;Reddit 上发布了一个“.onion”链接，其中包含疑似谜语。这个谜语引出了一条包含另一个谜语的隐藏信息。解开第二个谜语后，收到了一个二进制代码，生成了一个包含素数的文本文件。下一步涉及使用质数导航到 URL 并执行重复播放技术来显示最终 URL。 &lt;a href=&quot;https://hackernews.betacat.io/#solving-the-darknet-riddle-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39254274&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Netflix：盗版难以竞争且增长迅速&lt;/stitle>; &lt;id>;https://torrentfreak.com/netflix-piracy-is-difficult-to-compete-against -and-grind-rapidly-240204/&lt;/id>; &lt;更新>;2024-02-04T21:58:48.641649Z&lt;/更新>; &lt;link href=&quot;https://torrentfreak.com/netflix-piracy-is-difficult -to-compete-against-and-forming-rapidly-240204/&quot;/>; &lt;author>; &lt;name>;notamy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=notamy&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;Netflix 通过提供合法且便捷的流媒体平台将自己定位为盗版竞争对手。然而，盗版再次开始增长，引起了 Netflix 的担忧。 &lt;a href=&quot;https://hackernews.betacat.io/#netflix-piracy-is-difficult-to-compete-against-and-forming-rapidly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39254807&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过多面体透镜解释神经网络（2022）&lt;/stitle>; &lt;id>;https://www.lesswrong.com/posts/ eDicGjD9yte6FLSie/interpreting-neural-networks-through-the-polytope-lens&lt;/id>; &lt;更新>;2024-02-04T19:58:48.642131Z&lt;/更新>; &lt;link href=&quot;https://www.lesswrong.com /posts/eDicGjD9yte6FLSie/interpreting-neural-networks-through-the-polytope-lens&quot;/>; &lt;author>; &lt;name>;sva_&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sva_ &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://res.cloudinary.com/lesswrong-2-0/image/upload/f_auto,q_auto/v1/mirroredImages/eDicGjD9yte6FLSie /ujwl46m0pgeahjumbbee&quot; style=&quot;宽度：220px；高度：219px；&quot; />;&lt;br />;机械可解释性旨在解释神经网络在具体细节层面上学到了什么。以前的机制描述使用单个神经元或其线性组合来理解网络学到的表示。然而，多面透镜提供了一个超越单个神经元的新视角，探索分段线性激活的方式&lt;a href=&quot;https://hackernews.betacat.io/#interpreting-neural-networks-through-the-polytope-lens -2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39252989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/内容>; &lt;/条目>; &lt;/提要>;