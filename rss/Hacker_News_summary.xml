<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-04T13:57:37.632937Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Jeffrey Snover 和 PowerShell 的制作&lt;/stitle>; &lt;id>;https://corecursive.com/building-powershell-with-jeffrey-snover/&lt;/id>; &lt;更新>; 2024-07-04T11:57:29.750908Z&lt;/更新>; &lt;link href=&quot;https://corecursive.com/building-powershell-with-jeffrey-snover/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://corecursive.com/assets/生成/102/action-315-65cce73fd.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;PowerShell 的创建者杰弗里·斯诺弗 (Jeffrey Snover) 分享了他克服 Microsoft 内部的阻力和怀疑，开发出一款彻底改变 Windows 系统管理的命令行工具的故事。尽管面临重组、降级和外包等诸多挑战，Jeffrey 仍坚持自己的愿景，最终创建了一个全面的管理解决方案，... &lt;a href=&quot;https://hackernews.betacat.io/#jeffrey-snover -and-the-making-of-powershell&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40874013&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建数据压缩Haskell 中使用霍夫曼代码的实用程序&lt;/stitle>; &lt;id>;https://lazamar.github.io/haskell-data-compression-with-huffman-codes/&lt;/id>; &lt;updated>;2024-07-04T04:57： 29.753342Z&lt;/更新>; &lt;link href=&quot;https://lazamar.github.io/haskell-data-compression-with-huffman-codes/&quot;/>; &lt;作者>; &lt;名称>;lazamar &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=lazamar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lazamar.github.io/images/data-压缩器.svg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文讨论了使用哈夫曼编码在 Haskell 中实现数据压缩程序，该编码将每个字符映射到唯一的位序列，将常见字符映射到较短的位序列，将罕见字符映射到较长的位序列。该程序在编码和解码二进制文件时使用惰性来保持内存占用恒定，并且可用于压缩... &lt;a href=&quot;https://hackernews.betacat.io/#building-a-data-compression- utility-in-haskell-using-huffman-codes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40872332&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;这应该是一张地图或 500 张地图？&lt;/stitle>; &lt;id>;https://escapethealgorithm.substack.com/p/should-this-be-a-map-or-500-maps&lt;/id>; &lt;updated>;2024-07 -04T02:57:29.753766Z&lt;/更新>; &lt;link href=&quot;https://escapethealgorithm.substack.com/p/should-this-be-a-map-or-500-maps&quot;/>; &lt;作者>; &lt;名称>;cromulent&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=cromulent&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8834751c-9eca-49e7- 9887-4ab8ac6727b2_2880x1800.png&quot; style=&quot;宽度: 220px; height: 138px;&quot; />;&lt;br />;西班牙官方地理学家托马斯·洛佩兹 (Tomás Lopez) 要求当地牧师绘制其省份地图的故事，强调了设计中模块化和表现力之间的权衡。作者反思了这种动态是如何实现的存在于生活的各个方面，从网页设计到人际关系，并鼓励读者在自己的创造性工作中考虑特异性和妥协的价值&lt;a href=&quot;https://hackernews.betacat.io/#should-this- be-a-map-or-500-maps&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40853665&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Shipt 的算法受到挤压他们反击了&lt;/stitle>; &lt;id>;https://spectrum.ieee.org/shipt&lt;/id>; &lt;更新>;2024-07-04T03:57:29.754187Z&lt;/更新>; &lt;link href=&quot; https://spectrum.ieee.org/shipt&quot;/>; &lt;author>; &lt;name>;cyberlimerence&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=cyberlimerence&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee.org/media-library/image.png?id=52511774&amp;width=1200&amp;height=1604&quot; style=&quot;width: 220px; height: 295px;&quot; />;&lt;br />;负责运送杂货和其他物品的船舶工人注意到 2020 年的工资难以预测，于是联合起来收集数据并创建了一个工具来分析他们的工资，发现 40% 的工人获得了丰厚的工资该项目强调了零工经济中透明度和代理的重要性，并引发了一场工人权利运动，对所有工人都有影响...... &lt;a href=&quot;https://hackernews.betacat.io/#shipt- s-algorithm-squeezed-gig-workers-they-fought-back&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40845628&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;打破跨大西洋航行记录超过一天（2016 年）&lt;/stitle>; &lt;id>;https://www.yachtingworld.com/extraordinary-boats/faster-than-the-weather-how-comanche-took-more-比-一天关闭-the-transatlantic-record-99160&lt;/id>; &lt;更新>;2024-07-04T10:57:29.754685Z&lt;/更新>; &lt;link href=&quot;https://www.yachtingworld.com /extraordinary-boats/faster-than-the-weather-how-comanche-took-more-day-off-the-transatlantic-record-99160&quot;/>; &lt;author>; &lt;name>;robaato&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=robaato&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://keyassets.timeincuk.net/inspirewp /live/wp-content/uploads/sites/21/2016/01/YACHTING-LOGO-BLACK-80px.jpg&quot; style=&quot;width: 220px;高度：140px;&quot; />;&lt;br />;30.5m 超大型游艇 Comanche 打破了跨大西洋单体船纪录，用时 5 天 14 小时 21 m 完成了从纽约 Ambrose Light 到康沃尔郡 The Lizard Point 的 2,880 英里航程，击败了航海家斯坦·霍尼 (Stan Honey) 带领的船员们成功应对了罕见的天气状况，达到了每天超过 550 英里的速度，平均航速达到了 21.44 节……&lt;a href=&quot;https:// hackernews.betacat.io/#writing-transatlantic-sailing-record-by-more-than-a-day-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news .ycombinator.com/item?id=40843185&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed .xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Xcapture-BPF – 类似 Linux 顶级，但具有 Xray 视觉&lt;/stitle>; &lt;id>;https://0x.tools/&lt;/id>; &lt;updated>;2024 -07-03T21：57：29.755249Z &lt;/更新>; &lt;link href =“https://0x.tools/”/>; &lt;作者>; &lt;名称>; tanelpoder &lt;/名称>; &lt;uri>; https://news.ycombinator .com/user?id=tanelpoder&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://0x.tools/images/xcapture-bpf-stacktiles.png&quot; style=&quot;宽度：220px； height: 238px;&quot; />;&lt;br />;0x.tools 是一组开源实用程序，用于分析 Linux 上的应用程序性能，提供低开销的线程活动采样器和基于 eBPF 的工具，用于系统级概述和深入分析这些工具专为生产使用而设计，注重简单性、最小依赖性和易用性，并且可在 GPL v3 许可证下使用。 -hn-xcapture-bpf-like-linux-top-but-with-xray-vision&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40869877&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;使用 Jaccard 相似度和 MinHash 查找近似重复&lt;/stitle>; &lt;id>;https://blog.nelhage.com/post/fuzzy-dedup/&lt;/id>; &lt;updated>;2024-07-04T05 :57:29.755796Z&lt;/updated>; &lt;link href=&quot;https://blog.nelhage.com/post/fuzzy-dedup/&quot;/>; &lt;作者>; &lt;name>;brianyu8&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=brianyu8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.nelhage.com/post/fuzzy-dedup/probability -10-hashes.png&quot; style=&quot;width: 220px; height: 145px;&quot; />;&lt;br />;作者探索了通过 Jaccard 相似度和 MinHash 近似技巧进行近似去重的方法，该方法通常用于识别大集合中的相似文档。该方法包括将文档转换为特征集，使用 MinHash 为每个集合计算“签名”，然后按签名对文档进行分组以查找近似重复项 &lt;a href=&quot;https://hackernews.betacat.io/#finding-near-duplicates-with-jaccard-similarity。 -and-minhash&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40872438&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sans-IO：有效 Rust 的秘密网络服务&lt;/stitle>; &lt;id>;https://www.firezone.dev/blog/sans-io&lt;/id>; &lt;updated>;2024-07-04T03:57:29.756877Z&lt;/updated>; &lt;link href=&quot; https://www.firezone.dev/blog/sans-io&quot;/>; &lt;作者>; &lt;名称>;wh33zle&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wh33zle&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.firezone.dev/_next/image?url=%2Fimages%2Flogo-text.svg&amp;w=384&amp;q=75&quot; style=&quot;宽度：220px； height: 220px;&quot; />;&lt;br />;Firezone 的连接库 connlib 使用 sans-IO 设计来管理网络连接和 WireGuard 隧道，从而实现快速、详尽的测试、深度定制以及对其功能的高度保证。 -IO设计抽象了IO和时间，允许使用纯状态机和事件循环，这提供了灵活性，组合良好，并且易于测试和维护。 #sans-io-the-secret-to- effective-rust-for-network-services&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40872020&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;Show HN：我为大手掌制作了一个分体式键盘&lt;/stitle>; &lt;id>;https://www.jogmekeebs.com&lt;/id>; &lt;updated>;2024-07-04T07:57:29.757396Z &lt;/更新>; &lt;link href=&quot;https://www.jogmekeebs.com&quot;/>; &lt;作者>; &lt;名称>;jogme&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jogme &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.jogmekeebs.com/wp-content/uploads/DSC06311.jpg&quot; style=&quot;width: 220px;高度：147px;&quot; />;&lt;br />; &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-a-split-keyboard-for-large-palms&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40872978&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用 150 行 C 语言击败 NumPy 矩阵乘法&lt;/stitle>; &lt;id>;https: //salykova.github.io/matmul-cpu&lt;/id>; &lt;更新>;2024-07-03T21:57:29.757932Z&lt;/更新>; &lt;link href=&quot;https://salykova.github.io/matmul-cpu &quot;/>; &lt;author>; &lt;name>;p1esk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=p1esk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://salykova.github.io/assets/matmul_cpu/benchmark_mt.png”样式=“宽度：220px； height: 178px;&quot; />;&lt;br />;作者在 CPU 上实现了高性能矩阵乘法算法，在各种矩阵大小上实现了超过 1 TFLOPS 的峰值性能，并将其与 NumPy 的性能进行了比较。该算法使用使用 OpenMP 指令进行缓存阻塞和并行化，以优化数据重用并减少主内存访问，并且设计用于任意矩阵大小。 -in-150-lines-of-c&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40870345&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;扩散强迫：下一步-令牌预测满足全序列扩散&lt;/stitle>; &lt;id>;https://boyuan.space/diffusion-forcing/&lt;/id>; &lt;updated>;2024-07-04T02:57:29.758462Z&lt;/updated>; &lt;link href=&quot;https://boyuan.space/diffusion-forcing/&quot;/>; &lt;作者>; &lt;名称>;magoghm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=magoghm&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://boyuan.space/diffusion-forcing/static/images/mit.jpg&quot; style=&quot;width: 220px; height: 166px;&quot; />;&lt;br />;Diffusion Forcing结合了全序列扩散模型和next-token模型的优点，可以灵活控制采样时的行为，实现稳定一致的视频预测、更长的序列生成和决策- 制作能力，在各种任务中超越基线。 [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40871783&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：哪里可以卖老式电脑&lt;/stitle>; &lt;id>;https://news. ycombinator.com/item?id=40841698&lt;/id>; &lt;更新>;2024-07-04T09:57:29.759010Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=40841698 &quot;/>; &lt;author>; &lt;name>;ipaddr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ipaddr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;老式计算机像 Commodore 64 一样，可以通过当地的爱好者团体、eBay 或古董电脑节出售，但价格往往低于其原始价值。研究 eBay 上出售的商品的价格并考虑出售所需的时间和精力非常重要，因为老式电脑的市场可能紧张且令人失望。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-where-to-sell-vintage-computers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40841698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DS_store 的起源 (2006)&lt;/stitle>; &lt;id>;https://www.arno.org/on-the-origins-of-ds-store &lt;/id>; &lt;更新>;2024-07-03T21:57:29.759528Z&lt;/更新>; &lt;link href=&quot;https://www.arno.org/on-the-origins-of-ds-store&quot;/>; &lt;author>; &lt;name>;edavis&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=edavis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;.DS_Store 文件为由 Apple 技术主管于 1999 年命名，他们希望将 Finder 的后端功能作为公共 API 提供，因此得名“桌面服务商店”。不幸的是，该文件经常被不必要地创建，并且桌面服务 API 尽管已被其他 Apple 服务使用，但尚未完全发布。 &lt;a href=&quot;https://hackernews.betacat.io/#the-origins-of-ds-store-2006&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40870357&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Chrome 在 Windows 上对 WebGPU 工作负载进行 GPU 分析&lt;/stitle>; &lt;id>;https://frguthmann.github.io/posts/profiling_webgpu/&lt;/id>; &lt;updated>; 2024-07-04T05：57：29.760041Z &lt;/更新>; &lt;link href =“https://frguthmann.github.io/posts/profiling_webgpu/”/>; &lt;作者>; &lt;名称>;ibobev &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=ibobev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://frguthmann.github.io/images/profiling_webgpu/ rdp_features.png&quot; style=&quot;宽度: 220px 高度: 240px;&quot; />;&lt;br />;提供了一种 hacky 解决方案，可以使用 Chrome 在 Windows 上启用 WebGPU 的 GPU 分析，其中涉及下载 DLL 并将其放置在 Chrome 文件夹中，并使用命令行参数通过分析器启动 Chrome。该解决方案允许使用 AMD 的 Radeon GPU Profiler 和 Nvidia 的 Nsight 进行分析，但这是一个临时修复，将来可能会中断。 &lt;a href=&quot;https://hackernews.betacat.io/#gpu-profiling-for-webgpu-workloads-on-windows-with-chrome&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40856677&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;阅读你不懂的书的乐趣&lt;/stitle>; &lt;id>;https://reactormag.com/the-joy-of- Reading-books-you-dont-entirely-understand/&lt;/id>; &lt;更新>;2024-07-03T21:57:29.760557Z&lt;/更新>; &lt;link href=&quot;https://reactormag.com/the-joy- of-reading-books-you-dont-entirely-understand/&quot;/>; &lt;author>; &lt;name>;speckx&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=speckx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://reactormag.com/wp-content/uploads/2024/05/OtherKelly_B-750ppx-740x1073.jpeg&quot; style=&quot;width: 220px;高度：319px；” />;&lt;br />;作者反思了他们对阅读挑战他们理解力的书籍的热爱，并列举了复杂而神秘的作品的例子，这些作品提供了冒险和发现的感觉。他们主张在阅读中拥抱不确定性和主观性，鼓励读者欢迎可能不熟悉或令人困惑的书籍，并庆祝不完全理解所读内容的喜悦。 &lt;a href=&quot;https://hackernews.betacat.io/#the-joy-of-reading-books-you-don-t-understand&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40870280&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;球体&lt;/stitle>; &lt;id>;https://mssv.net/2024/07/02/the-sphere/&lt;/id>; &lt;更新>;2024-07-04T00:57:29.761101Z&lt;/更新>; &lt;link href=&quot;https://mssv.net/2024/07/02/the-sphere/&quot;/>; &lt;作者>; &lt;名称>;adrianhon &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=adrianhon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mssv.net /wp-content/uploads/2024/07/sphere-cave.jpeg?w=1024&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;The Sphere 是一个音乐娱乐场所，拥有巨大的 16K 屏幕和身临其境的 4DX 效果，将作者带到了新的环境，特别是在模拟室内时。尽管存在一些技术问题和一部平庸的电影，但作者对 Sphere 创造临场感和沉浸感的能力印象深刻，特别是在其内部渲染方面。 &lt;a href=&quot;https://hackernews.betacat.io/#the-sphere&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40858165&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;使用 CP-SAT 和 Python 进行约束编程的实用介绍&lt;/stitle>; &lt;id>;https://pganalyze.com/blog/a-practical-introduction-to-constraint-programming-using-cp-周六&lt;/id>; &lt;更新>;2024-07-03T16:57:29.761618Z&lt;/更新>; &lt;link href=&quot;https://pganalyze.com/blog/a-practical-introduction-to-constraint-programming-using -cp-sat&quot;/>; &lt;作者>; &lt;名称>;lfittl&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lfittl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://pganalyze.com/static/21972-312_SOC_NonCPA-f432552647dccd8ed89083dfc7c22b32.png&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;约束编程是一种用于解决离散优化问题的声明性范例，其中模型由变量和约束定义，求解器用于找到有效的解决方案。本文演示了如何使用约束编程来解决现实世界的问题，例如通过定义模型并添加约束来为小型企业安排员工，以确保... &lt;a href=&quot;https://hackernews.betacat .io/#a-practical-introduction-to-constraint-programming-using-cp-sat-and-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40867746&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;最便宜的 NAS&lt;/stitle>; &lt;id>;https://sigwait.org/~alex/blog/2024/07/01/the-cheapest-nas.html&lt;/id >; &lt;更新>;2024-07-03T16:57:29.762158Z&lt;/更新>; &lt;link href=&quot;https://sigwait.org/~alex/blog/2024/07/01/the-cheapest-nas.html&quot; />; &lt;author>; &lt;name>;henry_flower&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=henry_flower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户替换他们使用单板计算机 (SBC) 和硬盘驱动器外壳的旧路由器来创建 NAS 设备，旨在保留 Samba、Git 和 rsyncd 等服务，同时提高性能。然而，用户遇到了 SBC 专有操作系统映像、有问题的 HDD 外壳和挑剔的性能问题，导致他们建议不要使用此设置。 &lt;a href=&quot;https://hackernews.betacat.io/#the-cheapest-nas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40867709&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;发动机声音模拟器&lt;/stitle>; &lt;id>;https://markeasting.github.io/engine/&lt;/id>; &lt;更新>;2024-07-03T15:57:29.762649Z&lt;/更新>; &lt;link href=&quot;https://markeasting.github.io/engine/&quot;/>; &lt;作者>; &lt;name>;hyperific&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hyperific&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#engine-sound-simulator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40861079&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;九龙寨城建筑剖面&lt;/stitle>; &lt;id>;https://cohost.org/belarius/post/6677850 -architectural-cross&lt;/id>; &lt;更新>;2024-07-03T13:57:29.763149Z&lt;/更新>; &lt;link href=&quot;https://cohost.org/belarius/post/6677850-architectural-cross&quot;/>; &lt;作者>; &lt;名称>;hampelm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hampelm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://i.imgur.com/x85aoKF.png&quot; style=&quot;宽度：220px; height: 164px;&quot; />;&lt;br />;九龙城寨是香港人口稠密地区，占地6.4英亩，居住着约35,000名居民，是人类历史上人口最稠密的居住区。日本的一项研究团队在拆除之前记录了这座城市的建筑和居民，并且在线提供了该城市的高分辨率全景图。九龙寨城&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40846726&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作 Linux 管理的网络交换机&lt;/ stitle>; &lt;id>;https://blog.brixit.nl/making-a-linux-management-network-switch/&lt;/id>; &lt;更新>;2024-07-03T14:57:29.763682Z&lt;/更新>; &lt;link href=&quot;https://blog.brixit.nl/making-a-linux-management-network-switch/&quot;/>; &lt;作者>; &lt;名称>;_Microft&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=_Microft&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.brixit.nl/image/w300//static/files/blog.brixit .nl/1669745922/589714de59c2ac21dfce521799562cc0.png&quot; style=&quot;宽度：220px; height: 220px;&quot; />;&lt;br />;作者使用 Realtek RTL8367S 芯片构建了一个自定义网络交换机，将其配置为与 Linux 的 switchdev 子系统配合使用。该交换机有 5 个端口，其中一个连接到 Pine64 A64-lts 板，可以使用 ethtool 命令进行控制，但需要自定义设备树，并且仅限于 ARM 设备。 =&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40866442&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Git 故事：这次没那么有趣&lt;/stitle>; &lt;id>; https://blog.brachiosoft.com/en/posts/git/&lt;/id>; &lt;更新>;2024-07-03T13:57:29.764204Z&lt;/更新>; &lt;link href=&quot;https://blog.brachiosoft. com/en/posts/git/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://blog.brachiosoft.com/en/posts/git/mcvoy.jpg”风格=“宽度：220px; height: 165px;&quot; />;&lt;br />;Linus Torvalds 创建了 Git 作为 BitKeeper 的替代品，BitKeeper 是他用于 Linux 内核的版本控制系统，并且通过 GitHub 很快在 Ruby 社区中流行起来。Git 的成功可以归功于归功于它的简单性、灵活性以及维护者的努力，包括从 Linus 接任维护者的 Junio Hamano 和帮助普及的 Scott Chacon...&lt;a href=&quot;https://hackernews.betacat.io/ #a-git-story-not-so-fun-this-time&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40849363 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;不要嘲笑快乐有趣的分支预测器（2023）&lt;/stitle>; &lt;id>;https://www.mattkeeter.com/blog/2023-01-25-branch/&lt;/id>; &lt;updated>;2024-07- 03T14:57:29.764731Z&lt;/更新>; &lt;link href=&quot;https://www.mattkeeter.com/blog/2023-01-25-branch/&quot;/>; &lt;作者>; &lt;名称>;fanf2&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户优化了一个功能，消除了一次跳转，但由于不匹配导致速度变慢bl/ret 对混淆了分支预测器。用 br x30 替换 ret 修复了性能回归问题，进一步测试证实了分支预测器因不对称 bl/ret 使用而失败。 &lt;a href=&quot;https://hackernews.betacat.io/#do-not-taunt-happy-fun-branch-predictor-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40866374&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;深入学习深度学习：理解深度学习书评 [pdf]&lt;/stitle>; &lt;id>;https://github.com/udlbook/udlbook/blob /main/public/NMI_Review.pdf&lt;/id>; &lt;更新>;2024-07-03T22:57:29.765293Z&lt;/更新>; &lt;link href=&quot;https://github.com/udlbook/udlbook/blob/main/ public/NMI_Review.pdf&quot;/>; &lt;作者>; &lt;名称>;teleforce&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/4924b2e9e6c1d289dad5a8c2900cff3d2ce279b2298213798aec75b127382dff/udlbook/udlbook&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;理解深度学习 - Simon JD Prince。通过在 GitHub 上创建帐户来为 udlbook/udlbook 开发做出贡献。 &lt;a href=&quot;https://hackernews.betacat.io/#diving-into-deep-learning-understanding-deep-learning-book-review-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40870728&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Fly.io 启动区域特定机器定价&lt;/stitle>; &lt;id>;https://community.fly.io/t/fresh -product-region-specific-machines-pricing/20690&lt;/id>; &lt;更新>;2024-07-04T07:57:29.765826Z&lt;/更新>; &lt;link href=&quot;https://community.fly.io/t/ fresh-product-region-specific-machines-pricing/20690&quot;/>; &lt;作者>; &lt;名称>;bishopsmother&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bishopsmother&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;从 7 月 1 日开始，配备额外 RAM 的机器的定价将因地区而异。此前，由于计费系统的限制，所有地区均提供统一价格。 &lt;a href=&quot;https://hackernews.betacat.io/#fly-io-initiates-region-specific-machines-pricing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40873001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Trackmania 中机器学习的历史&lt;/stitle>; &lt;id>;https://hallofdreams.org/posts/trackmania-1/&lt;/id>; &lt;updated>; 2024-07-03T22：57：29.766355Z &lt;/更新>; &lt;link href =“https://hallofdreams.org/posts/trackmania-1/”/>; &lt;作者>; &lt;名称>;菲尔帕克斯&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=Philpax&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了赛车游戏 Trackmania 中机器学习的历史和现状，重点介绍了各种尝试创建可以高水平玩游戏的自主程序，包括那些取得了令人印象深刻结果的程序。作者自己的项目旨在创建一个可以赢得“每日杯”（Cup of the Day）的程序，这是游戏中一项享有盛誉的赛事，他们计划使用... &lt;a href=&quot;https://hackernews.betacat.io/#the -history-of-machine-learning-in-trackmania&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40853834&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;反应混乱在中型和大型网络应用中：有什么不同的体验吗？&lt;/stitle>; &lt;id>;https://old.reddit.com/r/ExperiencedDevs/comments/1dh9rly/the_chaos_of_react_in_medium_to_large_web_apps&lt;/id>; &lt;updated>;2024-07-04T11： 57:29.766867Z&lt;/更新>; &lt;link href=&quot;https://old.reddit.com/r/ExperiencedDevs/comments/1dh9rly/the_chaos_of_react_in_medium_to_large_web_apps&quot;/>; &lt;作者>; &lt;名称>;rdsedmundo&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=rdsedmundo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;使用开发人员凭据注册或登录，并确保使用唯一且描述性的用户代理来访问脚本或应用程序。如果被阻止，请尝试更改回默认设置或提交票证以讨论替代访问方法。 &lt;a href=&quot;https://hackernews.betacat.io/#react-chaos-in-mid-and-large-web-apps-any- Different-experiences&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40873912&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;人机共生 (1960)&lt;/stitle>; &lt;id>;https://groups.csail.mit.edu/medg /people/psz/Licklider.html&lt;/id>; &lt;更新>;2024-07-03T14:57:29.767382Z&lt;/更新>; &lt;link href=&quot;https://groups.csail.mit.edu/medg/people/ psz/Licklider.html&quot;/>; &lt;作者>; &lt;名称>;davedx&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=davedx&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;人机共生的概念由 JCR Licklider 提出，设想未来人类和计算机无缝协作解决复杂问题，计算机处理日常和重复性任务，人类提供创造性输入和决策。为了实现这种共生，需要在计算机分时、内存等领域取得重大进展...... &lt;a href=&quot;https://hackernews.betacat.io/#man-computer-symbiosis-1960&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40864249&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;/提要>;