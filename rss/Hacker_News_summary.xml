<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-30T09:55:08.759309Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;R 中管道赋值运算符的情况&lt;/stitle>; &lt;id>;http://hughjonesd.github.io/case-for-pipe-assignment.html&lt;/id>; &lt;更新>;2023-12-30T07:54:34.877775Z&lt;/更新>; &lt;link href=&quot;http://hughjonesd.github.io/case-for-pipe-assignment.html&quot;/>; &lt;作者>; &lt;名称>; dash2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dash2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文讨论了管道赋值运算符的必要性R 简化代码并使其更具表现力。它强调了操作员的潜在好处，并提供了可以简化的复杂任务的示例。本文还提到了现有解决方法的局限性，并建议将赋值管道实现为语法转换。 &lt;a href=&quot;https://hackernews.betacat.io/#the-case-for-a-pipe-assignment-operator-in-r&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38813496&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PostgreSQL 内部结构：有关更新语句的知识&lt;/stitle>; &lt;id>;https://patrick.engineering/posts/postgres-internals/&lt; /id>; &lt;更新>;2023-12-30T03:54:34.878237Z&lt;/更新>; &lt;link href=&quot;https://patrick.engineering/posts/postgres-internals/&quot;/>; &lt;作者>; &lt;名称>;ppati000&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=ppati000&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;PostgreSQL执行UPDATE语句比较复杂，会导致写放大，增加了磁盘 I/O，浪费了存储空间。 PostgreSQL 中可能会发生更新丢失，但可以通过使用更高的隔离级别或让数据库计算新值来防止。由于行锁的顺序不确定，即使使用单个更新语句，PostgreSQL 中也可能发生死锁。 PostgreSQL 14 Internals 提供了对这些主题的宝贵见解，推荐给任何使用 PostgreSQL 的人。 &lt;a href=&quot;https://hackernews.betacat.io/#postgresql-internals-things-to-know-about-update-statements&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38781442&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;跟踪开发人员构建时间以确定 M3 MacBook 是否值得升级&lt;/stitle>; &lt;id>;https://incident.io/blog/festive-macbooks &lt;/id>; &lt;更新>;2023-12-29T19:54:34.878662Z&lt;/更新>; &lt;link href=&quot;https://incident.io/blog/festive-macbooks&quot;/>; &lt;作者>; &lt;名称>;paprikati&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=paprikati&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://incident.io/ _next/image?url=https%3A%2F%2Fcdn.sanity.io%2Fimages%2Foqy5aexb%2Fproduct%2F052d9cb5ea18448bb2fa64a8c1085f7a0033e031-252x252.png&amp;w=256&amp;q=75&quot; style=&quot;宽度：220px；高度：221px ;” />;&lt;br />;本文讨论了评估开发机器是否值得从 M1/M2 芯片升级到 M3 的过程。分析重点关注 Go 编译速度作为 MacBook 性能的关键指标，并比较了不同平台和内存配置。结果显示，16GB内存的M2 Pro性价比最高，M3 Pro相比M2 Pro并没有提供明显的提升。 &lt;a href=&quot;https://hackernews.betacat.io/#tracking-developer-build-times-to-decide-if-the-m3-macbook-is-worth-upgrading&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38797640&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;了解 Parquet、Iceberg 和 Data Lakehouse&lt;/stitle>; &lt;id>;https://davidgomes.com/understanding -parquet-iceberg-and-data-lakehouses-at-broad/&lt;/id>; &lt;更新>;2023-12-30T02:54:34.879095Z&lt;/更新>; &lt;link href=&quot;https://davidgomes.com/understanding -parquet-iceberg-and-data-lakehouses-at-broad/&quot;/>; &lt;作者>; &lt;名称>;munchor&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=munchor&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;在本文中，作者探索了用于高效数据访问和存储的不同文件格式，例如 Apache Arrow、Protocol Buffers 和 CSV。他们还讨论了每种格式的含义和优缺点。此外，作者还介绍了 Hive Format、Iceberg 和 Delta Lake 等更高级别的存储层，它们为大规模数据集提供元数据管理和模式演化功能。 &lt;a href=&quot;https://hackernews.betacat.io/#understanding-parquet-iceberg-and-data-lakehouses&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38811576&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Blot 将文件夹变成网站&lt;/stitle>; &lt;id>;https://blot.im/how&lt;/id>; &lt;updated>;2023-12-29T19:54 ：34.879495Z&lt;/updated>; &lt;link href=&quot;https://blot.im/how&quot;/>; &lt;作者>; &lt;name>;angrymouse&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=angrymouse&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Blot 将文件夹变成网站。该文件夹中的文件将成为您网站上的帖子。 &lt;a href=&quot;https://hackernews.betacat.io/#blot-turns-a-folder-into-a-website&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38809145&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;维基百科每日浏览次数最多的页面&lt;/stitle>; &lt;id>;https://pageviews.wmcloud.org/topviews/?project=en.wikipedia.org&amp;platform=all-访问&amp;日期=2023-12-29&amp;排除=&lt;/id>; &lt;更新>;2023-12-30T07:54:34.879914Z&lt;/更新>; &lt;link href=&quot;https://pageviews.wmcloud.org/topviews/?project=en .wikipedia.org&amp;platform=all-access&amp;date=2023-12-29&amp;excludes=&quot;/>; &lt;author>; &lt;name>;secondary_op&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=secondary_op&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pageviews.wmcloud.org/topviews/images/line-chart-small.jpg&quot; style=&quot;宽度：220px；高度：220px ;” />;&lt;br />;图表首选项：&lt;a href=&quot;https://hackernews.betacat.io/#wikipedia-daily-most-viewed-pages&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38813395&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：FreshTube – 显示 YouTube 频道的最新视频&lt;/stitle>; &lt;id>;https://github.com/porjo/freshtube&lt; /id>; &lt;更新>;2023-12-30T04:54:34.880340Z&lt;/更新>; &lt;link href=&quot;https://github.com/porjo/freshtube&quot;/>; &lt;作者>; &lt;名称>;porjo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=porjo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/fcc1db50cd558bcbc659259fb2e87b4b8ef09ed2239079ffcd7d9982e0ff1002 /68747470733a2f2f706f726a6f2e6769746875622e696f2f6672657368747562652f73637265656e73686f742e6a7067&quot; style=&quot;宽度：220px；高度：161px；&quot; />;&lt;br />;显示您最喜爱的 Youtube 频道中的最新视频 - GitHub - porjo/freshtube: 显示您最喜爱的 Youtube 频道中的最新视频 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-freshtube -show-latest-videos-from-youtube-channels&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38812908&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;：全新的模拟计算机&lt;/stitle>; &lt;id>;https://spectrum.ieee.org/try-this-new-analog-computer&lt;/id>; &lt;updated>;2023-12-29T21:54:34.880736Z&lt;/已更新>; &lt;link href=&quot;https://spectrum.ieee.org/try-this-new-analog-computer&quot;/>; &lt;作者>; &lt;name>;CharlesW&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=CharlesW&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee.org/media-library/a-hand-adjusts-a -knob-on-a-panel-with-spaghetti-wiring-a-ribbon-cable-links-it-to-a-small-display.jpg?id=50797095&amp;width=1200&amp;height=900&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;一度被认为过时的模拟计算机正在经历复兴。Anabrid 是一家开发混合模拟数字芯片的初创公司，推出了一款名为 THAT 的新型模拟机。那是一个小型开放式计算机可以通过用跳线连接数学元件来编程的源机器。&lt;a href=&quot;https://hackernews.betacat.io/#that-a-brand-new-analog-computer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38798501&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我构建了 ContainerCVE – 一个用于扫描公共 Docker 镜像的 Web 工具&lt;/stitle>; &lt;id>; https://containercve.com&lt;/id>; &lt;更新>;2023-12-30T02:54:34.881137Z&lt;/更新>; &lt;link href=&quot;https://containercve.com&quot;/>; &lt;作者>; &lt;名称>;codebyamir &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=codebyamir&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://containercve.com /og-share.png&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;快速查找任何公共 Docker Hub 映像的 CVE。由流行的开源工具 Trivy 提供支持。&lt;a href=&quot;https://hackernews.betacat.io/#show- hn-i-built-containercve-a-web-tool-to-scan-public-docker-images&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38812321&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;将 Hugo 重新用作 wiki&lt;/stitle>; &lt;id>;https://justinmiller.io/posts/2023/12/27/hugo-as-wiki/&lt;/id>; &lt;更新>; 2023-12-29T23:54:34.881522Z&lt;/updated>; &lt;link href=&quot;https://justinmiller.io/posts/2023/12/27/hugo-as-wiki/&quot;/>; &lt;作者>; &lt;名称>; incanus77&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=incanus77&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://justinmiller. io/posts/2023/12/27/hugo-as-wiki/site.png&quot; style=&quot;width: 220px; height: 153px;&quot; />;&lt;br />;我将 Hugo 网站框架重新设计为单用户 wiki。它允许我自由链接到其他主题页面，并提供自动更新的视觉指示来指示链接页面是否存在. &lt;a href=&quot;https://hackernews.betacat.io/#repurifying-hugo-as-a-wiki&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news .ycombinator.com/item?id=38795735&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed .xml&quot;>; &lt;title type=&quot;text&quot;>;48x32：1536 LED 游戏电脑&lt;/stitle>; &lt;id>;https://jacquesmattheij.com/48x32-introduction/&lt;/id>; &lt;更新>;2023-12-30T01 :54:34.881906Z&lt;/更新>; &lt;link href=&quot;https://jacquesmattheij.com/48x32-introduction/&quot;/>; &lt;作者>; &lt;name>;andrew_eu&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=andrew_eu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jacquesmattheij.com/48x32_ledmodule.jpg&quot; style=&quot;width: 220px; height: 184px;&quot; />;&lt;br />;我的孩子沉迷于游戏设备，但我没有尝试直接解决问题，而是决定用创造代替消费。我找到了一台使用 Arduino 构建的 48x32 LED 游戏电脑，可寻址 LED 的 32x8 显示屏。这是一个有趣的项目，可让我创建简单的游戏。&lt;a href=&quot;https://hackernews.betacat.io/#48x32-a-1536-led-game-computer&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809543&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Koka：具有效果类型和处理程序的强类型函数式语言&lt;/stitle>; &lt; id>;https://koka-lang.github.io/koka/doc/index.html&lt;/id>; &lt;更新>;2023-12-29T20:54:34.882300Z&lt;/更新>; &lt;link href=&quot;https:// /koka-lang.github.io/koka/doc/index.html&quot;/>; &lt;作者>; &lt;名称>;nateb2022&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Koka v2 是一种研究语言，目前正在开发中，尚未准备好用于生产使用。该语言稳定，编译器实现完整的规范。 &lt;a href=&quot;https://hackernews.betacat.io/#koka-strongly-typed-function-style-language-with-effect-types-and-handlers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38810073&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Rep 和 Ren：CLI 查找、替换和重命名的新方法&lt;/stitle>; &lt;id>;https://blog .robenkleene.com/2023/12/26/introducing-rep-ren/&lt;/id>; &lt;更新>;2023-12-30T05:54:34.882689Z&lt;/更新>; &lt;link href=&quot;https://blog.robenkleene .com/2023/12/26/introducing-rep-ren/&quot;/>; &lt;作者>; &lt;名称>;robenkleene&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=robenkleene&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.robenkleene.com/assets/2023-12-26-rep-2-diff.png&quot; style=&quot;width: 220px ；高度：158px；&quot; />;&lt;br />;Rep 和 Ren 是两个新工具，分别用于在文件中执行查找和替换以及重命名文件。它们提供结果差异的预览，并能够将更改写入磁盘。 &lt;a href=&quot;https://hackernews.betacat.io/#rep-and-ren-a-new-approach-to-cli-find-replace-and-renaming&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38780716&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;雪花能有多大？&lt;/stitle>; &lt;id>;https://www.npr.org/2023 /12/25/1217356234/just-how-big-can-a-snowflake-get-it-depends-on-what-you-mean-by-snowflake&lt;/id>; &lt;更新>;2023-12-30T01:54 ：34.883101Z&lt;/更新>; &lt;link href=&quot;https://www.npr.org/2023/12/25/1217356234/just-how-big-can-a-snowflake-get-it-depends-on-雪花是什么意思&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=胡克&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://media.npr.org/assets/img/2022/09/23/short-wave_tile_npr-network-01_sq-517382b4b8fd0ab48ea9c781253f9992eab733dc.jpg?s=1100&amp;c=15&amp;f= jpeg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;雪花的大小取决于“雪花”的定义以及你问的是谁。有记录的最大的雪花直径为15英寸，厚度为8英寸，但其真实性仍存疑。 &lt;a href=&quot;https://hackernews.betacat.io/#how-big-can-a-snowflake-get&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38797629&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Inbox Zero – 开源电子邮件助手&lt;/stitle>; &lt;id>;https://www.getinboxzero.com&lt;/id>; &lt;更新>;2023-12 -29T20:54:34.883493Z&lt;/updated>; &lt;link href=&quot;https://www.getinboxzero.com&quot;/>; &lt;作者>; &lt;name>;elieskilled&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=elieskilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.getinboxzero.com/_next/image?url=%2Fimages%2Fnewsletters.png&amp;w =3840&amp;q=75&quot; style=&quot;宽度：220px；高度：131px；&quot; />;&lt;br />;Inbox Zero 是一款开源电子邮件应用程序，可通过提供新闻通讯管理、AI 自动化和电子邮件分析来帮助您管理收件箱。它允许您轻松取消订阅不需要的电子邮件、确定发件人的优先级以及使用 AI 自动执行电子邮件操作。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-inbox-zero-open-source-email-assistant&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38809770&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;更高的纠错能力使得扫描未损坏的二维码不太可靠（2021）&lt;/stitle>; &lt;id>;https://huonw.github.io/blog/2021 /09/qr-error- Correction/&lt;/id>; &lt;更新>;2023-12-30T01:54:34.883876Z&lt;/更新>; &lt;link href=&quot;https://huonw.github.io/blog/2021/09 /qr-error- Correction/&quot;/>; &lt;author>; &lt;name>;lucb1e&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lucb1e&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://huonw.github.io/blog/2021/09/qr-error- Correction/1024px-QR_Code_Structure_Example_3.svg.png&quot; style=&quot;宽度：220像素；高度：124像素;” />;&lt;br />;较高的纠错能力使得扫描未损坏的二维码的可靠性降低。当代码损坏最小时，纠错率较低的 QR 码更容易读取。纠错使得 QR 码即使在损坏的情况下也能被读取，但它会减少可存储的数据量。 &lt;a href=&quot;https://hackernews.betacat.io/#higher-error- Correction-makes-scanning-undamaging-qr-codes-less-reliable-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;解析未记录的文件格式&lt;/stitle>; &lt;id>;https://blog.vivekpanyam.com/parsing-an-undocumented -文件格式&lt;/id>; &lt;更新>;2023-12-29T21:54:34.884268Z&lt;/更新>; &lt;link href=&quot;https://blog.vivekpanyam.com/parsing-an-undocumented-file-format&quot; />; &lt;author>; &lt;name>;vpanyam&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=vpanyam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://blog.vivekpanyam.com/static/images/2023/parsing/cuda_process2.png&quot; style=&quot;宽度：220px；高度：76px；&quot;一两年前，我为一个未记录的文件格式编写了一个解析器，作为一个更大项目的一部分。我的目标是构建一个可以直接从 CUDA 二进制文件中解析和提取信息的库。 &lt;a href=&quot;https://hackernews.betacat.io/#parsing-an-undocumented-file-format&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38808889&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;盐和薪水：罗马士兵的工资是盐吗？ （2017）&lt;/stitle>; &lt;id>;http://kiwihellenist.blogspot.com/2017/01/salt-and-salary.html&lt;/id>; &lt;更新>;2023-12-29T11:54:34.884664Z&lt;/已更新>; &lt;link href=&quot;http://kiwihellenist.blogspot.com/2017/01/salt-and-salary.html&quot;/>; &lt;作者>; &lt;name>;throtaway167&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=throtaway167&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://4.bp.blogspot.com/-v_qdpCiLd98/WG20kLj4u5I/AAAAAAAFjI/ RfKtlMr__oEpjKNKWD2C1bQqGpcBvllcACK4B/s400/Salt_saltcoin.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;罗马士兵领取盐薪或领取“盐钱”津贴的神话没有任何证据支持。 “薪水”一词确实来自拉丁语“salarium”，它与早期罗马盐贸易中向士兵支付的报酬有关。然而，没有任何古代资料证实士兵的工资是用盐支付的。 “值得盐”这个短语和用盐购买奴隶的想法也是虚构的。 &lt;a href=&quot;https://hackernews.betacat.io/#salt-and-salary-were-roman-soldiers-paid-in-salt-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38803589&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PCB 设计的艺术与科学&lt;/stitle>; &lt;id>;https://pcb.mit.edu/&lt;/id>; &lt;更新>;2023-12-30T02:54:34.885448Z&lt;/更新>; &lt;link href=&quot;https://pcb.mit.edu/&quot;/>; &lt;作者>; &lt;name>;gballan&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=gballan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;对于 IAP 2024，我们正在举办规模较小、招生人数有限的课程。我们计划在 2025 年 IAP 举办全尺寸课程。如果您想进入今年的候补名单，请填写下面的兴趣表。 &lt;a href=&quot;https://hackernews.betacat.io/#the-art-and-science-of-pcb-design&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38812244&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;布尔巴基危险弯曲符号&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Bourbaki_dangerous_bend_symbol&lt;/id>; &lt;更新>;2023-12- 29T20:54:34.886221Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Bourbaki_dangerous_bend_symbol&quot;/>; &lt;author>; &lt;name>;zerojames&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=zerojames&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/0/04 /Borne_Michelin_Virages.JPG/220px-Borne_Michelin_Virages.JPG&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;危险弯道或警告符号 ☡ (U+2621 ☡ CAUTION SIGN) 是由 Nicolas Bourbaki 数学家小组创建的，出现在该小组编写的数学书籍的页边空白处。它类似于指示前方道路“危险弯道”的路标，用于标记初读时棘手的段落或特别困难的论证。 &lt;a href=&quot;https://hackernews.betacat.io/#bourbaki-dangerous-bend-symbol&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38809728&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;使用线性规划评估空间访问&lt;/stitle>; &lt;id>;https://andrewpwheeler.com/2022/07/01/using-linear-programming-to-assess-spatial-access /&lt;/id>; &lt;更新>;2023-12-29T23:54:34.886621Z&lt;/更新>; &lt;link href=&quot;https://andrewpwheeler.com/2022/07/01/using-linear-programming-to-assess -spatial-access/&quot;/>; &lt;作者>; &lt;名称>;apwheele&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=apwheele&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://lh3.googleusercontent.com/pw/AM-JKLVtwms53SPC6PQcfLIWLAxvAyNuAWeb8b1nQyx9ZAwipMadrM1tfZ1AXTLQmjKwVk-10vGn_FpatXIeZPLNSjnG70bePUlBKv-D2cINElBkMln5h-0n0z jo6919C0kppigeB-DYYqcVJnxFzD-qQoSM=w706-h330-no?authuser=0&quot; style=&quot;宽度：220px ；高度：103px；&quot; />;&lt;br />;评估对提供者的空间访问是一个可以使用线性规划解决的问题。两步浮动流域法 (2SFCA) 是用于评估覆盖范围的常用指标。通过使用线性规划，可以分解向提供商添加容量或添加新提供商的附加收益。 &lt;a href=&quot;https://hackernews.betacat.io/#using-linear-programming-to-assess-spatial-access&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38811572&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;自然语言语料库数据：美丽的数据 (2009)&lt;/stitle>; &lt;id>;https://norvig.com/ngrams/&lt;/id>; &lt;更新>;2023 -12-29T21：54：34.887003Z &lt;/更新>; &lt;link href =“https://norvig.com/ngrams/”/>; &lt;作者>; &lt;名称>;zerojames &lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=zerojames&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://covers.oreilly.com/images/9780596157111/cat.gif&quot; 样式=“宽度：220像素；高度：289像素；” />;&lt;br />;此目录包含《美丽数据》（Segaran 和 Hammerbacher，2009）一书中自然语言语料库数据一章的代码和数据。数据文件源自 Google Web Trillion Word Corpus，如 Thorsten Brants 和 Alex Franz 所描述，并由语言数据联盟分发。 &lt;a href=&quot;https://hackernews.betacat.io/#natural-language-corpus-data-beautiful-data-2009&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38810546&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;和马克指挥官一起学会画画&lt;/stitle>; &lt;id>;https://www.npr.org/2023/12/28/1217590736/mark- kistler-secret-city&lt;/id>; &lt;更新>;2023-12-29T18:54:34.887826Z&lt;/更新>; &lt;link href=&quot;https://www.npr.org/2023/12/28/1217590736/mark -kistler-secret-city&quot;/>; &lt;作者>; &lt;名称>;geox&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=geox&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/assets/img/2020/01/28/mmorgan_200122_0962-crop_sq-bc4e7e28ca6cda949ac1163d663df3da37b43ccd.jpg?s=100&amp;c=85&amp;f=jpeg&quot; style=&quot;宽度： 220 像素；高度：221 像素；&quot; />;&lt;br />;马克指挥官是《秘密城市》、《绘画小队》和《想象力站》等节目的幕后艺术家，他通过 PBS 节目教会了数百万儿童如何绘画。他的绘画教学方法以临摹和描摹为基础，强调实践而非完美，并灌输积极的态度。 &lt;a href=&quot;https://hackernews.betacat.io/#learning-to-love-to-draw-with-commander-mark&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38808313&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Vowl 每日猜词游戏&lt;/stitle>; &lt;id>;https://vowlgame.com&lt;/id>; &lt;更新>;2023-12- 29T21:54:34.888200Z&lt;/updated>; &lt;link href=&quot;https://vowlgame.com&quot;/>; &lt;作者>; &lt;name>;matryer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=matryer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://vowlgame.com/img/vowl.png&quot; style=&quot;width: 220px; height: 110px; ” />;&lt;br />;Vowl 是一款简单的日常游戏，您只需通过查看元音即可猜出三件事。每次猜测都会显示您匹配了多少个元音和辅音。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-vowl-daily-word-guessing-game&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38810678&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SETI 在中国 FAST&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2312.16847&lt;/id>; &lt;更新>;2023-12-29T23 ：54：34.888572Z &lt;/更新>; &lt;link href =“https://arxiv.org/abs/2312.16847”/>; &lt;作者>; &lt;名称>;贝尔特&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo- fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;中国搜寻地外文明工程自2019年启动以来，通过国内支持和国际合作，取得了长足发展。该计划利用 FAST 望远镜对系外行星和附近恒星进行了多次观测。 2023 年推出的远邻计划 (FNP) 标志着该计划进展的重大飞跃，旨在探测天体的技术特征。 &lt;a href=&quot;https://hackernews.betacat.io/#seti-at-fast-in-china&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38811215&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;