<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-07-19T07:57:57.569504Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;异步 rust – 我们做错了吗？&lt;/stitle>; &lt;id>;https://maciej.codes/2022-06-09-local-async.html&lt;/id >; &lt;更新>;2023-07-19T06:57:39.951849Z&lt;/更新>; &lt;link href=&quot;https://maciej.codes/2022-06-09-local-async.html&quot;/>; &lt;作者>; &lt;名称>;rklaehn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rklaehn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://maciej .codes/maciej.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;编写聊天服务器是学习 Rust 异步编程的常见方法。然而，Rust 异步编程中默认的多线程方法可能会导致不必要的线程同步和复杂性。 &lt;a href=&quot;https://hackernews.betacat.io/#async-rust-are-we-doing-it-all-wrong&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36782884&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Netscape 和 Sun 宣布 JavaScript (1995)&lt;/stitle>; &lt;id>;https://web.archive.org/web/20070916144913/https:// wp.​​netscape.com/newsref/pr/newsrelease67.html&lt;/id>; &lt;更新>;2023-07-19T06:57:39.952872Z&lt;/更新>; &lt;link href=&quot;https://web.archive.org/web /20070916144913/https://wp.netscape.com/newsref/pr/newsrelease67.html&quot;/>; &lt;author>; &lt;name>;damethos&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =damethos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Netscape 和 Sun 宣布推出 JavaScript，这是一种用于企业网络和 Internet 的开放式跨平台对象脚本语言。 JavaScript 是对 Java 的补充，旨在创建将客户端和服务器上的对象和资源链接在一起的实时在线应用程序。 &lt;a href=&quot;https://hackernews.betacat.io/#netscape-and-sun-announce-javascript-1995&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36782761&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;英特尔和华硕同意条款清单以推进 NUC 系统产品线&lt;/stitle>; &lt;id>;https://www.intel.com/content/www/us/ en/newsroom/news/intel-nuc-systems-agreement.html&lt;/id>; &lt;更新>;2023-07-19T01:57:39.953691Z&lt;/更新>; &lt;link href=&quot;https://www.intel.com /content/www/us/en/newsroom/news/intel-nuc-systems-agreement.html&quot;/>; &lt;author>; &lt;name>;mepian&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=mepian&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.intel.com/content/dam/www/public/us/en/newsroom/featured /newsroom-twtr-logo-rwd.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;英特尔和华硕已就制造、销售和支持下一代计算单元 (NUC) 系统产品线的条款清单达成一致。华硕将成立一个名为华硕 NUC BU 的新业务部门，以延续 NUC 系统产品线。 &lt;a href=&quot;https://hackernews.betacat.io/#intel-and-asus-agree-to-term-sheet-to-take-nuc-systems-product-line-forward&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36781248&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;元数据告诉经理促销将会很少&lt;/stitle>; &lt;id>;https:// www.businessinsider.com/meta-tells-managers-its-harder-to-get-promotions-2023-7&lt;/id>; &lt;更新>;2023-07-19T03:57:39.954499Z&lt;/更新>; &lt;link href= “https://www.businessinsider.com/meta-tells-managers-its-harder-to-get-promotions-2023-7”/>; &lt;作者>; &lt;名称>;wallflower&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.insider.com/64b5df8d76558a00189d0bfb?width=700&quot; 样式=“宽度：220像素；高度：165像素；” />;&lt;br />;随着公司经历变革和削减成本措施，Meta 的经理可能难以晋升。管理层内部的晋升将较少取决于团队规模，而且频率也会降低。这一转变是 Meta 简化运营和创建更高效​​的组织结构努力的一部分。 &lt;a href=&quot;https://hackernews.betacat.io/#meta-tells-managers-promotions-will-be-few-and-far- Between&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36781860&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lazydocker：一种管理 Docker 一切的惰性方式&lt;/stitle>; &lt;id>;https://github.com/jesseduffield/lazydocker&lt;/ id>; &lt;更新>;2023-07-18T20:57:39.955283Z&lt;/更新>; &lt;link href=&quot;https://github.com/jesseduffield/lazydocker&quot;/>; &lt;作者>; &lt;名称>;mottiden&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=mottiden&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://user-images.githubusercontent.com/ 8456633/59972109-8e9c8480-95cc-11e9-8350-38f7f86ba76d.png&quot;样式=“宽度：220像素；高度：126像素；” />;&lt;br />;Lazydocker 是一个简单的终端 UI，用于管理 Docker 和 Docker-compose。它的目的是在一个终端窗口中提供所有必要的信息和常用命令。 &lt;a href=&quot;https://hackernews.betacat.io/#lazydocker-a-lazier-way-to-manage-everything-docker&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36778905&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Val，一种高级系统编程语言&lt;/stitle>; &lt;id>;https://www.val-lang.dev/&lt;/id>; &lt;更新>;2023-07-18T20:57:39.956060Z&lt;/更新>; &lt;link href=&quot;https://www.val-lang.dev/&quot;/>; &lt;作者>; &lt;名称>;cpeterso &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=cpeterso&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Val 是一种编程语言，利用可变值语义和泛型编程进行高级系统编程。它快速、安全且简单，大量借鉴了 Swift，并专注于可变值语义以实现高效、通用的代码。 &lt;a href=&quot;https://hackernews.betacat.io/#val-a-high-level-systems-programming-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36778566&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;回力阿莱发生了什么事？ （2013）&lt;/stitle>; &lt;id>;https://www.sbnation.com/longform/2013/2/28/4036934/jai-alai-sport-in-america-miami&lt;/id>; &lt;更新>;2023- 07-19T02:57:39.956849Z&lt;/更新>; &lt;link href=&quot;https://www.sbnation.com/longform/2013/2/28/4036934/jai-alai-sport-in-america-miami&quot;/ >; &lt;author>; &lt;name>;ecliptik&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “http://assets.sbnation.com.s3.amazonaws.com/features/Jai-Alai/jai-alai-1.jpg”样式=“宽度：220像素；高度：315像素；” />;&lt;br />;迈阿密回力广场 (Jai Alai fronton) 曾经是一个熙熙攘攘、充满活力的场所，现在几乎空无一人。座位是空的，餐厅和包厢都没有使用，观众只有投注者。回力球曾经是一项受欢迎的观赏性运动，现在已成为一项垂死的运动。 &lt;a href=&quot;https://hackernews.betacat.io/#what-happened-to-jai-alai-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36781554&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;KPH 以 426 KHz 和短波进行 Enigma 加密传输&lt;/stitle>; &lt;id>;https://www.radiomarine.org/mrhs-events&lt;/id>; &lt;更新>; 2023-07-18T23：57：39.958365Z &lt;/更新>; &lt;link href =“https://www.radiomarine.org/mrhs-events”/>; &lt;作者>; &lt;名称>; 7402 &lt;/名称>; &lt;uri>; https ://news.ycombinator.com/user?id=7402&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/v1 /605b9bfbc9a8d0510181f4e3/d46da299-e0be-4db5-8a98-3b2601bfdb5d/Enigma-01.jpg&quot; style=&quot;宽度：220px；高度：99px；&quot; />;&lt;br />;MRHS 和密码历史博物馆将使用 Enigma 编码机发送一条编码消息。邀请听众尝试解码消息，成功解码将获得证书。 &lt;a href=&quot;https://hackernews.betacat.io/#enigma-crypto-transmission-from-kph-at-426-khz-and-shortwave&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36780297&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 LLM-replicate 插件从命令行访问 Llama 2&lt;/stitle>; &lt;id>;https://simonwillison.net/ 2023/Jul/18/accessing-llama-2/&lt;/id>; &lt;更新>;2023-07-18T19:57:39.959154Z&lt;/更新>; &lt;link href=&quot;https://simonwillison.net/2023/Jul/ 18/accessing-llama-2/&quot;/>; &lt;作者>; &lt;名称>;simonw&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=simonw&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://static.simonwillison.net/static/2023/llm-replicate.jpg”样式 =“宽度：220 像素；高度：155 像素；” />;&lt;br />;Llama 2 是 Meta AI 的一种新的公开许可的大型语言模型。它有潜力推动开源法学硕士领域的创新。 llm-replicate 插件提供对新 Llama 2 13B 聊天模型的命令行访问。 &lt;a href=&quot;https://hackernews.betacat.io/#accessing-llama-2-from-the-command-line-with-the-llm-replicate-plugin&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36778041&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN：Highlight.io (YC W23) – 开源、全栈 Web 应用程序监控&lt;/stitle>; &lt; id>;https://news.ycombinator.com/item?id=36774611&lt;/id>; &lt;更新>;2023-07-18T16:57:39.959935Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator .com/item?id=36774611&quot;/>; &lt;作者>; &lt;名称>;podoman&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=podoman&lt;/uri>; &lt;/author>; &lt;内容type=&quot;html&quot;>;Highlight.io 是一个用于现代 Web 应用程序的开源可观察平台。它提供无缝连接的会话重放、错误监控和日志记录产品。该平台基于 OpenTelemetry、rrweb 和 ClickHouse 等开源项目构建。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-highlight-io-yc-w23-open-source-full-stack-web-app-monitoring&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36774611&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;没有这些数字就不可能谈论减肥&lt;/stitle>; &lt;id>;https://dynomight。 net/weight/&lt;/id>; &lt;更新>;2023-07-19T01:57:39.960717Z&lt;/更新>; &lt;link href=&quot;https://dynomight.net/weight/&quot;/>; &lt;作者>; &lt;名称>;red369 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=red369&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dynomight.net /small/img/aspartame-brouhaha/parakeet.jpg&quot; style=&quot;宽度：220px；高度：138px；&quot; />;&lt;br />;当我们燃烧的卡路里多于摄入的卡路里时，我们就会减肥。然而，身体的能量储备，特别是糖原，会导致体重波动。在解释体重变化时，了解糖原的作用很重要。 &lt;a href=&quot;https://hackernews.betacat.io/#numbers-without-which-it-s-impossible-to-talk-about-weight-loss&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36781021&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AutoChain，LangChain 的轻量级且可测试的替代方案&lt;/stitle>; &lt;id>;https://github.com/Forethought-Technologies/ AutoChain&lt;/id>; &lt;更新>;2023-07-18T16:57:39.961481Z&lt;/更新>; &lt;link href=&quot;https://github.com/Forethought-Technologies/AutoChain&quot;/>; &lt;作者>; &lt;名称>;yilu331 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yilu331&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets .com/cf5a14be7cc1a75a640df96b86386b8280515fe620b4b1ed6e72b6e804a2897c/Forethought-Technologies/AutoChain&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;AutoChain 旨在提供一个轻量级框架，用于使用大型语言模型 (LLM) 和自定义工具构建自定义生成代理，并通过模拟对话自动评估不同的用户场景。它简化了代理构建过程，使更新提示和可视化提示输出变得容易，从替代框架中删除了大部分抽象层，并提供了用于自动多轮评估的测试框架。 &lt;a href=&quot;https://hackernews.betacat.io/#autochain-lightweight-and-testable-alternative-to-langchain&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36775475&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;任天堂 64 测试车 ROM&lt;/stitle>; &lt;id>;https://www.gamingalexandria.com/wp/2023/07/nintendo-64-test-cart -rom/&lt;/id>; &lt;更新>;2023-07-18T19:57:39.963012Z&lt;/更新>; &lt;link href=&quot;https://www.gamingalexandria.com/wp/2023/07/nintendo-64-test -cart-rom/&quot;/>; &lt;作者>; &lt;名称>;ecliptik&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://www.gamingalexandria.com/wp/wp-content/uploads/2023/07/banner-33.jpg&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;我们收到了匿名倾销的任天堂 64 测试卡带 ROM。 ROM 允许重新编程，并且可以使用聚酰亚胺胶带引导至 64DD。 &lt;a href=&quot;https://hackernews.betacat.io/#nintendo-64-test-cart-rom&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36777536&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;ChatGPT 的行为如何随时间变化？&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2307.09009&lt;/id>; &lt;updated>;2023-07-19T01: 57:39.963754Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2307.09009&quot;/>; &lt;作者>; &lt;name>;tim_sw&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=tim_sw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo -fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;正如我们对 2023 年 3 月和 2023 年 6 月版本的评估所示，GPT-3.5 和 GPT-4 的性能和行为可能会随着时间的推移而发生很大变化。 GPT-4（2023 年 3 月）擅长识别素数，但 GPT-4（2023 年 6 月）在同一任务上表现不佳。 &lt;a href=&quot;https://hackernews.betacat.io/#how-is-chatgpt-s-behavior-changing-over-time&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36781015&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Citus 12：PostgreSQL 基于模式的分片&lt;/stitle>; &lt;id>;https://www.citusdata.com/blog/2023/07/18 /citus-12-schema-based-sharding-for-postgres/&lt;/id>; &lt;更新>;2023-07-18T18:57:39.964508Z&lt;/更新>; &lt;link href=&quot;https://www.citusdata.com /blog/2023/07/18/citus-12-schema-based-sharding-for-postgres/&quot;/>; &lt;作者>; &lt;name>;mulander&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=mulander&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.citusdata.com/assets/images/blog/marco-blog-diagram-citus12- Fig1.png&quot; style=&quot;宽度：220px；高度：105px；&quot; />;&lt;br />;Citus 12 为 PostgreSQL 引入了基于模式的分片，允许通过跨模式划分数据来透明地扩展数据库。这一新功能简化了扩展应用程序和库的过程，无需特殊的数据建模步骤。此外，基于模式的分片保留了 Citus 的所有优点，例如分布式事务和重新平衡。 &lt;a href=&quot;https://hackernews.betacat.io/#citus-12-schema-based-sharding-for-postgresql&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36777053&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;骆驼 2&lt;/stitle>; &lt;id>;https://ai.meta.com/llama/&lt;/id>; &lt;更新>;2023-07-18T16:57 ：39.965356Z&lt;/updated>; &lt;link href=&quot;https://ai.meta.com/llama/&quot;/>; &lt;作者>; &lt;name>;friggeri&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=friggeri&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#llama-2&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36774627&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;疯狂帕斯卡&lt;/stitle>; &lt;id>;https://github.com/tebe6502/Mad-Pascal&lt; /id>; &lt;更新>;2023-07-19T02:57:39.966123Z&lt;/更新>; &lt;link href=&quot;https://github.com/tebe6502/Mad-Pascal&quot;/>; &lt;作者>; &lt;名称>;chaimanmeow&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=chaimanmeow&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com /zbyti/a8-mad-pascal-bench-suite/master/suite.gif&quot; style=&quot;width: 220px; height: 158px;&quot; />;&lt;br />;Mad-Pascal (MP) 是 Atari XE/XL 的 32 位 Turbo Pascal 编译器。它与 Free Pascal 编译器 (FPC) 兼容，并允许在多个平台上执行可执行代码. MP 不是 FPC 的端口，而是基于 SUB-Pascal 和 XD-Pascal 编写的。 &lt;a href=&quot;https://hackernews.betacat.io/#mad-pascal&quot; target=&quot;_blank&quot;>;[summary ]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36781525&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Kraken 技术：我们如何组织大型 Python 整体&lt;/stitle>; &lt;id>;https://blog。 europython.eu/kraken-technologies-how-we-organize-our-very-large-pythonmonolith/&lt;/id>; &lt;更新>;2023-07-18T19:57:39.966882Z&lt;/更新>; &lt;link href=&quot;https: //blog.europython.eu/kraken-technologies-how-we-organize-our-very-large-pythonmonolith/&quot;/>; &lt;author>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.europython.eu/content/images/2023/07/Screenshot-2023 -07-07-at-12.05.41-AM.png&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;Kraken Technologies 是一个 Python 应用程序，拥有近 28k 个独立的 Python 文件。代码库的组织遵循分层架构，这有助于防止复杂性并允许开发人员之间进行有效协作。架构还允许进行影响有限的更改，并使用导入 Linter 强制执行。&lt;a href=&quot;https://hackernews.betacat.io/#kraken-technologies-how-we-organise-our-large-python-巨石&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36778318&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;贝尔实验室 Holmdel 计算中心的培训视频 (1973) [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=HMYiktO0D64&lt;/id>; &lt;更新>;2023-07-18T20:57:39.967649Z&lt;/更新>; &lt;link href=&quot; https://www.youtube.com/watch?v=HMYiktO0D64&quot;/>; &lt;作者>; &lt;名称>;abrax3141&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=abrax3141&lt;/uri >; &lt;/author>; &lt;content type=“html”>;&lt;iframe src=“//www.youtube.com/embed/HMYiktO0D64”frameborder=“0”allowfullscreen loading=“lazy”>;&lt;/iframe>; &lt;a href= &quot;https://hackernews.betacat.io/#training-video-for-bell-labs-holmdel-computing-center-1973-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36770968&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cython 3.0 发布&lt;/stitle>; &lt;id>;https://cython.readthedocs.io/en/latest/src/changes.html&lt;/id>; &lt;更新>;2023-07-18T20:57:39.968396Z&lt;/更新>; &lt;link href=&quot;https://cython.readthedocs.io/en/latest/src/changes.html&quot;/>; &lt;作者>; &lt;名称>; ngoldbaum&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ngoldbaum&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Cython 3.0.0 是一个主要版本，其中包括许多内容新功能和行为变化。它与 CPython 3.8-3.11 兼容，并对 CPython 3.12 提供实验性支持。对 Python 2.6 的支持已被放弃。键入支持和对有限 C-API 的支持已得到改进。纯 python 模式已经过彻底修改，现在支持常规 Python 语法中的所有 Cython 代码和功能。添加了几个新功能，包括数据类和 functools.total_ordering 的扩展类型，以及生成 NumPy ufunc 的能力。 &lt;a href=&quot;https://hackernews.betacat.io/#cython-3-0-released&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36778617&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;AI (1981)&lt;/stitle>; &lt;id>;https://www.newyorker.com/magazine/1981/12/14/ai&lt;/id>; &lt;更新>;2023-07- 18T20:57:39.969153Z&lt;/updated>; &lt;link href=&quot;https://www.newyorker.com/magazine/1981/12/14/ai&quot;/>; &lt;作者>; &lt;name>;lioeters&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=lioeters&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/590971d28b51cf59fc4228b7 /16:9/w_1280,c_limit/811214_r27300.jpg&quot; style=&quot;宽度: 220px; 高度: 124px;&quot; />;&lt;br />;1979 年 7 月，一个名为 BKG 9.8 的计算机程序对阵 Luigi Villa，并赢得了世界双陆棋锦标赛冠军。这标志着机器首次成为棋盘或纸牌游戏的世界冠军。 &lt;a href=&quot;https://hackernews.betacat.io/#ai-1981&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=36757726&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Vx32：不受信任的 x86 代码的可移植、高效、安全的用户空间执行 (2008)&lt;/stitle>; &lt;id>;https://pdos.csail.mit.edu/~baford/vm/&lt;/id >; &lt;更新>;2023-07-18T19:57:39.969922Z&lt;/更新>; &lt;link href=&quot;https://pdos.csail.mit.edu/~baford/vm/&quot;/>; &lt;作者>; &lt;名称>;nateb2022 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Vx32 是一个用户模式库，允许安全执行不受信任的 x86 代码。它可以链接到任何应用程序并在各种操作系统上运行，无需特殊权限或特权。 &lt;a href=&quot;https://hackernews.betacat.io/#vx32-portable-efficient-safe-user-space-execution-of-untrusted-x86-code-2008&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36777576&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;量子物理学家解释了地球振荡的天气模式&lt;/stitle>; &lt;id>;https://www.quantamagazine.org/how -quantum-physicals-describes-earths-weather-patterns-20230718/&lt;/id>; &lt;更新>;2023-07-18T22:57:39.970692Z&lt;/更新>; &lt;link href=&quot;https://www.quantamagazine.org /how-quantum-physicals-describes-earths-weather-patterns-20230718/&quot;/>; &lt;作者>; &lt;名称>;digital55&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=digital55&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/02/JOY-OF-WHY-2023-WebDefault.jpg&quot; style= “宽度：220 像素；高度：290 像素；” />;&lt;br />;地球的振荡天气模式（例如厄尔尼诺现象）是由始终在赤道向东传播的开尔文波推动的。地球物理学家一直在寻求对这些波的物理解释，三位物理学家提出了气象学和量子物理学之间的联系。他们认为，地球自转使流体偏转的方式类似于磁场扭曲拓扑绝缘体中电子路径的方式，从而解释了赤道开尔文波的起源。 &lt;a href=&quot;https://hackernews.betacat.io/#quantum-physicists-explained-earths-oscillated-weather-patterns&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36779215&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Wilfrid Voynich：书商、革命家、密码学家……涉嫌间谍？&lt;/stitle>; &lt;id>;https://resobscura.substack.com/p/wilfrid-voynich- bookseller-revolutionary&lt;/id>; &lt;更新>;2023-07-18T20:57:39.972198Z&lt;/更新>; &lt;link href=&quot;https://resobscura.substack.com/p/wilfrid-voynich-bookseller-revolutionary&quot;/ >; &lt;作者>; &lt;名称>;benbreen&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fec47bed4 -5ff7-4e7f-b392-273853107779_3600x3600.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;威尔弗里德·伏尼契（Wilfrid Voynich），著名伏尼契手稿的同名者，曾于 1916 年和 1917 年作为可能的德国间谍接受调查。然而，他与德国情报部门没有任何关系，怀疑是基于误解。伏尼契是一位专业的善本书籍经销商，他最珍贵的财产是他在意大利购买的一本神秘手抄本。 &lt;a href=&quot;https://hackernews.betacat.io/#wilfrid-voynich-bookseller-revolutionary-cryptographer-suspected-spy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36771662&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;数据并行、任务并行和代理 Actor 架构&lt;/stitle>; &lt;id>;https://bytewax.io/blog/data-parallel-task-parallel- and-agent-actor-architectures&lt;/id>; &lt;更新>;2023-07-18T18:57:39.972928Z&lt;/更新>; &lt;link href=&quot;https://bytewax.io/blog/data-parallel-task-parallel -and-agent-actor-architectures&quot;/>; &lt;作者>; &lt;名称>;skadamat&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=skadamat&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://images.production.bytewax.io/data_parallel_task_parallel_agent_actor_411dc0f1ec.jpg”样式=“宽度：220px；高度：145px；” />;&lt;br />;在快速发展的数据处理领域，了解各种架构方法对于选择适合您的特定需求的工具至关重要。已经出现的三种主要架构——数据并行、任务并行和代理参与者——每种架构都具有独特的优势，可以满足不同类型的数据工作负载。 &lt;a href=&quot;https://hackernews.betacat.io/#data-parallel-task-parallel-and-agent-actor-architectures&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36777396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;