<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-09-25T00:22:50.802611Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;选择 Postgres 队列技术&lt;/stitle>; &lt;id>;https://adriano.fyi/posts/2023-09-24-choose-postgres-queue-technology/&lt;/id>; &lt;更新>;2023-09-24T21:22:47.695476Z&lt;/更新>; &lt;link href=&quot;https://adriano.fyi/posts/2023-09-24-choose-postgres-queue-technology/&quot;/>; &lt;作者>; &lt;name>;bo0tzz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bo0tzz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://adriano.fyi/img/choose_boring_tech_cost2.jpeg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;由于对可扩展性的痴迷，Postgres 队列技术经常被忽视。然而，一些公司认识到操作简单性的价值，并选择 Postgres 来满足其排队需求。 Postgres 提供发布/订阅和互斥功能，使其成为资源高效的队列处理选项。 &lt;a href=&quot;https://hackernews.betacat.io/#choose-postgres-queue-technology&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37636841&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;OpenStreetMap.org 上有新的地图样式&lt;/stitle>; &lt;id>;https://en.osm.town/@openstreetmap/111120663721969898&lt;/id>; &lt;更新>;2023-09- 24T20:22:47.698159Z&lt;/更新>; &lt;link href=&quot;https://en.osm.town/@openstreetmap/111120663721969898&quot;/>; &lt;作者>; &lt;名称>;gslin&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=gslin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.masto.host/enosmtown/media_attachments/files/111/ 120/641/540/173/957/original/67e575312802ac02.jpg&quot; style=&quot;宽度：220px；高度：122px；&quot; />;&lt;br />;OpenStreetMap.org 上有新的地图样式！来自 @tracestrack 的 Tracestrack 地形图是 osm-carto 和 OpenTopoMap 的混合体。它有许多改进，包括更多标签支持、CJK 字体和更好的国际化。 &lt;a href=&quot;https://hackernews.betacat.io/#there-sa-new-map-style-on-openstreetmap-org&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37636551&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：在 Markdown 文件中获取完整的 ChatGPT 历史记录&lt;/stitle>; &lt;id>;https://github.com/mohamed-chs/chatgpt-历史导出到 md&lt;/id>; &lt;更新>;2023-09-24T20:22:47.698634Z&lt;/更新>; &lt;link href=&quot;https://github.com/mohamed-chs/chatgpt-history-export -to-md&quot;/>; &lt;作者>; &lt;名称>;mohamedchs&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mohamedchs&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/mohamed-chs/chatgpt-history-export-to-md/main/images/chat.openai-bottom-left-widget.png&quot; style=&quot;宽度：220 像素；高度：180 像素；” />;&lt;br />;欢迎使用 ChatGPT Conversations 到 Markdown 转换器！此 Python 脚本可帮助您将整个 ChatGPT 历史记录和数据导出转换为格式整齐的 Markdown 文件。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-get-your-entire-chatgpt-history-in-markdown-files&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37636701&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 AVX-512 快速解析整数&lt;/stitle>; &lt;id>;https://lemire.me/blog/2023/09/22 /parsing-integers-quickly-with-avx-512/&lt;/id>; &lt;更新>;2023-09-24T21:22:47.699060Z&lt;/更新>; &lt;link href=&quot;https://lemire.me/blog/2023 /09/22/parsing-integers-quickly-with-avx-512/&quot;/>; &lt;作者>; &lt;名称>;usdogu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=usdogu&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lemire.me/img/portrait2018facebook.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;如果给程序员一个字符串并要求将其转换为整数，他们可以使用 AVX-512 指令快速解析该字符串。 AVX-512 指令可以一次处理多个字节并选择一系列数据，从而加快解析速度。 &lt;a href=&quot;https://hackernews.betacat.io/#parsing-integers-quickly-with-avx-512&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37618440&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PID 控制挑战&lt;/stitle>; &lt;id>;http://janismac.github.io/ControlChallenges/&lt;/id>; &lt;updated>;2023-09-24T21:22： 47.699488Z&lt;/更新>; &lt;link href=&quot;http://janismac.github.io/ControlChallenges/&quot;/>; &lt;作者>; &lt;name>;a_m0d&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=a_m0d&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;您可以通过在模型状态上调用simulate(dt, controlFunc)来预测系统的未来。示例： // 模拟 0.5 秒。模型的输入设置为其“x”的负数。 newState = state.simulate(0.5, function(s){ return -sx ;})simulate() 返回模型状态的修改副本。 &lt;a href=&quot;https://hackernews.betacat.io/#pid-control-challenges&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37637006&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;μMon：愚蠢的简单监控（2022）&lt;/stitle>; &lt;id>;https://tomscii.sig7.se/2022/07/uMon-stupid-simple-monitoring&lt;/id>; &lt;更新>; 2023-09-24T19:22:47.699944Z&lt;/更新>; &lt;link href=&quot;https://tomscii.sig7.se/2022/07/uMon-stupid-simple-monitoring&quot;/>; &lt;作者>; &lt;名称>;g0xA52A2A &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=g0xA52A2A&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tomscii.sig7 .se/images/umon/aurora_main_thumb.jpg&quot; style=&quot;宽度：220px；高度：136px；&quot; />;&lt;br />;μMon 是一个个人化的、简约的、固执己见的主机监控工具，基于 RRDtool、SNMP、shell 脚本和一个用 C++ 编写的小型 FastCGI 服务器。它旨在简化监控设置并降低复杂性。 &lt;a href=&quot;https://hackernews.betacat.io/#mmon-stupid-simple-monitoring-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37636013&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我们对“需要微调多少数据”的谦虚尝试&lt;/stitle>; &lt;id>;https://barryzhang.substack.com/p/our-humble-尝试微调&lt;/id>; &lt;更新>;2023-09-24T21:22:47.700416Z&lt;/更新>; &lt;link href=&quot;https://barryzhang.substack.com/p/our-humble-attempt -at-fine-tuning&quot;/>; &lt;作者>; &lt;名称>;gnahzby &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gnahzby&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws .com%2Fpublic%2Fimages%2F977cabb9-f607-454e-a103-70d16ad7e21d_1518x1330.png&quot; style=&quot;宽度：220px；高度：193px；&quot; />;&lt;br />;在本文中，作者证明，使用大约 100 个数据点微调 OpenAI 模型可以显着改进可靠的输出格式和自定义语气。他们还讨论了微调的优势，例如潜在的成本节省和更快的推理速度。作者最后提到了本研究中未涉及的其他用例和超参数。 &lt;a href=&quot;https://hackernews.betacat.io/#our-humble-attempt-at-how-much-data-do-you-need-to-fine-tune&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37636791&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;腐蚀：铁锈永不眠&lt;/stitle>; &lt;id>;https://books.worksinprogress.co/book /maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/1?ref=thebrowser.com&lt;/id>; &lt;更新>;2023-09-24T22:22:47.700849Z&lt;/更新>; &lt; link href=&quot;https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/1?ref=thebrowser.com&quot;/>; &lt;作者>; &lt;名称>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// res.cloudinary.com/books-in-progress/image/upload/c_lfill,f_auto/v1/bip/cdtkoo2djqu3zhrfb3qw&quot; style=&quot;宽度：220px；高度：150px；&quot; />;&lt;br />;战胜铁锈是一场持久战，需要大量的科学和工程技术。腐蚀是一项全球性的支出，每年的损失估计为 2.5 万亿美元。对防止腐蚀的新方法的探索从未停止。 &lt;a href=&quot;https://hackernews.betacat.io/#corrosion-rust-never-sleeps&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37637354&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;解压 Elixir：韧性&lt;/stitle>; &lt;id>;https://underjord.io/unpacking-elixir-resilience.html&lt;/id>; &lt;更新>;2023-09-24T20:22： 47.701270Z&lt;/更新>; &lt;link href=&quot;https://underjord.io/unpacking-elixir-resilience.html&quot;/>; &lt;作者>; &lt;name>;lawik&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=lawik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://underjord.io/img/logo2.svg&quot; style=&quot;width: 220px;高度：221px；” />;&lt;br />;Elixir 和 Erlang 通过使用监督者和监督树来实现可靠性。主管负责管理子进程并应用处理故障的策略。监督树有助于遏制错误的影响，并允许轻松恢复和恢复。 &lt;a href=&quot;https://hackernews.betacat.io/#unpacking-elixir-resilience&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37636529&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;隐藏的海洋是木星卫星二氧化碳的来源&lt;/stitle>; &lt;id>;https://phys.org/news/2023-09-hidden-ocean-source-carbon-diicide.html&lt; /id>; &lt;更新>;2023-09-24T18:22:47.702121Z&lt;/更新>; &lt;link href=&quot;https://phys.org/news/2023-09-hidden-ocean-source-carbon-diicide.html &quot;/>; &lt;author>; &lt;name>;Brajeshwar&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/jupiters-moon-europa-w.jpg&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;在木星的卫星木卫二上检测到的二氧化碳来自其冰壳下的广阔海洋，这可能增强了人们对隐藏的水可能孕育生命的希望。 &lt;a href=&quot;https://hackernews.betacat.io/#hidden-ocean-the-source-of-carbon-diicide-on-jupiter-moon&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37612887&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;“令人难以置信”的海洋生物被鉴定为双基因吸虫&lt;/stitle>; &lt;id>;https://www.science.org/content /article/mind-boggling-sea-creature-spotted-japan-has-finally-been-identified&lt;/id>; &lt;更新>;2023-09-24T16:22:47.702577Z&lt;/更新>; &lt;link href=&quot;https: //www.science.org/content/article/mind-boggling-sea-creature-spotted-japan-has-finally-been-identified&quot;/>; &lt;author>; &lt;name>;austinallegro&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=austinallegro&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#mind-boggling-sea -creature-identified-as-digenean-trematode&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37631252&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;黑客指南语言模型 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=jkrNMKz9pWU&lt;/id>; &lt;更新>;2023-09-24T08:22:47.703006Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=jkrNMKz9pWU&quot;/>; &lt;作者>; &lt;名称>;rrampage&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rrampage &lt;/uri>; &lt;/author>; &lt;content type =“html”>;&lt;iframe src =“//www.youtube.com/embed/jkrNMKz9pWU”frameborder =“0”allowfullscreenloading =“lazy”>;&lt;/iframe>; &lt; a href=&quot;https://hackernews.betacat.io/#a-hacker-s-guide-to-language-models-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=37631089&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个强盗大亨的铁路赌博&lt;/stitle>; &lt;id>;https://www.smithsonianmag.com/history/robber-baron-gamble-railroads-brought -down-bank-plunged-us-into-first-great-depression-panic-1873-180982877/&lt;/id>; &lt;更新>;2023-09-24T18:22:47.703435Z&lt;/更新>; &lt;link href=&quot;https ://www.smithsonianmag.com/history/robber-baron-gamble-railroads-brought-down-bank-plunged-us-into-first-great-depression-panic-1873-180982877/&quot;/>; &lt;作者>; &lt;名称>;samclemens&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=samclemens&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// th-thumbnailer.cdn-si-edu.com/r-vlAmw-hB0msYsvLE7CMG4UauE=/1000x750/filters:no_upscale():focal(700x527:701x528)/https://tf-cmsv2-smithsonianmag-media.s3.amazonaws。 com/filer_public/59/eb/59ebbaa3-af1e-46ea-96db-072bb5823735/npr.jpg&quot; style=&quot;width: 220px;高度：165px;&quot; />;&lt;br />;杰伊·库克 (Jay Cooke) 是一位传奇金融家，1873 年在他的庄园招待尤利西斯·S·格兰特 (Ulysses S. Grant) 总统。库克创立了美国第一家投资银行，最近还资助了北方银行的建设太平洋铁路。然而，他的投资银行破产，导致 1873 年恐慌，小投资者失去信任。&lt;a href=&quot;https://hackernews.betacat.io/#one-robber-barons-gamble- on-railroads&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37629593&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;两位摄影师捕捉到同一毫秒的时间 (2018) &lt;/stitle>; &lt;id>;https://www.dpreview.com/articles/7338941576/how-two-photographers-captured-the-same-millisecond-in-time&lt;/id>; &lt;更新>;2023-09-24T19 :22:47.703854Z&lt;/更新>; &lt;link href=&quot;https://www.dpreview.com/articles/7338941576/how-two-photographers-captured-the-same-millisecond-in-time&quot;/>; &lt;作者>; &lt;name>;ghastmaster&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ghastmaster&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //4.img-dpreview.com/files/p/E~TS590x0~articles/7338941576/Eric_Ron_sidebyside.jpeg&quot; style=&quot;width: 220px; height: 106px;&quot; />;&lt;br />;两名摄影师在同一毫秒内捕捉到了海浪撞击灯塔的相同照片。这些照片的拍摄地点略有不同，但在构图和时间安排上表现出惊人的相似性。&lt;a href=&quot;https://hackernews.betacat.io/#two-photographers-captured-the-same-millisecond-in-time-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37636124&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TCP 拥塞控制拯救了互联网&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/09/24/tcp_congestion_control_internet/&lt;/ id>; &lt;更新>;2023-09-24T15:22:47.704268Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/09/24/tcp_congestion_control_internet/&quot;/>; &lt;作者>; &lt;名称>;mikece&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mikece&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia .co.uk/2023/09/23/shutterstock_congestion.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;拥塞控制在互联网的成功中发挥了关键作用。TCP/IP 管理拥塞的方法，包括其对资源的分布式管理和不同类型网络的容纳，使得互联网以实现全球普及。20 世纪 70 年代做出的设计选择，例如 Jacobson 和 Karels 在 TCP 中实施的拥塞控制，多年来已被证明是有效的。&lt;a href=&quot;https://hackernews.betacat.io /#tcp-s-congestion-control-saved-the-internet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37633743&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;汉克·阿舍尔将美国人的私人信息变成了生意&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/09/22/magazine/hank-asher-data.html&lt;/id>; &lt;更新>; 2023-09-24T11:22:47.704684Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/09/22/magazine/hank-asher-data.html&quot;/>; &lt;作者>; &lt;name>;giuliomagnifico&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=giuliomagnifico&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /static01.nyt.com/images/2023/09/24/autossell/24mag-data-still/Comp-1-0-00-00-00--superJumbo.jpg&quot; style=&quot;width: 220px; height: 135px;&quot; />;&lt;br />;本文讲述了数据经纪人 Hank Asher 的故事，他建立了一个庞大的数据和数据库帝国，至今仍被执法机构、企业和政府组织使用。Asher 的能力收集和分析数据以及他的犯罪历史，使他在行业中具有优势，并使他能够制定隐私规范并利用个人行为。&lt;a href=&quot;https://hackernews.betacat.io/#hank- asher-turned-americans-private-information-into-a-business&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37612750&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;PiWrite – Kindle Paperwhite 书写&lt;/stitle>; &lt;id>;https://github.com/rberenguel/PiWrite&lt;/id>; &lt;更新>;2023-09-24T14:22:47.705104Z&lt;/更新>; &lt;link href= “https://github.com/rberenguel/PiWrite”/>; &lt;作者>; &lt;名称>;kristianpaul &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kristianpaul &lt;/ uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/6d1712a689ac3c5856bc2f3979d0ab98ac2e3f054ceb5adbccb35d48e5787478/rberenguel/PiWrite&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;PiWrite 是一款工具，可让您使用 Kindle Paperwhite 作为书写设备和类似 vim 的编辑器。它涉及设置网络服务器并在 Kindle 的网络浏览器中打开页面。该项目是开源的，可以轻松定制和安装。&lt;a href=&quot;https://hackernews.betacat.io/#piwrite-kindle-paperwhite-to-write&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37633358&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;YC 去年发生的变化&lt;/stitle>; &lt;id>;https://twitter.com/snowmaker/status /1705643839443403263&lt;/id>; &lt;更新>;2023-09-24T11:22:47.705539Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/snowmaker/status/1705643839443403263&quot;/>; &lt;作者>; &lt;名称>; yimby&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yimby&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们再试一次。&lt;a href=&quot;https://hackernews.betacat.io/#ways-yc-has-changed-in-the-last-year&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37627684&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;移动设备上的文本编辑：看不见的问题&lt;/stitle>; &lt;id>;https://jenson.org/text/&lt;/id >; &lt;更新>;2023-09-24T07:22:47.705958Z&lt;/更新>; &lt;link href=&quot;https://jenson.org/text/&quot;/>; &lt;作者>; &lt;名称>;kaftan-permans&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=kaftan-permans&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jenson.org/wp-内容/uploads/2023/09/image.png&quot; style=&quot;width: 220px; height: 143px;&quot; />;&lt;br />;手机上的文本编辑不行。实际上比你想象的要糟糕得多，一个没人欣赏的隐形问题。&lt;a href=&quot;https://hackernews.betacat.io/ #text-editing-on-mobile-the-invisible-problem&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37630804&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>; LARPing 和暴力极端主义&lt;/stitle>; &lt;id>;https://leb.fbi.gov/articles/featured-articles/larping-and-violent-extremism&lt;/id>; &lt;updated>;2023-09-24T21:22:47.706387 Z&lt;/updated>; &lt;link href=&quot;https://leb.fbi.gov/articles/featured-articles/larping-and-violent-extremism&quot;/>; &lt;作者>; &lt;name>;lolinder&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=lolinder&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://leb.fbi.gov/image-repository/ Shutterstock_2109849725.jpg/@@images/image/large&quot; style=&quot;宽度：220px;高度：147px;&quot; />;&lt;br />;真人角色扮演 (LARP) 是一种流行的文化现象，参与者在想象的环境中描绘角色。区分 LARP 和犯罪活动对于执法部门非常重要。LARP 者进行无辜的扮演，而暴力极端分子则在现实世界中实施暴力。&lt;a href=&quot;https://hackernews.betacat.io/#larping-and-violent-extremism&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=37637165&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;对经典 MK4116 16-kilobit DRAM 芯片进行逆向工程 (2020)&lt;/stitle>; &lt;id>;https://www.righto.com/2020 /11/reverse-engineering-classic-mk4116-16.html&lt;/id>; &lt;更新>;2023-09-24T14:22:47.707236Z&lt;/更新>; &lt;link href=&quot;https://www.righto.com/ 2020/11/reverse-engineering-classic-mk4116-16.html&quot;/>; &lt;author>; &lt;name>;nickt&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nickt&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/mk4116/metal-rotated-w700.jpg&quot; style=&quot;width: 220px; height: 123px;&quot; />;&lt;br />;Mostek MK4116是20世纪70年代末流行的存储芯片，容量为16 kb。它采用先进的制造工艺和低功耗动态逻辑。该芯片具有独特的架构，允许它安装到廉价的 16 引脚封装中。&lt;a href=&quot;https://hackernews.betacat.io/#reverse-engineering-the-classic-mk4116-16-kilobit-dram-chip-2020&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37633230&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Natalie – 一个正在开发的 Ruby 编译器，用 Ruby 和 C++ 编写&lt;/ stitle>; &lt;id>;https://github.com/natalie-lang/natalie&lt;/id>; &lt;更新>;2023-09-24T14:22:47.708089Z&lt;/更新>; &lt;link href=&quot;https://github.com/natalie-lang/natalie&quot; com/natalie-lang/natalie&quot;/>; &lt;作者>; &lt;名称>;ciconia&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ciconia&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/natalie-lang/natalie/master/examples/demo.gif&quot; style=&quot;宽度：220px; height: 154px;&quot; />;&lt;br />;Natalie 是一个正在开发中的 Ruby 编译器，用 Ruby 和 C++ 编写。它提供了一个使用 C++ 和 gcc/clang 作为后端的提前编译器。 &lt;a href= &quot;https://hackernews.betacat.io/#natalie-a-work-in-progress-ruby-compiler-writing-in-ruby-and-c&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37630951&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;结理论[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=8DBhTXM_Br4&lt;/ id>; &lt;更新>;2023-09-24T15:22:47.708549Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=8DBhTXM_Br4&quot;/>; &lt;作者>; &lt;名称>;nyc111&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=nyc111&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/ embed/8DBhTXM_Br4&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>;&lt;a href=&quot;https://hackernews.betacat.io/#knot-theory-video&quot;target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37612606&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;澳大利亚人如何打造自己的早期互联网&lt;/stitle>; &lt;id>;https://theconversation.com/澳大利亚人如何制造早期互联网 30 年 212542&lt;/id>; &lt;更新>;2023-09-24T13:22:47.708987Z&lt;/已更新>; &lt;link href=&quot;https://theconversation.com/30-years-of-the-web-down-under-how-australians-made-the-early-internet-their-own-212542&quot;/>; &lt;作者>; &lt;名称>;throtaway167&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=throtaway167&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://images.theconversation.com/files/549472/original/file-20230921-26-kkvvcm.jpeg?ixlib=rb-1.1.0&amp;rect=22%2C31%2C2973%2C1994&amp;q=45&amp;auto=format&amp;w=926&amp;fit=clip&quot;样式=“宽度：220px； height: 148px;&quot; />;&lt;br />;澳大利亚的互联网在 20 世纪 90 年代开始形成，第一个澳大利亚网站在 30 年前出现。随着澳大利亚人越来越容易使用互联网，网站的数量迅速增长，允许多样化的在线社区和文化表达。了解互联网的历史可以帮助我们反思其当前状态并努力创建我们想要的互联网。&lt;a href=&quot;https://hackernews.betacat.io/#how- australians-made-the-early-internet-their-own&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37613769&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CoRF ：使用知识蒸馏对辐射场进行着色&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2309.07668&lt;/id>; &lt;updated>;2023-09-24T16:22:47.709459Z&lt;/updated>; &lt;link href= “https://arxiv.org/abs/2309.07668”/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;这项工作提出了一种从输入灰度多视图图像合成彩色新颖视图的方法。该方法使用辐射场网络作为 3D 表示，并从现有的 2D 彩色化中传递知识方法。&lt;a href=&quot;https://hackernews.betacat.io/#corf-colorizing-radiance-fields-using-knowledge-distillation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37634018&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;海蒂·拉玛 (2018)&lt;/stitle>; &lt;id>;https://www.womenshistory.org/education-resources/biographies/hedy-lamarr&lt;/ id>; &lt;更新>;2023-09-24T09:22:47.709890Z&lt;/更新>; &lt;link href=&quot;https://www.womenshistory.org/education-resources/biographies/hedy-lamarr&quot;/>; &lt;作者>; &lt;名称>;interweb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=interweb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// www.womenshistory.org/sites/default/files/styles/main_image/public/images/2018-08/Hedy%20Lamarr%20%282%29.png?itok=Qrqeh1Kv&quot; style=&quot;width: 220px;高度：216px;&quot; />;&lt;br />;Hedy Lamarr 是一位奥地利裔美国女演员和发明家，她开创了一项技术，有一天该技术将成为当今 WiFi、GPS 和蓝牙通信系统的基础。&lt;a href=&quot;https: //hackernews.betacat.io/#hedy-lamarr-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37612154&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;低技术加密货币：纸牌（2020）&lt;/stitle>; &lt;id>;https://alicegg.tech//2020/01/03/solitaire.html&lt;/id>; &lt;更新>;2023-09-24T14:22:47.710315Z &lt;/更新>; &lt;link href=&quot;https://alicegg.tech//2020/01/03/solitaire.html&quot;/>; &lt;作者>; &lt;名称>;zer0tonin &lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=zer0tonin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://alicegg.tech/assets/2020-01-03-solitaire/deck. jpg&quot;样式=&quot;宽度：220px； height: 276px;&quot; />;&lt;br />;Solitaire 是一种低技术含量的加密算法，它使用一副纸牌来加密和解密消息。它是一种流密码，可从一副洗牌的纸牌中生成伪随机密钥流。该算法有实际限制，不应使用相同的密钥两次或加密大型消息。&lt;a href=&quot;https://hackernews.betacat.io/#low-tech-crypto-solitaire-2020&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37632905&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/条目>; &lt;/提要>;