<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-14T18:02:58.620466Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;玛格丽特·米德想通过 LSD 拯救世界&lt;/stitle>; &lt;id>;https://www.latimes.com/entertainment-arts/books/story/2024-01-12 /玛格丽特-米德-想要通过-lsd-政府-其他想法来拯救世界&lt;/id>; &lt;更新>;2024-01-14T16:01:12.269531Z&lt;/更新>; &lt;链接 href=&quot;https://www.latimes.com/entertainment-arts/books/story/2024-01-12/margaret-mead-wanted-to-save-the-world-through-lsd-the-government- had-other-ideas&quot;/>; &lt;作者>; &lt;名称>;benbreen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://ca-times.brightspotcdn.com/dims4/default/01670d4/2147483647/strip/true/crop/5405x3603+0+22/resize/840x560!/quality/75/? url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fb5%2F3e%2F3b985f074ac89cffb71d09db0d01%2Fla-ca-bk-foucault-last-man-009.JPG&quot; style=&quot;width: 220px;高度：147px;&quot; />;&lt;br />;《乌托邦之旅：玛格丽特·米德、冷战和迷幻科学的艰难诞生》是本杰明·布林的一本新书，探讨了迷幻药物的历史和迷幻药物相互交织的生活玛格丽特·米德和格雷戈里·贝特森。这本书揭示了迷幻药如何从被视为潜在的灵丹妙药变成了一种反文化现象，以及这种转变如何标志着美国乐观主义的终结。&lt;a href=&quot;https://hackernews.betacat.io/ #margaret-mead-wanted-to-save-the-world-via-lsd&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =38970587&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;对 PyTorch 的供应链攻击&lt;/stitle>; &lt;id>;https://johnstawinski.com/2024/01/11/playing-with-fire-how-we-execulated-a-ritic-supply-chain -attack-on-pytorch/&lt;/id>; &lt;更新>;2024-01-14T16:01:12.271647Z&lt;/更新>; &lt;link href=&quot;https://johnstawinski.com/2024/01/11/playing-with -fire-how-we-execulated-a-ritic-supply-chain-attack-on-pytorch/&quot;/>; &lt;author>; &lt;name>;roblabla&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=roblabla&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://johnstawinski.files.wordpress.com/2022/10/coffee3-2.png?w= 104&quot; 样式=&quot;宽度:220px; height: 318px;&quot; />;&lt;br />;文章的作者发现并利用了流行的机器学习平台 PyTorch 中的一个严重漏洞，使他们能够上传恶意版本、后门依赖项并危害供应链。他们能够窃取 GitHub 机密，包括 AWS 密钥，并展示了攻击的潜在影响。&lt;a href=&quot;https://hackernews.betacat.io/#a-supply-chain-attack-on-pytorch&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38969533&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么自动卡车运输比自动共享乘车更难&lt;/stitle>; &lt;id>;https://kevinchen .co/blog/autonomous-trucking-harder-than-rideshare/&lt;/id>; &lt;更新>;2024-01-14T16:01:12.272084Z&lt;/更新>; &lt;link href=&quot;https://kevinchen.co/blog /autonomous-trucking-harder-than-rideshare/&quot;/>; &lt;author>; &lt;name>;kevinchen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kevinchen&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://kevinchen.co/assets/blog/av-truck-difficulty/truck-watercolor-hero-1792w.jpg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;卡车运输被认为是自动驾驶最理想的第一个应用。然而，由于高速公路上高速行驶的复杂性、卡车的尺寸以及道路的复杂性，自动卡车运输比自动共享出行更难。需要更远距离的感应。&lt;a href=&quot;https://hackernews.betacat.io/#why-autonomous-trucking-is-harder-than-autonomous-rideshare&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38973404&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Crystal 1.11.0 发布&lt;/stitle>; &lt;id>;https://crystal-lang.org/2024/01/ 08/1.11.0-released/&lt;/id>; &lt;更新>;2024-01-14T16:01:12.272476Z&lt;/更新>; &lt;link href=&quot;https://crystal-lang.org/2024/01/08/ 1.11.0-released/&quot;/>; &lt;作者>; &lt;名称>;ksec&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ksec&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://crystal-lang.org/assets/authors/straight-shoota.jpg&quot; style=&quot;宽度：220px; height: 221px;&quot; />;&lt;br />;Crystal 1.11.0 是一个重大版本，有很多更改，包括对即将推出的 LLVM 18 的支持、新的反射基元以及对宏和可枚举方法的改进。 &lt;a href=&quot;https: //hackernews.betacat.io/#crystal-1-11-0-is-released&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=38991392&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;QMK 和键盘&lt;/stitle>; &lt;id>;https://getreuer.info/posts/keyboards/index.html&lt;/id>; &lt;更新>;2024-01-14T14:01:12.273237Z&lt;/已更新>; &lt;link href=&quot;https://getreuer.info/posts/keyboards/index.html&quot;/>; &lt;作者>; &lt;name>;akaralar&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=akaralar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://getreuer.info/posts/keyboards/dactyl-ergodox.jpg&quot; style=&quot;width: 220px; height: 95px;&quot; />;&lt;br />;量子机械键盘 (QMK) 是一种流行的自定义键盘开源固件。谁知道键盘可以做这么多事情？请参阅我在 GitHub 上的键盘映射。请随时提出问题或开始讨论任何问题、问题或评论。自定义 Shift 键 – 正确使用它们非常困难；这是我的方法 &lt;a href=&quot;https://hackernews.betacat.io/#qmk-and-keyboards &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38966430&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/内容>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我的知识Lakehouse&lt;/stitle>; &lt;id>;https:// tabokie.github.io/non-fiction/2024/01/13/log-kb.html&lt;/id>; &lt;更新>;2024-01-14T16:01:12.273619Z&lt;/更新>; &lt;link href=&quot;https:// /tabokie.github.io/non-fiction/2024/01/13/log-kb.html&quot;/>; &lt;author>; &lt;name>;tabokie&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=tabokie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;1.111 条目是现实的真实反映，可以是任何内容。 1.132 使用个人 URI 系统来引用上下文的本地副本。 1.3 列表和结构是日志中存储的非结构化数据的物化视图。 &lt;a href=&quot;https://hackernews.betacat.io/#my-knowledge-lakehouse&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38978435&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;显示 HN: #!/usr/bin/env docker run&lt;/stitle>; &lt;id>;https://gist.github.com/adtac/595b5823ef73b329167b815757bbce9f&lt;/id>; &lt;更新>;2024-01 -14T04:01:12.273991Z&lt;/更新>; &lt;link href=&quot;https://gist.github.com/adtac/595b5823ef73b329167b815757bbce9f&quot;/>; &lt;作者>; &lt;名称>;adtac &lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=adtac&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;https://gist.github.com/adtac/595b5823ef73b329167b815757bbce9f.pibb&quot; style= “宽度：100%；高度：250px；边框：0；&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-usr-bin-env-docker-run&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38987109&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Citadel – 与 Calibre 兼容的电子书管理应用程序&lt;/stitle >; &lt;id>;https://github.com/every-day-things/citadel&lt;/id>; &lt;更新>;2024-01-14T07:01:12.275128Z&lt;/更新>; &lt;link href=&quot;https://github .com/every-day-things/citadel&quot;/>; &lt;作者>; &lt;名称>;phildenhoff&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=phildenhoff&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/cab558a6846003f91abd9f0764b2a4860e79105290e8a803455c94d5b2500806/every-day-things/citadel&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;轻松管理您的电子书库。Calibre 兼容。- GitHub - every-day-things/citadel：轻松管理您的电子书库。Calibre 兼容。&lt;a href=&quot;https:/ /hackernews.betacat.io/#show-hn-citadel-a-calibre-兼容-ebook-management-app&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38988019&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;动态编程不是黑魔法&lt;/stitle>; &lt;id>;https://qsantos.fr/2024/01/04/dynamic-programming-is-not-black-magic/ &lt;/id>; &lt;更新>;2024-01-14T10:01:12.276212Z&lt;/更新>; &lt;link href=&quot;https://qsantos.fr/2024/01/04/dynamic-programming-is-not-black- magic/&quot;/>; &lt;作者>; &lt;名称>;qsantos&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=qsantos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://qsantos.fr/wp-content/uploads/2024/01/image.png&quot; style=&quot;宽度：220px; height: 97px;&quot; />;&lt;br />;动态编程是一种通过将问题分解为更小的子问题并缓存结果来解决问题的技术。它并不像看起来那么复杂，可以应用于各种算法，例如作为寻路算法，例如 Dijkstra 算法。&lt;a href=&quot;https://hackernews.betacat.io/#dynamic-programming-is-not-black-magic&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38988948&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用法学硕士聆听&lt;/stitle>; &lt;id>;https://paul.mou.dev/posts/2023-12-31- Listening-with-llm/&lt;/id>; &lt;更新>;2024-01-14T16:01:12.276569Z&lt;/更新>; &lt;link href=&quot;https://paul.mou.dev/posts/2023-12-31- Listening-with-llm/&quot;/>; &lt;作者>; &lt;名称>;ppymou&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ppymou&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://paul.mou.dev/avg_loss.png&quot; style=&quot;宽度：220px; height: 173px;&quot; />;&lt;br />;本文讨论了微调大型语言模型 (LLM) 来处理音频的过程。作者分享了他们从头开始使用 pytorch 重新创建实用程序和功能的经验，并描述了他们学习的步骤如何微调 LLM 模型以描述 Google MusicCaps 数据集上的给定音频文件。&lt;a href=&quot;https://hackernews.betacat.io/#listening-with-llm&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38981216&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;编码自注意力、多头注意力、交叉注意力、因果注意力&lt;/stitle>; &lt;id>;https: //magazine.sebastianraschka.com/p/understand-and-coding-self-attention&lt;/id>; &lt;更新>;2024-01-14T15:01:12.277338Z&lt;/更新>; &lt;link href=&quot;https://magazine .sebastianraschka.com/p/understanding-and-coding-self-attention&quot;/>; &lt;作者>; &lt;名称>;rasbt&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rasbt&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F %2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F97567e7b-f8b9-4dea-a678-162378609a75_1304x1150.png&quot; style=&quot;width: 220px; height: 195px;&quot; />;&lt;br />;本文介绍了 Transformer 架构和大型语言模型 (LLM) 中使用的自注意力机制。它解释了自注意力的概念及其在 NLP 任务中的重要性。文章还提供了Python 和 PyTorch 中自我注意力机制的代码实现。 &lt;a href=&quot;https://hackernews.betacat.io/#coding-self-attention-multi-head-attention-cross-attention-causal-attention&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38990709&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;键入信息以获得更快的 Python C 扩展&lt;/stitle>; &lt;id>;https ://bernsteinbear.com//blog/typed-c-extensions/&lt;/id>; &lt;更新>;2024-01-14T10:01:12.278773Z&lt;/更新>; &lt;link href=&quot;https://bernsteinbear.com/ /blog/typed-c-extensions/&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt; content type=&quot;html&quot;>;PyPy 的 C API 兼容层存在性能问题。名为 HPy 的新设计旨在通过向 C 扩展模块添加类型信息来加快 PyPy 的 C API 交互速度。 &lt;a href=&quot;https://hackernews.betacat.io/#type-in​​formation-for-faster-python-c-extensions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38988982&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;揭开糖尿病的真相：“科学非常糟糕”&lt;/stitle>; &lt;id>;https://www.theguardian.com/society/2024/ jan/14/unlocking-the-truth-about-diabetes-is-it-time-for-a-diet-based-treatment&lt;/id>; &lt;更新>;2024-01-14T16:01:12.279825Z&lt;/更新>; &lt;link href=&quot;https://www.theguardian.com/society/2024/jan/14/unlocking-the-truth-about-diabetes-is-it-time-for-a-diet-based-treatment&quot;/ >; &lt;作者>; &lt;名称>;prmph&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=prmph&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://i.guim.co.uk/img/media/7746067c9b174a8fc4caf496a3af592bf49182d1/0_552_6496_3898/master/6496.jpg?width=445&amp;dpr=1&amp;s=none”样式=“宽度：220px；高度：132px；” />;&lt;br />;科学记者兼作家加里·陶布斯 (Gary Taubes) 认为，过去几十年的低脂饮食建议是不正确且危险的。他认为真正的危险是碳水化合物，而不是膳食脂肪。 Taubes 建议，应该使用低碳水化合物饮食来控制 1 型和 2 型糖尿病患者的血糖，而不是使用大量药物的治疗方案。 &lt;a href=&quot;https://hackernews.betacat.io/#unlocking-the-truth-about-diabetes-the-science-has-been-pretty-awful&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38991521&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;什么是 ISDN？&lt;/stitle>; &lt;id>;https://tedium.co/2024/01/12/isdn-历史回顾/&lt;/id>; &lt;更新>;2024-01-14T04:01:12.280182Z&lt;/更新>; &lt;link href=&quot;https://tedium.co/2024/01/12/isdn-history-retrospective/ &quot;/>; &lt;author>; &lt;name>;ecliptik&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.tedium.co/uploads/tedium011224.gif&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;英国电信计划在 2025 年关闭 ISDN 和 PSTN 服务，转而采用 VoIP 等现代技术。 ISDN 是 20 世纪 70 年代和 80 年代开发的技术，价格昂贵且难以向大众解释，导致其采用有限。 &lt;a href=&quot;https://hackernews.betacat.io/#what-was-isdn&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38977422&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;当“无限期阻止”不是无限期时&lt;/stitle>; &lt;id>;https://well-typed.com/blog/2024/01/when-blocked-indefinitely-is-not-indefinite/ &lt;/id>; &lt;更新>;2024-01-14T11:01:12.280546Z&lt;/更新>; &lt;link href=&quot;https://well-typed.com/blog/2024/01/when-blocked-indefinitely-is- not-indefinite/&quot;/>; &lt;author>; &lt;name>;g0xA52A2A&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=g0xA52A2A&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;如果 TMVar 当前为空并且没有其他线程可以写入 TMVar，则该线程将永远无法取得进展。 GHC 运行时检测到这种情况，并且对原子的调用将抛出 BlockedIndefinitelyOnSTM 异常，呈现为 此博客文章不是第一个进行此观察的文章； Simon Marlow 的书《Haskell 中的并行和并发编程》对此进行了讨论，并且它偶尔会出现在各种票据中（例如 GHC #9401、GHC #10241、Async #14）。尽管如此，这个问题并没有像应有的那样广为人知，而且它可能会导致非常混乱的行为。 &lt;a href=&quot;https://hackernews.betacat.io/#when-blocked-indefinitely-is-not-indefinite&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38989254&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何从数据代理中删除您的数据&lt;/stitle>; &lt;id>;https://www.cybercollective.org/blog/how-to-delete-your-data-来自数据经纪人&lt;/id>; &lt;更新>;2024-01-14T15:01:12.280940Z&lt;/更新>; &lt;link href=&quot;https://www.cybercollective.org/blog/how-to-delete-your -data-from-data-brokers&quot;/>; &lt;作者>; &lt;名称>;jyunwai&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jyunwai&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://assets-global.website-files.com/64a20a41a276228b9327a274/658bb81d69cd0ef2a44d8e89_dET9dIHai8o-HD.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;数据经纪人在我们不知情或未经我们同意的情况下收集我们的个人信息并从中获利。我们有权知道存在哪些关于我们的数据并采取措施将其删除。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-delete-your-data-from-data-brokers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38990755&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用数组语言思考&lt;/stitle>; &lt;id>;https://github.com/razetime/ngn-k-tutorial/blob/main/12 -thinking-in-k.md&lt;/id>; &lt;更新>;2024-01-13T18:01:12.281293Z&lt;/更新>; &lt;link href=&quot;https://github.com/razetime/ngn-k-tutorial/ blob/main/12-thinking-in-k.md&quot;/>; &lt;作者>; &lt;名称>;tosh&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;K 编程（以及一般的数组编程）是一个简化模式的连续过程。一个大的、笨拙的模式有一种或多种方法可以压缩成一个更小、更具声明性、易于阅读的模式。如果您想更好地理解它，请在 APL 中的模式和反模式：逃离初学者的高原 - Aaron Hsu - Dyalog &#39;17 中详细讨论这一点。 &lt;a href=&quot;https://hackernews.betacat.io/#thinking-in-an-array-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38981639&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;构建一个完全本地的 LLM 语音助手来控制我的智能家居&lt;/stitle>; &lt;id>;https://johnthenerd.com/blog/local-llm-assistant/&lt;/id>; &lt;更新>;2024-01-13T23:01:12.281652Z&lt;/更新>; &lt;link href=&quot;https://johnthenerd.com/blog/local-llm-assistant/&quot;/>; &lt;作者>; &lt;名称>;JohnTheNerd&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=JohnTheNerd&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我想构建一个完全本地化的语音助手来控制我的智能家居。我使用了各种硬件和软件组件，包括用于防火墙、NIPS 和 VLAN 路由的 Protectli Vault VP2420、用于快速处理的 RTX 4060Ti GPU 以及用于运行 HomeAssistant 的 Minisforum UM690。我还使用 vLLM 作为推理引擎，并使用 Mistral AI 的 Mixtral 模型进行自然语言处理。我在集成模型和控制设备方面面临挑战，但我通过修改现有代码并添加对以 JSON 形式执行 HomeAssistant 服务的支持找到了解决方案。 &lt;a href=&quot;https://hackernews.betacat.io/#building-a-filled-local-llm-voice-assistant-to-control-my-smart-home&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38985152&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;迈向云应用程序的现代开发（2023）&lt;/stitle>; &lt;id>;https://dl.acm.org /doi/10.1145/3593856.3595909&lt;/id>; &lt;更新>;2024-01-14T08:01:12.282010Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/10.1145/3593856.3595909&quot;/>; &lt;作者>; &lt;名称>;signa11 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://dl.acm.org/doi/10.1145/specs/products/acm/releasedAssets/images/acm-logo-1-ad466e729c8e2a97780337b76715e5cf.png&quot; style=&quot;宽度：220px；高度：77px；&quot; />;&lt;br />;在编写分布式应用程序时，传统观点认为将应用程序拆分为可以独立推出的单独服务。这种方法的初衷是好的，但是像这样的基于微服务的架构常常会适得其反，带来挑战，抵消架构试图实现的好处。 &lt;a href=&quot;https://hackernews.betacat.io/#towards-modern-development-of-cloud-applications-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38988238&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;