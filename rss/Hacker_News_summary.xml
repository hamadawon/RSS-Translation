<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-31T00:18:31.844902Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我们对 Homebrew 的审核&lt;/stitle>; &lt;id>;https://blog.trailofbits.com/2024/07/30/our-audit-of-homebrew/&lt;/id>; &lt;更新>;2024-07-30T23:18:15.619782Z&lt;/更新>; &lt;link href=&quot;https://blog.trailofbits.com/2024/07/30/our-audit-of-homebrew/&quot;/>; &lt;作者>; &lt;名称>;zdw &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“https” ://blog.trailofbits.com/wp-content/uploads/2020/07/cropped-android-chrome-512x512-1.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;对 Homebrew 的审计发现了一些问题，这些问题可能允许攻击者在意外点加载可执行代码、破坏完整性保证，并可能从触发 CI/CD 工作流程转向控制执行和窃取机密。审计发现了 13 个发现，包括 Homebrew 的 CI/CD 和 brew CLI 中的漏洞，攻击者可以利用这些漏洞来破坏...... &lt;a href=&quot;https://hackernews.betacat.io/#our-audit-of -homebrew&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41114839&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Porffor：从头开始的提前实验JS引擎&lt;/stitle>; &lt;id>;https://porffor.dev/&lt;/id>; &lt;更新>;2024-07-30T19:18:15.621556Z&lt;/更新>; &lt;link href=&quot;https://porffor.dev /&quot;/>; &lt;author>; &lt;name>;bpierre&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bpierre&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Porffor是一个专注于研究的 JavaScript 引擎/编译器/运行时，可提前将 JS 代码编译为 WebAssembly 或本机，从而产生更快、更小的输出。它采用内存安全语言编写，支持 TypeScript 输入，并在设计时考虑了提前编译，使其安全高效。 &lt;a href=&quot;https://hackernews.betacat.io/#porffor-a-from-scratch-experimental-ahead-of-time-js-engine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41112854&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;故障排除：终端延迟&lt;/stitle>; &lt;id>;https://lock.cmpxchg8b.com/slowterm.html&lt;/id>; &lt;已更新>;2024-07-30T22：18：15.621964Z &lt;/已更新>; &lt;link href=&quot;https://lock.cmpxchg8b.com/slowterm.html&quot;/>; &lt;作者>; &lt;名称>;janvdberg &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=janvdberg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lock.cmpxchg8b.com/img/fedora_terminal_open .gif&quot;样式=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;用户尝试解决Windows上xterm启动速度慢的问题，在Fedora上需要100ms，而xterm启动时间约为900ms，发现问题是由X410服务器的动画效果和字体配置引起的。用户最终通过使用 LD_PRELOAD 库创建进程缓存并修改其快捷方式以运行 pkill 而不是 xterm 来解决问题，... &lt;a href=&quot;https://hackernews.betacat.io/#troubleshooting-terminal-滞后&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41114569&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN：SSOReady (YC W24) – 让 SAML SSO 变得轻松和开源&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=41110850&lt;/id>; &lt;updated>;2024-07-30T17:18:15.622375Z&lt;/updated>; &lt;link href= &quot;https://news.ycombinator.com/item?id=41110850&quot;/>; &lt;作者>; &lt;名称>;ucarion&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ucarion&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;SSOReady 首席技术官 Ulysse 推出了一种开源 SAML 单点登录服务，该服务通过两个 API 端点简化了实施。该服务是免费和开源的，计划通过为大公司提供额外的功能来货币化，同时优先考虑开发人员的便利性和反馈。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-ssoready-yc-w24-making-saml-sso-painless-and-open-source&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41110850&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;形而上学实验探索我们对现实的隐藏假设&lt;/stitle>; &lt;id>;https://www.quantamagazine.org/形而上学实验-测试-隐藏-假设-about-reality-20240730&lt;/id>; &lt;更新>;2024-07-30T23:18:15.622756Z&lt;/更新>; &lt;link href=&quot;https://www.quantamagazine.org /metaphysical-experiments-test-hidden-asminations-about-reality-20240730&quot;/>; &lt;作者>; &lt;name>;Gooblebrai&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Gooblebrai&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront.net/uploads/2024/07/ExperimentalMetaphysicals-crNicoRoper-Lede-scaled.webp&quot; style=&quot;width: 220 像素；高度：124 像素；” />;&lt;br />;实验形而上学将物理学和哲学结合起来，测试关于现实的基本假设，挑战传统的客观性和观察本质的概念。该领域带来了新的见解和技术，但其影响尚未完全纳入主流物理学，许多问题尚未得到解答。 &lt;a href=&quot;https://hackernews.betacat.io/#metaphysical-experiments-probe-our-hidden-asminations-about-reality&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41114935&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;随机 X 帖子后发现丢失的亨利八世肖像&lt;/stitle>; &lt;id>;https://www.bbc.com/news/articles/ckdgp7r5y11o&lt;/ id>; &lt;更新>;2024-07-30T17:18:15.623136Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/news/articles/ckdgp7r5y11o&quot;/>; &lt;作者>; &lt;名称>;Archelaos&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=Archelaos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ichef.bbci. co.uk/news/480/cpsprodpb/2252/live/e3e231f0-49cd-11ef-93bd-53dd3ccea4f1.jpg.webp&quot; style=&quot;宽度: 220px 高度: 124px;&quot; />;&lt;br />;西米德兰兹郡议会大厅中的一位艺术史学家鉴定了一幅此前不为人知的亨利八世国王的肖像，据信它是为挂毯制造商拉尔夫·谢尔顿 (Ralph Sheldon) 制作的 22 幅肖像画集之一。 1590年代。该艺术品已移至博物馆收藏中心进行进一步研究，并可能展出以供公众欣赏。 &lt;a href=&quot;https://hackernews.betacat.io/#missing-henry-viii-portrait-found-after-random-x-post&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41105229&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;线性回归的真相（2015）&lt;/stitle>; &lt;id>;https://www.stat.cmu.edu/~cshalizi/TALR /&lt;/id>; &lt;更新>;2024-07-30T17:18:15.623521Z&lt;/更新>; &lt;link href=&quot;https://www.stat.cmu.edu/~cshalizi/TALR/&quot;/>; &lt;作者>; &lt;name>;sebg&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户分享现代回归的讲义，写于 2015 年，强调稳健的技术而非传统理论。这些笔记从 21 世纪的角度涵盖了线性回归，与用户的另一本书《从基本角度进行高级数据分析》有一些重叠。 &lt;a href=&quot;https://hackernews.betacat.io/#the-truth-about-linear-regression-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=41111115&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Swift 同态加密&lt;/stitle>; &lt;id>;https://www.swift.org/blog/announcing-swift-homomorphic-encryption/&lt;/id>; &lt;更新>; 2024-07-30T17:18:15.624285Z&lt;/updated>; &lt;link href=&quot;https://www.swift.org/blog/announcing-swift-homomorphic-encryption/&quot;/>; &lt;作者>; &lt;名称>;yAak&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=yAak&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.swift. org/apple-touch-icon-180x180.png&quot; style=&quot;宽度: 220px 高度: 221px;&quot; />;&lt;br />;Apple 发布了用于同态加密的开源 Swift 包，无需解密或访问解密密钥即可对加密数据进行计算。该软件包名为 swift-homomorphic-encryption，用于 Apple 的实时来电显示查找功能，并为客户端提供了一种将加密数据发送到服务器而不泄露底层数据的方法。 &lt;a href=&quot;https://hackernews.betacat.io/#swift-homomorphic-encryption&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=41111129&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;函数式编程语言应该比现在更擅长突变&lt;/stitle>; &lt;id>;https://cohost.org/prophet/post/7083950-function-programming&lt;/id>; &lt;updated>;2024 -07-30T20:18:15.624691Z&lt;/更新>; &lt;link href=&quot;https://cohost.org/prophet/post/7083950-function-programming&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://staging.cohostcdn.org/header/ 12648-bc81a3d8-758e-4a3d-b67e-cc852a28be2f-profile.png&quot;样式=&quot;宽度:220px;高度:78px;&quot; />;&lt;br />;函数式编程语言需要允许以某种方式进行突变，以避免不必要的开销，但不受限制的可变数据结构可能会导致意外的副作用。人们提出了多种选择来解决这个问题，例如本地来源的突变、线性和功能性农业，但每种选择都有其自身的局限性和挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#function-programming-languages-should-be-better-at-mutation-than-they-are&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41113101&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Stempad – 快速在线科学写作&lt;/stitle>; &lt;id>;https://www.stempad.io/editor /85b7f0fc-c865-4011-89a8-216d8b88b249?copy=true&lt;/id>; &lt;更新>;2024-07-30T16:18:15.625075Z&lt;/更新>; &lt;link href=&quot;https://www.stempad.io/ editor/85b7f0fc-c865-4011-89a8-216d8b88b249?copy=true&quot;/>; &lt;作者>; &lt;name>;ralph_r&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ralph_r&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://utfs.io/f/83502013-8883-4217-8f04-49bbc1987181-1nq2cb.png&quot; style=&quot;width: 220px; height : 215 像素;&quot; />;&lt;br />;蝴蝶曲线是一个生成蝴蝶形图的方程，由 Temple H. Fay 于 1989 年发现。不要与六次平面曲线混淆，甚至可以用来绘制类似于曲线。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-stempad-fast-online-scientific-writing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41096613&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;逻辑验证搭便车指南 [pdf]&lt;/stitle>; &lt;id>;https://browncs1951x.github.io/static/files/hitchhikersguide.pdf&lt;/ id>; &lt;更新>;2024-07-30T18:18:15.625445Z&lt;/更新>; &lt;link href=&quot;https://browncs1951x.github.io/static/files/hitchhikersguide.pdf&quot;/>; &lt;作者>; &lt;名称>; nextos&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nextos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文中介绍了 Lean，一个使用称为归纳构造演算的丰富逻辑，它支持依赖类型，并提供用于类型检查和类型推断的形式系统。类型系统由派生规则组成，这些规则可以用任意值实例化并连接到派生树，从而可以证明术语的类型正确...... &lt;a href=&quot;https://hackernews.betacat.io/# the-hitchhiker-s-guide-to-ological-verification-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41112103&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;互联网的诞生是为了在核打击中幸存下来吗？ (2022)&lt;/stitle>; &lt;id>;https://siliconfolklore.com/internet-history/&lt;/id>; &lt;更新>;2024-07-30T14:18:15.625827Z&lt;/更新>; &lt;link href=&quot;https: //siliconfolklore.com/internet-history/&quot;/>; &lt;author>; &lt;name>;edward&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=edward&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://siliconfolklore.com/internet-history/Report4799AHistoryOfArpanetTheFirstDecade_0023.png&quot; style=&quot;宽度：220px；高度：166px；&quot; />;&lt;br />;阿帕网旨在抵御核攻击的神话已被广泛流传，但对历史记录和对关键人物的采访的彻底审查表明，这种说法在很大程度上是不准确的。阿帕网实际上旨在促进昂贵计算机的分时并改善研究人员之间的协作，与核没有直接联系...... &lt;a href=&quot;https://hackernews.betacat.io/#was-the-internet-创建到生存-a-nuclear-strike-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41108884&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zuo ：用于脚本编写的小型球拍&lt;/stitle>; &lt;id>;https://github.com/racket/zuo&lt;/id>; &lt;updated>;2024-07-30T22:18:15.626566Z&lt;/updated>; &lt;link href=&quot; https://github.com/racket/zuo&quot;/>; &lt;author>; &lt;name>;pretext&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pretext&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/472cfa92d3d3f225c801dcd627237563fa973a93ac2c016e0150c6efd56c60d1/racket/zuo&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Zuo 是一个微小的 Racket 变体，它提供文件和进程管理的原语，并可用于编写 Racket 本身的脚本构建。它可以独立编译和运行，也可以嵌入到更大的应用程序中，并提供用于自定义其行为和配置的选项。 &lt;a href=&quot;https://hackernews.betacat.io/#zuo-a-tiny-racket-for-scripting&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=41068016&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在 macOS 中使用上下文菜单&lt;/stitle>; &lt;id>;https://blog.gingerbeardman.com/2024/07/30/take-command-of- the-context-menu-in-macos/&lt;/id>; &lt;更新>;2024-07-30T17:18:15.626937Z&lt;/更新>; &lt;link href=&quot;https://blog.gingerbeardman.com/2024/07/ 30/take-command-of-the-context-menu-in-macos/&quot;/>; &lt;作者>; &lt;名称>;msephton&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=msephton &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.gingerbeardman.com/images/posts/take-command-automator-setup.png&quot; style=&quot;width: 220 像素；高度：148 像素；” />;&lt;br />;用户比较了 ContextMenu 和 Automator 这两个工具，使用 ffmpeg 将文件重新编码为更小的大小，并讨论了 Automator 的局限性。他们还分享了自己使用 ContextMenu 的经验，这是一款 macOS 应用程序，允许自定义右键菜单并将文件存储在指定文件夹中。 &lt;a href=&quot;https://hackernews.betacat.io/#take-command-of-the-context-menu-in-macos&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41110866&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;实施和改进 Skiplist&lt;/stitle>; &lt;id>;https://mattjhall.co.uk/posts/skiplists.html&lt;/id>; &lt;updated>; 2024-07-30T21：18：15.627302Z &lt;/更新>; &lt;link href =“https://mattjhall.co.uk/posts/skiplists.html”/>; &lt;作者>; &lt;名称>;托什&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mattjhall.co.uk/imgs/posts /skiplists/skiplist_pointers.png&quot; style=&quot;宽度：220px；高度：96px；&quot; />;&lt;br />;作者讨论了跳表（一种用于日志结构化合并树的数据结构）的实现，并分享了他们在 Zig 中优化其性能的经验。他们探索了各种技术，包括在节点中缓存和存储指针，以提高跳过列表的性能和内存使用率。 &lt;a href=&quot;https://hackernews.betacat.io/#implementing-and-improving-skiplists&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41080273&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;将所有 C 语言转换为 Rust (TRACTOR)&lt;/stitle>; &lt;id>;https://www.darpa.mil/program/translated-all-c-to-rust&lt;/id>; &lt;更新>;2024-07-30T16:18:15.627674Z&lt;/更新>; &lt;link href=&quot;https://www.darpa.mil/program/translated-all-c-to-rust&quot;/>; &lt;作者>; &lt;名称>;steveklabnik&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=steveklabnik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;国防高级研究项目局计划详细信息 &lt;a href =&quot;https://hackernews.betacat.io/#translated-all-c-to-rust-tractor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=41110269&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;天文事故，以及并非如此的比邻星“信号”&lt;/stitle>; &lt;id>;https://www.centauri-dreams.org/2024/07/24/on -astronomical-accidents-and-the-proxima-centauri-signal-that-wasnt/&lt;/id>; &lt;更新>;2024-07-30T20:18:15.628039Z&lt;/更新>; &lt;link href=&quot;https://www .centauri-dreams.org/2024/07/24/on-astronomical-accidents-and-the-proxima-centauri-signal-that-wasnt/&quot;/>; &lt;作者>; &lt;名称>;JPLeRouzic&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=JPLeRouzic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.centauri-dreams.org/wp-内容/uploads/2024/07/eso1629b.jpg&quot; style=&quot;width: 220px; height: 234px;&quot; />;&lt;br />;2019年澳大利亚帕克斯无线电天线探测到的信号似乎来自比邻星，后来发现是一种射频干扰（RFI）形式，而不是信号该事件凸显了考虑对异常信号进行地面解释的重要性以及继续探索和升级天文学技术的必要性......&lt;a href=&quot;https://hackernews.betacat.io/#astronomical-accidents -and-the-proxima-centauri-signal-that-wasn-t&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41113408 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;蝴蝶在不接触的情况下积聚静电来吸引花粉&lt;/stitle>; &lt;id>;https://www.bristol.ac.uk/news/2024/july/butterflies-static-electricity.html&lt;/id>; &lt;updated>; 2024-07-30T10:18:15.628434Z&lt;/更新>; &lt;link href=&quot;https://www.bristol.ac.uk/news/2024/july/butterflies-static-electricity.html&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.bristol.ac.uk/media-library/sites/news/2024/july/hawkmothPS(扩展).jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;蝴蝶和飞蛾在飞行时会积累静电，这提高了它们作为传粉者的效率和效果。静电量因物种而异，并与生态因素相关，表明这是一种适应性特征可以通过自然选择&lt;a href=&quot;https://hackernews.betacat.io/#butterflies-accumulate-static-electricity-to-attract-pollen-without-contact&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41107480&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么在 Node 中生成新进程这么慢？&lt;/stitle>; &lt;id>;https:// blog.val.town/blog/node-spawn-performance/&lt;/id>; &lt;更新>;2024-07-30T19:18:15.628810Z&lt;/更新>; &lt;link href=&quot;https://blog.val.town/ blog/node-spawn-performance/&quot;/>; &lt;作者>; &lt;名称>;maxmcd&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=maxmcd&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://blog.val.town/blog-placeholder.png”风格=“宽度：220px; height: 110px;&quot; />;&lt;br />;用户正在调查 Node.js、Deno 和 Bun 在处理并发请求方面的性能，发现 Node.js 由于每次生成调用都会阻塞主线程而导致速度缓慢，而 Deno 和 Bun 更快。用户尝试了各种方法，包括使用工作线程、子进程和抽象套接字，发现使用 Node.js 与 Bun 的性能和... &lt;a href=&quot;https://hackernews .betacat.io/#why-is-spawning-a-new-process-in-node-so-slow&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=41083119&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;虚假面试属于证券欺诈&lt;/stitle>; &lt;id>;https://www.bloomberg.com/opinion/articles/2024-07-30/fake-job-interviews- are-securities-fraud&lt;/id>; &lt;更新>;2024-07-30T19:18:15.629539Z&lt;/更新>; &lt;link href=&quot;https://www.bloomberg.com/opinion/articles/2024-07-30 /fake-job-interviews-are-securities-fraud&quot;/>; &lt;作者>; &lt;名称>;ioblomov&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ioblomov&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iE8O2RXbXRhw/v6/piUjdcePl62Og/160x160.jpg&quot; style=&quot;width: 220px;身高：220px;&quot; />;&lt;br />;富国银行据称出于多元化目的进行虚假求职面试，面试少数族裔候选人以遵守招聘规则。然后该公司会拒绝这些候选人，并将工作提供给一名白人，尽管存在虚假面试。&lt;a href=&quot;https://hackernews.betacat.io/#fake-job-interviews-are-securities-fraud&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &quot;https://news.ycombinator.com/item?id=41112855&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zig 中的 C 宏反射&lt;/stitle>; &lt;id>;https://jstrieb.github.io/posts/c-reflection-zig/&lt;/ id>; &lt;更新>;2024-07-30T07:18:15.629898Z&lt;/更新>; &lt;link href=&quot;https://jstrieb.github.io/posts/c-reflection-zig/&quot;/>; &lt;作者>; &lt;名称>;jstrieb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jstrieb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Zig 是一种旨在取代 C 的编程语言，提供低级和系统编程功能，并与 C 具有令人印象深刻的互操作性，允许轻松集成 C 库和头文件。该语言的设计包括反射功能，使开发人员能够创建 C 宏值到名称的映射，从而更轻松地使用 C 代码和库。 &lt;a href=&quot;https://hackernews.betacat.io/#c-macro-reflection-in-zig&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=41106686&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Meta 因未经用户许可使用面部识别而向德克萨斯州支付 1.4B 美元&lt;/stitle>; &lt;id>;https://www.texastribune.org/2024/07/30/texas- meta-facebook-biometric-data-settlement/&lt;/id>; &lt;更新>;2024-07-30T17:18:15.630313Z&lt;/更新>; &lt;link href=&quot;https://www.texastribune.org/2024/07/ 30/texas-meta-facebook-biometric-data-settlement/&quot;/>; &lt;作者>; &lt;名称>;近日点&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=perihelions&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thumbnails.texastribune.org/gU5vMdUqTsV531r9IqcuVW7oO6o=/850x570/smart/filters:quality(75)/https://static.texastribune.org /media/files/92e525dfa5fa30ca5b37b9d58650156c/Meta%20REUTERS%20TT.jpg&quot; style=&quot;宽度：220px 高度：148px；&quot; />;&lt;br />;Meta 将向德克萨斯州支付 14 亿美元，以了结一项指控该公司未经用户授权使用个人生物识别数据的诉讼。该和解协议是单个州有史以来获得的最大金额，并要求 Meta 将任何可能违反德克萨斯州生物识别数据法的未来活动通知总检察长办公室。 &lt;a href=&quot;https://hackernews.betacat.io/#meta-to-pay-texas-1-4b-for-using-facial-recognition-without-users-permission&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41111145&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;电力市场如何应对核旅行&lt;/stitle>; &lt;id>;https://blog.gridstatus .io/ercot-nuclear-trip/&lt;/id>; &lt;更新>;2024-07-30T18:18:15.631042Z&lt;/更新>; &lt;link href=&quot;https://blog.gridstatus.io/ercot-nuclear-trip /&quot;/>; &lt;作者>; &lt;名称>;kmax12&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kmax12&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://blog.gridstatus.io/content/images/2024/07/ERCOT-Nuke-Trip-1b-min.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;德克萨斯州核电机组突然跳闸导致电网频率下降，促使ERCOT部署紧急应急储备服务等辅助服务来稳定电网。该事件凸显了精心规划和维护以确保电网可靠性的重要性，因为即使是单点故障也可能导致严重中断。 &lt;a href=&quot;https://hackernews.betacat.io/#how-the-electricity-markets-respond-to-a-nuclear-trip&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41112160&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算 Google DeepMind 论文的成本&lt;/stitle>; &lt;id>;https://152334H.github.io/blog/scaling-exponents/ &lt;/id>; &lt;更新>;2024-07-30T11:18:15.631760Z&lt;/更新>; &lt;link href=&quot;https://152334H.github.io/blog/scaling-exponents/&quot;/>; &lt;作者>; &lt;名称>;152334H&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=152334H&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://152334h .github.io/blog/scaling-exponents/Pasted%20image%2020240722025146.png&quot; style=&quot;width: 220px; height: 105px;&quot; />;&lt;br />;作者尝试估计复制 GDM 题为“Scaling Exponents Across Parameterizations and Optimizers”的论文所需的总计算成本，其中涉及在不同制度下进行 10,000 多次 LLM 训练运行。作者提供了估计计算成本的详细细目，包括实验数量、每个实验的代币和 FLOP 要求，... &lt;a href=&quot;https://hackernews.betacat.io/#calculate-the-cost -of-a-google-deepmind-paper&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41107721&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么不建议有效吗？&lt;/stitle>; &lt;id>;https://dynomight.substack.com/p/advice&lt;/id>; &lt;updated>;2024-07-30T15:18:15.632128Z&lt;/updated>; &lt;link href=&quot;https ://dynomight.substack.com/p/advice&quot;/>; &lt;作者>; &lt;名称>;yarapavan &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=yarapavan &lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post -media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc07d16b-a9b5-426f-8507-0ebc2557dda1_703x367.j​​peg&quot; style=&quot;width: 220px; height: 115px;&quot; />;&lt;br />;作者反思了建议的局限性，指出人们常常忽视好的建议而难以实施，而且由于认知偏差、缺乏知识等多种因素，建议可能不会有效。作者的结论是，建议通常很廉价，并且在许多情况下可能没有帮助，人们可能会寻求建议...... &lt;a href=&quot;https://hackernews.betacat.io/#为什么-doesn-t-advice-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41109891&quot; target=&quot;_blank&quot;>; [评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;