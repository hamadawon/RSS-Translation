<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-17T03:57:10.844637Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;美国开发者可提供非应用商店代购，苹果仍收取佣金&lt;/stitle>; &lt;id>;https://www.macrumors.com/2024/01/16/us- app-store-alternative-purchase-option/&lt;/id>; &lt;更新>;2024-01-16T23:56:36.319942Z&lt;/更新>; &lt;link href=&quot;https://www.macrumors.com/2024/01/ 16/us-app-store-alternative-purchase-option/&quot;/>; &lt;作者>; &lt;名称>;virgildotcodes&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=virgildotcodes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.macrumors.com/t/MuYr2cyAEYdr0CMrrvuycUPK5vs=/400x0/article-new/2022/01/iOS-App-Store-General-特征-JoeBlue.jpg?lossy&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Apple 允许美国 iOS App Store 中的应用程序提供指向开发者网站的链接，以便进行非 App Store 购买，但 Apple 仍会对这些购买收取佣金。佣金费用对于通过链接进行的用户购买或第一年订阅，税率为 27%；对于第二年订阅，税率为 12%。&lt;a href=&quot;https://hackernews.betacat.io/#us-developers-can-offer-non -app-store-purchasing-apple-still-collect-commission&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39020365&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;萤石镜片：超越普通光学玻璃的矫正能力&lt;/stitle>; &lt;id>;https://global.canon/en/c-museum/special/exhibition2.html&lt;/id>; &lt;updated>;2024-01-16T22:56： 36.322109Z&lt;/更新>; &lt;link href=&quot;https://global.canon/en/c-museum/special/exhibition2.html&quot;/>; &lt;作者>; &lt;name>;neilv&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=neilv&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://global.canon/ja/c-museum/common/img /special/exhibition2-1.jpg&quot; style=&quot;width: 220px;高度：103px;&quot; />;&lt;br />;佳能开发了自己的技术，以萤石矿石为原料形成大型、高纯度的人造萤石晶体。FL-F300mm f/5.6是世界上第一款采用该技术的消费级长焦镜头萤石镜片，于 1969 年 5 月发布。萤石镜片可以更有效地校正色差，产生清晰、锐利的高质量图像。&lt;a href=&quot;https://hackernews.betacat.io/#fluite-lenses- Corrective -capability-beyond-ordinary-optical-glass&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39020258&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;稳定代码 3B：边缘编码&lt;/stitle>; &lt;id>;https://stability.ai/news/stable-code-2024-llm-code-completion-release&lt;/id>; &lt;updated>;2024-01-16T21:56:36.322537 Z&lt;/updated>; &lt;link href=&quot;https://stability.ai/news/stable-code-2024-llm-code-completion-release&quot;/>; &lt;作者>; &lt;name>;egnehots&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=egnehots&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/ v1/6213c340453c3f502425776e/32a4a394-8493-4bf6-a3f5-cd15bdbf34d7/Stable+Code+3B.jpeg&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Stable Code 3B 是一个拥有 30 亿个参数的大型语言模型 (LLM)，专为具有多种附加功能的代码补全而设计。它比 CodeLLaMA 7b 小 60%，但提供了类似的高级性能编程语言。&lt;a href=&quot;https://hackernews.betacat.io/#stable-code-3b-coding-on-the-edge&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=39019532&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;上周 Kagi 事件的事后分析&lt;/stitle>; &lt;id>;https://status.kagi.com/issues/2024-01- 12-kagi-down-on-some-regions/&lt;/id>; &lt;更新>;2024-01-16T21:56:36.322966Z&lt;/更新>; &lt;link href=&quot;https://status.kagi.com/issues/ 2024-01-12-kagi-down-on-some-regions/&quot;/>; &lt;author>; &lt;name>;leetrout&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=leetrout&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;此问题尚未解决。团队正在努力解决。 &lt;a href=&quot;https://hackernews.betacat.io/#post-mortem-for-last-week-s-incident-at-kagi&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39019119&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;“亚马逊黑暗地球”是古代人类的作品&lt;/stitle>; &lt;id>;https://www.bbc.com/future/article /20240116-the-dark-earth-revealing-the-amazons-secrets&lt;/id>; &lt;更新>;2024-01-16T23:56:36.323346Z&lt;/更新>; &lt;link href=&quot;https://www.bbc. com/future/article/20240116-the-dark-earth-revealing-the-amazons-secrets&quot;/>; &lt;作者>; &lt;名称>;billybuckwheat&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=billybuckwheat&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ichef.bbci.co.uk/images/ic/480xn/p0h5bx6q.jpg.webp&quot; style= “宽度：220 像素；高度：124 像素；” />;&lt;br />;科学家正在揭开古代亚马逊暗土的神秘面纱，这是古代人类创造的一层富含营养物质的炭黑土壤。这种土壤被称为“黑金”或黑土，分布在亚马逊河流域各地，至今仍被土著社区使用。土壤是无机物质和有机物质的有效混合物，包括灰烬、陶器、骨头、贝壳、食物残渣、粪便和尿液，它是古代文物的宝库，也是亚马逊土壤的功能部分。 &lt;a href=&quot;https://hackernews.betacat.io/#amazonian-dark-earth-was-the-work-of-ancient- humans&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39020600&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Web AI 模型测试：WebGPU、WebGL 和 Headless Chrome&lt;/stitle>; &lt;id>;https://developer.chrome.com/blog/ supercharge-web-ai-testing&lt;/id>; &lt;更新>;2024-01-16T19:56:36.323749Z&lt;/更新>; &lt;link href=&quot;https://developer.chrome.com/blog/supercharge-web-ai -testing&quot;/>; &lt;author>; &lt;name>;kaycebasques&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kaycebasques&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://developer.chrome.com/blog/supercharge-web-ai-testing/image/initial_epoch_timing.gif&quot; style=&quot;宽度：220px；高度：183px；&quot; />;&lt;br />;让收藏保持井然有序 根据您的喜好保存内容并对其进行分类。好消息！您已经构建了一个很酷的 Web AI 应用程序，可以直接在用户设备上运行机器学习模型。它完全运行在客户端网络浏览器上，不依赖于云。这种设备上的设计增强了用户隐私，提高了性能，并显着降低了成本。 &lt;a href=&quot;https://hackernews.betacat.io/#web-ai-model-testing-webgpu-webgl-and-headless-chrome&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39017607&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OutRun – 开源、面向隐私的户外健身追踪器&lt;/stitle>; &lt;id>;https://github.com/timfraedrich/OutRun&lt; /id>; &lt;更新>;2024-01-16T19:56:36.324173Z&lt;/更新>; &lt;link href=&quot;https://github.com/timfraedrich/OutRun&quot;/>; &lt;作者>; &lt;名称>;27theo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=27theo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/40d3eec80cdc035376f3a9948582dbf044d083e0ffd58cce7c687c2ee5c91457 /timfraedrich/OutRun&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;OutRun 是一款开源、注重隐私的户外健身追踪器。 - GitHub - timfraedrich/OutRun:OutRun 是一个开源、面向隐私的户外健身追踪器。 &lt;a href=&quot;https://hackernews.betacat.io/#outrun-open-source-privacy-orient-outdoor-fitness-tracker&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39014652&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不传递任何内容都出奇地困难&lt;/stitle>; &lt;id>;https://davidben.net/2024/01/15/empty-slices.html&lt;/ id>; &lt;更新>;2024-01-16T20:56:36.324929Z&lt;/更新>; &lt;link href=&quot;https://davidben.net/2024/01/15/empty-slices.html&quot;/>; &lt;作者>; &lt; name>;kingkilr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kingkilr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;C、C++ 和 Rust 具有交叉表示空内存片的语言问题。 C 关于指针和 memcpy 的规则使得表示空切片变得困难。 C++ 从 C 继承了这些问题。Rust FFI 不是零成本，需要在 C/C++ 和 Rust 之间进行转换。 Rust 切片也与 Rust 指针算术不兼容，并且标准库的切片迭代器不健全。 &lt;a href=&quot;https://hackernews.betacat.io/#passing-nothing-is-surprisingly-difficult&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39013194&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;TinyML：超低功耗机器学习&lt;/stitle>; &lt;id>;https://www.ikkaro.net/what-tinyml-is/&lt;/id>; &lt;updated>;2024 -01-16T16：56：36.325301Z &lt;/更新>; &lt;link href =“https://www.ikkaro.net/what-tinyml-is/”/>; &lt;作者>; &lt;名称>;Gedxx &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=Gedxx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ikkaro.net/wp-content /uploads/2019/06/logo-ikkaro-grey.svg&quot; style=&quot;宽度：220px；高度：184px；&quot; />;&lt;br />;TinyML，即Tiny Machine Learning，是指在资源有限、功耗低的微控制器中使用机器学习。它涉及压缩大型模型以供微控制器使用。它在物联网、工业、无障碍等各个领域都有应用。 &lt;a href=&quot;https://hackernews.betacat.io/#tinyml-ultra-low-power-machine-learning&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39014866&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;JEP 草案：弃用 sun.misc.unsafe 中的内存访问方法以进行删除&lt;/stitle>; &lt;id>;https://openjdk.org/jeps/8323072&lt;/id >; &lt;更新>;2024-01-16T23:56:36.325669Z&lt;/更新>; &lt;link href=&quot;https://openjdk.org/jeps/8323072&quot;/>; &lt;作者>; &lt;名称>;mfiguiere&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=mfiguiere&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;弃用 sun.misc.Unsafe 中的内存访问方法，以便在未来版本中删除。我们鼓励库开发人员迁移到受支持的替代品，以便顺利迁移到现代 JDK。 &lt;a href=&quot;https://hackernews.betacat.io/#jep-draft-deprecate-memory-access-methods-in-sun-misc-unsafe-for-removal&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39020906&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;JW Player 在动态盗版拦截失误后遭受流量损失&lt;/stitle>; &lt;id>;https://torrentfreak.com/ jwplayer-suffers-severe-traffic-loss-after-dynamic-piracy-blocking-blunder-240116/&lt;/id>; &lt;更新>;2024-01-17T02:56:36.326042Z&lt;/更新>; &lt;link href=&quot;https: //torrentfreak.com/jwplayer-suffers-severe-traffic-loss-after-dynamic-piracy-blocking-blunder-240116/&quot;/>; &lt;author>; &lt;name>;gslin&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=gslin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;流行视频播放器 JW Player 在被错误标记为“流氓网站”后在印度遭受了严重的流量损失并被印度 ISP 屏蔽。这次封锁是由于 JW Player 的域名被包含在旨在针对盗版网站的禁令中的错误造成的。 2023 年 10 月至 12 月期间，从印度访问 JWPlayer.com 的流量下降了 53%。 &lt;a href=&quot;https://hackernews.betacat.io/#jw-player-suffers-traffic-loss-after-dynamic-piracy-blocking -blunder&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39022515&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;吉尼斯黑啤酒酵母的起源&lt;/stitle>; &lt; id>;https://www.nature.com/articles/s42003-023-05587-3&lt;/id>; &lt;更新>;2024-01-16T17:56:36.326416Z&lt;/更新>; &lt;link href=&quot;https:// /www.nature.com/articles/s42003-023-05587-3&quot;/>; &lt;author>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.springernature.com/w215h120/springer-static/image/art%3A10.1038%2Fs41598-020-71864-4 /MediaObjects/41598_2020_71864_Fig1_HTML.png&quot; style=&quot;宽度：220px；高度：123px；&quot; />;&lt;br />;用于酿造吉尼斯黑啤酒的酵母的起源已通过全基因组测序确定。分析表明，吉尼斯酵母菌株与其他历史上的爱尔兰酿造酵母不同，并且源自共同的祖先。 &lt;a href=&quot;https://hackernews.betacat.io/#the-origins-of-the-guinness-stout-yeast&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38989917&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Speedbump – 用于模拟可变网络延迟的 TCP 代理&lt;/stitle>; &lt;id>;https://github.com/kffl/speedbump&lt;/id>; &lt;更新>; 2024-01-16T12:56:36.326805Z&lt;/updated>; &lt;link href=&quot;https://github.com/kffl/speedbump&quot;/>; &lt;author>; &lt;name>;sph&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=sph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b47186da4819e3a6bca8b3b381f88c3403828d2e7254f31b1e26bbbe4d2889f5/kffl/speedbump&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;用于模拟可变且可预测的网络延迟的 TCP 代理 :globe_with_meridians::hourglass_flowing_sand: - GitHub - kffl/speedbump：用于模拟可变且可预测的网络延迟的 TCP 代理 :globe_with_meridians::hourglass_flowing_sand: &lt;a href=&quot; https://hackernews.betacat.io/#speedbump-a-tcp-proxy-to-simulate-variable-network-latency&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=39012697&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;6174&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/6174&lt;/id>; &lt;更新>;2024-01-16T20:56： 36.327183Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/6174&quot;/>; &lt;作者>; &lt;name>;gone35&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=gone35&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;数字 6174，也称为卡普雷卡常数，是一个具有唯一属性的四位数字。通过将其数字按降序排列，然后升序排列，用较大的数字减去较小的数字，并重复此过程，最多在 7 次迭代中将始终达到固定点 6174。此属性称为卡普雷卡例程。 &lt;a href=&quot;https://hackernews.betacat.io/#6174&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 39018769&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;PID：在游戏中创建稳定的控制&lt;/stitle>; &lt;id>;https://azeemba.com/posts/pids-creating-stable-control-in-games.html&lt;/id>; &lt;更新>;2024-01 -16T20:56:36.327549Z&lt;/updated>; &lt;link href=&quot;https://azeemba.com/posts/pids-creating-stable-control-in-games.html&quot;/>; &lt;作者>; &lt;名称>;azeemba&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=azeemba&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://azeemba.com/帖子/pids-creating-stable-control-in-games/PID-POnly.png&quot; style=&quot;width: 220px; height: 175px;&quot; />;&lt;br />;本文讨论了在视频游戏动画中使用PID控制器来控制角色到达时间。它解释了如何使用比例、积分和导数因子根据当前误差、历史行为和未来预测进行调整。 &lt;a href=&quot;https://hackernews.betacat.io/#pids-creating-stable-control-in-games&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39006457&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LeftoverLocals：通过泄漏的 GPU 本地内存监听 LLM 响应&lt;/stitle>; &lt;id>;https://blog.trailofbits.com/2024/01/16/leftoverlocals-listening -to-llm-responses-through-leaked-gpu-local-memory/&lt;/id>; &lt;更新>;2024-01-16T18:56:36.327940Z&lt;/更新>; &lt;link href=&quot;https://blog.trailofbits .com/2024/01/16/leftoverlocals-listening-to-llm-responses-through-leaked-gpu-local-memory/&quot;/>; &lt;作者>; &lt;名称>;ks6g10 &lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=ks6g10&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/blog.trailofbits.com/wp-内容/上传/2024/01/figfig1.png?resize=543%2C385&amp;ssl=1&quot; style=&quot;宽度：220px；高度：156px；&quot; />;&lt;br />;LeftoverLocals 是一个允许从 Apple、Qualcomm、AMD 和 Imagination GPU 上的 GPU 本地内存恢复数据的漏洞。它可以被用来监听其他用户的交互式 LLM 会话并泄露敏感数据。 &lt;a href=&quot;https://hackernews.betacat.io/#leftoverlocals-listening-to-llm-responses-through-leaked-gpu-local-memory&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39016405&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;了解 x86_64 分页&lt;/stitle>; &lt;id>;https://zolutal.github.io/understanding-paging/&lt;/id>; &lt;更新>;2024-01-16T16:56:36.328306Z&lt;/更新>; &lt;link href=&quot;https://zolutal.github.io/understanding-paging/&quot;/>; &lt;作者>; &lt;名称>;signa11&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;理解 x86_64 Paging 并不容易，但这篇博文旨在提供全面的解释的主题。它涵盖了页表的结构、地址转换的过程以及页表条目的解码。 &lt;a href=&quot;https://hackernews.betacat.io/#understanding-x86-64-paging&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39015377&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;蜜蜂有内在的时间感（2022）&lt;/stitle>; &lt;id>;https://greenrosechemistry.com/how-scientists-proved-that-bees-can-perceive-time/ &lt;/id>; &lt;更新>;2024-01-16T17:56:36.328667Z&lt;/更新>; &lt;link href=&quot;https://greenrosechemistry.com/how-scientists-proved-that-bees-can-perceive-time/ &quot;/>; &lt;author>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://greenrosechemistry.com/wp-content/uploads/2021/11/GreenRoseLogo_h_outline.png&quot; style=&quot;宽度：220px；高度：80px；&quot; />;&lt;br />;蜜蜂有一种内在的时间感，可以追踪过去的时间。科学家们进行了实验来证明这一点，包括训练蜜蜂在特定时间出来并观察它们对时间的记忆。蜜蜂可以测量 6-36 秒的短间隔，并且可能具有多种计时功能。 &lt;a href=&quot;https://hackernews.betacat.io/#bees-have-an-internal-sense-of-time-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39016040&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么一切都是兰花？&lt;/stitle>; &lt;id>;https://worldsensorium.com/why-is-everything-an-orchid/&lt;/ id>; &lt;更新>;2024-01-16T16:56:36.329376Z&lt;/更新>; &lt;link href=&quot;https://worldsensorium.com/why-is-everything-an-orchid/&quot;/>; &lt;作者>; &lt;名称>;dnetesn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dnetesn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://worldsensorium .com/wp-content/uploads/2023/12/orchid-2100554_1280.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;查尔斯·达尔文对兰花着迷，并将其视为探索选择性进化力量的模型。兰花的起源仍然存在争议，但最近的研究表明它们起源于劳亚大陆，并在中美洲南部经历了快速的物种形成。兰花进化出了独特的授粉策略，例如模仿传粉者的配偶或最喜欢的零食。然而，兰花正面临气候变化和栖息地破坏的威胁，其物种的迅速丧失可能是不可逆转的。 &lt;a href=&quot;https://hackernews.betacat.io/#why-is-everything-an-orchid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39015159&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;机械 Bendix 空气数据计算机，第 3 部分：压力传感器&lt;/stitle>; &lt;id>;https://www.righto.com/2024/01/bendix-cadc-Pressure- Transducers.html&lt;/id>; &lt;更新>;2024-01-16T19:56:36.329739Z&lt;/更新>; &lt;link href=&quot;https://www.righto.com/2024/01/bendix-cadc-Pressure-transducers .html&quot;/>; &lt;作者>; &lt;名称>;图片&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=picture&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://static.righto.com/images/bendix-transducer/bendix-side-w600.jpg&quot; style=&quot;宽度：220px；高度：119px；&quot; />;&lt;br />;Bendix 中央空气数据计算机 (CADC) 是一种机电模拟计算机，用于计算空速、马赫数和其他空气数据。本文重点介绍压力传感器以及它们如何将压力转化为轴旋转。 &lt;a href=&quot;https://hackernews.betacat.io/#the-mechanical-bendix-air-data-computer-part-3-Pressure-transducers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39018106&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;疯狂科学家俱乐部：书籍&lt;/stitle>; &lt;id>;http://www.madscientistsclub.com/books.html&lt;/ id>; &lt;更新>;2024-01-16T15:56:36.330092Z&lt;/更新>; &lt;link href=&quot;http://www.madscientistsclub.com/books.html&quot;/>; &lt;作者>; &lt;名称>;JKCalhoun &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=JKCalhoun&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www.madscientistsclub.com/鸡蛋.jpg&quot; style=&quot;宽度：220px；高度：111px；&quot; />;&lt;br />;《疯狂科学家俱乐部》是我父亲写的系列丛书，由十二个故事和两篇短篇小说组成。前七个故事收录在 1965 年出版的《疯狂科学家俱乐部》一书中，而后四个故事则是为 1968 年出版的《疯狂科学家俱乐部新历险记》而写。该系列讲述了疯狂科学家俱乐部的冒险故事在猛犸瀑布。 &lt;a href=&quot;https://hackernews.betacat.io/#mad-scientists-club-the-books&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39014426&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;OpenAI 取消了与五角大楼合作的军事工具禁令&lt;/stitle>; &lt;id>;https://www.semafor.com/article/01/16/2024/openai-is -与网络安全项目一起工作&lt;/id>; &lt;更新>;2024-01-16T23:56:36.330446Z&lt;/更新>; &lt;link href=&quot;https://www.semafor.com/ Article/01/16/2024/openai-is-working-with-the-pentagon-on-cybersecurity-projects&quot;/>; &lt;author>; &lt;name>;mfiguiere&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=mfiguiere&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://img.semafor.com/e082cf28354c3e8a0c80814295043509f5899a44-1280x854.png?w=1400&amp;q=75&amp;auto=格式”样式=“宽度：220px；高度：147px；” />;&lt;br />;硅谷变得更愿意与美国军方合作，谷歌从国防合同中赚取了数百万美元。五角大楼一直在积极寻求与科技初创公司的合作伙伴关系，以开发新的武器技术。然而，由于人工智能容易产生虚假信息，因此将人工智能融入战争会带来风险。 &lt;a href=&quot;https://hackernews.betacat.io/#openai-drops-ban-on-military-tools-to-partner-with-the-pentagon&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39020778&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLM AI 模型和 API 托管提供商的基准和比较&lt;/stitle>; &lt;id>;https://artificialanalysis.ai&lt;/ id>; &lt;更新>;2024-01-16T16:56:36.331174Z&lt;/更新>; &lt;link href=&quot;https://artificialanalysis.ai&quot;/>; &lt;作者>; &lt;名称>;Gcam&lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=Gcam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://artificialanalysis.ai/img/logos/mistral_small.png&quot;样式=“宽度：220像素；高度：200像素；” />;&lt;br />;人工智能模型和托管提供商分析 - 为您的用例选择最佳模型和提供商。模型质量和吞吐量之间存在权衡，较高质量的模型通常具有较低的吞吐量。 &lt;a href=&quot;https://hackernews.betacat.io/#benchmarks-and-comparison-of-llm-ai-models-and-api-hosting-providers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39014985&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过 WebAssembly 在浏览器中使用 ZBar 条形码扫描套件&lt;/stitle>; &lt;id>;https://barkeywolf.consulting/posts /barcode-scanner-web assembly/#meet-zbar&lt;/id>; &lt;更新>;2024-01-16T13:56:36.331532Z&lt;/更新>; &lt;link href=&quot;https://barkeywolf.consulting/posts/barcode-scanner -web assembly/#meet-zbar&quot;/>; &lt;作者>; &lt;名称>;akbarnama&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=akbarnama&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://barkeywolf.consulting/posts/barcode-scanner-web assembly/images/screenshot.jpg&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;我想为一个涉及库存管理的研究项目制作一个跨平台条形码扫描仪。在查看了几个 Javascript 库后，我发现了 ZBar，一个广泛用于条形码扫描的 C 库。我决定将 ZBar 编译为 WebAssembly，最终得到了一个漂亮的浏览器内条形码扫描仪。 &lt;a href=&quot;https://hackernews.betacat.io/#using-the-zbar-barcode-scanning-suite-in-the-browser-with-web assembly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39013229&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Postgres 的 BSON 扩展&lt;/stitle>; &lt;id>;https://github.com/buzzm/postgresbson&lt;/ id>; &lt;更新>;2024-01-16T12:56:36.332291Z&lt;/更新>; &lt;link href=&quot;https://github.com/buzzm/postgresbson&quot;/>; &lt;作者>; &lt;名称>;buzzm&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=buzzm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/51403dca9625a5d7e9ffe0a0fb8a3b77609af60863352db26ce35f09b906c473/ uzzm/postgresbson&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;buzzm/postgresbson 此提交不属于此存储库上的任何分支，并且可能属于存储库外部的分支。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-bson-extension-for-postgres&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39000905&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;V*：引导视觉搜索作为多模式法学硕士的核心机制&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2312.14135&lt;/id>; &lt;更新>;2024-01-16T17:56:36.332647Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs/2312.14135&quot;/>; &lt;author>; &lt;name>;jonbaer&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=jonbaer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/图片/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;我们引入了 V*，一种法学硕士引导的视觉搜索机制，可增强多模式法学硕士中的协作推理、上下文理解和对特定视觉元素的精确定位。这种集成产生了一个新的 MLLM 元架构，名为 SEAL。 &lt;a href=&quot;https://hackernews.betacat.io/#v-guided-visual-search-as-a-core-mechanism-in-multimodal-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39016086&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;