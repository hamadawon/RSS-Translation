<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-11-20T08:06:10.068400Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Sam Altman、Greg Brockman 等人加入 Microsoft&lt;/stitle>; &lt;id>;https://twitter.com/satyanadella/status/1726509045803336122&lt;/id>; &lt;updated>;2023- 11-20T07:57:55.281287Z&lt;/updated>; &lt;link href=&quot;https://twitter.com/satyanadella/status/1726509045803336122&quot;/>; &lt;作者>; &lt;name>;JimDabell&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=JimDabell&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但不用担心 - 让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#sam-altman-greg-brockman-and-others-to-join-microsoft&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38344196&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;随着 Altman 谈判破裂，Emmett Shear 成为临时 OpenAI 首席执行官&lt;/stitle>; &lt;id>;https://www.theverge.com/2023/11 /20/23967515/sam-altman-openai-board-fired-new-ceo&lt;/id>; &lt;更新>;2023-11-20T06:05:55.283402Z&lt;/更新>; &lt;link href=&quot;https://www. theverge.com/2023/11/20/23967515/sam-altman-openai-board-fired-new-ceo&quot;/>; &lt;作者>; &lt;名称>;andsoitis&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://duet-cdn.vox-cdn.com/thumbor/0x0:2040x1360/2400x1600/过滤器：焦点（1020x680：1021x681）：格式（webp）/cdn.vox-cdn.com/uploads/chorus_asset/file/24390406/STK149_AI_03.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;前 Twitch 首席执行官 Emmett Shear 被任命为 OpenAI 临时首席执行官，接替 Mira Murati。这一决定是在聘请萨姆·奥尔特曼（Sam Altman）担任首席执行官的谈判失败后做出的。 &lt;a href=&quot;https://hackernews.betacat.io/#emmett-shear-becomes-interim-openai-ceo-as-altman-talks-break-down&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38342643&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RSS 可用于分发各种信息&lt;/stitle>; &lt;id>;https://colinwalker.blog/blog/ ?date=2023-11-19&lt;/id>; &lt;更新>;2023-11-20T07:05:55.283907Z&lt;/更新>; &lt;link href=&quot;https://colinwalker.blog/blog/?date=2023-11 -19&quot;/>; &lt;作者>; &lt;名称>;walterbell&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=walterbell&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://colinwalker.blog/images/colinwalker-thumb.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;RSS 可用于分发各种信息，而不仅仅是网站更新。通过添加自定义命名空间，可能性是惊人的。为了真正的开放式通信和互操作性，它应该尽可能简单。 &lt;a href=&quot;https://hackernews.betacat.io/#rss-can-be-used-to-distribute-all-sorts-of-information&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38343385&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Setenv 不是线程安全的，C 不想修复它&lt;/stitle>; &lt;id>;https://www.evanjones。 ca/setenv-is-not-thread-safe.html&lt;/id>; &lt;更新>;2023-11-20T06:05:55.284395Z&lt;/更新>; &lt;link href=&quot;https://www.evanjones.ca/setenv -is-not-thread-safe.html&quot;/>; &lt;author>; &lt;name>;r4um&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=r4um&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;C setenv() 和 unsetenv() 函数不是线程安全的，可能会导致使用线程的程序崩溃。这个问题几十年前就已为人所知，但尚未得到解决。一种解决方案是制作像 Illumos/Solaris 一样的线程安全实现，另一种解决方案是添加新的线程安全 API 来获取和迭代环境变量。 &lt;a href=&quot;https://hackernews.betacat.io/#setenv-is-not-thread-safe-and-c-doesn-t-want-to-fix-it&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38342642&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 LoRA（低阶适应）微调 LLM 的实用技巧&lt;/stitle>; &lt;id>;https:// /magazine.sebastianraschka.com/p/practical-tips-for-finetuning-llms&lt;/id>; &lt;更新>;2023-11-19T22:05:55.284883Z&lt;/更新>; &lt;link href=&quot;https://magazine. sebastianraschka.com/p/practical-tips-for-finetuning-llms&quot;/>; &lt;作者>; &lt;名称>;rasbt&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rasbt&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F% 2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5dfbd169-eb7e-41e1-a050-556ccd6fb679_1600x672.png&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;低秩适应 (LoRA) 是训练定制 LLM 的有效技术。它可以节省内存并在多次运行中提供一致的结果。 LoRA 允许在单个 GPU 上对大型语言模型进行高效微调。 &lt;a href=&quot;https://hackernews.betacat.io/#practical-tips-for-finetuning-llms-using-lora-low-rank-adaptation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38338635&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;StyleTTS2 – 开源十一实验室品质文本转语音&lt;/stitle>; &lt;id>;https://github.com/yl4579 /StyleTTS2&lt;/id>; &lt;更新>;2023-11-19T18:05:55.285379Z&lt;/更新>; &lt;link href=&quot;https://github.com/yl4579/StyleTTS2&quot;/>; &lt;作者>; &lt;名称>;sandslides&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=sandslides&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets. com/721fecd2fb0aa6adc16e4d6ba3d7aa972ab511821b8ea47534872b063f400990/yl4579/StyleTTS2&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;StyleTTS 2 是一种文本转语音 (TTS) 模型，通过利用大型语音语言模型 (SLM) 的风格扩散和对抗性训练来实现人类水平的 TTS 合成。它在单说话人数据集上超越了人类录音，并在多说话人数据集上匹配。该模型在零样本扬声器自适应方面也优于以前的模型。 &lt;a href=&quot;https://hackernews.betacat.io/#styletts2-open-source-eleven-labs-quality-text-to-speech&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38335255&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么我倾向于不使用内容协商&lt;/stitle>; &lt;id>;https://htmx.org/essays/why-tend-not- to-use-content-negotiation/&lt;/id>; &lt;更新>;2023-11-19T22:05:55.285938Z&lt;/更新>; &lt;link href=&quot;https://htmx.org/essays/why-tend-not- to-use-content-negotiation/&quot;/>; &lt;作者>; &lt;名称>;TheBigRoomXXL&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=TheBigRoomXXL&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://htmx.org/img/bss_bars.png”样式 =“宽度：220 像素；高度：231 像素；” />;&lt;br />;Carson Gross 讨论了超媒体 API 和数据 (JSON) API 之间的差异，以及为什么他认为内容协商通常不是大多数应用程序返回 JSON 和 HTML 的正确方法。他认为 JSON API 应该稳定且规则，而超媒体 API 可以根据应用程序的用户界面需求进行更改。 &lt;a href=&quot;https://hackernews.betacat.io/#why-i-tend-not-to-use-content-negotiation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38338033&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;芝加哥西尔斯百货参观之旅&lt;/stitle>; &lt;id>;https://www.searshouseseeker.com/?m=0&lt;/id>; &lt;更新>;2023-11-20T01:05:55.286411Z&lt;/更新>; &lt;link href=&quot;https://www.searshouseseeker.com/?m=0&quot;/>; &lt;作者>; &lt;名称>;davetron5000&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=davetron5000&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/ b/R29vZ2xl/AVvXsEjBUOa-1zP6AQskBNAC5UKTM5pVqCc1I7GCs5OwmTYs65y5_Y7SdEtjeJ8XAq_wHeCvCi7z0QkUFSmxiuGUN75VXym25siwr-h-ap2AnKaoODHsLLRxK8KkrShOzxht9 Hlkia0eSJuCJzmN8xhu25N3QUsJpO51nD0OT7SESZYWLWdCp4WJ-WVvwE5hshnT/w640-h324/Screenshot%202023-06-20%20at%2010.09.46%20PM.png&quot; style=&quot;宽度：220px；高度：112px；&quot; />;&lt;br />;作者描述了他们最近去芝加哥参观西尔斯住宅和弗兰克·劳埃德·赖特住宅的旅程。他们住在郊区，参观了各个城镇看房子，还探索了橡树园和芝加哥市中心。 &lt;a href=&quot;https://hackernews.betacat.io/#a-trip-to-see-chicagoland-sears-houses&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38340188&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AS Byatt 去世了&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/11/17/books/as-byatt-dead。 html&lt;/id>; &lt;更新>;2023-11-20T02:05:55.286874Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/11/17/books/as-byatt-dead .html&quot;/>; &lt;author>; &lt;name>;Thevet&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Thevet&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://static01.nyt.com/images/2023/11/18/multimedia/17byatt-bqjc-print1/17byatt-bqjc-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;宽度：220 像素；高度：154 像素；” />;&lt;br />;以小说《占有》闻名的著名作家 AS Byatt 去世，享年 87 岁。她因其理智主义以及将学术与小说无缝融合的能力而受到赞誉。 &lt;a href=&quot;https://hackernews.betacat.io/#as-byatt-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38325551&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;古树清单&lt;/stitle>; &lt;id>;https://ati.woodlandtrust.org.uk/&lt;/id>; &lt;更新>;2023-11-20T03:05:55.287334Z&lt;/已更新>; &lt;link href=&quot;https://ati.woodlandtrust.org.uk/&quot;/>; &lt;作者>; &lt;name>;zeristor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= zeristor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ati.woodlandtrust.org.uk/media/1063/home_map.jpg&quot; style=&quot;width: 220px; height : 165 像素;&quot; />;&lt;br />;它们可以活数百年。英国的此类人数比许多其他欧洲国家还要多。 &lt;a href=&quot;https://hackernews.betacat.io/#ancient-tree-inventory&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38318132&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;两个独立小组发现的第九个戴德金数&lt;/stitle>; &lt;id>;https://www.quantamagazine.org/ninth-dedekind-number-found-by-two-independent-groups-20230801/ &lt;/id>; &lt;更新>;2023-11-19T21:05:55.287809Z&lt;/更新>; &lt;link href=&quot;https://www.quantamagazine.org/ninth-dedekind-number-found-by-two-independent- groups-20230801/&quot;/>; &lt;author>; &lt;name>;beefman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=beefman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/NewDedekindNumber-byAllisonLi-Lede-scaled.webp&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;理查德·戴德金 (Richard Dedekind) 是 19 世纪的数学巨人，他定义了戴德金数，该数计算了各个数学领域的结构。两个独立的小组最近计算出了第 9 个戴德金数，该数有 42 位数字。 &lt;a href=&quot;https://hackernews.betacat.io/#ninth-dedekind-number-found-by-two-independent-groups&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38337784&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;泰克陶瓷 CRT“地下墓穴”之旅&lt;/stitle>; &lt;id>;https://vintagetek.org/tour-crt-catacombs/&lt;/ id>; &lt;更新>;2023-11-19T23:05:55.288295Z&lt;/更新>; &lt;link href=&quot;https://vintagetek.org/tour-crt-catacombs/&quot;/>; &lt;作者>; &lt;名称>;dangle1&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=dangle1&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;泰克人员在例行维护时发现一个装满CRT漏斗模具的存储区域2021 年。自 1996 年 CRT 生产停止以来，这些模具一直存放在泰克 13 号大楼下，现在是 vintageTEK 博物馆的所在地。&lt;a href=&quot;https://hackernews.betacat.io/#a-tour-of- the-tektronix-ceramic-crt-catacombs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38339092&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;捕获并测试 AWS SES本地发送电子邮件&lt;/stitle>; &lt;id>;https://github.com/kamranahmedse/local-ses&lt;/id>; &lt;updated>;2023-11-20T02:05:55.288771Z&lt;/updated>; &lt;link href=&quot;https: //github.com/kamranahmedse/local-ses&quot;/>; &lt;author>; &lt;name>;anonfunction&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=anonfunction&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kamranahmedse/local-ses/main/.github/email-demo.png&quot; style=&quot;width: 220px; height: 181px;&quot; />;&lt;br />;在端口 8282 上启动服务并修改 SES 客户端以使用本地服务在本地捕获和测试 AWS SES 电子邮件。&lt;a href=&quot;https://hackernews.betacat.io /#trap-and-test-aws-ses-emails-locally&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38341035&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;朋友不要让朋友做出糟糕的图表&lt;/stitle>; &lt;id>;https://github.com/cxli233/FriendsDontLetFriends&lt;/id>; &lt;updated>;2023-11-20T01:05:55.289262Z&lt;/updated>; &lt; link href=&quot;https://github.com/cxli233/FriendsDontLetFriends&quot;/>; &lt;作者>; &lt;名称>;ZunarJ5&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ZunarJ5&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/cxli233/FriendsDontLetFriends/main/Results/dont_bar_plot.png&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;朋友们不要让朋友们做出糟糕的图表。本文讨论了数据可视化中的常见错误和不良做法，例如使用条形图进行均值分离、使用任意色标、设计不当的条形图绘制草地、未对热图中的行和列重新排序、基于误导性长度和位置的可视化、条形图中的断轴、无效的饼图和圆环图、同心圆环中的不准确表示、对色盲不友好的色标以及优化堆叠条形图的需要用于有效可视化的绘图。&lt;a href=&quot;https://hackernews.betacat.io/#friends-don-t-let-friends-make-bad-graphs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38340226&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;末日复制器 (2022)&lt;/stitle>; &lt;id>;https://github.com/simoninns/DomesdayDuplicator/wiki&lt;/ id>; &lt;更新>;2023-11-20T00:05:55.290220Z&lt;/更新>; &lt;link href=&quot;https://github.com/simoninns/DomesdayDuplicator/wiki&quot;/>; &lt;作者>; &lt;名称>;zeristor&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zeristor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/ wiki/simoninns/DomesdayDuplicator/assets/domesday_duplicator_3_photo.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;Domesday Duplicator 是一款基于 USB3 的 DAQ，能够每秒采集 4000 万个样本模拟 RF 数据。它旨在通过直接采样来备份 Domesday AIV 激光光盘。来自激光光盘播放器光学头的 RF 数据。&lt;a href=&quot;https://hackernews.betacat.io/#the-domesday-duplicator-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38339715&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CUBOTino：小型、简单、3D 打印、廉价的魔方解算机器人&lt;/stitle>; &lt;id>;https://github.com/ AndreaFavero71/CUBOTino_base_version&lt;/id>; &lt;更新>;2023-11-19T23:05:55.290683Z&lt;/更新>; &lt;link href=&quot;https://github.com/AndreaFavero71/CUBOTino_base_version&quot;/>; &lt;作者>; &lt;名称>;wallflower &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent .com/AndreaFavero71/CUBOTino_base_version/main/images/title_pic.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;此存储库包含构建 CUBOTino_base_version 的文件：一个小型、简单、3D 打印、廉价的魔方解算器机器人。这个机器人在不到 90 秒的时间内解决了魔方：不快，但是再次......它相当简单且便宜。&lt;a href=&quot;https://hackernews.betacat.io/#cubotino-a-small-simple-3d-printed-inexpective-rubik-s-cube-solver-robot&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38334784&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ultorg：关系数据的用户界面&lt;/stitle>; &lt;id>; https://www.ultorg.com&lt;/id>; &lt;更新>;2023-11-19T21:05:55.291165Z&lt;/更新>; &lt;link href=&quot;https://www.ultorg.com&quot;/>; &lt;作者>; &lt;name>;veltas&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=veltas&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.ultorg.com/images/figF1S_optimized.jpg&quot; style=&quot;宽度：220px; height: 168px;&quot; />;&lt;br />;Ultorg 是一款通用数据库应用程序，可连接到您现有的数据。它为关系数据库提供图形用户界面，允许用户快速连接来自多个表或数据源的数据。&lt; a href=&quot;https://hackernews.betacat.io/#ultorg-a-user-interface-for-relational-data&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=38301087&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;记住水晶收音机 (2020)&lt;/stitle>; &lt;id>;https://www.nutsvolts.com/magazine/article/remembering-the-crystal-radio&lt; /id>; &lt;更新>;2023-11-20T00:05:55.291629Z&lt;/更新>; &lt;link href=&quot;https://www.nutsvolts.com/magazine/article/remembering-the-crystal-radio&quot;/>; &lt;作者>; &lt;名称>;1970-01-01 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=1970-01-01&lt;/uri>; &lt;/作者>; &lt;content type =“html” &quot;>;&lt;img src=&quot;https://www.nutsvolts.com/uploads/wygwam/NV_1020_Goodsell_Fig-1.jpg&quot; style=&quot;宽度：220px; height: 167px;&quot; />;&lt;br />;我在 1952 年建造了一台水晶收音机，当时我 12 岁。它是芝加哥 Allied Radio 的套件，价格为 2.50 美元。如今，你所要做的就是让 Alexa 进行调谐进入数百个广播电台之一收听他们的节目。&lt;a href=&quot;https://hackernews.betacat.io/#remembering-the-crystal-radio-2020&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38326279&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在并行机上编程；GPU、多核、集群等&lt;/stitle>; &lt;id>;https://heather.cs .ucdavis.edu/parprocbook&lt;/id>; &lt;更新>;2023-11-19T23:05:55.292092Z&lt;/更新>; &lt;link href=&quot;https://heather.cs.ucdavis.edu/parprocbook&quot;/>; &lt;作者>; &lt;name>;abhi9u&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=abhi9u&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //heather.cs.ucdavis.edu/~matloff/158/PLN/Cover.gif&quot; style=&quot;width: 220px; height: 285px;&quot; />;&lt;br />;本文提供了并行算法的实践观点，涵盖理论分析和实践两个方面。重点关注OpenMP、CUDA、MPI等主要并行平台，包括真正的并行代码示例。本书不断发展，可免费下载。&lt;a href=&quot;https://hackernews.betacat.io/#programming-on-parallel-machines-gpu-multicore-clusters-and-more&quot; 目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38317722&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;盒式磁带革命&lt;/stitle>; &lt;id>;https:// www.newyorker.com/culture/culture-comment/the-cassette-tape-revolution&lt;/id>; &lt;更新>;2023-11-19T20:05:55.293055Z&lt;/更新>; &lt;link href=&quot;https://www .newyorker.com/culture/culture-comment/the-cassette-tape-revolution&quot;/>; &lt;author>; &lt;name>;pseudolus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pseudolus &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/6555105c0669d65be3038719/1:1/w_2560%2Cc_limit/Michaud-Cassette-Tapes.jpg “样式=”宽度：220px; height: 221px;&quot; />;&lt;br />;盒式磁带彻底改变了 20 世纪 60 年代末和 1970 年代的音乐，提供了一种廉价、便携和可共享的格式。尽管有噪音和嘶嘶声等缺陷，但盒式磁带允许个人控制他们自己的音景，并为嘻哈等新音乐流派铺平了道路。它还成为拥有国家控制的音乐发行系统的非西方国家的颠覆手段。&lt;a href=&quot;https://hackernews.betacat. io/#the-cassette-tape-revolution&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38337001&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;a 的位置手表影响准确性（2020）&lt;/stitle>; &lt;id>;https://watchesbysjx.com/2020/02/positional-error-and-accuracy.html&lt;/id>; &lt;updated>;2023-11-19T20:05:55.293511 Z&lt;/updated>; &lt;link href=&quot;https://watchesbysjx.com/2020/02/positional-error-and-accuracy.html&quot;/>; &lt;author>; &lt;name>;nequo&lt;/name>; &lt;uri>;https： //news.ycombinator.com/user?id=nequo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://watchesbysjx.com/wp-content/uploads/2020/ 01/rolex-microstella-blue-parachrom.jpg&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;机械手表机芯是一个精密的系统，会受到外部因素的影响，包括手表的位置。手表的位置会影响计时，称为位置误差。&lt; a href=&quot;https://hackernews.betacat.io/#the-position-of-a-watch-influences-accuracy-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=38332014&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;很棒的工程游戏&lt;/stitle>; &lt;id>;https://github.com/arcataroger/awesome-engineering-games&lt;/id>; &lt;更新>;2023- 11-19T20:05:55.293997Z&lt;/updated>; &lt;link href=&quot;https://github.com/arcataroger/awesome-engineering-games&quot;/>; &lt;作者>; &lt;name>;solardev&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=solardev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/75255a297e487f15fe01d85dd870535712e8428f8fa9bfd0404a3740da39ad0e/arcataroger/awesome -工程游戏”样式=“宽度：220px； height: 110px;&quot; />;&lt;br />;游戏根据与其最相关的工程类型分为几大类。这些游戏强调建造装配线，消耗输入资源以产生输出商品，通常具有多个输入链到中间输出。&lt;a href=&quot;https://hackernews.betacat.io/#awesome-engineering-games&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38336688&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;分布式系统中的乐观与悲观&lt;/stitle>; &lt;id>;https://brooker.co.za/blog/2023/10/18 /optimism.html&lt;/id>; &lt;更新>;2023-11-19T19:05:55.294446Z&lt;/更新>; &lt;link href=&quot;https://brooker.co.za/blog/2023/10/18/optimism. html&quot;/>; &lt;author>; &lt;name>;surprisetalk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=surprisetalk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;避免协调是构建超越单机性能的分布式系统的基础。分布式系统中的组件对其他组件的行为做出假设，这些假设可以分为乐观假设和悲观假设。悲观和乐观假设之间的选择极大地影响系统的可扩展性和性能。 &lt;a href=&quot;https://hackernews.betacat.io/#optimism-vs-pessimism-in-distributed-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38315575&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Inversion Art 正在努力成为艺术界的 YC&lt;/stitle>; &lt;id>;https://techcrunch.com/2023/11/12/inversion-art/ &lt;/id>; &lt;更新>;2023-11-20T00:05:55.294908Z&lt;/更新>; &lt;link href=&quot;https://techcrunch.com/2023/11/12/inversion-art/&quot;/>; &lt;作者>; &lt;name>;keiferski&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=keiferski&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /techcrunch.com/wp-content/uploads/2023/11/Inversion-Art-Large.jpeg?w=663&quot; style=&quot;宽度：220px；高度：133px；&quot; />;&lt;br />;Inversion Art 是一项加速器计划，旨在通过提供投资、指导、介绍和实际支持来支持艺术家的职业生涯。联合创始人 Joey Flores 受到 Y Combinator 经验的启发，希望为艺术家创建一个类似的项目。该计划旨在改变依靠收藏家、博物馆和画廊获得成功的传统模式，帮助艺术家为自己定义成功。 &lt;a href=&quot;https://hackernews.betacat.io/#inversion-art-is-trying-to-become-the-yc-of-the-arts-world&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38300827&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;datetime.utcnow() 现已弃用&lt;/stitle>; &lt;id>;https://blog.miguelgrinberg.com/ post/it-s-time-for-a-change-datetime-utcnow-is-now-deprecated&lt;/id>; &lt;更新>;2023-11-19T15:05:55.295368Z&lt;/更新>; &lt;link href=&quot;https ://blog.miguelgrinberg.com/post/it-s-time-for-a-change-datetime-utcnow-is-now-deprecated&quot;/>; &lt;作者>; &lt;名称>;Brajeshwar&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.miguelgrinberg.com/static/picow-book -small.png&quot; style=&quot;宽度：220px；高度：276px；&quot; />;&lt;br />;Python 3.12 版本弃用了 datetime.datetime 的 utcnow() 和 utcfromtimestamp() 函数，这些函数返回原始日期时间对象。 Python 维护者发现，一些日期和时间函数假设原始时间戳代表本地时间，从而导致歧义。他们建议切换到感知日期时间对象。 &lt;a href=&quot;https://hackernews.betacat.io/#datetime-utcnow-is-now-deprecated&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38333116&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Cosmopolitan v3.1&lt;/stitle>; &lt;id>;https://twitter.com/justinetunney/status/1726141024597324189?s=46&amp;t=K1nIh-2Y7JjaoOc9Y6bUzA&lt;/id>; &lt;更新>; 2023-11-20T01：05：55.295835Z &lt;/更新>; &lt;link href=&quot;https://twitter.com/justinetunney/status/1726141024597324189?s=46&amp;t=K1nIh-2Y7JjaoOc9Y6bUzA&quot;/>; &lt;作者>; &lt;名称>;sgammon &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sgammon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们给又是一枪。 &lt;a href=&quot;https://hackernews.betacat.io/#cosmopolitan-v3-1&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38340431&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;直到你可以使用 matplotlib 制作类似 xkcd 的绘图&lt;/stitle>; &lt;id>;https://matplotlib.org/stable/gallery/showcase/xkcd.html&lt;/id>; &lt;updated>;2023- 11-20T07:05:55.296278Z&lt;/更新>; &lt;link href=&quot;https://matplotlib.org/stable/gallery/showcase/xkcd.html&quot;/>; &lt;作者>; &lt;名称>;bobsacamano19&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=bobsacamano19&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://matplotlib.org/stable/_images/sphx_glr_xkcd_001 .png&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;本文包含两个使用 matplotlib 创建的类似 xkcd 的绘图示例。第一个情节基于漫画“炉子所有权”，第二个情节基于漫画“迄今为止的数据”。 &lt;a href=&quot;https://hackernews.betacat.io/#til-you-could-make-xkcd-like-plots-with-matplotlib&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38343203&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;凯尔·沃格特从 Cruise 辞职&lt;/stitle>; &lt;id>;https://techcrunch.com/2023/11/19/cruise-co-Founder -and-ceo-kyle-vogt-resigns/&lt;/id>; &lt;更新>;2023-11-20T03:05:55.296734Z&lt;/更新>; &lt;link href=&quot;https://techcrunch.com/2023/11/19 /cruise-co-Founder-and-ceo-kyle-vogt-resigns/&quot;/>; &lt;作者>; &lt;名称>;georgehill&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=georgehill&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://techcrunch.com/wp-content/uploads/2023/09/GettyImages-1692833223.jpg?w=600&quot; style= “宽度：220 像素；高度：147 像素；” />;&lt;br />;Cruise 联合创始人兼首席执行官凯尔·沃格特 (Kyle Vogt) 辞职。通用汽车高管 Mo Elshenawy 被任命为 Cruise 总裁兼首席技术官。 &lt;a href=&quot;https://hackernews.betacat.io/#kyle-vogt-resigns-from-cruise&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38341466&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;