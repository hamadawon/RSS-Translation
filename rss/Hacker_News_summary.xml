<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-05-05T18:03:42.131461Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;ESP32-S3 有（一些）SIMD 指令&lt;/stitle>; &lt;id>;https://bitbanksoftware.blogspot.com/2024/01/surprise-esp32-s3-has- Few-simd.html&lt;/id>; &lt;更新>;2024-05-05T17:03:14.671893Z&lt;/更新>; &lt;link href=&quot;https://bitbanksoftware.blogspot.com/2024/01/surprise-esp32-s3 -has-few-simd.html&quot;/>; &lt;作者>; &lt;名称>;_Microft&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=_Microft&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src =“https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiH28qEb2iVE8YxBOg6WEsoLiujEli3DaobspqcGgv0W00BewHGFPAhOezDghAWOTuiL18FigjnpV76Xj_6snFT7xF7HGwbxl8RBXKfR 4CWJmfVsm0Gxa9un5GxUWT7GpRu8evTKGUiuRJe/s320/20190630_003708.jpg&quot; style=&quot;宽度：220px; height: 181px;&quot; />;&lt;br />;Espressif 最近发布了对其 ESP32-S3 SoC 的 SIMD 指令的文档和支持。文档中的 SIMD 指令缺乏代码应用的示例和指导。&lt;a href=&quot;https:// /hackernews.betacat.io/#esp32-s3-has-a-few-simd-instructions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40266015&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;简单是一种优势，但遗憾的是复杂性卖得更好（2022）&lt;/stitle>; &lt;id>;https://eugeneyan.com/writing/simplicity/&lt;/id>; &lt;更新>;2024-05-05T17 :17:14.673723Z&lt;/updated>; &lt;link href=&quot;https://eugeneyan.com/writing/simplicity/&quot;/>; &lt;作者>; &lt;name>;7d7n&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=7d7n&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://eugeneyan.com/assets/dot-product-vs-mlp.jpg&quot; 样式=“宽度：220px； height: 151px;&quot; />;&lt;br />;想法和系统的复杂性通常被视为质量和掌握程度的标志，从而导致评估出现偏差。虽然简单的解决方案更容易实施和维护，但它们常常被低估和忽视支持更复杂的方法&lt;a href=&quot;https://hackernews.betacat.io/#simplicity-is-an-advantage-but-sadly-complexity-sells-better-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40266464&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算机科学的好主意&lt;/stitle>; &lt;id>;https://danielchasehooper.com/posts/ good-ideas-in-cs/&lt;/id>; &lt;更新>;2024-05-05T17:21:14.674168Z&lt;/更新>; &lt;link href=&quot;https://danielchasehooper.com/posts/good-ideas-in- cs/&quot;/>; &lt;author>; &lt;name>;kiyanwang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kiyanwang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文反思了计算机科学中关于基本思想的共识，超越了关于技术和实现的频繁争论，强调了数组和哈希图等普遍接受的概念，并展望了未来普遍接受的想法。 &lt;a href=&quot;https://hackernews.betacat.io/#good-ideas-in-computer-science&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40266492&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;小东西&lt;/stitle>; &lt;id>;https://rishad.substack.com/p/small-things&lt;/id>; &lt;更新>;2024-05-05T16:03： 14.674576Z&lt;/更新>; &lt;link href=&quot;https://rishad.substack.com/p/small-things&quot;/>; &lt;作者>; &lt;name>;jger15&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=jger15&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#small-things&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40265552&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;机器遗忘：机器学习模型减去要遗忘的信息&lt;/stitle>; &lt;id>;https:// /ai.stanford.edu/~kzliu/blog/unlearning&lt;/id>; &lt;更新>;2024-05-05T13:03:14.674965Z&lt;/更新>; &lt;link href=&quot;https://ai.stanford.edu/~ kzliu/blog/unlearning&quot;/>; &lt;author>; &lt;name>;ignoramous&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ignoramous&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRnut8P03hlk5tKJPEEsqUl1DSlqN2ScdJeiaRfC3mWbQ_PBBwf7wBU9xgxuzr1GoqgkB6MwCa6Zrdo6LQxSOIPXIUrl1Yug73k2 Q2zFI61VDAi9K21JOPox0Hc1CIh6ShKxW9Tgy45TYV3p3r5IiI7yxzzzOpzvbJ-5o3QVtjZn6vhDZLntnCcUSi1mb_/s720/image1.png&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;机器取消学习可以从训练好的模型中删除不需要的信息，而无需从头开始重新训练。它在版权保护、数据隐私和人工智能安全方面有应用。机器取消学习技术解决了重新训练成本和&lt;a href=&quot;https://hackernews.betacat.io/#machine-unlearning-ml-model-minus-the-information-to-be-unlearned&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40264352&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;C 编译器的历史 – 第 1 部分：性能、可移植性和自由&lt;/stitle>; &lt;id>;https://thechipletter .substack.com/p/a-history-of-c-compilers-part-1-performance&lt;/id>; &lt;更新>;2024-05-05T13:03:14.675361Z&lt;/更新>; &lt;link href=&quot;https: //thechipletter.substack.com/p/a-history-of-c-compilers-part-1-performance&quot;/>; &lt;author>; &lt;name>;gulced&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=gulced&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#a-history-of-c-compilers-part -1-performance-portability-and-freedom&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40264337&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;看看traefik，即使您不使用容器&lt;/stitle>; &lt;id>;https://j6b72.de/article/why-you-should-take-a-look-at-traefik/&lt;/id>; &lt;updated>; 2024-05-05T12:03:14.676510Z&lt;/更新>; &lt;link href=&quot;https://j6b72.de/article/why-you-should-take-a-look-at-traefik/&quot;/>; &lt;作者>; &lt;name>;q2loyp&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=q2loyp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Traefik 是基于容器的逆向用 Go 编写的代理可以自动检测并公开在任何容器基础设施中运行的服务。它提供 TLS 证书管理和身份验证集成等功能。 &lt;a href=&quot;https://hackernews.betacat.io/#take-a-look-at-traefik-even-if-you-don-t-use-containers&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40264042&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;基于时间的 CSS 动画&lt;/stitle>; &lt;id>;https://yuanchuan.dev/time-based-css -animations&lt;/id>; &lt;更新>;2024-05-05T05:03:14.676904Z&lt;/更新>; &lt;link href=&quot;https://yuanchuan.dev/time-based-css-animations&quot;/>; &lt;作者>; &lt; name>;spirit23&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=spirit23&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;CSS 现在拥有足够的数学函数，使时间基于动画技术。通过以毫秒为单位跟踪时间并利用三角函数，开发人员可以创建各种动画效果和自定义缓动函数。 &lt;a href=&quot;https://hackernews.betacat.io/#time-based-css-animations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40262236&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;自动整数哈希函数发现&lt;/stitle>; &lt;id>;https://github.com/skeeto/hash-prospector&lt;/id>; &lt;updated>;2024-05-05T02:03:14.677290 Z&lt;/updated>; &lt;link href=&quot;https://github.com/skeeto/hash-prospector&quot;/>; &lt;作者>; &lt;name>;danny00&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=danny00&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/c8e268fd12a5e07f1a9ac08b25d00c50fe92d765c0349c983e0335f74a1ab87e/skeeto/hash-prospector&quot; style=&quot;width: 220px高度：110px；” />;&lt;br />;Prospector 是一个用于生成和评估整数哈希函数的工具。它发现具有低雪崩偏差的函数，并且可以生成 32 位和 6 个 vicissshift-multiply 哈希函数。 &lt;a href=&quot;https://hackernews.betacat.io/#automated-integer-hash-function-discovery&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40261681&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;招聘人员正在采用模拟技术来应对人工智能应用程序过载&lt;/stitle>; &lt;id>;https://www.wired.com/story/recruiters-ai-application-overload/&lt;/ id>; &lt;更新>;2024-05-05T16:03:14.678496Z&lt;/更新>; &lt;link href=&quot;https://www.wired.com/story/recruiters-ai-application-overload/&quot;/>; &lt;作者>; &lt;name>;Brajeshwar&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /media.wired.com/photos/662bed24b58cd0cd290d2513/master/w_2560%2Cc_limit/WIRED-ai-job-recruiting-RS-03.jpg&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;招聘人员和工作平台正在采用生成式人工智能工具来自动化部分招聘流程，但对其准确性和潜在偏见的担忧仍然存在。虽然这些工具可以提高效率，但它们也会产生大量不合格的申请人，让招聘人员不知所措。 &lt;a href=&quot;https://hackernews.betacat.io/#recruiters-are-going-analog-to-fight-the-ai-application-overload&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40265420&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cylon：用于机器人、无人机和物联网的 JavaScript 框架&lt;/stitle>; &lt;id>;https://github.com/ Hybridgroup/cylon&lt;/id>; &lt;更新>;2024-05-05T04:03:14.679639Z&lt;/更新>; &lt;link href=&quot;https://github.com/hybridgroup/cylon&quot;/>; &lt;作者>; &lt;名称>;nateb2022 &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent .com/7b00cad23168253bc7cb521ae29a3fa5345b5d5c641c7737589978c3f69998ba/687474703a2f2f63796c6f6e6a732e636f6d2f696d616765732f7363726 5656e73686f74732f726f62656175782e6a7067&quot;样式=&quot;宽度：220像素；高度：141像素；&quot; />;&lt;br />;Cylon.js 是一个用于机器人和物联网设备的 JavaScript 框架，提供了一种简单而强大的方法来同时控制多个硬件设备。它支持广泛的平台和驱动程序，并提供用于远程控制和设备管理的API。 &lt;a href=&quot;https://hackernews.betacat.io/#cylon-javascript-framework-for-robotics-drones-and-the-internet-of-things&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40262115&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Atari 的 Mike Jang&lt;/stitle>; &lt;id>;https://arcadeblogger.com/2024/02/13/ataris-mike -jang/&lt;/id>; &lt;更新>;2024-05-04T21:03:14.680028Z&lt;/更新>; &lt;link href=&quot;https://arcadeblogger.com/2024/02/13/ataris-mike-jang/&quot; />; &lt;作者>; &lt;名称>;speckx &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=speckx&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://arcadeblogger.com/wp-content/uploads/2024/02/mike-jang-1.jpg?w=918&quot; style=&quot;宽度：220px；高度：240px；&quot; />;&lt;br />;长期担任 Atari 工业设计师的 Mike Jang 去世了。在街机视频游戏的黄金时代，他极大地塑造了众多街机柜的美学。 &lt;a href=&quot;https://hackernews.betacat.io/#atari-s-mike-jang&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40260210&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;经过验证的 Rust 低级系统代码&lt;/stitle>; &lt;id>;https://github.com/verus-lang/verus&lt;/id>; &lt;更新>;2024-05-04T18： 03:14.680405Z&lt;/updated>; &lt;link href=&quot;https://github.com/verus-lang/verus&quot;/>; &lt;作者>; &lt;name>;gz09&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=gz09&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/verus-lang/verus/main/source/docs /verus-demo.png&quot; style=&quot;宽度: 220px 高度: 78px;&quot; />;&lt;br />;Verus 是 Rust 的静态代码验证器，根据开发人员定义的规范证明代码的正确性。它支持 Rust 的子集，并支持操作原始指针的代码的静态验证。 &lt;a href=&quot;https://hackernews.betacat.io/#verified-rust-for-low-level-systems-code&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40259185&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;那些如此努力的跑步者，他们从来都不是一样的&lt;/stitle>; &lt;id>;https://www.outsideonline.com/podcast/overtraining-syndrome-science /&lt;/id>; &lt;更新>;2024-05-05T16:03:14.680789Z&lt;/更新>; &lt;link href=&quot;https://www.outsideonline.com/podcast/overtraining-syndrome-science/&quot;/>; &lt;作者>; &lt;name>;georgecmu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=georgecmu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //cdn.outsideonline.com/wp-content/uploads/2024/04/exhausted-runner-treadmill_h-1024x576.jpg?width=1200&quot; style=&quot;宽度：220px 高度：124px;&quot; />;&lt;br />;精英运动员可能会经历一种神秘而令人衰弱的状况，称为过度训练综合症（OTS），尽管进行了严格的训练，但仍会导致无法解释的疲劳和表现下降。 OTS 的确切机制仍不清楚，但潜在原因包括训练量过多、心理压力和荷尔蒙失衡。 &lt;a href=&quot;https://hackernews.betacat.io/#the-runners-who-went-so-hard-they-were-never-the-same&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40265678&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;HF 频段数字电信 - WWWAN - 全球无线区域网&lt;/stitle>; &lt;id>;https://pretalx。 sysmocom.de/osmodevcon2024/talk/BBZBGM/&lt;/id>; &lt;更新>;2024-05-05T03:03:14.681549Z&lt;/更新>; &lt;link href=&quot;https://pretalx.sysmocom.de/osmodevcon2024/talk/ BBZBGM/&quot;/>; &lt;作者>; &lt;名称>;pabs3&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pabs3&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; Rhizomatica 正在开发下一代 HERMES 网络堆栈，以实现其基于 HF 的电信系统的全球部署。该项目旨在通过高频无线电技术为偏远社区提供接入服务。 &lt;a href=&quot;https://hackernews.betacat.io/#digital-tcommunication-in-hf-band-wwwan-world-wide-wireless-area-network&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40261926&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Vera Rubin 的主镜获得第一个反射涂层&lt;/stitle>; &lt;id>;https://www.universetoday.com/166842 /vera-rubins-primary-mirror-gets-its-first-Reflective-coating/&lt;/id>; &lt;更新>;2024-05-04T23:03:14.681979Z&lt;/更新>; &lt;link href=&quot;https://www .universetoday.com/166842/vera-rubins-primary-mirror-gets-its-first-Reflective-coating/&quot;/>; &lt;作者>; &lt;名称>;bikenaga &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=bikenaga&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.universetoday.com/wp-content/uploads/2024/05/M1M3_render_labels。 jpg&quot; 样式=&quot;宽度:220px;高度:95px;&quot; />;&lt;br />;维拉鲁宾天文台的主镜/三镜经过七年的建设后首次涂有反射涂层。天文台的大型数码相机和创新的镜子系统对于即将进行的时空遗产调查至关重要。 &lt;a href=&quot;https://hackernews.betacat.io/#vera-rubin-s-primary-mirror-gets-its-first-Reflective-coating&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40261001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Xmake：基于 Lua 的跨平台构建工具&lt;/stitle>; &lt;id>;https://github.com/xmake-io /xmake&lt;/id>; &lt;更新>;2024-05-05T07:03:14.682785Z&lt;/更新>; &lt;link href=&quot;https://github.com/xmake-io/xmake&quot;/>; &lt;作者>; &lt;名称>; flexagoon&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=flexagoon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo. githubusercontent.com/769e4cad9e245ce29bdd20419859d1b1ed95654e313e29dd21e7b8a42d171779/68747470733a2f2f74626f6f782e6f72672f7374617469632f696d67 2f786d616b652f6c6f676f323536632e706e67”样式=“宽度：220像素；高度：220像素；” />;&lt;br />;Xmake 是一个跨平台构建实用程序，提供依赖包集成和项目源文件生成功能。它支持各种工具链，可以用来直接构建源代码或生成项目文件，如CMake或Meson。 &lt;a href=&quot;https://hackernews.betacat.io/#xmake-a-cross-platform-b​​uild-utility-based-on-lua&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40262779&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Debian 64 位时间过渡&lt;/stitle>; &lt;id>;https://wiki.debian.org/ReleaseGoals/64bit-time&lt;/ id>; &lt;更新>;2024-05-05T10:03:14.683547Z&lt;/更新>; &lt;link href=&quot;https://wiki.debian.org/ReleaseGoals/64bit-time&quot;/>; &lt;作者>; &lt;名称>;okl&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=okl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Debian 项目正在将 32 位架构转换为使用 6 vicisstime_t解决 20 年 vicisstime_t 问题。此转换需要更改库 ABI 并需要更新受影响的包。该过程涉及分阶段转换库和包，以最大限度地减少兼容性问题。 - 转换影响 32 位架构中的 4 个 vicisstime_t，除了 i386 vicisstime_t 和 hurd-i386 vicisstime_t。 - 需要更新软件包以处理 6 vicisstime_t 并确保与其他库的兼容性。 &lt;a href=&quot;https://hackernews.betacat.io/#debian-64-bit-time-transition&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40263479&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;新型扫描电子显微镜技术看到了 100nm 分辨率的磁场&lt;/stitle>; &lt;id>;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4812984&lt;/stitle>; &lt;id>;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4812984&lt;/ id>; &lt;更新>;2024-05-05T07:03:14.683935Z&lt;/更新>; &lt;link href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4812984&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// static.ssrn.com/cfincludes/img/icons/icon-adobe-pdf.svg&quot; style=&quot;宽度：220px 高度：235px；&quot; />;&lt;br />;一种方法使用特殊的磁场检测器在 SEM 中可视化磁场。该方法检测范围从 0 个垂直磁场开始的磁场，并提供 10 个垂直磁场的高空间分辨率。 &lt;a href=&quot;https://hackernews.betacat.io/#new-scanning-electron-microscope-tech-sees-Magnetic-field-with-100nm-resolution&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40262643&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：gpudeploy.com – GPU 的“Airbnb”&lt;/stitle>; &lt;id>;https://www.gpudeploy。 com&lt;/id>; &lt;更新>;2024-05-04T22:03:14.684314Z&lt;/更新>; &lt;link href=&quot;https://www.gpudeploy.com&quot;/>; &lt;作者>; &lt;名称>;nicowaltz&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nicowaltz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出租和出售 GPU。适合机器学习的低成本 GPU 实例。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-gpudeploy-com-airbnb-for-gpus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40260259&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;理解斯坦因悖论（2021）&lt;/stitle>; &lt;id>;https://joe-antognini.github.io/machine-learning/steins-paradox&lt;/id >; &lt;更新>;2024-05-05T02:03:14.684704Z&lt;/更新>; &lt;link href=&quot;https://joe-antognini.github.io/machine-learning/steins-paradox&quot;/>; &lt;作者>; &lt;名称>;robertvc&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=robertvc&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://joe -antognini.github.io/assets/posts/steins-paradox/circle-origin.png&quot; style=&quot;width: 220px height: 221px;&quot; />;&lt;br />;斯坦因悖论表明，在高维空间中，通过简单地直接采样来猜测分布的均值并不是最优的。 James-Stein 估计器通过将样本向原点缩小来提供更好的猜测。 - 在高维空间中，样本远离均值的概率很高，导致错误猜测的风险更高。 &lt;a href=&quot;https://hackernews.betacat.io/#understand-stein-s-paradox-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40261550&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;