<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-02T04:03:18.916099Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;获得 Hatetris 世界纪录（2022 年）&lt;/stitle>; &lt;id>;https://hallofdreams.org/posts/hatetris/&lt;/id>; &lt;更新>;2024-07- 02T00:03:11.924936Z&lt;/updated>; &lt;link href=&quot;https://hallofdreams.org/posts/hatetris/&quot;/>; &lt;作者>; &lt;name>;TheCog&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=TheCog&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者描述了他们在 HATETRIS（讨厌玩家的俄罗斯方块版本）中打破世界纪录的旅程，方法是开发一个定制模拟器并实施图论启发式方法来评估油井的质量。该启发式结合了已知的玉石启发式（根据井的形状评估井的质量）与考虑特定线条和...的图论方法。&lt;a href=&quot;https://hackernews.betacat.io/#getting- the-world-record-in-hatetris-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40851919&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：谁在招聘？ （2024 年 7 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40846428&lt;/id>; &lt;更新>;2024-07-01T15:03:11.926778Z&lt;/更新>; &lt;link href =&quot;https://news.ycombinator.com/item?id=40846428&quot;/>; &lt;作者>; &lt;名称>;whoishiring&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=whoishiring&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;各公司正在招聘各种职位，包括软件工程师、产品经理和数据科学家，其中一些提供远程工作选项，另一些则需要现场工作。公司包括 Beautiful.ai、VIVA Finance、Tracebit、Quatt.io、Aha!、Beacon AI、PlantingSpace、Meaningful Gigs、Hudson River Trading、Eigen、SmarterDx、Powertools Technologies 和 Temporal Technologies。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-is-hiring-july-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40846428&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;C++26 的反射&lt;/stitle>; &lt;id>;https://isocpp.org/files/papers/P2996R4.html&lt;/id>; &lt;更新>; 2024-07-01T21：03：11.927160Z &lt;/更新>; &lt;link href =“https://isocpp.org/files/papers/P2996R4.html”/>; &lt;作者>; &lt;名称>; svlasov &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=svlasov&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该提案引入了 C++ 中的反射系统，允许对程序元素进行自省，例如作为类型、变量和函数，并提供了一种在编译时操作和生成代码的方法。该系统基于单个不透明类型“std::meta::info”，并提供了一组可用于反映和操作程序元素的元函数，重点是轻松... &lt;a href=&quot;https: //hackernews.betacat.io/#reflection-for-c-26&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40836594 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;显示 HN：Doggo – 强大、人性化的命令行 DNS 客户端&lt;/stitle>; &lt;id>;https://doggo.mrkaran.dev/docs/&lt;/id>; &lt;更新>;2024-07-01T17 ：03：11.927590Z &lt;/更新>; &lt;link href =“https://doggo.mrkaran.dev/docs/”/>; &lt;作者>; &lt;名称>;卡兰先生&lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=mr-karan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://doggo.mrkaran.dev/docs/_astro/doggo.CZjkYmFM_Z1MHm8S .webp&quot;样式=&quot;宽度：220px；高度：96px；&quot; />;&lt;br />;成为 GitHub 赞助商，支持 Doggo 的发展，帮助维护和改进开源项目。每一项贡献，无论多么小，都会受到赞赏，并使项目保持活力和发展。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-doggo-a-powerful- human-friend-dns-client-for-the-command-line&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40847699&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无限下降证明&lt;/stitle>; &lt;id>;http://latedwork.blogspot.com /2024/07/a-proof-of-proof-by-infinite-descent.html&lt;/id>; &lt;更新>;2024-07-01T22:03:11.927983Z&lt;/更新>; &lt;link href=&quot;http:// relatedwork.blogspot.com/2024/07/a-proof-of-proof-by-infinite-descent.html&quot;/>; &lt;author>; &lt;name>;matt_d&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=matt_d&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者讨论了无限下降证明的概念，这是一种通过假设某个陈述是错误的来证明该陈述是错误的技术正确并表明它会导致矛盾。作者认为，这种技术经常被误解，为了充分理解它的力量和局限性，有必要对有根据的归纳法进行更普遍和抽象的理解。 &lt;a href=&quot;https://hackernews.betacat.io/#a-proof-of-proof-by-infinite-descent&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40851130&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;希腊推出“以增长为导向”的六天工作周&lt;/stitle>; &lt;id>;https://www.theguardian.com/world/article/2024/ jul/01/greece-introduces-growth-orient-six-day-working-week&lt;/id>; &lt;更新>;2024-07-02T03:17:11.928376Z&lt;/更新>; &lt;link href=&quot;https://www .theguardian.com/world/article/2024/jul/01/greece-introduces-growth-orient-six-day-working-week&quot;/>; &lt;author>; &lt;name>;cdme&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=cdme&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.guim.co.uk/img/media/0d1a793aeb66e912d8cd7cf0f984014ad4a304c6 /0_136_5568_3341/master/5568.jpg?width=465&amp;dpr=1&amp;s=none&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;希腊实行每周48小时工作制，允许私营企业实行第六天工作制，以提高生产率并解决劳动力短缺问题。此举遭到了工会的强烈反对，他们认为这侵犯了工人的权利，并将导致工作时间延长和工资减少，而不是改善工作条件和生活质量。 &lt;a href=&quot;https://hackernews.betacat.io/#greece-introduces-growth-orient-six-day-working-week&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40853243&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;进入 Microsoft Defender 签名世界的意外之旅&lt;/stitle>; &lt;id>;https://retooling.io/blog/an-unexpected-journey-into- microsoft-defenders-signature-world&lt;/id>; &lt;更新>;2024-07-01T21:03:11.928755Z&lt;/更新>; &lt;link href=&quot;https://retooling.io/blog/an-unexpected-journey-into -microsoft-defenders-signature-world&quot;/>; &lt;作者>; &lt;名称>;serhack_&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=serhack_&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/62be99262888097b51dc0855/1718189611277-GN56JRYHPXDK1P149E9L/t0nvi_An_hi-tech_hobbit_running_in_the_sunrise_without_shoes_in_4b23c3 c6-34ab-41da-b425-236414362a57.png?content-type=image %2Fpng&quot; style=&quot;宽度: 220px; height: 220px;&quot; />;&lt;br />;Microsoft Defender Antivirus (MDA) 是一种复杂的端点安全解决方案，将传感器功能与云处理相结合，其签名数据库由组织威胁及其相关签名的分层结构组成。重点关注 PEHSTR 和 PEHSTR_EXT 签名类型，它们用于检测恶意可移植可执行 (PE) 文件，以及... &lt;a href=&quot;https://hackernews.betacat.io/#an-unexpected-journey-into- microsoft-defender-s-signature-world&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;最可爱的垄断：Koala Kare&lt;/stitle>; &lt;id>;https://thehustle.co/originals/the-worlds-cutest-monopoly&lt;/id>; &lt;更新>;2024- 07-01T20:03:11.929141Z&lt;/更新>; &lt;link href=&quot;https://thehustle.co/originals/the-worlds-cutest-monopoly&quot;/>; &lt;作者>; &lt;名称>;Anon84&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=Anon84&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://20627419.fs1.hubspotusercontent-na1.net /hub/20627419/hubfs/share-Jun-28-2024-07-43-06-3743-PM.png?width=595&amp;height=400&amp;name=share-Jun-28-2024-07-43-06-3743-PM .png&quot;样式=&quot;宽度：220px； height: 148px;&quot; />;&lt;br />;Koala Kare 是一家生产尿布更换台的公司，在美国已占据市场主导地位，估计占有 85% 的份额，但其垄断地位引发了反垄断法和消费者的担忧尽管占据主导地位，该公司的成功归功于其创新产品和适应不断变化的消费者需求的能力，而不是任何反竞争行为。 monopoly-koala-kare&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40836559&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我的 Python 代码是一个神经网络&lt;/ stitle>; &lt;id>;https://blog.gabornyeki.com/2024-07-my-python-code-is-a-neural-network/&lt;/id>; &lt;更新>;2024-07-01T14:03:11.929505Z &lt;/更新>; &lt;link href=&quot;https://blog.gabornyeki.com/2024-07-my-python-code-is-a-neural-network/&quot;/>; &lt;作者>; &lt;名称>;gnyeki &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gnyeki&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者讨论了如何检测代码审查期间发送的消息中的代码，使用循环神经网络 (RNN)，用于改进手写算法，该算法面临复杂性和漏报问题。 RNN 经过训练，可以使用二进制指示函数和修正线性单元 (ReLU) 激活函数将消息分类为包含代码或不包含代码，以克服以下限制：&lt;a href=&quot;https://hackernews.betacat.io /#my-python-code-is-a-neural-network&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40845304&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;当兰德在圣莫尼卡创造魔法时&lt;/stitle>; &lt;id>;https://asteriskmag.com/issues/06/when-rand-made-magic-in-santa-monica&lt;/id>; &lt;更新>;2024-07 -01T20:03:11.929879Z&lt;/updated>; &lt;link href=&quot;https://asteriskmag.com/issues/06/when-rand-made-magic-in-santa-monica&quot;/>; &lt;作者>; &lt;名称>; mitchbob&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mitchbob&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://asteriskmag. com/media/pages/issues/06/when-rand-made-magic-in-santa-monica/e8f33b9ca6-1719845677/zebu.png&quot; style=&quot;width: 220px; height: 312px;&quot; />;&lt;br />;兰德公司是一家成立于1945年的研究机构，曾经是世界上最具生产力的研究机构，在科技领域取得重大突破，影响着美国的军事战略和政策。然而，随着时间的推移， ，兰德的重点从基础研究转向政策分析，其创新文化和开创性研究有所下降，尽管仍然是...... &lt;a href=&quot;https://hackernews.betacat.io/#when-rand-made-magic- in-santa-monica&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40849840&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;花费太多时间优化循环&lt;/ stitle>; &lt;id>;https://octavelarose.github.io/2024/05/29/to-do-inlined.html&lt;/id>; &lt;更新>;2024-07-02T00:03:11.930236Z&lt;/更新>; &lt; link href=&quot;https://octavelarose.github.io/2024/05/29/to-do-inlined.html&quot;/>; &lt;作者>; &lt;name>;azhenley&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=azhenley&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://octavelarose.github.io/assets/2024-05-29-to- do-inlined/comparing_every_interp.png&quot; style=&quot;width: 220px; height: 136px;&quot; />;&lt;br />;作者是一名博士生，正在致力于优化 Rust 编写的 SOM 语言解释器的性能，重点是提高语言中常见操作循环的性能。作者描述了他们实现一个原始函数来优化循环操作的过程，其中涉及在运行时创建修改块并处理... &lt;a href=&quot;https://hackernews.betacat.io/#spending-too-much -time-optimizing-for-loops&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40852155&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：谁想要被雇用吗？（2024 年 7 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40846426&lt;/id>; &lt;updated>;2024-07-01T15:03:11.930596Z&lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=40846426&quot;/>; &lt;作者>; &lt;name>;whoishiring&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =whoishiring&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;来自不同背景和地点的 34 名软件工程师、开发人员和专业人士组成的多元化团队正在寻找各种领域的全职、兼职或自由职业机会技术，包括 Python、JavaScript、Go、Rust、C++ 等。他们在网络开发、机器学习、数据科学、DevOps 和其他领域拥有经验，并且愿意远程工作或调动。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-wants-to-be-hired-july-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40846426&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;自杀身亡的海豹突击队员普遍存在脑损伤&lt;/stitle>; &lt;id>;https://www.nytimes.com/2024 /06/30/us/navy-seals-brain-damage-suicide.html&lt;/id>; &lt;更新>;2024-07-01T04:03:11.931676Z&lt;/更新>; &lt;link href=&quot;https://www.navy-seals-brain-damage-suicide.html&quot; nytimes.com/2024/06/30/us/navy-seals-brain-damage-suicide.html&quot;/>; &lt;author>; &lt;name>;thelastgallon&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=thelastgallon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2019/10/04/reader-center/author-戴夫-菲利普斯/作者-戴夫-菲利普斯-thumbLarge-v2.png“样式=“宽度：220像素；高度：220像素；” />;&lt;br />;大卫·梅特卡夫 (David Metcalf) 是一名海豹突击队队员，多年来因反复接触爆炸造成脑部损伤，并出现严重症状，于 2019 年自杀身亡。国防部实验室对他的大脑进行了分析，发现了一种不寻常的损伤模式，但研究结果从未与海军领导层分享。 &lt;a href=&quot;https://hackernews.betacat.io/#pattern-of-brain-damage-is-pervasive-in-navy-seals-who-died-by-suicide&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40836960&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过智能继电器自动化我的大门&lt;/stitle>; &lt;id>;https://arslan.io/ 2024/06/30/automating-my-gate-door-with-zigbee-relay/&lt;/id>; &lt;更新>;2024-07-01T21:03:11.932035Z&lt;/更新>; &lt;link href=&quot;https:// arslan.io/2024/06/30/automating-my-gate-door-with-zigbee-relay/&quot;/>; &lt;作者>; &lt;名称>;farslan&lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=farslan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arslan.io/content/images/size/w1200/2024/06/IMG_8934-1 .jpeg&quot;样式=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;用户使用 BFT 电机、Zigbee 干触点继电器和 Home Assistant 实现滑动门系统的自动化，并允许通过 iPhone 和 CarPlay 进行远程控制。他们通过使用中继并将 Zigbee 集线器移至更好的位置，克服了滚动代码和延迟问题。 &lt;a href=&quot;https://hackernews.betacat.io/#automating-my-gate-door-via-a-smart-relay&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40836174&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;康威的曲面生命游戏 (2012)&lt;/stitle>; &lt;id>;https://0fps.net/2012/11/19/conways- game-of-life-for-curved-surfaces-part-1/&lt;/id>; &lt;更新>;2024-07-01T10:03:11.932388Z&lt;/更新>; &lt;link href=&quot;https://0fps.net/ 2012/11/19/conways-game-of-life-for-curved-surfaces-part-1/&quot;/>; &lt;作者>; &lt;name>;babelfish&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=babelfish&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Conway 的生命游戏是一个著名的细胞自动机，可以产生复杂的模式，Stephan Rafler 将其推广到一个名为 SmoothLife 的平滑版本，它将离散网格替换为连续场，并使用微分方程来更新单元的状态。平滑版本可以使用各种方法来实现，包括伽辽金方法和... &lt;a href=&quot;https://hackernews.betacat.io/#conway-s-game-of-life-for-curved-surfaces -2012&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：ViperIDE – 适用于 Web 和移动设备的 MicroPython IDE&lt; /stitle>; &lt;id>;https://github.com/vshymanskyy/ViperIDE&lt;/id>; &lt;更新>;2024-07-01T21:03:11.932757Z&lt;/更新>; &lt;link href=&quot;https://github.com /vshymanskyy/ViperIDE&quot;/>; &lt;作者>; &lt;名称>;vshymanskyy &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=vshymanskyy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/vshymanskyy/ViperIDE/main/docs/images/screenshot-desktop-chrome.png&quot; style=&quot;宽度：220px 高度：164px;&quot; />;&lt;br />;较旧的 MicroPython 版本可能会也可能不会工作。让您的 MicroPython 保持最新状态。也就是说，据报道，ViperIDE 自 2020 年 9 月起可与 MicroPython v1.13 配合使用 🤠 Android 无法通过 USB OTG 检测到某些主板。在这种情况下，只能使用 BLE、WebREPL、P2P 连接。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-viperide-micropython-ide-for-web-and-mobile&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40836776&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;抽水蓄能水力发电&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Pumped-storage_Hydroelectricity&lt;/id>; &lt;更新>;2024-07-01T14:03:11.933129Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Pumped-storage_Hydroelectricity&quot;/>; &lt;作者>; &lt;名称>;luu &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia /commons/thumb/8/89/Raccoon_Mountain_Pumped-Storage_Plant.svg/300px-Raccoon_Mountain_Pumped-Storage_Plant.svg.png&quot; style=&quot;宽度：220px 高度：127px;&quot; />;&lt;br />;抽水蓄能（PHES）是水力发电储能的一种，通过在非高峰时段将水从海拔较低的水库抽到海拔较高的水库，然后通过涡轮机将水释放到在高峰时段发电。 PHES 是可用的最大容量的电网储能形式，已安装超过 181 GW ... &lt;a href=&quot;https://hackernews.betacat.io/#pumped-storage-Hydroelectricity&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40834377&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;代码审查确实会发现错误&lt;/stitle>; &lt;id>;https://two-wrongs.com /code-reviews-do-find-bugs.html&lt;/id>; &lt;更新>;2024-07-02T00:03:11.933490Z&lt;/更新>; &lt;link href=&quot;https://two-wrongs.com/code- Reviews-do-find-bugs.html&quot;/>; &lt;作者>; &lt;名称>;imadj&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=imadj&lt;/uri>; &lt;/作者>; &lt; content type=&quot;html&quot;>;代码审查对于发现缺陷和学习代码库非常有效，每 10 分钟审查就会发现一个缺陷，并且审查者的经验与其评论的有用性呈正相关。然而，微软论文的研究结果与其他研究相矛盾，作者的经验可能是由于审核周转时间差，可以通过以下方法改进...... &lt;a href=&quot;https://hackernews.betacat.io/ #code-reviews-do-find-bugs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40851895&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;编织者和结论者：两种沟通方式（2021）&lt;/stitle>; &lt;id>;https://neuroclastic.com/weavers-and-conclusionrs-two-communication-styles-no-one-knows-exist/&lt;/id>; &lt;更新>;2024- 07-01T09:03:11.933841Z&lt;/更新>; &lt;link href=&quot;https://neuroclastic.com/weavers-and-conclusionrs-two-communication-styles-no-one-knows-exist/&quot;/>; &lt;作者>; &lt;名称>;ColinWright&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ColinWright&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //i0.wp.com/neuroclastic.com/wp-content/uploads/2021/04/1.png?resize=800%2C800&amp;ssl=1&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;作者提出有两种主要的沟通方式：总结者，旨在提出观点并到达目的地；以及编织者，通过分享事实和创建维度来构建维度模式。作者认为，经常患有自闭症和注意力缺陷多动症的编织者的沟通方式不同，可能会被结论者误解，从而导致失去联系……&lt;a href=&quot;https://hackernews.betacat.io/#weavers -and-conclusionrs-two-communication-styles-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40840231&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一个更好的将工作流程与 Jujutsu 合并&lt;/stitle>; &lt;id>;https://ofcr.se/jujutsu-merge-workflow&lt;/id>; &lt;updated>;2024-07-01T12:03:11.934200Z&lt;/updated>; &lt;link href=&quot; https://ofcr.se/jujutsu-merge-workflow&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ofcr.se/assets/images/cover/jujutsu-merge-workflow.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;作者讨论了使用 Jujutsu（一种新的版本控制系统 (VCS) 工具）来管理多个代码分支和合并提交的好处，从而使处理单独的功能和测试变得更加容易作者分享了一个名为“奥斯汀大型合并策略”的工作流程，该工作流程允许用户将多个分支合并在一起，并将合并的合并提交保留在他们的工作中...... &lt;a href=&quot;https://hackernews.betacat .io/#a-better-merge-workflow-with-jujutsu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842762&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;Hoot 中的 CPS&lt;/stitle>; &lt;id>;https://wingolog.org/archives/2024/05/27/cps-in-hoot&lt;/id>; &lt;更新>;2024-07-01T21:03:11.934553Z&lt; /updated>; &lt;link href=&quot;https://wingolog.org/archives/2024/05/27/cps-in-hoot&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=wglb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Hoot，一个Scheme-to-Wasm编译器，使用延续传递风格（CPS）转换来实现推送调用，由于缺乏堆栈管理，这在 WebAssembly 中是一个挑战。 CPS 转换将函数分解为多个部分，允许堆栈分配和切片，并支持实现分隔延续和纤程，同时还提供良好的... &lt;a href=&quot;https://hackernews.betacat.io/#cps -in-hoot&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40817487&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;改善 Zig 语言服务器体验&lt;/stitle>; &lt;id>;https://kristoff.it/blog/improving-your-zls-experience/&lt;/id>; &lt;更新>;2024-07-01T23:03:11.934909Z&lt;/更新>; &lt;link href=&quot;https:// /kristoff.it/blog/improving-your-zls-experience/&quot;/>; &lt;作者>; &lt;name>;kristoff_it&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kristoff_it&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://kristoff.it/logo.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;Zig 语言服务器 (ZLS) 是社区努力的成果，可以跟上语言的变化，但在解析复杂的 comptime 表达式方面存在缺陷，限制了其诊断能力。 Zig 项目致力于改善开发人员体验，包括从调试版本中删除 LLVM 并实现增量编译，而 ZLS 则填补了这一空白。 &lt;a href=&quot;https://hackernews.betacat.io/#improving-your-zig-language-server-experience&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40851638&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Edna，开发者笔记应用&lt;/stitle>; &lt;id>;https://edna.arslexis.io/&lt;/id>; &lt;更新>;2024-07 -01T15:03:11.935266Z&lt;/updated>; &lt;link href=&quot;https://edna.arslexis.io/&quot;/>; &lt;作者>; &lt;name>;kjksf&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=kjksf&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;了解更多信息：https://edna.arslexis.io/help（或右键单击上下文菜单并使用 `帮助`/`显示帮助`)。这是一张草稿笔记。请随意删除内容并将其用作临时笔记。 Edna 的独特之处在于音符由块组成。每个块都有一个类型：这是一个数学块。行被评估为数学表达式，结果呈现在行尾右侧。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-edna-note-take-app-for-developers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40846242&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;工作名称（保险）&lt;/stitle>; &lt;id>;https://www.bitsaboutmoney.com/archive/working-title-insurance/&lt;/id >; &lt;更新>;2024-07-01T16:03:11.935620Z&lt;/更新>; &lt;link href=&quot;https://www.bitsaboutmoney.com/archive/working-title-insurance/&quot;/>; &lt;作者>; &lt;名称>; Keegs&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Keegs&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.Keegs.com/ bitsaboutmoney.com/content/images/size/w2000/2024/07/DALL-E-2024-07-01-10.37.10---专业金融期刊聚焦的封面插图- on-the-title-insurance-industry.-image-should-have-a-high-quality--sophisticate.webp&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;作者讨论了美国财产所有权和产权保险的复杂性，强调了集中数据库的缺乏以及产权保险在保护买家和贷方免受潜在产权缺陷影响方面的重要性。作者还批评了产权保险行业，认为这是一个卡特尔，由于缺乏...... &lt;a href=&quot;https://hackernews.betacat.io/#working-title-保险&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40847085&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我创建了一个 After Effects 替代方案&lt;/stitle>; &lt;id>;https://pikimov.com/&lt;/id>; &lt;更新>;2024-07-01T09:03:11.935971Z&lt;/更新>; &lt;link href=&quot;https://pikimov.com/&quot;/>; &lt;作者>; &lt;name>;clementpiki&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=clementpiki&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //pikimov.com/pikimov-cover.png&quot; style=&quot;宽度: 220px; 高度: 133px;&quot; />;&lt;br />;创建动效设计作品，在线快速裁剪视频，或修剪视频以使其更短。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-created-an-after-effects-alternative&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40843867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RegreSSHion：基于 glibc 的 Linux 系统上 OpenSSH 服务器中的 RCE&lt;/stitle>; &lt;id>;https://www.qualys.com/2024/07 /01/cve-2024-6387/regresshion.txt&lt;/id>; &lt;更新>;2024-07-01T09:03:11.936327Z&lt;/更新>; &lt;link href=&quot;https://www.qualys.com/2024/ 07/01/cve-2024-6387/regresshion.txt&quot;/>; &lt;作者>; &lt;名称>;robinhoodexe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=robinhoodexe&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;Qualys 安全通报报告了基于 glibc 的 Linux 系统上 OpenSSH 服务器 (sshd) 中的远程代码执行漏洞，允许未经身份验证的远程攻击者以 root 身份执行任意代码。该漏洞是由 SIGALRM 处理程序中的信号处理程序竞争条件引起的，可以通过中断对 free() 的调用并稍后在另一个... &lt;a href=&quot;https://hackernews.betacat.io /#regresshion-rce-in-openssh-s-server-on-glibc-based-linux-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40843778&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;在 Rust 中使用 SIMD 进行并行处理&lt;/stitle>; &lt;id>;https://nrempel.com/using-simd-for-parallel-processing-in-rust/&lt;/id>; &lt;更新>;2024-07-01T17:03:11.936675Z&lt;/更新>; &lt;link href=&quot;https://nrempel.com/using-simd-for-parallel-processing-in-rust/&quot;/>; &lt;作者>; &lt;名称>;nbrempel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nbrempel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// nrempel.com/content/images/2024/06/DALL-E-2024-06-23-21.00.25---带有互补色的较暗的抽象背景图像--具有相似的特征-前一个图像的图案。-设计应该有-smooth-gradie.webp&quot; style=&quot;width: 220px; height: 126px;&quot; />;&lt;br />;Rust 的 SIMD 功能可在单核内实现并行性，从而加速数据密集型操作。编译器的自动向量化和特定于平台的内在函数可提供性能提升，但需要仔细考虑复杂性、可移植性、和资源限制。 =&quot;https://news.ycombinator.com/item?id=40847392&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;善有善报[pdf]&lt;/stitle>; &lt;id>;https://db.cs.cmu.edu/papers/ 2024/whatgoesaround-sigmodrec2024.pdf&lt;/id>; &lt;更新>;2024-07-01T16:03:11.937021Z&lt;/更新>; &lt;link href=&quot;https://db.cs.cmu.edu/papers/2024/whatgoesaround -sigmodrec2024.pdf&quot;/>; &lt;作者>; &lt;名称>;craigkerstiens&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=craigkerstiens&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;数据模型和查询语言的发展导致了关系数据库的主导地位，大多数 NoSQL 系统都向 SQL 靠拢。柱状系统、云数据库、数据湖和硬件加速器等新架构的出现是为了支持不断变化的应用程序和硬件特性。 &lt;a href=&quot;https://hackernews.betacat.io/#what-goes-around-comes-around-and-around-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40846883&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;