<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-06-10T17:57:00.440868Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;author>; &lt;name>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Meta 发布了比 MusicLM 更好的新 SOTA 文本到音乐生成器&lt;/stitle>; &lt;id>;https://ai.honu.io/papers/musicgen/&lt;/id>; &lt;updated>; 2023-06-10T16:55:46.497583Z&lt;/updated>; &lt;link href=&quot;https://ai.honu.io/papers/musicgen/&quot;/>; &lt;author>; &lt;name>;og_kalu&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=og_kalu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章介绍了MusicGen，一个单一的语言模型，可以生成高质量的音乐样本，同时被以文本描述或旋律特征为条件。它优于标准文本到音乐基准测试中的其他评估基线。 &lt;a href=&quot;https://hackernews.betacat.io/#meta-releases-new-sota-text-to-music-generator-better-than-musiclm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36271926&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么大自然不允许在图像和视频中使用生成人工智能&lt;/stitle>; &lt;id>;https://www. nature.com/articles/d41586-023-01546-4&lt;/id>; &lt;更新>;2023-06-10T15:55:46.498535Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles /d41586-023-01546-4&quot;/>; &lt;author>; &lt;name>;geox&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=geox&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.nature.com/lw767/magazine-assets/d41586-023-01546-4/d41586-023-01546-4_25335740.jpg&quot; style=&quot;宽度： 220 像素；高度：165 像素；&quot; />;&lt;br />;出于对完整性、透明度、归属、同意和隐私的担忧，Nature 不会发布任何完全或部分使用生成式 AI 创建的照片、视频或插图的内容。但是，在生成式 AI 的帮助下生成的文本可能会包含适当的警告和文档。 &lt;a href=&quot;https://hackernews.betacat.io/#why-nature-will-not-allow-the-use-of-generative-ai-in-images-and-video&quot; target=&quot;_blank&quot;>; [总结]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36271583&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLM.int8()：大规模变压器的 8 位矩阵乘法（2022）&lt;/stitle >; &lt;id>;https://arxiv.org/abs/2208.07339&lt;/id>; &lt;updated>;2023-06-10T15:55:46.499167Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs /2208.07339&quot;/>; &lt;author>; &lt;name>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;本文描述了 Transformer 中的 Int8 矩阵乘法过程，该过程将推理所需的内存减少了一半，同时保持了全精度性能。这是通过两部分量化程序 LLM.int8() 实现的，该程序包括矢量量化和针对异常值的混合精度分解方案。 &lt;a href=&quot;https://hackernews.betacat.io/#llm-int8-8-bit-matrix-multiplication-for-transformers-at-scale-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36271112&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;许可对于解决人工智能风险既不可行也无效&lt;/stitle>; &lt;id>;https://aisnakeoil.substack.com/ p/licensing-is-neither-feasible-nor&lt;/id>; &lt;更新>;2023-06-10T13:55:46.499721Z&lt;/更新>; &lt;link href=&quot;https://aisnakeoil.substack.com/p/licensing -is-neither-feasible-nor&quot;/>; &lt;author>; &lt;name>;headalgorithm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=headalgorithm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack-post -media.s3.amazonaws.com%2Fpublic%2Fimages%2F4239d7c6-4f55-4254-91f2-20b9b2bec77e_1118x639.jpeg&quot; style=&quot;宽度：220px；高度：119px；&quot; />;&lt;br />;这篇文章讨论了将不扩散作为使 AI 更安全的一种方式的想法，但认为许可和执法将是困难且无效的。相反，作者建议学术界、公司和非政府组织组成的多元化团体应该开发和评估最先进的模型来应对人工智能风险。 &lt;a href=&quot;https://hackernews.betacat.io/#licensing-is-neither-feasible-nor-effective-for-addressing-ai-risks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36270303&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Golang 的最佳秘密：“可执行示例”&lt;/stitle>; &lt;id>;https://bitfieldconsulting.com/golang/examples&lt; /id>; &lt;updated>;2023-06-10T14:55:46.500274Z&lt;/updated>; &lt;link href=&quot;https://bitfieldconsulting.com/golang/examples&quot;/>; &lt;author>; &lt;name>;gus_leonel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gus_leonel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com /content/5e10bdc20efb8f0d169f85f9/1667998545795-U2LE9NW2BDTDQMCQZT3Q/lifebelt.png?content-type=image%2Fpng&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Go 提供了一个称为可执行示例的功能，它允许代码包含在自动生成的文档中，并以与测试相同的方式自动验证。这些示例是真正的 Go 代码，无需安装 Go 即可在 Web 浏览器中编辑和运行。 &lt;a href=&quot;https://hackernews.betacat.io/#golangs-best-kept-secret-executable-examples&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36270851&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示HN：用600行C89编写的RISC-V核心&lt;/stitle>; &lt;id>;https://github.com/mnurzia/rv&lt;/id>; &lt;updated >;2023-06-10T13:55:46.501048Z&lt;/updated>; &lt;link href=&quot;https://github.com/mnurzia/rv&quot;/>; &lt;author>; &lt;name>;mnurzia&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=mnurzia&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/40f17ba4e8bfb29456f706f6f76dab20dda55f25a866190cf86dcf28b087175c/mnurzia/r v&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;转储一个从 0x80000000 开始的二进制文件，它可以由 rv 直接加载，如上例所示：不使用任何大于 32 位的整数类型，即使是乘法，因为它是用C89写的。以不完全符合 C89/99 的方式假定整数类型的宽度。很快就会修复这个问题，我正在研究一个防水的 &lt;stdint.h>;;对于 C89。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-risc-v-core-written-in-600-lines-of-c89&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36270150&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;列出一项任务，完成，划掉&lt;/stitle>; &lt;id>;https://www.oliverburkeman.com/一件事&lt;/id>; &lt;updated>;2023-06-10T15:55:46.501663Z&lt;/updated>; &lt;link href=&quot;https://www.oliverburkeman.com/onething&quot;/>; &lt;author>; &lt;name>;Tomte&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.wixstatic.com /media/053ea9_019073577d0445b6b521687231c3166f~mv2.png/v1/fill/w_268,h_247,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/1621444132.png&quot; style=&quot;width: 220p x; 高度: 203px;&quot; />;&lt;br />;作者反思了他们在紧急情况下保持冷静和机智的能力，将其归因于没有自我怀疑和清楚需要做什么。他们认为，提高工作效率的关键不是尝试同时处理多项任务，而是一次专注于一件事，然后更好地决定下一步该做什么。 &lt;a href=&quot;https://hackernews.betacat.io/#list-one-task-do-it-cross-it-out&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36253882&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;开源许可证是否涵盖忒修斯之船？&lt;/stitle>; &lt;id>;https://shkspr.mobi/blog/2023/06/do- open-source-licences-cover-the-ship-of-theseus/&lt;/id>; &lt;updated>;2023-06-10T14:55:46.502249Z&lt;/updated>; &lt;link href=&quot;https://shkspr.mobi/ blog/2023/06/do-open-source-licences-cover-the-ship-of-theseus/&quot;/>; &lt;author>; &lt;name>;edent&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=edent&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://shkspr.mobi/apple-touch-icon.png&quot; style=&quot;width: 220px;高度：221px；&quot; />;&lt;br />;作者下载了一个带有归属许可的HTML模板，但最终重写了75%的HTML和更改了61%的CSS。他们质疑是否仍需要根据许可条款注明原作者的身份。 &lt;a href=&quot;https://hackernews.betacat.io/#do-open-source-licences-cover-the-ship-of-theseus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36256325&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ted Kaczynski 去世了&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/06/10/us/ted- kaczynski-dead.html&lt;/id>; &lt;更新>;2023-06-10T17:13:46.502878Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/06/10/us/ted -kaczynski-dead.html&quot;/>; &lt;author>; &lt;name>;mfiguiere&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mfiguiere&lt;/uri>; &lt;/author>; &lt;content type= &quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/06/11/obituaries/00Kaczynski/00Kaczynski-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220 像素；高度：155 像素；&quot; />;&lt;br />;Ted Kaczynski，被称为 Unabomber，享年 81 岁。他负责从 1978 年到 1995 年的一系列爆炸事件，造成 3 人死亡，23 人受伤，其目的是导致美国的崩溃。现代社会。 &lt;a href=&quot;https://hackernews.betacat.io/#ted-kaczynski-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator。 com/item?id=36272409&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;关于 Skimmers 的一切&lt;/stitle>; &lt;id>;https://krebsonsecurity.com/all-about-skimmers/&lt;/id>; &lt;updated>;2023-06-10T14:55:46.503397Z &lt;/updated>; &lt;link href=&quot;https://krebsonsecurity.com/all-about-skimmers/&quot;/>; &lt;author>; &lt;name>;cm_silva&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=cm_silva&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://krebsonsecurity.com/wp-content/uploads/2010/08/wouldyou-300x217.jpg&quot; style=&quot;宽度：220px；高度：160px；&quot; />;&lt;br />;这篇文章是关于 ATM 盗窃者、加油站盗窃者和其他相关欺诈设备的帖子集。作者展示了整个系列，并提供了一个方便的地方，可以在一个地方引用所有这些故事。 &lt;a href=&quot;https://hackernews.betacat.io/#all-about-skimmers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36255989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;FBI：FISA 第 702 条对监视、犯错、保护美国人“绝对关键”&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/06/09/fbi_fisa_section_702_absolutely/&lt; /id>; &lt;更新>;2023-06-10T14:55:46.503885Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/06/09/fbi_fisa_section_702_absolutely/&quot;/>; &lt;作者>; &lt;名称>;rntn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rntn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// regmedia.co.uk/2023/06/09/fbidudes.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;联邦调查局副局长保罗·阿贝特称，美国《外国情报监视法》第 702 条对于该机构继续保护美国人“绝对至关重要”。然而，702 条款在过去曾被滥用于监督美国活动家、记者和其他人，除非国会更新，否则该条款将于今年年底到期。 &lt;a href=&quot;https://hackernews.betacat.io/#fbi-fisa-section-702-absolutely-critical-to-spy-on-err-protect-americans&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36270554&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;The Pile：用于语言建模的 800GB 不同文本数据集&lt;/stitle>; &lt;id>;https://arxiv。 org/abs/2101.00027&lt;/id>; &lt;更新>;2023-06-10T17:07:46.504377Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2101.00027&quot;/>; &lt;作者>; &lt;名称>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://static .arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;文章介绍了“the Pile”，这是一个 825 GiB 的英文文本语料库，旨在训练大规模语言模型。 The Pile 由 22 个不同的高质量子集构成，在其上训练的模型在下游评估中显示出显着的性能提升。 &lt;a href=&quot;https://hackernews.betacat.io/#the-pile-an-800gb-dataset-of-diverse-text-for-language-modeling&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36272365&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zig 语言服务器和取消&lt;/stitle>; &lt;id>;https://matklad.github.io/2023/05/06 /zig-language-server-and-cancellation.html&lt;/id>; &lt;更新>;2023-06-10T06:55:46.504899Z&lt;/更新>; &lt;link href=&quot;https://matklad.github.io/2023/ 05/06/zig-language-server-and-cancellation.html&quot;/>; &lt;author>; &lt;name>;goranmoomin&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=goranmoomin&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://matklad.github.io/assets/zig-lsp.jpg&quot; style=&quot;宽度：220px；高度：105px；&quot; />;&lt;br />;本文讨论了在为语言实现 LSP 时从可靠数据模型入手的重要性，并探讨了在语言服务器中处理取消的不同方法。作者建议使用半空间垃圾回收的方式来处理现在需要但以后不需要的内存。 &lt;a href=&quot;https://hackernews.betacat.io/#zig-language-server-and-cancellation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36268247&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Emoji Kitchen&lt;/stitle>; &lt;id>;https://emojikitchen.dev/&lt;/id>; &lt;updated>;2023-06-10T03:55:46.505395Z&lt;/updated>; &lt; link href=&quot;https://emojikitchen.dev/&quot;/>; &lt;author>; &lt;name>;smollett&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smollett&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://emojikitchen.dev/social.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;组合表情符号的独特插图，在 Google 的 Emoji Kitchen 中制作，并在网络上全面提供 &lt;a href=&quot;https://hackernews.betacat.io/#emoji-kitchen&quot; target=&quot;_blank&quot; >;[总结]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36267382&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算机图形行业起步于犹他大学&lt;/stitle>; &lt;id>;https: //spectrum.ieee.org/history-of-computer-graphics-industry&lt;/id>; &lt;更新>;2023-06-09T22:55:46.505880Z&lt;/更新>; &lt;link href=&quot;https://spectrum.ieee .org/history-of-computer-graphics-industry&quot;/>; &lt;author>; &lt;name>;sohkamyung&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee.org/media-library/a-large-group-of-older-men-standing-for-a-group-portrait -some-sitting-on-chairs-in-front-and-others-standing-behind-them.jpg?id=34017358&amp;width=1200&amp;height=900&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;犹他大学通过 David Evans 和 Ivan E. Sutherland 在 1960 年代和 70 年代的开创性研究，在启动计算机图形行业方面发挥了重要作用。今天的许多计算机图形名人最初是在他们的公司 Evans and Sutherland 担任员工或博士生，在那里他们为计算机图形处理做出了基础性贡献。&lt;a href=&quot;https://hackernews.betacat.io/#the-computer-graphics- industry-got-started-at-the-university-of-utah&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36264744&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;问 HN：关于启动 YouTube 频道的建议？&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=36253565&lt;/id>; &lt;updated>;2023-06-10T16:55:46.506367Z &lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=36253565&quot;/>; &lt;author>; &lt;name>;mr_o47&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=mr_o47&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章建议不要在个人 YouTube 频道上使用受版权保护的材料，即使已获得许可，因为这可能会导致法律问题未来。作者建议通过创建原创内容来避免任何潜在的问题。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-advice-on-starting-a-youtube-channel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36253565&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;The Embeddable Common Lisp (2005) [pdf]&lt;/stitle>; &lt;id>;https://ecl.common-lisp.dev/static/files/论文/ecl-1995-attardi.pdf&lt;/id>; &lt;更新>;2023-06-10T14:55:46.507015Z&lt;/更新>; &lt;link href=&quot;https://ecl.common-lisp.dev/static/files /papers/ecl-1995-attardi.pdf&quot;/>; &lt;author>; &lt;name>;andsoitis&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文包含执行多值编程和生成随机数的 Lisp 程序的代码。该程序还包括一个用于对数计算的函数。 &lt;a href=&quot;https://hackernews.betacat.io/#the-embeddable-common-lisp-2005-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36270565&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;意外高频交易公司（2018）&lt;/stitle>; &lt;id>;https://web.archive.org/web/20210205014443/https://meanderful.blogspot.com /2018/01/the-accidental-hft-firm.html&lt;/id>; &lt;更新>;2023-06-10T09:55:46.507583Z&lt;/更新>; &lt;link href=&quot;https://web.archive.org/ web/20210205014443/https://meanderful.blogspot.com/2018/01/the-accidental-hft-firm.html&quot;/>; &lt;author>; &lt;name>;Twixes&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=Twixes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://web.archive.org/web/20210205014444im_/https://2. bp.blogspot.com/-IvTrVTjUluA/WxvzieGw3oI/AAAAAAAAMSQ/Lz-dTYA9ahIdRdvSWfADXAaacdO11ehXwCLcBGAs/s320/DUO2qqwVwAIBXda.jpg&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;本文是作者在高频交易方面的个人经历，包括为期权交易开发定价缓存和创建系统以应对 2 毫秒延迟挑战。作者还讨论了与困难的团队成员一起工作的挑战以及行业政治。 &lt;a href=&quot;https://hackernews.betacat.io/#the-accidental-hft-firm-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36269041&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;GitHub 被指控改变 Copilot 输出以避免版权指控&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/06/09/github_copilot_lawsuit/&lt;/id>; &lt;更新>;2023-06-10T13:55:46.508083Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/06/09/github_copilot_lawsuit/&quot;/>; &lt;author>; &lt;name>;belter &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia.co .uk/2019/07/20/shutterstock_programmer.jpg&quot; style=&quot;宽度：220px；高度：149px；&quot; />;&lt;br />;GitHub 被指控修改其 Copilot 编程助手，以生成与摄取的训练代码略有不同的输出，以避免版权侵权索赔。修改后的针对微软、GitHub 和 OpenAI 的投诉称，Copilot 违反了版权法和软件许可要求，对公开发布的代码进行培训并将他人的代码作为自己的代码提供。 &lt;a href=&quot;https://hackernews.betacat.io/#github-accused-of-varying-copilot-output-to-avoid-copyright-allegations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36270427&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1973 年的毛基辛格会议&lt;/stitle>; &lt;id>;https://gaodawei.wordpress.com/2023/06/08 /1973-prc-notes-on-mao-kissinger-meeting-of-february-17-1973/&lt;/id>; &lt;更新>;2023-06-09T23:55:46.508557Z&lt;/更新>; &lt;link href=&quot;https ://gaodawei.wordpress.com/2023/06/08/1973-prc-notes-on-mao-kissinger-meeting-of-february-17-1973/&quot;/>; &lt;author>; &lt;name>;prude&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=prude&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gaodawei.files.wordpress. com/2023/06/snap493.jpg?w=1005&quot; style=&quot;宽度：220px；高度：133px；&quot; />;&lt;br />;这篇文章讨论了解密的外交关系文件在提供对历史事件的洞察方面的重要性，特别关注 1973 年的毛基辛格会议。作者比较了美国和中国会议的边注并指出了一些差异，包括毛主席政治不正确的笑话。 &lt;a href=&quot;https://hackernews.betacat.io/#the-mao-kissinger-meeting-of-1973&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36265771&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Palantir CEO 拒绝暂停 AI 开发的呼吁&lt;/stitle>; &lt;id>;https://newsnotfound.com/palantir-ceo-rejects-calls-to-pause-ai- development-amid-global-debate/&lt;/id>; &lt;updated>;2023-06-10T15:55:46.509057Z&lt;/updated>; &lt;link href=&quot;https://newsnotfound.com/palantir-ceo-rejects-calls- to-pause-ai-development-amid-global-debate/&quot;/>; &lt;author>; &lt;name>;newsnotfound&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=newsnotfound&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://newsnotfound.com/wp-content/uploads/2023/06/image-271.png&quot; style=&quot;宽度：220px；高度： 220 像素；&quot; />;&lt;br />;Palantir 首席执行官亚历克斯·卡普 (Alex Karp) 拒绝了暂停人工智能 (AI) 开发的呼吁，并表示继续推进该技术很重要。卡普认为，西方目前在人工智能领域拥有关键的商业和军事优势，不应放弃。 &lt;a href=&quot;https://hackernews.betacat.io/#palantir-ceo-rejects-calls-to-pause-ai-development&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36271120&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;你应该构建什么？&lt;/stitle>; &lt;id>;https://exponentially.substack.com/p/what-should-you-build&lt;/ id>; &lt;updated>;2023-06-10T16:55:46.509525Z&lt;/updated>; &lt;link href=&quot;https://exponentially.substack.com/p/what-should-you-build&quot;/>; &lt;作者>; &lt;名称>;jamiegreen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jamiegreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F807853ba-d6fe-4276- ac5b-7e83394120f1_675x499.jpeg&quot; style=&quot;宽度：220px；高度：163px；&quot; />;&lt;br />;这篇文章讨论了识别个人或公司所面临的实际问题并为他们创建解决方案的重要性，而不是想出难以置信的创业点子。它强调需要尽快将产品交到用户手中，以确定是否确实需要它。作者还建议不要太担心竞争对手或有人窃取创意，因为每个伟大的创业创意的来源都是独一无二的。 &lt;a href=&quot;https://hackernews.betacat.io/#what-should-you-build&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator。 com/item?id=36271910&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;资本化的仪式（2021）&lt;/stitle>; &lt;id>;https://economicsfromthetopdown.com/2021/06/02/the-ritual-of-capitalization/&lt;/id>; &lt;更新>;2023-06-10T07:55:46.510000Z&lt;/更新>; &lt;link href=&quot;https://economicsfromthetopdown.com/2021/06/02/the-ritual-of-capitalization/&quot;/>; &lt;作者>; &lt;名称>;benaadams&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=benaadams&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// i0.wp.com/economicsfromthetopdown.com/wp-content/uploads/2021/06/ritual_capitalization.png?resize=600%2C450&amp;ssl=1&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;金融是一种以资本化仪式为中心的量化信仰体系，涉及将财产与金融混合以将其简化为数字。资本化仪式是资本主义意识形态的体现，并在人类行为中产生了惊人的规律性。 &lt;a href=&quot;https://hackernews.betacat.io/#the-ritual-of-capitalization-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36267611&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;英国爱好者用“惊人”的新形状震惊数学世界&lt;/stitle>; &lt;id>;https://phys.org/news/2023-06-uk-hobbyist-stuns-math -world.html&lt;/id>; &lt;updated>;2023-06-10T14:55:46.510463Z&lt;/updated>; &lt;link href=&quot;https://phys.org/news/2023-06-uk-hobbyist-stuns- math-world.html&quot;/>; &lt;author>; &lt;name>;mojomark&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mojomark&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/the-spectre-one-of-the.jpg&quot; style=&quot;宽度：220px；高度：126px ;&quot; />;&lt;br />;来自英国的退休印刷技师大卫史密斯发现了一个名为“帽子”的 13 边多边形，它可以覆盖无限大的平面而不重复相同的图案，解决了 60 年前提出的问题。史密斯和三位数学家还发现了一种叫做“幽灵”的新形状，它可以永远持续下去而不会重复一种模式。 &lt;a href=&quot;https://hackernews.betacat.io/#uk-hobbyist-stuns-math-world-with-amazing-new-shapes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36270647&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Debian 12 “书虫”&lt;/stitle>; &lt;id>;https://www.debian.org/News/2023/20230610&lt;/id>; &lt;updated>;2023-06-10T12:55:46.510925Z&lt;/updated>; &lt;link href=&quot;https://www.debian.org/News/2023/20230610&quot;/>; &lt;author>; &lt;name>;聊天&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=Chatting&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Debian 发布了新的稳定版本 12，名为“Bookworm”，之后开发历时 1 年 9 个月 28 天。该版本包括 11,000 多个新软件包、更新的软件包以及对 ARM64 上安全启动的支持。 &lt;a href=&quot;https://hackernews.betacat.io/#debian-12-bookworm&quot; target=&quot;_blank&quot;>;[总结]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36269934&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;为了拯救 C，我们必须拯救 ABI (2022)&lt;/stitle>; &lt;id>;https://thephd.dev/to-save-c-we-must-save-abi-fixing-c -function-abi&lt;/id>; &lt;更新>;2023-06-10T10:55:46.511357Z&lt;/更新>; &lt;link href=&quot;https://thephd.dev/to-save-c-we-must-save- abi-fixing-c-function-abi&quot;/>; &lt;author>; &lt;name>;karsinkk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=karsinkk&lt;/uri>; &lt;/author>; &lt; content type=&quot;html&quot;>;&lt;img src=&quot;https://thephd.dev/assets/img/2022/03/Jason%20Turner%20(lefticus)%20-%20C++%20Weekly%20270%20-%20Title %20Screen.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;一些平台已经实现了应用程序二进制接口（abi）的稳定性。这背后的想法是允许不同的实现和实现策略来完成某些工作。如果我们将 dll 从代码下换出，尽管有中断，它仍会继续工作——即使启用了优化并且没有堆栈保护。未来会重写abi稳定性机制，使其更容易在其他平台上实现。但现在，我们&lt;a href=&quot;https://hackernews.betacat.io/#to-save-c-we-must-save-abi-2022&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36249253&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PlayHT (YC W23) 正在招聘一名高级机器学习工程师（法学硕士/生成模型）&lt;/stitle>; &lt;id>;https:// www.ycombinator.com/companies/playht/jobs/G6vI660-senior-ml-engineer-large-language-models&lt;/id>; &lt;更新>;2023-06-10T07:55:46.511810Z&lt;/更新>; &lt;link href= “https://www.ycombinator.com/companies/playht/jobs/G6vI660-senior-ml-engineer-large-language-models”/>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// bookface-images.s3.amazonaws.com/small_logos/3d4c9619438357f2137d8fd295cf819f695c073d.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Play.ht (YC23) 正在构建未来的生成媒体平台；我们拥有业界最高质量的语音合成和语音克隆模型。我们正在寻找全职高级机器学习工程师加入我们，共同构建一个平台，让数百万创作者能够使用生成式 AI 来创作各种类型的内容。完美的候选人是一位可靠的自主工程师，在大型语言模型、生成模型和变形金刚方面具有成长心态和经验。最好是语音合成、GPT 和扩散模型知识。 &lt;a href=&quot;https://hackernews.betacat.io/#playht-yc-w23-is-hiring-a-senior-ml-engineer-llms-generative-models&quot; target=&quot;_blank&quot;>;[总结]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;腮腺炎病例 (2007)&lt; /stitle>; &lt;id>;https://thedailywtf.com/articles/A_Case_of_the_MUMPS&lt;/id>; &lt;updated>;2023-06-10T09:55:46.512196Z&lt;/updated>; &lt;link href=&quot;https://thedailywtf.com /articles/A_Case_of_the_MUMPS&quot;/>; &lt;author>; &lt;name>;ahiknsr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ahiknsr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;&lt;img src=&quot;https://thedailywtf.com/images/alexp/apx-square500.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Bryan H 在“MUMPS 商店”工作了两年多，在那里他必须学习和使用 MUMPS 编程语言。 MUMPS 是一种用于创建和维护医疗信息系统的编程语言，其语法难以使用，其设计目标是创建永远无法再由任何人维护的代码。 &lt;a href=&quot;https://hackernews.betacat.io/#a-case-of-the-mumps-2007&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36268931&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;In the dead of night, a deafening war&lt;/stitle>; &lt;id>;https://atmos.earth/exploring-evolution-of-bats-and-moths/&lt;/id>; &lt;updated>;2023-06-10T10:55:46.512652Z&lt;/updated>; &lt;link href=&quot;https://atmos.earth/exploring-evolution-of-bats-and-moths/&quot;/>; &lt;author>; &lt;name>;meanie&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=meanie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://atmos.earth/wp-content/uploads/2023/06/evolution-bats-moths-1280x853.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;Dr. Aaron Corcoran studies the battle between bats and moths, which involves echolocation, chemical defense, sonar jamming, stealth pursuit, and acoustic illusions. This conflict has been ongoing for millions of years and has resulted in remarkable adaptations on both sides. &lt;a href=&quot;https://hackernews.betacat.io/#in-the-dead-of-night-a-deafening-war&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36265734&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;A student&#39;s desire to get out of a exam led to a compression algorithm&lt;/stitle>; &lt;id>;https://www.quantamagazine.org/how-lossless-data-compression-works-20230531&lt;/id>; &lt;updated>;2023-06-09T17:55:46.513100Z&lt;/updated>; &lt;link href=&quot;https://www.quantamagazine.org/how-lossless-data-compression-works-20230531&quot;/>; &lt;author>; &lt;name>;the-mitr&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=the-mitr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/05/CompressionExplainer-byKristinaArmitage-Lede-scaled.webp&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Lossless data compression, which makes transmissions smaller without sacrificing substance, is already remarkably efficient and powers everything from the PNG image standard to the software utility PKZip. This is thanks to a graduate student who, 70 years ago, improved a leading algorithm for data compression by using codes of varying lengths without needing costly spaces. &lt;a href=&quot;https://hackernews.betacat.io/#a-students-desire-to-get-out-of-a-exam-led-to-a-compression-algorithm&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36251471&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;