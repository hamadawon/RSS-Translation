<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-28T15:57:24.063808Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;LoRA+：大型模型的高效低阶自适应&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2402.12354&lt;/id>; &lt;updated>;2024-04-28T13 ：55：44.856924Z &lt;/更新>; &lt;link href =“https://arxiv.org/abs/2402.12354”/>; &lt;作者>; &lt;name>;veryluckyxyz &lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=veryluckyxyz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo- fb.png&quot; style=&quot;宽度: 220px; 高度: 129px;&quot; />;&lt;br />;LoRA+中通过调整适配器A和B的学习率，改善了LoRA在微调宽模型时效率低下的问题，从而提高了性能和微调速度。 &lt;a href=&quot;https://hackernews.betacat.io/#lora-efficient-low-rank-adaptation-of-large-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40188511&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zilog Z80 CPU – 现代、免费和开源的硅克隆&lt;/stitle>; &lt;id>;https://github.com/rejunity/z80-open-硅&lt;/id>; &lt;更新>;2024-04-28T11:55:44.858791Z&lt;/更新>; &lt;link href=&quot;https://github.com/rejunity/z80-open-silicon&quot;/>; &lt;作者>; &lt;名称>;jnord&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw .githubusercontent.com/rejunity/z80-open-silicon/main/docs/tt07_z80.png&quot; style=&quot;width: 220px; height: 318px;&quot; />;&lt;br />;Zilog 宣布 Z80 CPU 寿命终止，促使开源社区使用 OpenROAD 和 Skywater PDK 开发 FOSS Z80 进行生产。最初的 FOSS Z80 设计将于 2024 年 6 月制造，模仿原始 Z80 布局，从而实现更便宜的芯片制造。 &lt;a href=&quot;https://hackernews.betacat.io/#zilog-z80-cpu-modern-free-and-open-source-silicon-clone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40187656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;伦敦交通局简单的弹出消息导致纸质门票销量大幅下降&lt;/stitle>; &lt;id>;https://www.ianvisits .co.uk/articles/how-tfls-simple-pop-up-message-led-to-a-significant-drop-in-paper-ticket-sales-71920/&lt;/id>; &lt;更新>;2024-04- 28T10:55:44.859825Z&lt;/更新>; &lt;link href=&quot;https://www.ianvisits.co.uk/articles/how-tfls-simple-pop-up-message-led-to-a-significant-drop -in-paper-ticket-sales-71920/&quot;/>; &lt;作者>; &lt;名称>;zeristor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zeristor&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ianvisits.co.uk/articles/wp-content/uploads/2024/04/pom-message-02-source-ianvisits-900x500。 jpg&quot; 样式=&quot;宽度:220px;高度:123px;&quot; />;&lt;br />;伦敦交通局在售票机上引入了建议非接触式支付的弹出消息，使纸质门票销量减少了三分之一。此举旨在为客户节省资金并简化运营，符合伦敦交通局减少磁条票使用的目标。 &lt;a href=&quot;https://hackernews.betacat.io/#tfl-s-simple-pop-up-message-led-to-a-significant-drop-in-paper-ticket-sales&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40187379&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;合成器战争：MIDI 的故事 (2023)&lt;/stitle>; &lt;id>;https: //www.musicradar.com/news/the-story-of-midi&lt;/id>; &lt;更新>;2024-04-28T11:55:44.860354Z&lt;/更新>; &lt;link href=&quot;https://www.musicradar .com/news/the-story-of-midi&quot;/>; &lt;作者>; &lt;名称>;conanxin&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=conanxin&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.mos.cms.futurecdn.net/ZK4dtzvVupUjGpGeni9Jnh-320-80.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;本文详细介绍了 80 年代音乐硬件兼容性问题的早期挑战，以及合成器先驱 Dave Smith 和其他人开发 MIDI 来标准化不同设备上的音乐技术。尽管最初遇到阻力，MIDI 彻底改变了音乐制作，实现了跨品牌整合和更容易理解的音乐创作。 &lt;a href=&quot;https://hackernews.betacat.io/#synth-wars-the-story-of-midi-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40164310&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;流场寻路&lt;/stitle>; &lt;id>;https://www.redblobgames.com/blog/2024-04-27-flow-field-pathfinding/&lt; /id>; &lt;更新>;2024-04-28T09:55:44.860841Z&lt;/更新>; &lt;link href=&quot;https://www.redblobgames.com/blog/2024-04-27-flow-field-pathfinding/&quot; />; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.redblobgames.com/pathfinding/tower-defense/blog/flow-field.png?2024-04-27-14-17-13&quot; style=&quot;宽度：220px；高度：112px；&quot; />;&lt;br />;作者从非交互式寻路教程过渡到交互式寻路教程，保持了两种风格。他们探索流场寻路及其与距离场的联系，并不断用新发现更新他们的工作。 &lt;a href=&quot;https://hackernews.betacat.io/#flow-field-pathfinding&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40187334&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;碎片化思维对心流状态的威胁比中断更大&lt;/stitle>; &lt;id>;https://blog.stackblitz.com/posts/flow-state/&lt;/id>; &lt;updated>;2024- 04-28T10:55:44.861350Z&lt;/更新>; &lt;link href=&quot;https://blog.stackblitz.com/posts/flow-state/&quot;/>; &lt;作者>; &lt;名称>;nickwritesit &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=nickwritesit&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.stackblitz.com/posts/flow-状态/英雄.png&quot; style=&quot;宽度: 220px 高度: 114px;&quot; />;&lt;br />;开发人员和同事努力平衡心流状态和工作中断，却没有意识到实现心流的细微差别很复杂，而且经常被误解。最近的研究表明，内部障碍是心流的主要干扰因素，提倡正念和组织变革以提高生产力。 &lt;a href=&quot;https://hackernews.betacat.io/#fragmented-thinking-is-a-bigger-threat-to-flow-state-than-interruptions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40155713&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;普林斯顿应用数学伴侣&lt;/stitle>; &lt;id>;https://nhigham.com/the-princeton-companion- to-applied-mathematics/&lt;/id>; &lt;更新>;2024-04-28T05:55:44.863971Z&lt;/更新>; &lt;link href=&quot;https://nhigham.com/the-princeton-companion-to-applied- math/&quot;/>; &lt;author>; &lt;name>;teleforce&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://nhigham.com/wp-content/uploads/2016/03/pcam-cover.jpg?w=304&amp;h=380&quot; style=&quot;宽度：220px；高度：275px；&quot; />;&lt;br />;《普林斯顿应用数学指南》是海厄姆等人编辑的综合参考书，其中包含有关解决斯梅尔猜想的重要内容。它在评论中广受好评，并在“2016 年最佳数学写作”中精选了一些文章。 &lt;a href=&quot;https://hackernews.betacat.io/#the-princeton-companion-to-applied-mathematics&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40186146&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在“10 美分”的 RISC-V MCU 上实现神经网络&lt;/stitle>; &lt;id>;https://cpldcpu.wordpress.com/2024/04/24/实现-neural-networks-on-the-10-cent-risc-v-mcu-without-multiplier/&lt;/id>; &lt;更新>;2024-04-28T06:55:44.864916Z&lt;/更新>; &lt;link href=&quot; https://cpldcpu.wordpress.com/2024/04/24/implementing-neural-networks-on-the-10-cent-risc-v-mcu-without-multiplier/&quot;/>; &lt;作者>; &lt;名称>;_Microft &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=_Microft&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cpldcpu.wordpress .com/wp-content/uploads/2024/04/header.png?w=1024&quot; style=&quot;宽度：220px；高度：81px；&quot; />;&lt;br />;作者为 CH32V003 微控制器创建了一个神经网络，利用量化权重提高效率，在 MNIST 数据集上以较小的模型尺寸实现了 99% 以上的准确率，并详细介绍了其优化过程。该实现允许以较短的推理时间进行实时图像处理。 &lt;a href=&quot;https://hackernews.betacat.io/#implementing-neural-networks-on-a-10-cent-risc-v-mcu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40167271&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建 IBM 3270 终端控制器&lt;/stitle>; &lt;id>;https://ajk.me/building-an-ibm-3270-终端控制器&lt;/id>; &lt;更新>;2024-04-28T09:55:44.865847Z&lt;/更新>; &lt;link href=&quot;https://ajk.me/building-an-ibm-3270-terminal-controller&quot;/ >; &lt;author>; &lt;name>;Aloha&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Aloha&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://ajk.me/building-an-ibm-3270-terminal-controller/ibm-3278-terminal-and-thinkpad@1.jpg”样式=“宽度：220px；高度：138px；” />;&lt;br />;本文讨论了作者对 IBM 3270 终端及其独特的面向块的设计的兴趣，强调了将它们连接到现代系统的挑战。作者为这些终端构建了一个替换控制器，以便与 Hercules 模拟器一起使用。 &lt;a href=&quot;https://hackernews.betacat.io/#building-an-ibm-3270-terminal-controller&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40172948&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;可以通过菊花链连接 UPS 吗？&lt;/stitle>; &lt;id>;https://www.eaton.com/us/en-us/support/eaton-answers /daisy-chain-ups.html&lt;/id>; &lt;更新>;2024-04-28T08:55:44.866318Z&lt;/更新>; &lt;link href=&quot;https://www.eaton.com/us/en-us/ support/eaton-answers/daisy-chain-ups.html&quot;/>; &lt;作者>; &lt;名称>;nuker&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nuker&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#is-it-okay-to-daisy-chain-a-ups&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40186960&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何改进 RISC-V 规范&lt;/stitle>; &lt;id>;https://alastairreid.github .io/riscv-spec-issues/&lt;/id>; &lt;更新>;2024-04-28T01:55:44.866791Z&lt;/更新>; &lt;link href=&quot;https://alastairreid.github.io/riscv-spec-issues /&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://alastairreid.github.io/images/riscv-logo.png&quot; style=&quot;宽度：220px; height: 172px;&quot; />;&lt;br />;作者分析了 RISC-V 规范，指出其分为多个部分，并建议集成其各种工件以保持连贯性。他们建议使用机器可读格式的架构信息来简化未来扩展的代码生成。 a href=&quot;https://news.ycombinator.com/item?id=40185065&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Mise：多语言工具版本管理器&lt;/stitle>; &lt;id>;https://mise.jdx.dev/&lt;/id>; &lt;更新>;2024-04-28T07:55:44.869250Z&lt;/更新>; &lt;link href=&quot;https://mise.jdx.dev/&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;mise 是一个多语言工具版本管理器，它取代了 asdf、nvm、pyenv、rbenv 等工具。 .mise 允许您在不同的项目目录中切换环境变量集。它可以替代 direnv。 &lt;a href=&quot;https://hackernews.betacat.io/#mise-a-polyglot-tool-version-manager&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40186768&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;安装 Asdf：一个运行时管理器来统治所有开发环境&lt;/stitle>; &lt;id>;https://jdsalaro.com/tutorial/asdf-single-package-manager-multiple -dev-environments&lt;/id>; &lt;更新>;2024-04-28T04:55:44.869724Z&lt;/更新>; &lt;link href=&quot;https://jdsalaro.com/tutorial/asdf-single-package-manager-multiple- dev-environments&quot;/>; &lt;作者>; &lt;名称>;jdsalaro &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jdsalaro&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://jdsalaro.com/_images/xkcd-1987-p​​ython-environment.png&quot; style=&quot;宽度：220px；高度：218px；&quot; />;&lt;br />;安装新软件是不同操作系统的用户普遍关心的问题，而简化此过程的工具（如 asdf.vm）受到高度重视。程序员在管理软件兼容性方面面临挑战，而运行时管理器（如 asdf.vm 等）通过有效管理多个环境来促进开发。 &lt;a href=&quot;https://hackernews.betacat.io/#install-asdf-one-runtime-manager-to-rule-all-dev-environments&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40186036&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用压缩的 wav2vec2 自动检测 owl 呼叫&lt;/stitle>; &lt;id>;https://www.seangoedecke.com/animal-call-音频识别/&lt;/id>; &lt;更新>;2024-04-28T04:55:44.870711Z&lt;/更新>; &lt;link href=&quot;https://www.seangoedecke.com/animal-call-audio-recognition/&quot;/ >; &lt;作者>; &lt;名称>;gfysfm &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gfysfm&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://www.seangoedecke.com/static/a226c4532b5e28c9bf23a83b14616d3d/fcda8/owls.png”样式=“宽度：220像素；高度：135像素；” />;&lt;br />;机器学习的进步可以大大加快动物叫声识别的速度；通过一些努力和编程知识，人们可以创建一个模型来有效地对呼叫进行分类。现有的解决方案 BirdNET 可能就足够了，但可以根据特定需求定制自定义模型。 &lt;a href=&quot;https://hackernews.betacat.io/#using-squeezed-wav2vec2-to-automatically-detect-owl-calls&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40154854&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何使用 Grafana Operator：在 Kubernetes 中管理 Grafana 云堆栈&lt;/stitle>; &lt;id>;https://grafana.com/blog/2024/ 04/24/如何使用-grafana-operator-managing-a-grafana-cloud-stack-in-kubernetes/&lt;/id>; &lt;更新>;2024-04-28T02:55:44.871680Z&lt;/更新>; &lt;link href=&quot;https://grafana.com/blog/2024/04/24/how-to-use-the-grafana-operator-managing-a-grafana-cloud-stack-in-kubernetes/&quot;/ >; &lt;作者>; &lt;名称>;meysamazad &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=meysamazad&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://grafana.com/media/blog/grafana-operator-for-grafana-cloud/grafana-operator-meta-image.png”样式=“宽度：220像素；高度：116像素；” />;&lt;br />;本文介绍了使用 Grafana Operator 将 Grafana Cloud 与 Kubernetes 集成，以高效管理资源，并在一处维护配置。它提供了有关在 Kubernetes 中设置 Grafana Operator 和管理 Grafana 实例的分步指南。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-use-the-grafana-operator-managing-a-grafana-cloud-stack-in-kubernetes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40185487&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作解释器：15 个月内完成 640 页&lt;/stitle>; &lt;id>;https://journal.stuffwithstuff。 com/2021/07/29/640-pages-in-15-months/&lt;/id>; &lt;更新>;2024-04-27T21:55:44.872116Z&lt;/更新>; &lt;link href=&quot;https://journal.com/2021/07/29/640-pages-in-15-months/&lt;/id>; stuffwithstuff.com/2021/07/29/640-pages-in-15-months/&quot;/>; &lt;作者>; &lt;名称>;auraham&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =auraham&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://journal.stuffwithstuff.com/image/2021/07/book.jpg&quot; style=&quot;width: 220px;高度：147px；” />;&lt;br />;作者宣布他的书《Crafting Interpreters》已完成，强调了为最终产品投入的大量工作，包括新的构建系统和页面设计。这本 640 页的实体书现已可供购买，作者反思了从内容到最终印刷的复杂过程。 &lt;a href=&quot;https://hackernews.betacat.io/#crafting-interpreters-640-pages-in-15-months&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40177687&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;