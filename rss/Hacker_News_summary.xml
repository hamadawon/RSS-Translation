<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-31T20:01:46.975357Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;新年快乐 HN！&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=38826283&lt;/id>; &lt;更新>;2023-12-31T19 :00:35.385997Z&lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=38826283&quot;/>; &lt;author>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我在 HN 上花了太多时间。但在互联网上的所有地方中，这是唯一值得一天多次访问的地方！ &lt;a href=&quot;https://hackernews.betacat.io/#happy-new-year-hn&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38826283&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;我为我的客厅电脑分叉了 SteamOS&lt;/stitle>; &lt;id>;https://iliana.fyi/blog/build-your-own-steamos-updates/&lt;/id>; &lt;更新>;2023-12-31T11:00:35.388229Z&lt;/updated>; &lt;link href=&quot;https://iliana.fyi/blog/build-your-own-steamos-updates/&quot;/>; &lt;作者>; &lt;名称>;muterad_murilax &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=muterad_murilax&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;SteamOS 3（“Holo”）是基于 Arch 的专为 Valve Software 的便携式 PC 游戏设备 Steam Deck 构建的 Linux 发行版。它为最终用户提供原子更新和定制选项。 &lt;a href=&quot;https://hackernews.betacat.io/#i-forked-steamos-for-my-living-room-pc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38823101&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 OpenCV 进行图像分类的逻辑回归&lt;/stitle>; &lt;id>;https://machinelearningmastery.com/logistic-regression-for-image-classification-using -opencv/&lt;/id>; &lt;更新>;2023-12-31T17:00:35.388679Z&lt;/更新>; &lt;link href=&quot;https://machinelearningmastery.com/logistic-regression-for-image-classification-using-opencv /&quot;/>; &lt;作者>; &lt;名称>;andyjohnson0&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=andyjohnson0&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://machinelearningmastery.com/wp-content/uploads/2023/12/logistic_multi_cover-1024x680.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;在本教程中，我们将探索逻辑回归作为一种简单但流行的机器学习算法，用于在 OpenCV 库中实现的二元分类。我们学习如何修改标准逻辑回归算法，通过将其应用于图像分类任务来满足多类分类问题。 &lt;a href=&quot;https://hackernews.betacat.io/#logistic-regression-for-image-classification-using-opencv&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38825158&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;1690 年代的花生重生&lt;/stitle>; &lt;id>;https://nationalpeanutboard.org/news/a-1690s-peanut-is-reborn/&lt;/id >; &lt;更新>;2023-12-31T12:00:35.389105Z&lt;/更新>; &lt;link href=&quot;https://nationalpeanutboard.org/news/a-1690s-peanut-is-reborn/&quot;/>; &lt;作者>; &lt;名称>;停泊点&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mooreds&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// cdn.sanity.io/images/54y5ztcs/product/eb5a9a9dc0b7af69ae531a021629edf7995a107c-550x550.jpg?w=650&amp;q=90&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;据信已经灭绝的卡罗莱纳非洲跑花生已被重新发现并由农民种植。这种花生于 1690 年代被带到美洲殖民地，比我们今天吃的花生更小、更甜、密度更大。它具有文化和历史意义，被厨师和工匠用于各种烹饪创作。 &lt;a href=&quot;https://hackernews.betacat.io/#a-1690s-peanut-is-reborn&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38823304&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Emacs-copilot：Emacs 的大型语言模型代码完成&lt;/stitle>; &lt;id>;https://github.com/jart/emacs-copilot&lt;/id>; &lt;updated>;2023 -12-31T07:00:35.389517Z&lt;/updated>; &lt;link href=&quot;https://github.com/jart/emacs-copilot&quot;/>; &lt;author>; &lt;name>;yla92&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=yla92&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/b003f074684caa9d5b2db8c54af05967ce6ff04ecd09322ec2ca67a5ecc545f9/jart/emacs-副驾驶&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Emacs Copilot 是一个允许在 Emacs 缓冲区内完成代码的工具。它使用本地运行的语言模型 (LLM) 根据您的编辑历史记录生成代码建议。法学硕士与语言无关，可以根据您的编程语言进行定制。 &lt;a href=&quot;https://hackernews.betacat.io/#emacs-copilot-large-language-model-code-completion-for-emacs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38822164&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;索尼软件更新破坏了电影院投影仪&lt;/stitle>; &lt;id>;https://bsky.app/profile/donohoe.dev/post/3khu7w2kz7l2b &lt;/id>; &lt;更新>;2023-12-31T18:00:35.389908Z&lt;/更新>; &lt;link href=&quot;https://bsky.app/profile/donohoe.dev/post/3khu7w2kz7l2b&quot;/>; &lt;作者>; &lt; name>;donohoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=donohoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;所有电影在 Alamo Drafthouse 取消，因为索尼发行投影仪的软件更新错误。也可能影响其他剧院。 &lt;a href=&quot;https://hackernews.betacat.io/#sony-software-updates-breaks-movie-theater-projectors&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38825623&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何运行小型社交网络（2019）&lt;/stitle>; &lt;id>;https://runyourown.social/&lt;/id>; &lt;更新>;2023-12 -31T18:00:35.390334Z&lt;/updated>; &lt;link href=&quot;https://runyourown.social/&quot;/>; &lt;作者>; &lt;name>;GoRudy&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=GoRudy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://runyourown.social/img/friend-camp-screenshot.png&quot; style=&quot;width: 220 像素；高度：125 像素；&quot; />;&lt;br />;自2018年8月以来，作者一直在为大约50位朋友运营一个名为Friend Camp的小型社交网络。本文档提供了如何运行类似社交网站的指南，强调了社区建设的重要性以及定制网站功能和规范的能力。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-run-a-small-social-network-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38825520&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;环境共存&lt;/stitle>; &lt;id>;https://maggieappleton.com/ambient-copresence&lt;/id>; &lt;更新>;2023-12- 31T16:00:35.391157Z&lt;/updated>; &lt;link href=&quot;https://maggieappleton.com/ambient-copresence&quot;/>; &lt;作者>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://maggieappleton.com/images/og/897f325594061ca1445934d5905f8c87.png&quot; style=&quot;width: 220 像素；高度：116 像素；&quot; />;&lt;br />;网络缺乏多人之间共享、同步空间的微妙感觉。我们需要设计环境共存，让人们无需直接互动即可了解彼此。当前的多人游戏体验需要太多的关注，并且缺乏我们所寻求的环境质量。 &lt;a href=&quot;https://hackernews.betacat.io/#ambient-co-presence&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38824886&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;7 瓦空闲 – 在英特尔第 12/13 代上构建低功耗服务器/NAS&lt;/stitle>; &lt;id>;https://mattgadient.com/7-watts-idle-on-intel-12th -13th-gen-the-foundation-for-building-a-low-power-server-nas/&lt;/id>; &lt;更新>;2023-12-31T13:00:35.393119Z&lt;/更新>; &lt;link href=&quot;https ://mattgadient.com/7-watts-idle-on-intel-12th-13th-gen-the-foundation-for-building-a-low-power-server-nas/&quot;/>; &lt;作者>; &lt;名称>; ryangibb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ryangibb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mattgadient. com/i/2023/05/asus-h770-pci-e-500x599.jpg&quot; style=&quot;宽度：220px；高度：264px；&quot; />;&lt;br />;为了构建低功耗服务器/NAS，作者测试了各种组件和配置。他们发现，在 Gigabyte H470M DS3H 主板上使用 Intel i3-10320 CPU 会产生 11 瓦的功耗。然而，他们在使用 &lt;a href=&quot;https://hackernews.betacat.io/#7-watts-idle-building-a-low-powered-server-nas-on-intel-12th- 时遇到了功耗方面的挑战第 13 代&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38823514&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Linux 中的非特权进程注入技术&lt;/stitle>; &lt; id>;https://joev.dev/posts/unprivileged-process-injection-techniques-in-linux&lt;/id>; &lt;更新>;2023-12-31T10:00:35.393499Z&lt;/更新>; &lt;link href=&quot;https ://joev.dev/posts/unprivileged-process-injection-techniques-in-linux&quot;/>; &lt;author>; &lt;name>;joe_v&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =joe_v&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://joev.dev/suffering-full.png&quot; style=&quot;width: 220px; height: 173px;&quot; />;&lt;br />;本文讨论了 Linux 上的进程注入技术，并提出了使用 /proc/[pid]/mem 的更简单的实现。它解释了如何使用标准文件系统系统调用来操纵远程进程内存，并提供了利用这些技术的工具示例。 &lt;a href=&quot;https://hackernews.betacat.io/#unprivileged-process-injection-techniques-in-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38801183&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bun、JavaScript 和 TCO&lt;/stitle>; &lt;id>;https://www.onsclom.net/posts/javascript-tco&lt;/id>; &lt;更新>;2023- 12-31T13:00:35.393886Z&lt;/updated>; &lt;link href=&quot;https://www.onsclom.net/posts/javascript-tco&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Bun 是一个 JavaScript 运行时，刚刚发布了 1.0 版本！它使用 Zig 进行编程，并基于 JavaScriptCore 构建。它的卖点之一是速度。 &lt;a href=&quot;https://hackernews.betacat.io/#bun-javascript-and-tco&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38823673&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;预测谬误（2020）&lt;/stitle>; &lt;id>;https://www.alexmurrell.co.uk/articles/the-forecasting-fallacy&lt;/id>; &lt;updated>;2023- 12-31T13:00:35.394726Z&lt;/更新>; &lt;link href=&quot;https://www.alexmurrell.co.uk/articles/the-forecasting-fallacy&quot;/>; &lt;作者>; &lt;名称>;rognjen &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rognjen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com /content/5e13762b05aeab4478a071d5/f9e12d9a-d143-4bf0-a259-40ebe1b0f75b/Website_SocialImage.jpg?format=1500w&amp;content-type=image%2Fjpeg&quot; style=&quot;宽度：220px；高度：125px；&quot; />;&lt;br />;文章讨论了预测的缺陷以及各个领域预测的不良记录。它强调预测往往是披着科学外衣的幻想，并强调需要专注于建设未来而不是试图预测未来。 &lt;a href=&quot;https://hackernews.betacat.io/#the-forecasting-fallacy-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38823542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;二战时期“火箭筒查理”的英雄事迹受到质疑，直到女儿澄清事实&lt;/stitle>; &lt;id>;https://www.dispatch.com/story/news/local/2023/12/31 /bazooka-charlies-granville-daughter-shares-wwii-heroics-in-new-book/72033226007/&lt;/id>; &lt;更新>;2023-12-31T19:00:35.395120Z&lt;/更新>; &lt;link href=&quot;https ://www.dispatch.com/story/news/local/2023/12/31/bazooka-charlies-granville-daughter-shares-wwii-heroics-in-new-book/72033226007/&quot;/>; &lt;作者>; &lt;名称>;alehlopeh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=alehlopeh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// www.dispatch.com/gcdn/authoring/authoring-images/2023/12/26/NCOD/72033370007-carpenter-close-up-with-rosie.JPEG?width=660&amp;height=464&amp;fit=crop&amp;format=pjpg&amp;auto=webp&quot; style= “宽度：220px；高度：155px;&quot; />;&lt;br />;第二次世界大战期间，查尔斯·卡彭特少校，又名“火箭筒查理”，驾驶他的侦察机并使用火箭筒摧毁了德国坦克。尽管战争爱好者对此表示怀疑，但他的女儿卡罗尔·阿帕奇 (Carol Apacki) 提供了他的英雄事迹的证据，并澄清了事实。&lt;a href=&quot;https://hackernews.betacat.io/#wwii-heroics-of-bazooka-charlie-doubted-until-daughter-sets-record -straight&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38826130&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;比较 Google、Bing、Marginalia、Kagi、Mwmbl 和ChatGPT&lt;/stitle>; &lt;id>;https://danluu.com/seo-spam/&lt;/id>; &lt;更新>;2023-12-31T03:00:35.395510Z&lt;/更新>; &lt;link href=&quot;https:// danluu.com/seo-spam/&quot;/>; &lt;作者>; &lt;名称>;882542F3884314B&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=882542F3884314B&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#compare-google-bing-marginalia-kagi-mwmbl-and-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38821248&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LuaX：带有 JSX 的 Lua 方言&lt;/stitle>; &lt;id>;https://bvisness.me/luax/&lt;/id >; &lt;更新>;2023-12-31T07:00:35.396277Z&lt;/更新>; &lt;link href=&quot;https://bvisness.me/luax/&quot;/>; &lt;作者>; &lt;名称>;goranmoomin&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=goranmoomin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;LuaX 是一种带有 JSX 的 Lua 方言，允许您在真正的编程语言中编写 HTML。它提供了一个能够理解 HTML 并允许在代码中添加有趣逻辑的系统。 &lt;a href=&quot;https://hackernews.betacat.io/#luax-a-lua-dialect-with-jsx&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38813677&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;不使用 Git 提交&lt;/stitle>; &lt;id>;https://matheustavares.gitlab.io/posts/committing-without-git&lt;/id>; &lt;updated>;2023-12 -31T07:00:35.396660Z&lt;/updated>; &lt;link href=&quot;https://matheustavares.gitlab.io/posts/committing-without-git&quot;/>; &lt;作者>; &lt;name>;matheust&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=matheust&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://matheustavares.gitlab.io/assets/committing- without-git/git-objects.png&quot; style=&quot;width: 220px; height: 140px;&quot; />;&lt;br />;我们的目标是创建一个包含两次提交的分支：第一次添加单个 README 文件，第二次稍微更改此文件。所有这一切都无需运行 git。如果您点击这篇文章，我很可能不需要说服您为什么有人想要这样做……因为这很有趣！ :) 而且，它应该有助于理解 git 中的一些主要数据结构，即“git 对象”。 &lt;a href=&quot;https://hackernews.betacat.io/#committing-without-git&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38814492&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;奇怪的 CPIO 差异&lt;/stitle>; &lt;id>;https://blog.colindou.ch/posts/lets-make-an-os-cpio-weirdness/&lt;/id>; &lt;updated>;2023 -12-31T14:00:35.397036Z&lt;/updated>; &lt;link href=&quot;https://blog.colindou.ch/posts/lets-make-an-os-cpio-weirdness/&quot;/>; &lt;作者>; &lt;名称>;vimda&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=vimda&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog .colindou.ch/lets-make-an-os/cover-1.webp&quot; style=&quot;宽度：220px；高度：155px；&quot; />;&lt;br />;GNU cpio 和 Linux 内核解析 CPIO 文件的方式存在差异。 GNU cpio 忽略目录的大小字段，而 Linux 内核包含它。 &lt;a href=&quot;https://hackernews.betacat.io/#a-weird-cpio-discrepancy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38801513&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;我想要一座城市，而不是博物馆&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/12/30/opinion/new-york-housing-costs。 html&lt;/id>; &lt;更新>;2023-12-31T19:00:35.397809Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/12/30/opinion/new-york-housing -costs.html&quot;/>; &lt;作者>; &lt;名称>;jseliger&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jseliger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/12/29/opinion/29appelbaum-28-04/29appelbaum-28-04-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale “样式=“宽度：220像素；高度：281像素；” />;&lt;br />;纽约市的实体城市及其古老建筑长期以来基本保持不变。然而，这些建筑的保存导致了住房短缺和租金价格高昂。通过允许建造新建筑并消除监管障碍，该市可以增加大量住房并容纳更多人口。 &lt;a href=&quot;https://hackernews.betacat.io/#i-want-a-city-not-a-museum&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38826345&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;iOS Wi-Fi 配置文件生成器&lt;/stitle>; &lt;id>;https://daduckmsft.github.io/WiFiProfileGenerator/&lt;/id>; &lt;更新>;2023-12 -31T16:00:35.398200Z&lt;/updated>; &lt;link href=&quot;https://daduckmsft.github.io/WiFiProfileGenerator/&quot;/>; &lt;author>; &lt;name>;transpute&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=transpute&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#ios-wi-fi-profile-生成器&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38824644&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;脚本医生如何找到自己的声音&lt;/stitle>; &lt; id>;https://www.newyorker.com/magazine/2024/01/01/how-a-script-doctor-found-his-own-voice&lt;/id>;&lt;更新>;2023-12-31T13:00： 35.398605Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/magazine/2024/01/01/how-a-script-doctor-found-his-own-voice&quot;/>; &lt;作者>; &lt;name>;Caiero&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Caiero&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /media.newyorker.com/photos/6584b5c7819f49f186546a34/master/w_2560%2Cc_limit/240101_r43563.jpg&quot; style=&quot;width: 220px;高度：275px;&quot; />;&lt;br />;斯科特·弗兰克 (Scott Frank) 是一位成功的编剧，他回顾了自己童年时期与飞行员父亲一起飞行的经历，以及这些经历如何影响了他的故事讲述。他讨论了自己撰写引人入胜的开头和结尾的方法、编剧面临的挑战，以及他在好莱坞担任剧本医生的角色。&lt;a href=&quot;https://hackernews.betacat.io/#how-a-script-doctor-found-his-own-voice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38812736&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Mazzle – 管道即代码工具&lt;/stitle>; &lt;id>;http://devops-pipeline。 com/&lt;/id>; &lt;更新>;2023-12-31T12:00:35.398993Z&lt;/更新>; &lt;link href=&quot;http://devops-pipeline.com/&quot;/>; &lt;作者>; &lt;名称>;g0xA52A2A&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=g0xA52A2A&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://devops-pipeline.com /architecture.tb.png&quot; style=&quot;width: 220px; height: 153px;&quot; />;&lt;br />;Mazzle 是一个命令行工具，用于协调由多个 DevOps 工具构建的大型复杂环境。它是一个具有 Web GUI 的任务运行程序，类似于管道式持续集成服务器。 &lt;a href =&quot;https://hackernews.betacat.io/#mazzle-a-pipelines-as-code-tool&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;网络上 SQL 的未来 (2021)&lt;/stitle>; &lt;id>;https://jlong​​ster.com /future-sql-web&lt;/id>; &lt;更新>;2023-12-31T12:00:35.399389Z&lt;/更新>; &lt;link href=&quot;https://jlong​​ster.com/future-sql-web&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;absurd-sql 是一个持久后端用于 Web 上的 SQLite，允许在 Web 应用程序中进行高效存储和写入。它解决了 IndexedDB 的限制和性能问题，提供了更强大的数据处理方式。该项目使用 sql.js 和文件系统层进行读写小块中的数据，使其比索引更快、更可靠 &lt;a href=&quot;https://hackernews.betacat.io/#a-future-for-sql-on-the-web-2021&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38823445&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/提要>;