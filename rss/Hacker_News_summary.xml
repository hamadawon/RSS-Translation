<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-30T21:51:31.575613Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Porffor：一个从头开始的超前 JS 引擎&lt;/stitle>; &lt;id>;https://porffor.dev/&lt;/id>; &lt;更新>;2024-07- 30T19:51:18.696818Z&lt;/updated>; &lt;link href=&quot;https://porffor.dev/&quot;/>; &lt;作者>; &lt;name>;bpierre&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=bpierre&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Porffor 是一个专注于研究的 JavaScript 引擎/编译器/运行时，可将 JS 代码提前编译为 WebAssembly 或本机，从而加快速度和较小的输出。它采用内存安全语言编写，支持 TypeScript 输入，并在设计时考虑了提前编译，使其安全高效。 &lt;a href=&quot;https://hackernews.betacat.io/#porffor-a-from-scratch-ahead-of-time-js-engine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41112854&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN：SSOReady (YC W24) – 让 SAML SSO 变得轻松且开源&lt;/stitle>; &lt;id>;https://news.ycombinator。 com/item?id=41110850&lt;/id>; &lt;更新>;2024-07-30T16:51:18.698586Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=41110850&quot;/ >; &lt;author>; &lt;name>;ucarion&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ucarion&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Ulysse，首席技术官SSOReady 引入了开源 SAML 单点登录服务，该服务通过两个 API 端点简化了实施。该服务是免费和开源的，计划通过为大公司提供额外的功能来货币化，同时优先考虑开发人员的便利性和反馈。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-ssoready-yc-w24-making-saml-sso-painless-and-open-source&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41110850&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;线性回归的真相 (2015)&lt;/stitle>; &lt;id>;https://www.stat.cmu。 edu/~cshalizi/TALR/&lt;/id>; &lt;更新>;2024-07-30T16:51:18.699073Z&lt;/更新>; &lt;link href=&quot;https://www.stat.cmu.edu/~cshalizi/TALR/ &quot;/>; &lt;author>; &lt;name>;sebg&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户分享 2015 年撰写的现代回归讲义，其中强调稳健的技术而非传统理论。这些笔记从 21 世纪的角度涵盖了线性回归，与用户的另一本书《从基本角度进行高级数据分析》有一些重叠。 &lt;a href=&quot;https://hackernews.betacat.io/#the-truth-about-linear-regression-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=41111115&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;随机 X 帖子后发现丢失的亨利八世肖像&lt;/stitle>; &lt;id>;https://www.bbc.com/news/articles/ckdgp7r5y11o&lt;/id>; &lt;更新>;2024-07-30T17:51:18.699523Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/news/articles/ckdgp7r5y11o&quot;/>; &lt;作者>; &lt;名称>;Archelaos&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=Archelaos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ichef.bbci.co.uk/新闻/480/cpsprodpb/2252/live/e3e231f0-49cd-11ef-93bd-53dd3ccea4f1.jpg.webp&quot; style=&quot;宽度：220px 高度：124px；&quot; />;&lt;br />;西米德兰兹议会大厅中的一位艺术史学家鉴定了一幅此前不为人知的亨利八世国王的肖像，据信这是为挂毯制造商拉尔夫·谢尔顿 (Ralph Sheldon) 制作的 22 幅肖像收藏中的一幅。 1590年代。该艺术品已移至博物馆收藏中心进行进一步研究，并可能展出以供公众欣赏。 &lt;a href=&quot;https://hackernews.betacat.io/#missing-henry-viii-portrait-found-after-random-x-post&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41105229&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Swift 同态加密&lt;/stitle>; &lt;id>;https://www.swift.org/blog/announcing-swift-homomorphic-encryption/&lt; /id>; &lt;更新>;2024-07-30T16:51:18.699967Z&lt;/更新>; &lt;link href=&quot;https://www.swift.org/blog/announcing-swift-homomorphic-encryption/&quot;/>; &lt;作者>; &lt;name>;yAak&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yAak&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //www.swift.org/apple-touch-icon-180x180.png&quot; style=&quot;width: 220px height: 221px;&quot; />;&lt;br />;Apple 发布了用于同态加密的开源 Swift 包，无需解密或访问解密密钥即可对加密数据进行计算。该软件包名为 swift-homomorphic-encryption，用于 Apple 的实时来电显示查找功能，并为客户端提供了一种将加密数据发送到服务器而不泄露底层数据的方法。 &lt;a href=&quot;https://hackernews.betacat.io/#swift-homomorphic-encryption&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=41111129&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;逻辑验证搭便车指南 [pdf]&lt;/stitle>; &lt;id>;https://browncs1951x.github.io/static/files/hitchhikersguide.pdf&lt;/id>; &lt;更新>;2024-07 -30T18：51：18.700404Z &lt;/更新>; &lt;link href =“https://browncs1951x.github.io/static/files/hitchhikersguide.pdf”/>; &lt;作者>; &lt;名称>;nextos &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=nextos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文中介绍了Lean，一个证明助手，它使用了称为归纳构造演算的丰富逻辑，它支持依赖类型，并提供类型检查和类型推断的正式系统。类型系统由派生规则组成，这些规则可以用任意值实例化并连接到派生树，从而可以证明术语的类型正确...... &lt;a href=&quot;https://hackernews.betacat.io/# the-hitchhiker-s-guide-to-ological-verification-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41112103&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;函数式编程语言应该比现在更擅长突变&lt;/stitle>; &lt;id>;https://cohost.org/prophet/post/7083950-function-programming&lt;/id>; &lt;updated>;2024-07-30T19:51 ：18.700836Z &lt;/更新>; &lt;link href=&quot;https://cohost.org/prophet/post/7083950-function-programming&quot;/>; &lt;作者>; &lt;名称>;thunderbong &lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://staging.cohostcdn.org/header/12648-bc81a3d8-758e- 4a3d-b67e-cc852a28be2f-profile.png&quot; style=&quot;宽度：220px; height: 78px;&quot; />;&lt;br />;函数式编程语言需要允许以某种方式进行突变以避免不必要的开销，但是不受限制的可变数据结构可能会导致意外的副作用。各种选项，例如本地来源的突变、线性和功能性农业已被提出来解决这个问题，但每个都有其自身的局限性和挑战。突变比他们-是&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41113101&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Stempad – 快速在线科学写作&lt;/stitle>; &lt;id>;https://www.stempad.io/editor/85b7f0fc-c865-4011-89a8-216d8b88b249?copy=true&lt;/id>; &lt;更新>;2024-07-30T16:51:18.701285 Z&lt;/updated>; &lt;link href=&quot;https://www.stempad.io/editor/85b7f0fc-c865-4011-89a8-216d8b88b249?copy=true&quot;/>; &lt;作者>; &lt;name>;ralph_r&lt;/name>; &lt; uri>;https://news.ycombinator.com/user?id=ralph_r&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://utfs.io/f/83502013- 8883-4217-8f04-49bbc1987181-1nq2cb.png&quot;样式=&quot;宽度:220px; height: 215px;&quot; />;&lt;br />;蝴蝶曲线是一个生成蝴蝶形图的方程，由 Temple H. Fay 于 1989 年发现。不要与六次平面曲线混淆，甚至可以使用它绘制类似于曲线的分子&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-stempad-fast-online-scientific-writing&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41096613&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;互联网是为了在核打击中生存而创建的吗？（2022）&lt;/stitle>; &lt;id>;https://siliconfolklore.com /internet-history/&lt;/id>; &lt;更新>;2024-07-30T13:51:18.701705Z&lt;/更新>; &lt;link href=&quot;https://siliconfolklore.com/internet-history/&quot;/>; &lt;作者>; &lt;名称>;爱德华&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=edward&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// Siliconfolklore.com/internet-history/Report4799AHistoryOfArpanetTheFirstDecade_0023.png&quot; style=&quot;width: 220px;高度：166px;&quot; />;&lt;br />;阿帕网的设计目的是为了在核攻击中幸存的神话一直被广泛流传，但对历史记录和对关键人物的采访的彻底审查表明，这种叙述在很大程度上是不准确的。阿帕网实际上旨在促进昂贵计算机的分时并改善研究人员之间的协作，与核没有直接联系...... &lt;a href=&quot;https://hackernews.betacat.io/#was-the-internet-created- to-survive-a-nuclear-strike-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41108884&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;翻译所有 C到 Rust（拖拉机）&lt;/stitle>; &lt;id>;https://www.darpa.mil/program/translated-all-c-to-rust&lt;/id>; &lt;更新>;2024-07-30T15:51:18.702121Z &lt;/更新>; &lt;link href=&quot;https://www.darpa.mil/program/translated-all-c-to-rust&quot;/>; &lt;作者>; &lt;名称>;steveklabnik&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=steveklabnik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;国防高级研究项目局计划详细信息 &lt;a href=&quot;https://hackernews.betacat.io/ #translation-all-c-to-rust-tractor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41110269&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;虚假工作面试是证券欺诈&lt;/stitle>; &lt;id>;https://www.bloomberg.com/opinion/articles/2024-07-30/fake-job-interviews-are-securities-fraud&lt;/id>; &lt;updated>;2024 -07-30T19:51:18.702954Z&lt;/更新>; &lt;link href=&quot;https://www.bloomberg.com/opinion/articles/2024-07-30/fake-job-interviews-are-securities-fraud&quot; />; &lt;作者>; &lt;名称>;ioblomov&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ioblomov&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iE8O2RXbXRhw/v6/piUjdcePl62Og/160x160.jpg”样式=“宽度：220px；身高：220px;&quot; />;&lt;br />;富国银行据称出于多元化目的进行虚假求职面试，面试少数族裔候选人以遵守招聘规则。然后该公司会拒绝这些候选人，并将工作提供给一名白人，尽管存在虚假面试。&lt;a href=&quot;https://hackernews.betacat.io/#fake-job-interviews-are-securities-fraud&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &quot;https://news.ycombinator.com/item?id=41112855&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Meta 因未经用户许可使用面部识别而向德克萨斯州支付 1.4B 美元&lt;/stitle>; &lt;id>;https://www.texastribune.org/2024 /07/30/texas-meta-facebook-biometric-data-settlement/&lt;/id>; &lt;更新>;2024-07-30T16:51:18.703374Z&lt;/更新>; &lt;link href=&quot;https://www.texastribune .org/2024/07/30/texas-meta-facebook-biometric-data-settlement/&quot;/>; &lt;作者>; &lt;名称>;近日点&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=perihelions&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thumbnails.texastribune.org/gU5vMdUqTsV531r9IqcuVW7oO6o=/850x570/smart/filters:quality(75)/https: //static.texastribune.org/media/files/92e525dfa5fa30ca5b37b9d58650156c/Meta%20REUTERS%20TT.jpg&quot; style=&quot;width: 220px; height: 148px;&quot; />;&lt;br />;Meta 将向德克萨斯州支付 14 亿美元，以和解指控该公司未经用户授权使用个人生物识别数据的诉讼。该和解是单个州有史以来获得的最大金额，并要求 Meta 通知德克萨斯州总检察长办公室未来可能违反德克萨斯州生物识别数据法的活动&lt;a href=&quot;https://hackernews.betacat.io/#meta-to-pay-texas-1-4b-for-using-facial-。 recognize-without-users-permission&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41111145&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;电力市场如何应对核之旅&lt;/stitle>; &lt;id>;https://blog.gridstatus.io/ercot-nuclear-trip/&lt;/id>; &lt;更新>;2024-07-30T18:51:18.703804Z&lt;/更新>; &lt;link href= &quot;https://blog.gridstatus.io/ercot-nuclear-trip/&quot;/>; &lt;作者>; &lt;名称>;kmax12&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kmax12&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.gridstatus.io/content/images/2024/07/ERCOT-Nuke-Trip-1b-min.jpg&quot;样式=“宽度：220px； height: 124px;&quot; />;&lt;br />;德克萨斯州核电机组突然跳闸导致电网频率下降，促使ERCOT部署紧急应急储备服务等辅助服务来稳定电网。该事件凸显了细致的重要性规划和维护以确保电网可靠性，因为即使是单点故障也可能导致严重中断&lt;a href=&quot;https://hackernews.betacat.io/#how-the-electricity-markets-respond-to-a- Nuclear-trip&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41112160&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;蝴蝶在不接触的情况下积聚静电来吸引花粉&lt;/ stitle>; &lt;id>;https://www.bristol.ac.uk/news/2024/july/butterflies-static-electricity.html&lt;/id>; &lt;更新>;2024-07-30T09:51:18.704219Z&lt;/更新>; &lt;link href=&quot;https://www.bristol.ac.uk/news/2024/july/butterflies-static-electricity.html&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bristol.ac.uk/media-library/网站/新闻/2024/july/hawkmothPS(扩展).jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;蝴蝶和飞蛾在飞行时会积累静电，这提高了它们作为传粉者的效率和效果。静电量因物种而异，并与生态因素相关，表明这是一种适应性特征可以通过自然选择&lt;a href=&quot;https://hackernews.betacat.io/#butterflies-accumulate-static-electricity-to-attract-pollen-without-contact&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41107480&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么在 Node 中生成新进程这么慢？&lt;/stitle>; &lt;id>;https:// blog.val.town/blog/node-spawn-performance/&lt;/id>; &lt;更新>;2024-07-30T18:51:18.704636Z&lt;/更新>; &lt;link href=&quot;https://blog.val.town/ blog/node-spawn-performance/&quot;/>; &lt;作者>; &lt;名称>;maxmcd&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=maxmcd&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src=“https://blog.val.town/blog-placeholder.png”风格=“宽度：220px; height: 110px;&quot; />;&lt;br />;用户正在调查 Node.js、Deno 和 Bun 在处理并发请求方面的性能，发现 Node.js 由于每次生成调用都会阻塞主线程而导致速度缓慢，而 Deno 和 Bun 更快。用户尝试了各种方法，包括使用工作线程、子进程和抽象套接字，发现使用 Node.js 与 Bun 的性能和... &lt;a href=&quot;https://hackernews .betacat.io/#why-is-spawning-a-new-process-in-node-so-slow&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=41083119&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Zig 中的 C 宏反射&lt;/stitle>; &lt;id>;https://jstrieb.github.io/posts/c-reflection-zig/&lt;/id>; &lt;updated>;2024- 07-30T07:51:18.705047Z&lt;/更新>; &lt;link href=&quot;https://jstrieb.github.io/posts/c-reflection-zig/&quot;/>; &lt;作者>; &lt;名称>;jstrieb&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=jstrieb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Zig 是一种旨在取代 C 的编程语言，提供底层和系统编程能力，并且与 C 具有令人印象深刻的互操作性，允许轻松集成 C 库和头文件。该语言的设计包括反射功能，使开发人员能够创建 C 宏值到名称的映射，从而更轻松地使用 C 代码和库。 &lt;a href=&quot;https://hackernews.betacat.io/#c-macro-reflection-in-zig&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=41106686&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;计算 Google DeepMind 论文的成本&lt;/stitle>; &lt;id>;https://152334H.github.io/blog/scaling-exponents/&lt;/id>; &lt;updated>;2024 -07-30T10：51：18.705480Z &lt;/更新>; &lt;link href =“https://152334H.github.io/blog/scaling-exponents/”/>; &lt;作者>; &lt;名称>; 152334H &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=152334H&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://152334h.github.io/blog/scaling -exponents/Pasted%20image%2020240722025146.png&quot; style=&quot;宽度：220px；高度：105px；&quot; />;&lt;br />;作者尝试估计复制 GDM 题为“Scaling Exponents Across Parameterizations and Optimizers”的论文所需的总计算成本，其中涉及在不同制度下进行 10,000 多次 LLM 训练运行。作者提供了估计计算成本的详细细目，包括实验数量、每个实验的代币和 FLOP 要求，... &lt;a href=&quot;https://hackernews.betacat.io/#calculate-the-cost -of-a-google-deepmind-paper&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41107721&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在洛杉矶成为好莱坞之前，这是一个石油小镇&lt;/stitle>; &lt;id>;https://www.noemamag.com/its-oil-that-makes-la-boil/&lt;/id>; &lt;updated>;2024-07-30T16:51： 18.705890Z&lt;/更新>; &lt;link href=&quot;https://www.noemamag.com/its-oil-that-makes-la-boil/&quot;/>; &lt;作者>; &lt;名称>;ecliptik &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://noemamag.imgix.net/2024/07/ Huntington-Collection-Extralarge-1.jpg?fit=crop&amp;fm=pjpg&amp;h=1186&amp;ixlib=php-3.3.1&amp;w=947&amp;wpsize=noema-portrait-hero-image&amp;s=63f60d9ba48bc57f83da99ed44e8edb4&quot; style=&quot;width: 220px;高度：276px;&quot; />;&lt;br />;作者反思了在洛杉矶长大的经历，不知道这座城市作为石油小镇的历史，并发现了英格尔伍德油田，这是美国最大的城市石油开采综合体之一，作者认为，为更美好的未来而奋斗需要从化石燃料转向更可持续和更环保的……&lt;a href=&quot;https://hackernews.betacat. io/#before-la-became-tinseltown-it-was-an-oil-town&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=41111084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;Show HN：在浏览器中运行的视频编辑SDK&lt;/stitle>; &lt;id>;https://rendley.com/&lt;/id>; &lt;updated>;2024-07-30T13:51:18.706303Z &lt;/更新>; &lt;link href=&quot;https://rendley.com/&quot;/>; &lt;作者>; &lt;名称>;bgrigore&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=bgrigore&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rendley.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhero-image.e296aacc.png&amp;w=3840&amp;q =75&quot;样式=&quot;宽度：220px； height: 143px;&quot; />;&lt;br />;Rendley为网站提供浏览器内视频编辑功能，允许用户直接在平台上编辑和发布视频，无需服务器。Rendley SDK提供可定制的视频编辑器模板，支持多种格式，适应用户需求的定价&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-a-video-editing-sdk-that-runs-in-the-browser&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41108843&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么建议不起作用？&lt;/stitle>; &lt;id>;https://dynomight .substack.com/p/advice&lt;/id>; &lt;更新>;2024-07-30T15:51:18.706710Z&lt;/更新>; &lt;link href=&quot;https://dynomight.substack.com/p/advice&quot;/>; &lt;作者>; &lt;名称>;yarapavan &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=yarapavan&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc07d16b- a9b5-426f-8507-0ebc2557dda1_703x367.j​​peg&quot; style=&quot;宽度：220px; height: 115px;&quot; />;&lt;br />;作者反思了建议的局限性，指出人们常常忽视好的建议而难以实施，而且由于认知偏差、缺乏知识等多种因素，建议可能不会有效。作者的结论是，建议通常很廉价，并且在许多情况下可能没有帮助，人们可能会寻求建议...... &lt;a href=&quot;https://hackernews.betacat.io/#为什么-doesn-t-advice-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41109891&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Canarytokens：关键蜜罐凭证，在使用时收到通知 (2015)&lt;/stitle>; &lt;id>;https://canarytokens.org/nest/&lt;/id>; &lt;updated>;2024-07-30T08:51:18.707125Z&lt;/updated>; &lt; link href=&quot;https://canarytokens.org/nest/&quot;/>; &lt;作者>; &lt;名称>;Kovah&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Kovah&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Canarytokens 是一款免费工具，可帮助您发现攻击者宣布自己已被入侵。这些令牌允许您在网络周围植入陷阱，并在触发后立即通知您。 &lt;a href=&quot;https://hackernews.betacat.io/#canarytokens-honeypot-for-ritic-credentials-get-notified-when-they-are-used-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41107209&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;数据可视化杰作《Dark Sky》的悼词 (2023)&lt;/stitle>; &lt;id>;https://nightingaledvs .com/dark-sky-weather-data-viz/&lt;/id>; &lt;更新>;2024-07-30T15:51:18.707552Z&lt;/更新>; &lt;link href=&quot;https://nightingaledvs.com/dark-sky -weather-data-viz/&quot;/>; &lt;作者>; &lt;名称>;skadamat&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=skadamat&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/nightingaledvs.com/wp-content/uploads/2023/03/darksky1.png?resize=720%2C669&amp;ssl=1&quot; style=&quot;width ：220像素；高度：205像素；” />;&lt;br />;Apple 于 2020 年收购了热门天气应用程序 Dark Sky，并于 2023 年将其关闭，并将其技术集成到 Apple Weather 应用程序中。 Dark Sky的设计因其情境化的信息图形而受到称赞，它可以帮助用户快速了解天气预报并根据自己的具体情况做出决策。 &lt;a href=&quot;https://hackernews.betacat.io/#a-eulogy-for-dark-sky-a-data-visualization-masterpiece-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=41109799&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在 macOS 中控制上下文菜单&lt;/stitle>; &lt;id>;https://blog.gingerbeardman.com/2024/07/ 30/take-command-of-the-context-menu-in-macos/&lt;/id>; &lt;更新>;2024-07-30T16:51:18.707963Z&lt;/更新>; &lt;link href=&quot;https://blog. gingerbeardman.com/2024/07/30/take-command-of-the-context-menu-in-macos/&quot;/>; &lt;author>; &lt;name>;msephton&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=msephton&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.gingerbeardman.com/images/posts/take-command-automator-setup .png&quot;样式=&quot;宽度：220px；高度：148px；&quot; />;&lt;br />;用户比较了 ContextMenu 和 Automator 这两个工具，使用 ffmpeg 将文件重新编码为更小的大小，并讨论了 Automator 的局限性。他们还分享了自己使用 ContextMenu 的经验，这是一款 macOS 应用程序，允许自定义右键菜单并将文件存储在指定文件夹中。 &lt;a href=&quot;https://hackernews.betacat.io/#take-command-of-the-context-menu-in-macos&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41110866&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;刘易斯·拉帕姆 (Lewis Lapham) 去世&lt;/stitle>; &lt;id>;https://www.nytimes.com/2024/07/24/business/media/lewis- h-lapham-dead.html&lt;/id>; &lt;更新>;2024-07-30T04:51:18.708379Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2024/07/24/business /media/lewis-h-lapham-dead.html&quot;/>; &lt;作者>; &lt;名称>;benbreen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2024/07/26/multimedia/00lapham-hckf-print1/00lapham-hckf-articleLarge.jpg?quality =75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;著名记者兼编辑刘易斯·拉帕姆 (Lewis Lapham) 在罗马去世，享年 89 岁。他是美国新闻界的杰出人物，因在《哈珀杂志》和《拉帕姆季刊》上发表的对美国生活、政治和文化的批评而闻名。 &lt;a href=&quot;https://hackernews.betacat.io/#lewis-lapham-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41106041&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;科学家揭示了猴面包树的古老起源&lt;/stitle>; &lt;id>;https://www.smithsonianmag.com/smart-news/scientists-uncover-the-ancient-origins-of- baobab-trees-in-genic-study-180984384/&lt;/id>; &lt;更新>;2024-07-30T15:51:18.708803Z&lt;/更新>; &lt;link href=&quot;https://www.smithsonianmag.com/smart- news/scientists-uncover-the-ancient-origins-of-baobab-trees-in-genic-study-180984384/&quot;/>; &lt;author>; &lt;name>;NoRagrets&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=NoRagrets&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://th-thumbnailer.cdn-si-edu.com/iV2TYYbnPvRs_VpomUQ2rlPkBRw=/1000x750/过滤器：no_upscale（）：焦点（360x243：361x244）/https://tf-cmsv2-smithsonianmag-media.s3.amazonaws.com/filer_public/60/c7/60c70c03-69a9-4f96-a36f-0527372151bd/gettyimages-520678720_720 .jpg&quot; 样式=&quot;宽度:220px; height: 148px;&quot; />;&lt;br />;猴面包树的起源可以追溯到 2100 万年前的马达加斯加，由于生态竞争和环境条件，那里出现了多样化的物种。研究结果强调了采取保护措施的必要性，因为猴面包树种群数量庞大由于气候变化、栖息地丧失和遗传多样性较低，物种数量正在减少，一些物种面临灭绝的风险。 -baobab-trees&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41101882&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;JavaScript 垃圾回收和关闭&lt;/stitle>; &lt; id>;https://jakearchibald.com/2024/garbage-collection-and-closures/&lt;/id>; &lt;更新>;2024-07-30T16:51:18.709214Z&lt;/更新>; &lt;link href=&quot;https:// jakearchibald.com/2024/garbage-collection-and-closures/&quot;/>; &lt;作者>; &lt;名称>;jaffathecake &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jaffathecake &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jakearchibald.com/c/me-cat-862e9e16.jpg&quot; style=&quot;width: 220px; height: 233px;&quot; />;&lt;br />;Surma、Jason 和我发现函数内的垃圾收集无法按预期工作，在初始执行之后保留 bigArrayBuffer。引擎保留 bigArrayBuffer 是因为它与以下创建的作用域相关联： demo() 被调用，尽管它不再可引用。 a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41111062&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;音乐发现算法的谎言&lt;/stitle>; &lt;id>;https://www.zeynepevecen.dev/writing/music &lt;/id>; &lt;更新>;2024-07-30T09:51:18.710121Z&lt;/更新>; &lt;link href=&quot;https://www.zeynepevecen.dev/writing/music&quot;/>; &lt;作者>; &lt;名称>;zeynepevecen&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=zeynepevecen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户依赖音乐作为缪斯并发现音乐发现Spotify 和 Apple Music 上的算法过于可预测，无法推荐新的有趣的旋律。他们开发了一种从图像生成播放列表的工具，它提供了更加随机和令人满意的音乐发现体验，并与其他想要尝试的人分享。 &lt;a href=&quot;https://hackernews.betacat.io/#the-lie-of-music-discovery-algorithms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=41107396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无限机器&lt;/stitle>; &lt;id>;https://www.chiark.greenend.org.uk/~sgtatham/infinity.html&lt;/id>; &lt;更新>; 2024-07-30T09:51:18.710538Z&lt;/更新>; &lt;link href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/infinity.html&quot;/>; &lt;作者>; &lt;名称>;Smaug123&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=Smaug123&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;无限机器是一个假设的计算机系统，可以无限地执行计算速度快，为操作系统设计、语言设计、网络和密码学带来了新的可能性。该机器的无限速度和存储能力提出了有趣的问题和挑战，例如非对称加密的可行性以及对新方法的需求...... &lt;a href=&quot;https://hackernews.betacat.io/#the-infinity-机器&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41072633&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /内容>; &lt;/条目>; &lt;/提要>;