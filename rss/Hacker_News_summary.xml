<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-11-20T13:54:30.128688Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;死星与最后的战壕奔跑 (2017)&lt;/stitle>; &lt;id>;http://fxrant.blogspot.com/2017/01/the-death-star-and -final-trench-run.html&lt;/id>; &lt;更新>;2023-11-20T08:53:43.417700Z&lt;/更新>; &lt;link href=&quot;http://fxrant.blogspot.com/2017/01/the- Death-star-and-final-trench-run.html&quot;/>; &lt;作者>; &lt;名称>;BerislavLopac&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://3.bp.blogspot.com/-V4yI2TsrniM/WIbgYEKuwkI/AAAAAAAAMvo/9PTSSkSiq6oI0PVXxXQu3IRyBJGwwR9NACLcB/s400/deathstar_image2.png&quot; style=&quot;width: 220px;高度：96px；” />;&lt;br />;在原版《星球大战》电影的结尾，许多粉丝错误地认为摧毁死星的壕沟行动发生在赤道海沟。然而，它实际上是一条纵向的沟槽。这种误解是由于电影中的视觉线索以及赤道和最终海沟之间的相似性造成的。 &lt;a href=&quot;https://hackernews.betacat.io/#the-death-star-and-the-final-trench-run-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38344973&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Krita AI Diffusion&lt;/stitle>; &lt;id>;https://github.com/Acly/krita-ai-diffusion&lt;/id>; &lt;更新>;2023-11-20T05:53:43.419768Z&lt;/updated>; &lt;link href=&quot;https://github.com/Acly/krita-ai-diffusion&quot;/>; &lt;作者>; &lt;name>;unstuck3958&lt;/name>; &lt; uri>;https://news.ycombinator.com/user?id=unstuck3958&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/Acly/ krita-ai-diffusion/main/media/screenshot-1.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;从 Krita 中轻松生成图像：选择一个区域，按下按钮，就会生成与您的图像匹配的新内容。或者扩展画布并用生成的内容填充新区域，这些内容可以直接融入其中。&lt;a href=&quot;https://hackernews.betacat.io/#krita-ai-diffusion&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38342670&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RSS 可用于分发各种信息&lt;/stitle>; &lt;id>;https://colinwalker.blog/blog/ ?date=2023-11-19&lt;/id>; &lt;更新>;2023-11-20T06:53:43.420269Z&lt;/更新>; &lt;link href=&quot;https://colinwalker.blog/blog/?date=2023-11 -19&quot;/>; &lt;作者>; &lt;名称>;walterbell&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=walterbell&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://colinwalker.blog/images/colinwalker-thumb.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;RSS 可用于分发各种信息，而不仅仅是网站更新。通过添加自定义命名空间，可能性是惊人的。为了真正的开放式通信和互操作性，它应该尽可能简单。 &lt;a href=&quot;https://hackernews.betacat.io/#rss-can-be-used-to-distribute-all-sorts-of-information&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38343385&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;神话人月虚张声势指南&lt;/stitle>; &lt;id>;https://codemanship.wordpress.com/2023/11/ 20/the-bluffers-guide-to-the-mythical-man-month/&lt;/id>; &lt;更新>;2023-11-20T09:53:43.420747Z&lt;/更新>; &lt;link href=&quot;https://codemanship. wordpress.com/2023/11/20/the-bluffers-guide-to-the-mythical-man-month/&quot;/>; &lt;作者>; &lt;名称>;JazCE&lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=JazCE&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://codemanship.files.wordpress.com/2023/11/image.png?w =269&quot; style=&quot;宽度：220px；高度：328px；&quot; />;&lt;br />;弗雷德·布鲁克斯 (Fred Brooks) 在 1975 年撰写的《人月神话》认为，向晚期软件项目添加更多人力只会导致沟通复杂性增加，导致项目变得更晚。它强调小型、熟练的团队、清晰的沟通和规划的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#the-bluffers-guide-to-the-mythical-man-month&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38345017&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Z80 与 8088 速度&lt;/stitle>; &lt;id>;https://groups.google.com/g/comp.os.cpm/c/OG4tTERPtto /m/yC5iUh79CQAJ&lt;/id>; &lt;更新>;2023-11-20T09:53:43.421254Z&lt;/更新>; &lt;link href=&quot;https://groups.google.com/g/comp.os.cpm/c/ OG4tTERPtto/m/yC5iUh79CQAJ&quot;/>; &lt;作者>; &lt;名称>;CTOSian&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=CTOSian&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;作者在 DOS 下的 8088 @ 4.77 MHz 上编译了他们的 T3X/0 编译器，发现它只比在 CP/M 下的 Z80 @ 4MHz 上花费的时间稍少一些。由于 8088 具有 16 位运算以及硬件乘法和除法，他们预计 8088 会更快，但 Z80 后端通常会为同一程序发出更多指令。 &lt;a href=&quot;https://hackernews.betacat.io/#z80-vs-8088-speed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38345053&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Meta“为隐私付费”的做法是错误的&lt;/stitle>; &lt;id>;https://tuta.com/blog/meta-pay-for-privacy-illegal&lt;/id>; &lt;更新>;2023-11-20T13:07:43.421749Z&lt;/更新>; &lt;link href=&quot;https://tuta.com/blog/meta-pay-for-privacy-illegal&quot;/>; &lt;作者>; &lt;名称>;语法师&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=grammers&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tuta. com/blog/images/social-media.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;Meta“为隐私付费”的做法在很多方面都是错误的。近日，欧洲一家法院判决 Meta 在欧洲收集和使用人们数据的方式违反了隐私法规。现在，Meta 宣布推出不带个性化广告的 Facebook 和 Instagram 选项，每年收费 120 欧元。但你的隐私权可以出售吗？ &lt;a href=&quot;https://hackernews.betacat.io/#metas-approach-of-pay-for-your-privacy-is-wrong&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38347402&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Setenv 不是线程安全的，C 不想修复它&lt;/stitle>; &lt;id>;https://www.evanjones.ca/ setenv-is-not-thread-safe.html&lt;/id>; &lt;更新>;2023-11-20T05:53:43.422273Z&lt;/更新>; &lt;link href=&quot;https://www.evanjones.ca/setenv-is -not-thread-safe.html&quot;/>; &lt;作者>; &lt;名称>;r4um &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=r4um&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;C setenv() 和 unsetenv() 函数不是线程安全的，可能会导致使用线程的程序崩溃。这个问题几十年前就已为人所知，但尚未得到解决。一种解决方案是制作像 Illumos/Solaris 一样的线程安全实现，另一种解决方案是添加新的线程安全 API 来获取和迭代环境变量。 &lt;a href=&quot;https://hackernews.betacat.io/#setenv-is-not-thread-safe-and-c-doesn-t-want-to-fix-it&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38342642&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OpenAI 的错位与微软的收获&lt;/stitle>; &lt;id>;https://stratechery.com/2023/openais -misalignment-and-microsofts-gain/&lt;/id>; &lt;更新>;2023-11-20T12:53:43.422755Z&lt;/更新>; &lt;link href=&quot;https://stratechery.com/2023/openais-misalignment-and -microsofts-gain/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://i0.wp.com/stratechery.com/wp-content/uploads/2023/11/openai-2.png?resize=640%2C464&amp;ssl=1&quot; style=&quot;width ：220px；高度：160px；” />;&lt;br />;本文讨论了最近围绕 OpenAI 发生的事件，包括解雇首席执行官 Sam Altman、聘请前 Twitch 首席执行官 Emmett Shear 担任首席执行官，以及宣布 Altman 和前总裁 Greg Brockman 将加入微软。作者反思了这些事件的影响，包括微软收购 OpenAI 的人才以及 OpenAI 作为非营利组织所面临的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#openai-s-misalignment-and-microsoft-s-gain&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38346869&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;YouTube 在使用 Firefox 时人为地减慢视频加载时间&lt;/stitle>; &lt;id>;https://reddit.com/r/youtube/comments/17z8hsz/youtube_has_started_to_artificially_slow_down/ &lt;/id>; &lt;更新>;2023-11-20T10:53:43.423712Z&lt;/更新>; &lt;link href=&quot;https://reddit.com/r/youtube/comments/17z8hsz/youtube_has_started_to_artificially_slow_down/&quot;/>; &lt;作者>; &lt;name>;csvm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=csvm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Youtube 已开始人为地减慢视频速度如果您使用 Firefox，则加载时间。欺骗 Chrome 可以神奇地解决这个问题。功能变更&lt;a href=&quot;https://hackernews.betacat.io/#youtube-artificially-slows-down-video-load-times-when-using-firefox&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38345858&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我对参与董事会的行动深感遗憾&lt;/stitle>; &lt;id>;https://twitter.com/ilyasut/status /1726590052392956028&lt;/id>; &lt;更新>;2023-11-20T13:18:43.424194Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/ilyasut/status/1726590052392956028&quot;/>; &lt;作者>; &lt;名称>; Palmik&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Palmik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#i-deeply-regret-my-participation-in-the-board-s-actions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38347501&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;古树清单&lt;/stitle>; &lt;id>;https://ati.woodlandtrust.org.uk/&lt;/id>; &lt;更新>; 2023-11-20T02:53:43.425178Z&lt;/updated>; &lt;link href=&quot;https://ati.woodlandtrust.org.uk/&quot;/>; &lt;author>; &lt;name>;zeristor&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=zeristor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ati.woodlandtrust.org.uk/media/1063/ home_map.jpg&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;它们可以活数百年。英国的此类人数比许多其他欧洲国家还要多。 &lt;a href=&quot;https://hackernews.betacat.io/#ancient-tree-inventory&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38318132&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;一个空间站坠落到地球上。一个澳大利亚男孩把它带到了旧金山&lt;/stitle>; &lt;id>;https://www.sfgate.com/sfhistory/article/the-skylab-race-to-san-francisco-18074888.php&lt;/id>; &lt;更新>;2023-11-20T04:53:43.426137Z&lt;/更新>; &lt;link href=&quot;https://www.sfgate.com/sfhistory/article/the-skylab-race-to-san-francisco-18074888.php&quot; />; &lt;author>; &lt;name>;wallflower&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://s.hdnux.com/photos/01/32/56/51/23784000/3/rawImage.jpg”样式=“宽度：220像素；高度：147像素；” />;&lt;br />;1979年，NASA废弃的空间站天空实验室即将坠落地球，引起全球关注。 《旧金山观察报》向任何将 Skylab 的一部分带到其新闻编辑室的人提供 10,000 美元的奖金。一名名叫斯坦·桑顿（Stan Thornton）的17岁澳大利亚男孩因收集烧焦的太空垃圾并飞往旧金山而获奖。 &lt;a href=&quot;https://hackernews.betacat.io/#a-space-station-fell-to-earth-an-australian-boy-brought-it-to-san-francisco&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38336912&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;参观芝加哥西尔斯百货公司&lt;/stitle>; &lt;id>;https://www.searshouseseeker .com/?m=0&lt;/id>; &lt;更新>;2023-11-20T00:53:43.426627Z&lt;/更新>; &lt;link href=&quot;https://www.searshouseseeker.com/?m=0&quot;/>; &lt;作者>; &lt;名称>;davetron5000&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=davetron5000&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBUOa-1zP6AQskBNAC5UKTM5pVqCc1I7GCs5OwmTYs65y5_Y7SdEtjeJ8XAq_wHeCvCi7z0QkUFSmxiuGUN75VXym25siwr-h-ap2AnKaoODHsL LRxK8KkrShOzxht9Hlkia0eSJuCJzmN8xhu25N3QUsJpO51nD0OT7SESZYWLWdCp4WJ-WVvwE5hshnT/w640-h324/屏幕截图%202023-06-20%20at%2010.09.46%20PM.png&quot;样式= “宽度：220 像素；高度：112 像素；” />;&lt;br />;作者描述了他们最近去芝加哥参观西尔斯住宅和弗兰克·劳埃德·赖特住宅的旅程。他们住在郊区，参观了各个城镇看房子，还探索了橡树园和芝加哥市中心。 &lt;a href=&quot;https://hackernews.betacat.io/#a-trip-to-see-chicagoland-sears-houses&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38340188&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;StyleTTS2 – 开源十一实验室品质文本转语音&lt;/stitle>; &lt;id>;https://github.com/yl4579/StyleTTS2&lt;/id>; &lt;更新>;2023-11-19T17:53:43.427101Z&lt;/更新>; &lt;link href=&quot;https://github.com/yl4579/StyleTTS2&quot;/>; &lt;作者>; &lt;名称>;sandslides &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=sandslides&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/721fecd2fb0aa6adc16e4d6ba3d7aa972ab511821b8ea47534872b063f400990/yl4579/ StyleTTS2&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;StyleTTS 2 是一种文本转语音 (TTS) 模型，通过利用大型语音语言模型 (SLM) 的风格扩散和对抗性训练来实现人类水平的 TTS 合成。它在单说话人数据集上超越了人类录音，并在多说话人数据集上匹配。该模型在零样本扬声器自适应方面也优于以前的模型。 &lt;a href=&quot;https://hackernews.betacat.io/#styletts2-open-source-eleven-labs-quality-text-to-speech&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38335255&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 LoRA（低阶适应）微调 LLM 的实用技巧&lt;/stitle>; &lt;id>;https://magazine.sebastianraschka.com/p /practical-tips-for-finetuning-llms&lt;/id>; &lt;更新>;2023-11-19T22:53:43.427574Z&lt;/更新>; &lt;link href=&quot;https://magazine.sebastianraschka.com/p/practical- Tips-for-finetuning-llms&quot;/>; &lt;作者>; &lt;名称>;rasbt&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rasbt&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3。 amazonaws.com%2Fpublic%2Fimages%2F5dfbd169-eb7e-41e1-a050-556ccd6fb679_1600x672.png&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;低秩适应 (LoRA) 是训练定制 LLM 的有效技术。它可以节省内存并在多次运行中提供一致的结果。 LoRA 允许在单个 GPU 上对大型语言模型进行高效微调。 &lt;a href=&quot;https://hackernews.betacat.io/#practical-tips-for-finetuning-llms-using-lora-low-rank-adaptation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38338635&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sam Altman、Greg Brockman 等人加入微软&lt;/stitle>; &lt;id>;https://twitter.com/satyanadella/status/ 1726509045803336122&lt;/id>; &lt;更新>;2023-11-20T08:53:43.428055Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/satyanadella/status/1726509045803336122&quot;/>; &lt;作者>; &lt;名称>;JimDabell &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=JimDabell&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但别担心 - 让我们给又是一枪。 &lt;a href=&quot;https://hackernews.betacat.io/#sam-altman-greg-brockman-and-others-to-join-microsoft&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38344196&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AS Byatt 去世了&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/11/17/books/as- byatt-dead.html&lt;/id>; &lt;更新>;2023-11-20T01:53:43.428535Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/11/17/books/as -byatt-dead.html&quot;/>; &lt;作者>; &lt;名称>;Thevet &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Thevet&lt;/uri>; &lt;/author>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/11/18/multimedia/17byatt-bqjc-print1/17byatt-bqjc-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale “样式=”宽度：220px;高度：154px;“ />;&lt;br />;以小说《占有》闻名的著名作家 AS Byatt 去世，享年 87 岁。她因其理智主义以及将学术与小说无缝融合的能力而受到赞誉。 &lt;a href=&quot;https://hackernews.betacat.io/#as-byatt-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38325551&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;本地捕获并测试 AWS SES 电子邮件&lt;/stitle>; &lt;id>;https://github.com/kamranahmedse/local-ses&lt;/id>; &lt;updated>;2023-11-20T01:53 ：43.428992Z &lt;/更新>; &lt;link href=&quot;https://github.com/kamranahmedse/local-ses&quot;/>; &lt;作者>; &lt;名称>;anonfunction &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=anonfunction&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kamranahmedse/local-ses/main/.github/email -demo.png&quot; style=&quot;宽度：220px；高度：181px；&quot; />;&lt;br />;在端口 8282 上启动服务并修改 SES 客户端以使用本地服务在本地捕获和测试 AWS SES 电子邮件。 &lt;a href=&quot;https://hackernews.betacat.io/#trap-and-test-aws-ses-emails-locally&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38341035&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CUBOTino：小型、简单、3D 打印、廉价的魔方解算机器人&lt;/stitle>; &lt;id>;https://github.com/AndreaFavero71/CUBOTino_base_version&lt;/ id>; &lt;更新>;2023-11-19T22:53:43.429477Z&lt;/更新>; &lt;link href=&quot;https://github.com/AndreaFavero71/CUBOTino_base_version&quot;/>; &lt;作者>; &lt;名称>;wallflower&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/AndreaFavero71/ CUBOTino_base_version/main/images/title_pic.jpg&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;此存储库包含构建 CUBOTino_base_version 的文件：一个小型、简单、3D 打印、廉价的魔方解算器机器人。这个机器人在不到 90 秒的时间内解决了魔方：虽然速度不快，但还是……它相当简单且便宜。 &lt;a href=&quot;https://hackernews.betacat.io/#cubotino-a-small-simple-3d-printed-inexpective-rubik-s-cube-solver-robot&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38334784&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;苏格兰最古老的格子玫瑰&lt;/stitle>; &lt;id>;https://www.atlasobscura.com/articles/oldest-苏格兰格子图案&lt;/id>; &lt;更新>;2023-11-20T04:53:43.429992Z&lt;/更新>; &lt;link href=&quot;https://www.atlasobscura.com/articles/oldest-tartan-plaid -in-scotland&quot;/>; &lt;作者>; &lt;名称>;pepys &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pepys&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://img.atlasobscura.com/mNlKYJkx0F_uQaZW5guW5r2cVl03ijRYTv2Xy-k4i0o/rt:fit/w:1280/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9 uYXdzLmNvbS91 /cGxvYWRzL2Fzc2V0/cy9mMzU5ZTE1MC1m/NmRiLTQzNWMtoTE5/Yi02ZjM1YzExNGI2/ZDEyZWJkNWU0MmU2/YmI0ZDViMzNfR2xl/biBBZmZyaWMgdGFy/dGFuIC0gU2NvdGxh/bmR fcyBvbGRlc3Qt/a25vd24gdHJ1ZSB0/YXJ0YW4gZGlzY292/ZXJlZCBieSBUaGUg/U2NvdHRpc2ggVGFy/dGFucyBBdXRob3Jp/dHkgdG8gZ28gb24g/ZGlzcGxheSBmb3Ig/dGhlIGZpcnN0IHR p/bWUgYXQgVl9BIER1/bmRlZV9zIFRhcnRh/biBleGhpYml0aW9u/Li5qcGc.jpg&quot; style=&quot;宽度： 220 像素；高度：166px;&quot; />;&lt;br />;一块被称为 Glen Affric 格子呢的格子呢织物，在苏格兰的泥炭沼泽中被发现，已被确认为苏格兰最古老的真正格子呢，其历史可以追溯到 16 世纪。织物的颜色和图案被用来象征地位和重要性。格子呢现在在 V&amp;A 邓迪博物馆展出。&lt;a href=&quot;https://hackernews.betacat.io/#scotland-s-oldest-tartan-rose&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38326758&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;朋友不要让朋友做出糟糕的图表&lt;/stitle>; &lt;id >;https://github.com/cxli233/FriendsDontLetFriends&lt;/id>; &lt;更新>;2023-11-20T00:53:43.430457Z&lt;/更新>; &lt;link href=&quot;https://github.com/cxli233/FriendsDontLetFriends&quot; />; &lt;author>; &lt;name>;ZunarJ5&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ZunarJ5&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://raw.githubusercontent.com/cxli233/FriendsDontLetFriends/main/Results/dont_bar_plot.png&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;朋友们不要让朋友们做出糟糕的图表。本文讨论了数据可视化中的常见错误和不良做法，例如使用条形图进行均值分离、使用任意色标、设计不当的条形图绘制草地、未对热图中的行和列重新排序、基于误导性长度和位置的可视化、条形图中的断轴、无效的饼图和圆环图、同心圆环中的不准确表示、对色盲不友好的色标以及优化堆叠条形图的需要用于有效可视化的绘图。&lt;a href=&quot;https://hackernews.betacat.io/#friends-don-t-let-friends-make-bad-graphs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38340226&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么我倾向于不使用内容协商&lt;/stitle>; &lt;id>;https://htmx.org/essays/why-tend -not-to-use-content-negotiation/&lt;/id>; &lt;更新>;2023-11-19T21:53:43.430920Z&lt;/更新>; &lt;link href=&quot;https://htmx.org/essays/why-tend -not-to-use-content-negotiation/&quot;/>; &lt;作者>; &lt;名称>;TheBigRoomXXL&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=TheBigRoomXXL&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://htmx.org/img/bss_bars.png&quot; style=&quot;width: 220px; height: 231px;&quot; />;&lt;br />;Carson Gross 讨论了超媒体 API 和数据 (JSON) API 之间的差异，以及为什么他认为内容协商通常不是大多数应用程序返回 JSON 和 HTML 的正确方法。他认为JSON API 应该稳定且规则，而超媒体 API 可以根据应用程序的用户界面需求进行更改。&lt;a href=&quot;https://hackernews.betacat.io/#why-i-tend-not-to-use -content-negotiation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38338033&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;末日复制者 (2022)&lt;/stitle>; &lt;id>;https://github.com/simoninns/DomesdayDuplicator/wiki&lt;/id>; &lt;更新>;2023-11-19T23:53:43.431386Z&lt;/更新>; &lt;link href=&quot;https://github.com/ simoninns/DomesdayDuplicator/wiki&quot;/>; &lt;作者>; &lt;名称>;zeristor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zeristor&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/simoninns/DomesdayDuplicator/assets/domesday_duplicator_3_photo.jpg&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;Domesday Duplicator 是一款基于 USB3 的 DAQ，能够每秒采集 4000 万个样本模拟 RF 数据。它旨在通过直接采样来备份 Domesday AIV 激光光盘。来自激光光盘播放器光学头的 RF 数据。&lt;a href=&quot;https://hackernews.betacat.io/#the-domesday-duplicator-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38339715&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Emmet Shear 作为 OpenAI 临时首席执行官的声明&lt;/stitle>; &lt;id>;https://twitter.com/eshear/status/1726526112019382275?s =46&amp;t=a8Pjw_2Gzth_zpOPBTHQaw&lt;/id>; &lt;更新>;2023-11-20T09:53:43.432792Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/eshear/status/1726526112019382275?s=46&amp;t=a8Pjw_2Gzth_zpOPBTHQ噢” />; &lt;author>; &lt;name>;jk_tech&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jk_tech&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了问题，但别担心——让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#emmet-shear-statement-as-interim-ceo-of-openai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38345162&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;记住水晶收音机 (2020)&lt;/stitle>; &lt;id>;https://www.nutsvolts.com/magazine/article/remembering-the-crystal -radio&lt;/id>; &lt;更新>;2023-11-19T23:53:43.433270Z&lt;/更新>; &lt;link href=&quot;https://www.nutsvolts.com/magazine/article/remembering-the-crystal-radio&quot; />; &lt;作者>; &lt;名称>;1970-01-01&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=1970-01-01&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.nutsvolts.com/uploads/wygwam/NV_1020_Goodsell_Fig-1.jpg&quot; style=&quot;宽度：220px；高度：167px；&quot; />;&lt;br />;1952 年，我 12 岁时制作了一台水晶收音机。它是芝加哥 Allied Radio 的套件，售价 2.50 美元。如今，您所要做的就是让 Alexa 调到数百个广播电台中的任何一个来收听他们的节目。 &lt;a href=&quot;https://hackernews.betacat.io/#remembering-the-crystal-radio-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38326279&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;