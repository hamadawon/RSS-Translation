<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-08T09:57:23.935430Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;什么有百万分之一的机会？ （2010）&lt;/stitle>; &lt;id>;https://www.stat.berkeley.edu/~aldous/Real-World/million.html&lt;/id>; &lt;更新>;2024-01-08T07:56:10.245511Z&lt; /updated>; &lt;link href=&quot;https://www.stat.berkeley.edu/~aldous/Real-World/million.html&quot;/>; &lt;作者>; &lt;名称>;ksec&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=ksec&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;什么真的有百万分之一的机会？这是课堂上有趣的主题的一部分。首先我问学生，如果你在别人的闲聊中无意中听到“百万分之一的机会”这句话，他们可能在谈论什么？学生通常会提供标志性的例子（中彩票、被闪电击中）和更具想象力的建议。然后我问，我们如何才能获得有关“百万分之一的机会”这一短语的实际随意使用的数据？学生和我都想不出比在博客中搜索更实用的东西，所以我展示了这些结果。最后，我请求大家对一些事件提出建议，让我们相信这些事件确实有百万分之一的可能性（比如说，最高可达 2 倍）。然后我会仔细考虑学生的建议；我们可以量化这种可能性吗？（如果是的话）它们大约是百万分之一吗？ “项目符号”是示例，“是”或“否”表示“百万分之一”的机会估计是否合理，或者该机会是否明显更大或更小。 &lt;a href=&quot;https://hackernews.betacat.io/#what-has-a-1-in-a-million-chance-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38899183&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;MotorOS：适用于 x64 虚拟机的 Rust 优先操作系统&lt;/stitle>; &lt;id>;https://github.com/moturus/motor-os &lt;/id>; &lt;更新>;2024-01-08T02:56:10.247564Z&lt;/更新>; &lt;link href=&quot;https://github.com/moturus/motor-os&quot;/>; &lt;作者>; &lt;名称>;sbt567&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=sbt567&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets. com/15fceed797ce01d1e6dffda7a427e83bd4b52d6be57fe53d3fa6ac2d6a2954f5/moturus/motor-os&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Motūrus OS 是一款简单、快速且安全的操作系统，专为基于虚拟机的工作负载而构建。它是一个基于 Rust 构建的基于微内核的操作系统，目前支持基于 x64 KVM 的虚拟机。 &lt;a href=&quot;https://hackernews.betacat.io/#motoros-a-rust-first-operating-system-for-x64-vms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38907568&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;可视化 Ext4&lt;/stitle>; &lt;id>;https://buredoranna.github.io/linux/ext4/2020/01/09/ext4- viz.html&lt;/id>; &lt;更新>;2024-01-08T03:56:10.247956Z&lt;/更新>; &lt;link href=&quot;https://buredoranna.github.io/linux/ext4/2020/01/09/ext4 -viz.html&quot;/>; &lt;作者>; &lt;名称>;giis&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=giis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://buredoranna.github.io/assets/images/blockfile.ext4.120.png&quot; style=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;本文探讨了将空白驱动器转换为 ext4 文件系统的过程。作者将mkfs.ext4添加的结构可视化，并区分了ext4数据和用户数据。 &lt;a href=&quot;https://hackernews.betacat.io/#visualizing-ext4&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38907821&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;显示 HN：我在浏览器中 100% 制作了 HTMX Playground&lt;/stitle>; &lt;id>;https://lassebomh.github.io/htmx-playground/&lt;/id>; &lt;updated>;2024-01- 08T01:56:10.248365Z&lt;/updated>; &lt;link href=&quot;https://lassebomh.github.io/htmx-playground/&quot;/>; &lt;作者>; &lt;name>;bitterblotter&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=bitterblotter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;HTMX Playground 是一个类似后端的环境，完全在浏览器内部运行。它允许您定义端点和渲染模板，并且它包括一个模拟服务器，可以拦截来自 HTMX 的传出请求。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-a-htmx-playground-100-in-the-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38906989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么在 2023 年使用 strace？ [视频]&lt;/stitle>; &lt;id>;https://media.ccc.de/v/all-systems-go-2023-228-why-would-you-still-want-to-use-strace-in- 2023-&lt;/id>; &lt;更新>;2024-01-08T05:56:10.248752Z&lt;/更新>; &lt;link href=&quot;https://media.ccc.de/v/all-systems-go-2023-228- Why-would-you-still-want-to-use-strace-in-2023-&quot;/>; &lt;author>; &lt;name>;r4um&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =r4um&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.media.ccc.de/media/events/all_systems_go/2023/228-34203612-1025-5359 -85f9-d42f13739426_preview.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;播放列表：“asg2023”视频从这里开始/音频 strace 是 Linux 的传统用户空间跟踪实用程序，使用 ptrace API 实现。尽管现在有丰富的各种内核跟踪接口，但 strace 仍然可以更好地服务于某些类别的任务。在本次演讲中，strace 的维护者将提供此类任务的示例。 &lt;a href=&quot;https://hackernews.betacat.io/#why-use-strace-in-2023-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38908496&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;小脑有什么作用？&lt;/stitle>; &lt;id>;https://sarahconstantin.substack.com/p/what-does-the-cerebellum-do-anyway&lt; /id>; &lt;更新>;2024-01-07T22:56:10.249151Z&lt;/更新>; &lt;link href=&quot;https://sarahconstantin.substack.com/p/what-does-the-cerebellum-do-anyway&quot;/ >; &lt;author>; &lt;name>;扰乱&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=scrambled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F77e9eefd -34d2-4744-9b19-53981bb68e8f_750x500.png&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;小脑，也被称为“小脑”，负责控制运动和运动技能。它对于维持平衡和协调起着至关重要的作用。尽管小脑体积很小，但它包含大量神经元，并参与经典条件反射和预测建模。 &lt;a href=&quot;https://hackernews.betacat.io/#what-does-the-cerebellum-do&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38905898&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;仅仅因为你可以并不意味着你应该：&lt;meter>;元素&lt;/stitle>; &lt;id>;https://localghost.dev/blog/just-because-you- can-doesn-t-mean-you-should-the-meter-element/&lt;/id>; &lt;更新>;2024-01-08T04:56:10.249545Z&lt;/更新>; &lt;link href=&quot;https://localghost. dev/blog/just-because-you-can-doesn-t-mean-you-should-the-meter-element/&quot;/>; &lt;author>; &lt;name>;butz&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=butz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://localghost.dev/img/blog/meter.png&quot; style=&quot;宽度：220 像素；高度：128 像素；” />;&lt;br />;&lt;meter>; 元素尚未被广泛理解，并且可能会导致网页难以访问。它最好与数值一起使用以提供有用的信息。 &lt;a href=&quot;https://hackernews.betacat.io/#just-because-you-can-doesn-t-mean-you-should-the-meter-element&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38903869&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从阿拉斯加 737 MAX 航班孔中掉落的 iPhone 已找到，仍可发送邮件&lt;/stitle>; &lt;id>;https ://twitter.com/SeanSafyre/status/1744138937239822685&lt;/id>; &lt;更新>;2024-01-08T02:56:10.249912Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/SeanSafyre/status/ 1744138937239822685&quot;/>; &lt;作者>; &lt;名称>;wannacboatmovie&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wannacboatmovie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;一些东西出了问题，但别担心——让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#iphone-that-fell-from-hole-in-alaska-737-max-flight-is-found-still-open-to-mail&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38907620&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;meta 如何构建线程的基础设施&lt;/stitle>; &lt;id>;https:// /engineering.fb.com/2023/12/19/core-infra/how-meta-built-the-infrastruct-for-threads/&lt;/id>; &lt;更新>;2024-01-08T04:56:10.250273Z&lt;/已更新>; &lt;link href=&quot;https://engineering.fb.com/2023/12/19/core-infra/how-meta-built-the-infrastruct-for-threads/&quot;/>; &lt;作者>; &lt;名称>; trojanalert&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=trojanalert&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://engineering. fb.com/wp-content/uploads/2023/12/Threads-infra-hero.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;Meta 推出的 Threads 取得了巨大成功，推出后五天注册人数就超过 1 亿。由于 Meta 现有基础设施的可扩展性、性能和可靠性，Meta 的基础设施团队能够支持线程的快速增长。 &lt;a href=&quot;https://hackernews.betacat.io/#how-meta-built-the-infrastruct-for-threads&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38908427&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;802.11ah Wi-Fi HaLOW：1 公里 WiFi 标准&lt;/stitle>; &lt;id>;https://hackaday.com/2024/01/07/802- 11ah-wi-fi-halow-the-1-kilometer-wifi-standard/&lt;/id>; &lt;更新>;2024-01-07T22:56:10.250632Z&lt;/更新>; &lt;link href=&quot;https://hackaday. com/2024/01/07/802-11ah-wi-fi-halow-the-1-kilometer-wifi-standard/&quot;/>; &lt;作者>; &lt;名称>;rcarmo&lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=rcarmo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hackaday.com/wp-content/uploads/2024/01/wifi_802 .11ah_distance_test.jpg?w=800&quot; style=&quot;宽度：220px；高度：99px；&quot; />;&lt;br />;802.11ah WiFi (HaLow) 标准是一种新的无线标准，介于标准 WiFi 和 LoRaWAN 和 ZigBee 等低比特率选项之间。它提供更远的范围并使用 900 MHz 频谱。一些集成该标准的产品包括以太网范围扩展器和 WiFi 扩展器。 &lt;a href=&quot;https://hackernews.betacat.io/#802-11ah-wi-fi-halow-the-1-kilometer-wifi-standard&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38900843&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ASML 光刻机如何移动晶圆 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch ?v=1fOA85xtYxs&lt;/id>; &lt;更新>;2024-01-08T00:56:10.251002Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=1fOA85xtYxs&quot;/>; &lt;作者>; &lt;name>;tux1968&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tux1968&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;// www.youtube.com/embed/1fOA85xtYxs&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#how-an-asml-lithography- machine-moves-a-wafer-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38906881&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;最佳欺诈金额非零（2022）&lt;/stitle>; &lt;id>;https://www.bitsaboutmoney.com/archive/optimal-amount-of-fraud/&lt;/id>; &lt;updated>;2024-01-07T22:56:10.251750 Z&lt;/updated>; &lt;link href=&quot;https://www.bitsaboutmoney.com/archive/optimal-amount-of-fraud/&quot;/>; &lt;作者>; &lt;name>;classichasclass&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=classichasclass&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.unsplash.com/photo-1509479200622-4503f27f12ef?crop =熵&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDE1fHxoYWNrZXJ8ZW58MHx8fHwxNjYyMTMyMDEz&amp;ixlib=rb-1.2.1&amp;q=80&amp;w=2000content/images/size/w1200&quot; style=&quot;width: 2 20 像素； height: 147px;&quot; />;&lt;br />;最佳欺诈量大于零。欺诈是一种政策选择，平衡了欺诈的不可取性与社会商品的可取性。企业接受欺诈作为吸引新客户的必要费用并减少交易摩擦。&lt;a href=&quot;https://hackernews.betacat.io/#the-optimal-amount-of-fraud-is-non-zero-2022&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38905889&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;&quot;LibreOffice 比 Word 更擅长读取旧的 Word 文件&quot;&lt;/stitle>; &lt;id>;https://eldritch.cafe /@sfwrtr/111716610017454919&lt;/id>; &lt;更新>;2024-01-07T23:56:10.252481Z&lt;/更新>; &lt;link href=&quot;https://eldritch.cafe/@sfwrtr/111716610017454919&quot;/>; &lt;作者>; &lt;名称>;sohkamyung&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sohkamyung&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// eldritchcafe.files.fedi.monster/media_attachments/files/111/716/580/289/497/586/original/2b6f36c506b949e1.png&quot; style=&quot;width: 220px; height: 148px;&quot; />;&lt;br />;LibreOffice 比 Word 更擅长读取旧的 Word 文件。它可以打开早于 1986 年的文件，保留内容并防止任何知识产权丢失。&lt;a href=&quot;https ://hackernews.betacat.io/#libreoffice-is-better-at-reading-old-word-files-than-word&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38906331&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;特斯拉 Model Y：我 6 个月的印象&lt;/stitle>; &lt;id>;https://arslan.io/2024/01/08/tesla-model-y- my-6-months-impressions/&lt;/id>; &lt;更新>;2024-01-08T08:56:10.252839Z&lt;/更新>; &lt;link href=&quot;https://arslan.io/2024/01/08/tesla- model-y-my-6-months-impressions/&quot;/>; &lt;作者>; &lt;名称>;enescakir&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=enescakir&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arslan.io/content/images/size/w1200/2024/01/ScreenShot-2024-01-08-11.36.22@2x.png “样式=”宽度：220px; height: 154px;&quot; />;&lt;br />;经过六个月的日常驾驶，作者分享了对特斯拉 Model Y 的感受。他们发现悬架僵硬且不舒服，希望它有空气悬架。他们很欣赏预定的气候功能，但对缺少前置传感器感到失望。作者还提到了雨刷器、无钥匙汽车打开和自动驾驶仪的问题。尽管有这些缺点，但他们对 Model Y 作为一辆多功能车感到满意，并且会再次购买. &lt;a href=&quot;https://hackernews.betacat.io/#tesla-model-y-my-6-months-impressions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=38909584&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Shecc：一个自托管和教育性 C 优化编译器&lt;/stitle>; &lt;id>;https://github.com/sysprog21/shecc&lt;/id>; &lt;已更新>;2024-01-07T21:56:10.253240Z&lt;/已更新>; &lt;link href=&quot;https://github.com/sysprog21/shecc&quot;/>; &lt;作者>; &lt;name>;eatonphil&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=eatonphil&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://user-images.githubusercontent.com/18013815/91671374 -b2f0db00-eb58-11ea-8d55-858e9fb160c0.png&quot; style=&quot;宽度：220px; height: 110px;&quot; />;&lt;br />;shecc 是 C 语言子集的自编译编译器，能够执行基本的优化策略。它包括一个独立的 C 前端，带有集成的机器代码生成器和利用两遍编译过程。&lt;a href=&quot;https://hackernews.betacat.io/#shecc-a-self-hosting-and-educational-c-optimizing-compiler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38905182&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;MK1 Flywheel 释放 AMD Instinct 在 LLM 推理方面的全部潜力&lt;/stitle>; &lt;id>;https:// mkone.ai/blog/mk1-flywheel-amd&lt;/id>; &lt;更新>;2024-01-07T23:56:10.253608Z&lt;/更新>; &lt;link href=&quot;https://mkone.ai/blog/mk1-flywheel -amd&quot;/>; &lt;作者>; &lt;名称>;ejz&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ejz&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://images.squarespace-cdn.com/content/v1/64b82ec2cac59465c6dd7813/7de6883e-6569-4313-90cc-e022d9bdc75f/Blog+Charts+-+IQ70+%283%29.png&quot; style=&quot;width ：220像素； height: 181px;&quot; />;&lt;br />;随着我们新的推理引擎 MK1 Flywheel 的发布，我们很高兴地报告 AMD Instinct 系列可以实现与计算匹配的 NVIDIA GPU 相当的性能。我们的基准测试显示高达 3.7 倍与 vLLM 相比，吞吐量更高。&lt;a href=&quot;https://hackernews.betacat.io/#mk1-flywheel-unlocks-the-full-potential-of-amd-instinct-for-llm-inference&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38906208&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;当随机数过于随机时：低差异序列 (2017)&lt;/stitle>; &lt;id >;https://blog.demofox.org/2017/05/29/when-random-numbers-are-too-random-low-discrepancy-sequences/&lt;/id>; &lt;更新>;2024-01-07T21:56： 10.253967Z&lt;/更新>; &lt;link href=&quot;https://blog.demofox.org/2017/05/29/when-random-numbers-are-too-random-low-discrepancy-sequences/&quot;/>; &lt;作者>; &lt;name>;ibobev&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ibobev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;随机数在图形中很有用和游戏开发，但它们有一个令人讨厌的、有时是不良的习惯，即聚集在一起。低差异序列可以提供更均匀分布的随机数。 &lt;a href=&quot;https://hackernews.betacat.io/#when-random-numbers-are-too-random-low-discrepancy-sequences-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38905280&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我制作了一个在 iPhone Pro 上本地运行 Mistral 7B 0.2 LLM 的应用程序&lt;/stitle>; &lt;id>;https://apps.apple。 com/us/app/offline-chat-private-ai/id6474077941&lt;/id>; &lt;更新>;2024-01-08T01:56:10.254340Z&lt;/更新>; &lt;link href=&quot;https://apps.apple.com /us/app/offline-chat-private-ai/id6474077941&quot;/>; &lt;作者>; &lt;名称>;winstonschen&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=winstonschen&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://is1-ssl.mzstatic.com/image/thumb/Purple126/v4/28/a2/52/28a25270-4244-7edf-d971 -35f9137a04a3/AppIcon-0-0-1x_U007epad-0-85-220.png/1200x630wa.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;推出离线聊天，这是下一代人工智能聊天机器人，完全在您的设备上运行，无需互联网。它非常适合激发创造力并协助完成写作等各种任务。 &lt;a href=&quot;https://hackernews.betacat.io/#i-made-an-app-that-runs-mistral-7b-0-2-llm-locally-on-iphone-pros&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38906966&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;纸牌游戏规则&lt;/stitle>; &lt;id>;https://www.pagat.com /&lt;/id>; &lt;更新>;2024-01-07T20:56:10.254693Z&lt;/更新>; &lt;link href=&quot;https://www.pagat.com/&quot;/>; &lt;作者>; &lt;名称>;beermonster&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=beermonster&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Pagat 网站成立于 1995 年，旨在记录传统的纸牌和多米诺骨牌游戏。它提供适合不同数量玩家的游戏信息，并为两个、三个、四个、五个和六个玩家提供建议。 &lt;a href=&quot;https://hackernews.betacat.io/#card-game-rules&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38899987&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;GitUI&lt;/stitle>; &lt;id>;https://github.com/extrawurst/gitui&lt;/id>; &lt;更新>;2024-01-07T20:56:10.255050Z&lt;/更新>; &lt;link href =&quot;https://github.com/extrawurst/gitui&quot;/>; &lt;作者>; &lt;名称>;jethronethro&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jethronethro&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/extrawurst/gitui/master/assets/logo.png&quot; style=&quot;width: 220px; height: 132px;&quot; />;&lt;br />;GitUI 在您的终端中提供了舒适的 git GUI，提供索引、提交、差异、存储、责备和日志等功能。它的目标是成为 git 任务的一站式解决方案，但目前处于测试阶段，可能包含错误和缺失的功能。 &lt;a href=&quot;https://hackernews.betacat.io/#gitui&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 38905019&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;探索 x86-64 指令编码&lt;/stitle>; &lt;id>;https://blog.kenanb.com/code/low-level/2024/01/06/encoding-diagram-attempt.html&lt;/id>; &lt;更新>;2024-01-07T22:56:10.255408Z&lt;/更新>; &lt;link href=&quot;https://blog.kenanb.com/code/low-level/2024/01/06/encoding-diagram-attempt.html &quot;/>; &lt;author>; &lt;name>;kenanb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kenanb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.kenanb.com/assets/img/x86-64-insn-encoding.png&quot; style=&quot;宽度：220px；高度：97px；&quot; />;&lt;br />;我尝试根据目前所知生成 x86-64 旧版编码的图表。在上一篇文章中，我们深入研究了之前生成的 x86-64 二进制文件，并找出了编码。 &lt;a href=&quot;https://hackernews.betacat.io/#exploring-x86-64-instruction-encoding&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38899860&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;无用知识的有用性 (1939) [pdf]&lt;/stitle>; &lt;id>;https://www.ias.edu/sites/default/files/library/UsefulHarpers.pdf &lt;/id>; &lt;更新>;2024-01-07T17:56:10.255759Z&lt;/更新>; &lt;link href=&quot;https://www.ias.edu/sites/default/files/library/UsefulHarpers.pdf&quot;/>; &lt;作者>; &lt;名称>;jkuria &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jkuria&lt;/uri>; &lt;/作者>; &lt;content type =“html”>; &lt;a href =“ https://hackernews.betacat.io/#the-useful-of-useless-knowledge-1939-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=38890489&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;Show HN：我制作了一个应用程序，整合了 18 个应用程序（文档、工作表、表单、网站、聊天...）&lt;/stitle>; &lt;id>;https://nino.app&lt;/id >; &lt;更新>;2024-01-07T14:56:10.256142Z&lt;/更新>; &lt;link href=&quot;https://nino.app&quot;/>; &lt;作者>; &lt;name>;harrisonlo&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=harrisonlo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://nino.app/assets/cover.png&quot; style=&quot;宽度：220px； height: 110px;&quot; />;&lt;br />;Nino 是专业人士的模块化工作空间。它是一组软件，可以通过一个统一的界面在块级上相互操作。&lt;a href=&quot;https:// hackernews.betacat.io/#show-hn-i-made-an-app-that-c​​onsolidated-18-apps-doc-sheet-form-site-chat&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38901504&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;失乐园 (1667)&lt;/stitle>; &lt;id>;https://milton.host.dartmouth.edu/reading_room/pl/ book_1/text.shtml&lt;/id>; &lt;更新>;2024-01-07T18:56:10.256505Z&lt;/更新>; &lt;link href=&quot;https://milton.host.dartmouth.edu/reading_room/pl/book_1/text .shtml&quot;/>; &lt;作者>; &lt;名称>;Frummy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Frummy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://milton.host.dartmouth.edu/reading_room/images/mailIcon.png&quot; style=&quot;宽度：220px; height: 165px;&quot; />;&lt;br />;本文是约翰·弥尔顿史诗《失乐园》第一卷的摘要。介绍了这首诗的主题，即人类的不服从以及随之而来的天堂的丧失.这首诗以撒旦和他在地狱中的堕落天使开始，讨论他们悲惨的堕落和重获天堂的计划。&lt;a href=&quot;https://hackernews.betacat.io/#paradise-lost-1667&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38876560&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;四种团队类型&lt;/stitle>; &lt;id>;https://itrevolution.com/articles /four-team-types/&lt;/id>; &lt;更新>;2024-01-08T03:56:10.256859Z&lt;/更新>; &lt;link href=&quot;https://itrevolution.com/articles/four-team-types/&quot; />; &lt;author>; &lt;name>;kiyanwang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kiyanwang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://itrevolution.com/wp-content/uploads/2023/02/Fig_5.1_r5-1.png&quot; style=&quot;宽度：220px； height: 220px;&quot; />;&lt;br />;根据 Matthew Skelton 和 Manuel Pais 的说法，构建和运行现代软件系统只需要四种基本团队类型。&lt;a href=&quot;https://hackernews.betacat.io/ #four-team-types&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38900826&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一直向下的活动对象：删除应用程序和虚拟机之间的障碍&lt;/stitle>; &lt;id>;https://programming-journal.org/2024/8/5/&lt;/id>; &lt;updated>;2024-01-07T19:56:10.257254Z&lt;/updated>; &lt;link href=&quot;https://programming-journal.org/2024/8/5/&quot;/>; &lt;作者>; &lt;name>;mpweiher&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=mpweiher&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;面向对象的语言通常使用提供即时 (JIT) 编译和垃圾收集 (GC) 等机制的虚拟机 (VM)这些VM组件通常在单独的层中实现，将它们与应用程序隔离。虽然这种方法带来了清晰分离和解耦的软件工程优势，但它为理解 VM 行为和改进 VM 实现带来了障碍。 &lt;a href=&quot;https://hackernews.betacat.io/#live-objects-all-the-way-down-removing-the-barriers- Between-apps-and-vms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38904180&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;纯 C WebRTC&lt;/stitle>; &lt;id>;https://github.com/awslabs/amazon-kinesis -video-streams-webrtc-sdk-c&lt;/id>; &lt;更新>;2024-01-07T19:56:10.257607Z&lt;/更新>; &lt;link href=&quot;https://github.com/awslabs/amazon-kinesis- video-streams-webrtc-sdk-c&quot;/>; &lt;作者>; &lt;名称>;seansh&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=seansh&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>; &lt;img src =“https://opengraph.githubassets.com/d41d09c024657f565c0ce96e49392daec71f795d81788b9ae5aad5ad62557a69/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c”样式=“宽度：220px；高度：11” 0像素;” />;&lt;br />;在新签出的存储库中创建一个构建目录，并从中执行 CMake。我们提供了一个使用 GStreamer 捕获/编码视频，然后通过该库发送的示例。 &lt;a href=&quot;https://hackernews.betacat.io/#pure-c-webrtc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38904574&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;巴菲特曾经赌注 100 万美元，他可以在 10 年内击败一群对冲基金&lt;/stitle>; &lt;id>;https://finance.yahoo.com/news/warren-buffett-once-bet -1m-113000485.html&lt;/id>; &lt;更新>;2024-01-08T00:56:10.257960Z&lt;/更新>; &lt;link href=&quot;https://finance.yahoo.com/news/warren-buffett-once- bet-1m-113000485.html&quot;/>; &lt;作者>; &lt;名称>;hhs&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hhs&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://s.yimg.com/ny/api/res/1.2/PAPJyRp1wWXzoalzy.3PIA--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTQyNw--/https://media.zenfs.com/en/ Moneywise_327/2ced5299e5954d8176723c1e63fb13e7&quot; style=&quot;宽度：220px；高度：98px；&quot; />;&lt;br />;根据沃伦·巴菲特的说法，简单的策略可以胜过复杂的对冲基金。巴菲特押注 100 万美元，押注标准普尔 500 指数基金在 10 年内将跑赢一篮子对冲基金。 &lt;a href=&quot;https://hackernews.betacat.io/#buffett-once-bet-1m-that-he-could-beat-a-group-of-hedge-funds-over-10-years&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38906586&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /条目>; &lt;/提要>;