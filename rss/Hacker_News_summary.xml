<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-29T13:58:23.462104Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;可移动树 CRDT 和 Loro 的实现&lt;/stitle>; &lt;id>;https://loro.dev/blog/movable-tree&lt;/id>; &lt;更新>;2024-07-29T12: 58:15.265696Z&lt;/updated>; &lt;link href=&quot;https://loro.dev/blog/movable-tree&quot;/>; &lt;作者>; &lt;name>;czx111331&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=czx111331&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://loro.dev/_next/static/media/movable-tree-cover.f2c64ff7 .png&quot;样式=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;本文讨论了实现可移动树 CRDT（用于管理分布式系统中的层次关系）的挑战，并提出了两种可移动树的创新算法。 Loro作为一款协作应用程序，集成了这些算法，可以实现实时协作和无缝历史版本检查，使其适合各种应用场景。 &lt;a href=&quot;https://hackernews.betacat.io/#movable-tree-crdts-and-loro-s-implementation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41099901&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：Tea-tasting，用于 A/B 测试统计分析的 Python 包&lt;/stitle>; &lt;id>;https://e10v.me/tea -tasting-analysis-of-experiments/&lt;/id>; &lt;更新>;2024-07-29T12:58:15.267484Z&lt;/更新>; &lt;link href=&quot;https://e10v.me/tea-tasting-analysis-of -experiments/&quot;/>; &lt;作者>; &lt;名称>;e10v_me&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=e10v_me&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://e10v.me/tea-tasting-analysis-of-experiments/tea-tasting.png&quot; style=&quot;宽度：220px；高度：136px；&quot; />;&lt;br />;Tea-tasting是一款统计分析工具，提供了多种分析实验的方法和途径，包括Student&#39;s t-test、Bootstrap、CUPED方差缩减等，并支持多种数据后端。它提供了方便的 API、优化的计算效率和详细的文档，使其成为分析实验和 A/B 测试的有用工具。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-tea-tasting-a-python-package-for-the-statistical-analysis-of-ab-tests&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41099028&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SVG 妥协三角&lt;/stitle>; &lt;id>;https://me.micahrl.com/ blog/svg-triangle-of-compromise/&lt;/id>; &lt;更新>;2024-07-29T03:58:15.267985Z&lt;/更新>; &lt;link href=&quot;https://me.micahrl.com/blog/svg- triangle-of-compromise/&quot;/>; &lt;author>; &lt;name>;mrled&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mrled&lt;/uri>; &lt;/author>; &lt;content type= &quot;html&quot;>;&lt;img src=&quot;https://me.micahrl.com/images/profile.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文讨论了使用 SVG 的优点和局限性，包括缓存、样式和悬停效果。它还探索了引用和设计 SVG 样式的替代方法，例如使用 iframe、对象标签和内联嵌入。 &lt;a href=&quot;https://hackernews.betacat.io/#svg-triangle-of-compromise&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41070709&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;ps aux 用 bash 编写，无需分叉&lt;/stitle>; &lt;id>;https://github.com/izabera/ps&lt;/id>; &lt;updated>;2024-07-29T01:58:15.269341 Z&lt;/updated>; &lt;link href=&quot;https://github.com/izabera/ps&quot;/>; &lt;作者>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/9faf6f5ef12d7300bb112b0316e1f33f1298572fd204baa68e8d03e9bcb69173/izabera/ps&quot; style=&quot;width: 220px; height: 110px ;” />;&lt;br />;如果您通过 ssh 连接到一台机器，您正处于可信赖的 bash shell 中，但不幸的是您无法生成任何新进程，因为实际上所有其他 pid 都已被占用。你做什么工作？如果这就是您所面临的问题，那么这可能就是适合您的工具！现在您可以假装您可以使用可用的 ps aux。 &lt;a href=&quot;https://hackernews.betacat.io/#ps-aux-writing-in-bash-without-forking&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41097241&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;tolower() 与 AVX-512&lt;/stitle>; &lt;id>;https://dotat.at/@/2024-07-28-tolower-avx512.html &lt;/id>; &lt;更新>;2024-07-28T20:58:15.269786Z&lt;/更新>; &lt;link href=&quot;https://dotat.at/@/2024-07-28-tolower-avx512.html&quot;/>; &lt;author>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户探索使用AVX-512-BW 指令用于快速字符串处理，特别是短字符串，并编写了一个可以一次处理 64 个字节的 tolower() 函数。用户对多个功能进行了基准测试，发现 AVX-512-BW 实现始终接近最快，性能平稳且没有性能低谷。 &lt;a href=&quot;https://hackernews.betacat.io/#tolower-with-avx-512&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41095790&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;哥伦比亚的未遂事件：为什么我们应该总是期待太空中的意外&lt;/stitle>; &lt;id>;https://www.theregister.com/2024/07/26/space_shuttle_columbia_near_miss/&lt;/ id>; &lt;更新>;2024-07-29T05:58:15.270225Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2024/07/26/space_shuttle_columbia_near_miss/&quot;/>; &lt;作者>; &lt;名称>;LorenDB&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia .co.uk/2024/07/25/sts_93.jpg?x=648&amp;y=511&amp;infer_y=1&quot; style=&quot;宽度：220px 高度：174px；&quot; />;&lt;br />;哥伦比亚号航天飞机于 1999 年发射了钱德拉 X 射线天文台，但由于一些缺陷，包括松动的销钉和磨损的电线，几乎以灾难告终。尽管存在这些问题，任务还是成功了，天文台也部署了，但这一事件凸显了为航天器复杂故障做好准备的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#columbia-s-near-miss-why-we-should-always-expect-the-unexpected-in-space&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41077753&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 LED 灯和半导体纳米晶体分解 PFAS 的低成本方法&lt;/stitle>; &lt;id>;https:// /onlinelibrary.wiley.com/doi/10.1002/anie.202408687&lt;/id>; &lt;更新>;2024-07-29T09:58:15.271029Z&lt;/更新>; &lt;link href=&quot;https://onlinelibrary.wiley.com/ doi/10.1002/anie.202408687&quot;/>; &lt;作者>; &lt;名称>;Jimmc414&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Jimmc414&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://onlinelibrary.wiley.com/pb-assets/hub-assets/pericles/mobilehublogo-1690978876347.png&quot; style=&quot;宽度：220px；高度：107px；&quot; />;&lt;br />;研究人员开发了一种在环境条件下使用可见 LED 光和半导体纳米晶体分解全氟辛烷磺酸 (PFOS) 和 Nafion 的方法。该方法实现了 PFOS 100% 脱氟和 Nafion 81% 脱氟，展示了高效的光催化性能，为可持续的氟回收社会铺平了道路。 &lt;a href=&quot;https://hackernews.betacat.io/#low-cost-method-to-decompose-pfas-using-led-light-and-semiconductor-nanocrystals&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41062885&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：我构建了一个开源工具来减少 on-call 的麻烦&lt;/stitle>; &lt;id>;https ://github.com/opslane/opslane&lt;/id>; &lt;更新>;2024-07-28T16:58:15.271454Z&lt;/更新>; &lt;link href=&quot;https://github.com/opslane/opslane&quot;/>; &lt;作者>; &lt;名称>;aray07&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=aray07&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://raw.githubusercontent.com/opslane/opslane/main/assets/opslane-arch.png&quot; style=&quot;宽度：220px；高度：133px；&quot; />;&lt;br />;Opslane 使用 LLM 将警报分类为可操作警报或噪音警报，并提供用于处理 Slack 通道中警报的上下文信息。它还提供分析和报告数据，以帮助团队管理和消除噪音警报，并采用支持多种集成的模块化架构。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-an-open-source-tool-to-make-on-call-suck-less&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41086620&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;雕刻超级任天堂视频系统&lt;/stitle>; &lt;id>;https://fabiensanglad.net/ snes_video/index.html&lt;/id>; &lt;更新>;2024-07-29T05:58:15.271901Z&lt;/更新>; &lt;link href=&quot;https://fabiensanglard.net/snes_video/index.html&quot;/>; &lt;作者>; &lt;name>;guiambros&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=guiambros&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /fabiensanglard.net/snes_video/tv.svg&quot; style=&quot;宽度：220px 高度：134px；&quot; />;&lt;br />;作者通过研究1989年现有的技术，包括电视机和CRT，对超级任天堂娱乐系统（SNES）的视频系统进行了探索，设计了满足游戏机要求的视频系统。作者讨论了任天堂工程师做出的设计选择，包括选择每帧 262 行、每行 256 个可见点以及... &lt;a href=&quot;https://hackernews.betacat.io/#雕刻超级任天堂视频系统&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41098141&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何同时进行多线程在幕后工作&lt;/stitle>; &lt;id>;https://blog.codingconfessions.com/p/simultaneous-multithreading&lt;/id>; &lt;updated>;2024-07-28T15:58:15.272351Z&lt;/updated>; &lt;link href =&quot;https://blog.codingconfessions.com/p/simultaneous-multithreading&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.unsplash.com/photo-1465447142348-e9952c393450?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3wzMDAzMzh8MHwxfHNlYXJjaHw1fHxmb3JrZW QlMjByb2FkfGVufDB8fHx8MTcyMTgxMDM4N3ww&amp;ixlib=rb- 4.0.3&amp;q=80&amp;w=1080&quot; 样式=&quot;宽度:220px; height: 165px;&quot; />;&lt;br />;同步多线程（SMT）是一种允许处理器同时处理来自两个不同线程的指令的技术，提高了 CPU 利用率和资源使用率，但它也有一些权衡，例如由于共享资源的竞争和潜在的安全风险，SMT 的实现涉及在... &lt;a href=&quot;https://hackernews.betacat.io/#how-simultaneous-multithreading 之间复制某些部分并共享或划分其他部分。 -works-under-the-hood&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41093916&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;更高种类的有界多态性OCaml (2021)&lt;/stitle>; &lt;id>;https://okmij.org/ftp/ML/higher-kind-poly.html&lt;/id>; &lt;更新>;2024-07-28T21:58:15.272788Z&lt;/更新>; &lt;link href=&quot;https://okmij.org/ftp/ML/higher-kind-poly.html&quot;/>; &lt;作者>; &lt;name>;tinyspacewizard&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=tinyspacewizard&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;高级多态性，它对类型和类型构造函数进行抽象，在 OCaml 中不直接支持，但可以通过各种方式实现解决方法，例如使用函子、初始代数或存在类型来抽象类型构造函数。这些解决方法可用于实现更高种类的多态函数，例如折叠和求和，可应用于... &lt;a href=&quot;https://hackernews.betacat.io/#higher-kinded-bounded-polymorphism -in-ocaml-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41096187&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DNS LOC 的奇异而奇妙的世界记录&lt;/stitle>; &lt;id>;https://blog.cloudflare.com/the-weird-and-wonderful-world-of-dns-loc-records&lt;/id>; &lt;更新>;2024-07-29T11:58： 15.273206Z&lt;/更新>; &lt;link href=&quot;https://blog.cloudflare.com/the-weird-and-wonderful-world-of-dns-loc-records&quot;/>; &lt;作者>; &lt;名称>;avipars&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=avipars&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.cloudflare.com /content/images/480px-Trinity_Site_Obelisk_National_Historic_Landmark.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;CloudFlare 的 RRDNS 权威 DNS 服务器缺少用于指定物理位置的 LOC 记录的解析器，直到开发人员编写了解析器并修复了该问题。 LOC记录格式在RFC 1876中进行了描述，具有二进制格式，该格式被解析并转换为固定大小的二进制格式，其值的范围从1cm到大于木星的直径。 &lt;a href=&quot;https://hackernews.betacat.io/#the-weird-and-wonderful-world-of-dns-loc-records&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41099567&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LeanDojo：使用法学硕士进行精益定理证明&lt;/stitle>; &lt;id>;https://leandojo.org/&lt;/id>; &lt;更新>;2024 -07-28T22:58:15.273634Z&lt;/updated>; &lt;link href=&quot;https://leandojo.org/&quot;/>; &lt;作者>; &lt;name>;aseg&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=aseg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://leandojo.org/images/LeanDojo.jpg&quot; style=&quot;width: 220px;高度：115px；” />;&lt;br />;LeanDojo 从 GitHub 存储库中提取数据，包括文件依赖项、AST、证明状态和前提，为前提选择提供有价值的信息。它使用具有挑战性的数据分割来防止高估，要求模型泛化到训练期间未见过的新前提。 &lt;a href=&quot;https://hackernews.betacat.io/#leandojo-theorem-proving-in-lean-using-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41096486&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SDcard 磨损均衡和转换层 (2014)&lt;/stitle>; &lt;id>;https://msreekan.com/2014/01/15/sdcard/&lt;/id >; &lt;更新>;2024-07-28T19:58:15.274061Z&lt;/更新>; &lt;link href=&quot;https://msreekan.com/2014/01/15/sdcard/&quot;/>; &lt;作者>; &lt;名称>;goodburb&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=goodburb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://msreekan.com/ wp-content/uploads/2014/01/sdcard.png?w=650&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;SD 卡使用闪存，通过转换层抽象复杂性，将虚拟地址映射到物理地址，并管理磨损均衡和垃圾收集。该卡的固件针对 SPI 和 SD 总线模式实现了不同的软件堆栈，并通过启动代码检查引脚 1 来识别接口并跳转到相应的软件堆栈。 &lt;a href=&quot;https://hackernews.betacat.io/#sdcard-wear-leveling-and-translation-layers-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41095429&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;行星毁灭技术：ChronoCam (2013)&lt;/stitle>; &lt;id>;https://www.forrestthewoods.com/blog/tech_of_planetary_annihilation_chrono_cam/&lt;/id>; &lt;更新>;2024-07-29T01：58：15.274476Z &lt;/更新>; &lt;link href=&quot;https://www.forrestthewoods.com/blog/tech_of_planetary_annihilation_chrono_cam/&quot;/>; &lt;作者>; &lt;名称>;resatori &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=resatori&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.forrestthewoods.com/blog /tech_of_planetary_annihilation_chrono_cam/assets/img/header.jpeg&quot; style=&quot;宽度：220px 高度：165px；&quot; />;&lt;br />;Planetary Annihilation 是一款实时策略游戏，它使用客户端-服务器架构和新颖的曲线系统来启用 ChronoCam 等功能，让玩家能够及时跳回并从任意点重玩游戏。曲线系统将游戏对象数据存储为时间线，从而实现高效的数据传输和压缩，并允许可变播放速率、搜索等功能...... &lt;a href=&quot;https://hackernews.betacat.io/#the- tech-of-planetary-annihilation-chronocam-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41097228&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pallene：A Lua 的静态编译配套语言&lt;/stitle>; &lt;id>;https://github.com/palllene-lang/palllene/blob/master/doc/manual.md&lt;/id>; &lt;updated>;2024-07-29T04:58 :15.274900Z&lt;/updated>; &lt;link href=&quot;https://github.com/pallene-lang/palllene/blob/master/doc/manual.md&quot;/>; &lt;作者>; &lt;名称>;wsc981&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=wsc981&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/21c464735b584cc022081b60457e06cd882119202dbd1d123ab867b451779d0e/ pallene-lang/pallene&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Pallene 是 Lua 的静态类型配套语言，允许类型注释并与 Lua 兼容，具有类型推断、数组、表、函数和记录等功能。该语言具有严格的语法，旨在与 Lua 解释器的特定发布版本一起使用，具有自动强制、隐式转换和 Pallene 等功能。 io/#palllene-a-statically-compiled-companion-language-for-lua&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =41097842&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;Show HN：用 Three.js 制作的足球/足球传球可视化工具&lt;/stitle>; &lt;id>;https://statsbomb-3d-viz.vercel.app/&lt;/id>; &lt;更新>;2024-07- 28T20：58：15.275324Z &lt;/更新>; &lt;link href =“https://statsbomb-3d-viz.vercel.app/”/>; &lt;作者>; &lt;名称>;卡洛斯-梅内泽斯&lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=carlos-menezes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;将原始 URL 从其存储库粘贴到 StatsBomb 事件数据文件。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-a-football-soccer-pass-visualizer-made-with- Three-js&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=41095839&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何调试电池设计&lt;/stitle>; &lt;id>;https://github.com/ionworks/how-to-调试你的电池&lt;/id>; &lt;更新>;2024-07-28T13:58:15.275760Z&lt;/更新>; &lt;link href=&quot;https://github.com/ionworks/how-to-debug-your-battery &quot;/>; &lt;author>; &lt;name>;tomtranter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tomtranter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://raw.githubusercontent.com/ionworks/how-to-debug-your-battery/main/figures/spider.png”样式=“宽度：220px；高度：208px；” />;&lt;br />;作为一家电动汽车公司的工程师，我的任务是设计一款能够提供 400 英里续航里程而不会过热的电池，同时还要考虑安全性、使用寿命、重量和成本等因素。为了调试问题，我可以使用 PyBaMM 等仿真工具对不同电池设计的行为进行建模，并优化阳极成分和颗粒尺寸等参数，以... &lt;a href=&quot;https://hackernews.betacat.io/#how -to-debug-your-battery-design&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41090658&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;茫然和困惑： ReCAPTCHAv 的大规模真实用户研究 (2023)&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2311.10911&lt;/id>; &lt;updated>;2024-07-28T21:58:15.276191Z&lt; /updated>; &lt;link href=&quot;https://arxiv.org/abs/2311.10911&quot;/>; &lt;作者>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/icons/smileybones-pixel.png&quot; style= “宽度：220 像素；高度：234 像素；” />;&lt;br />;一项对 3,600 名用户进行的为期 13 个月的研究发现，用户尝试次数越多，解决复选框验证码的能力就越强，但图像挑战被认为很烦人，而且没有任何安全优势。该研究的结论是，由于 reCAPTCHAv2 成本高昂且缺乏安全性，因此应被弃用。 &lt;a href=&quot;https://hackernews.betacat.io/#dazed-and-confused-a-large-scale-real-world-user-study-of-recaptchav-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41056691&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;重新审视非理性饥饿法官效应（2023）&lt;/stitle>; &lt;id>;https://www.cambridge .org/core/journals/judgment-and-decision-making/article/irrational-hungry-judge-effect-revisited-simulations-reveal-the-the-magnitude-of-the-effect-making/61CE825D4DC137675BB9CAD04571AE58&lt;/ id>; &lt;更新>;2024-07-28T13:58:15.276609Z&lt;/更新>; &lt;link href=&quot;https://www.cambridge.org/core/journals/judgment-and-decision-making/article/irrational- eager-judge-effect-revisited-simulations-reveal-that-the-the-magnitude-of-the-effect-is-overestimated/61CE825D4DC137675BB9CAD04571AE58&quot;/>; &lt;author>; &lt;name>;fzliu&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=fzliu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.cambridge.org/covers/JDM_0_0_0/judgment-and-决策.jpg&quot; style=&quot;width: 220px; height: 311px;&quot; />;&lt;br />;文章重新审视了“非理性饥饿法官效应”，即法官在比赛结束时的决定变得不那么有利，并发现合理的时间管理解释可以解释大部分分析表明，最初的发现可能被高估了，需要进一步的研究来理清序列顺序、心理……的影响。&lt;a href=&quot;https://hackernews.betacat.io/#the- irrational-hungry-judge-effect-revisited-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41091803&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN: CeLLama – 使用本地 LLM 进行单细胞注释&lt;/stitle>; &lt;id>;https://github.com/CelVoxes/ceLLama&lt;/id>; &lt;updated>;2024-07-28T13:58:15.277026Z&lt;/updated>; &lt;link href =&quot;https://github.com/CelVoxes/ceLLama&quot;/>; &lt;作者>; &lt;名称>;celltalk&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=celltalk&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/CelVoxes/ceLLama/main/ceLLama_files/cellama.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;该脚本使用 Seurat 和 ceLLama 库来分析 10X PBMC 数据集，执行质量控制、标准化和聚类，然后使用 ceLLama 对聚类进行注释。该脚本还生成报告并可视化使用 DimPlot 和 theme_void() 的结果 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-cellama-single-cell-annotation-with-local-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41092862&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我制作了一个在答案更改时接收警报的工具&lt;/stitle>; &lt;id>;https: //www.alertfor.com/&lt;/id>; &lt;更新>;2024-07-28T13:58:15.277444Z&lt;/更新>; &lt;link href=&quot;https://www.alertfor.com/&quot;/>; &lt;作者>; &lt;name>;saran945&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=saran945&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /www.thee.ai/static/images/web/rocket-laptop.svg&quot; style=&quot;width: 220px; height: 260px;&quot; />;&lt;br />;Alertfor 使用 AQTA 跟踪用户问题的答案，提供不断变化的信息的持续更新。该过程可以提供准确、及时的答案，无需手动检查。&lt;a href=&quot;https ://hackernews.betacat.io/#show-hn-i-made-a-tool-to-receive-alerts-when-answers-change&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41093161&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;StreamPot：将 FFmpeg 作为具有 Fluent-FFmpeg 兼容性、队列和 S3 兼容性的 API 运行&lt;/stitle>; &lt;id>;https://github.com/ StreamPot/StreamPot&lt;/id>; &lt;更新>;2024-07-28T13:58:15.277864Z&lt;/更新>; &lt;link href=&quot;https://github.com/StreamPot/StreamPot&quot;/>; &lt;作者>; &lt;name>;thunderbong &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets .com/ab5d70e42e922d9a916ed05db5796cc1aaaa4ae0dfe6cb8e861af878ae9c070d/StreamPot/StreamPot&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;StreamPot 是一个为应用程序中转换媒体提供脚手架的项目，允许执行修剪、剥离音频和转码等任务。它可以通过导入客户端并设置作业来使用，可选择自托管或使用托管版本。 -and-s3&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41091163&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：ThinkPost – 拆分面板笔记面向开发者的集思广益应用程序&lt;/stitle>; &lt;id>;https://thinkpost.io&lt;/id>; &lt;updated>;2024-07-28T16:58:15.278286Z&lt;/updated>; &lt;link href=&quot;https://thinkpost .io&quot;/>; &lt;作者>; &lt;名称>;zameermfm &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zameermfm&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://thinkpost.io/images/codebase/banner-cover-1.png&quot; style=&quot;width: 220px; height: 116px;&quot; />;&lt;br />;ThinkPost 是一个为开发人员提供的数字工具集，提供交互式拆分面板图表、可拖动的基于块的笔记以及头脑风暴功能，以提高生产力。它允许用户组织和管理想法、代码，以及轻松跨多个面板进行数学计算，使其成为创意探索和协作的多功能工具。 -brainstorming-app-for-devs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41094159&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;英特尔 N100 Radxa X4 第一想法&lt;/stitle>; &lt;id>;https://bret.dk/intel-n100-radxa-x4-first-thoughts/&lt;/id>; &lt;更新>;2024-07-28T13:58:15.278705Z&lt;/更新>; &lt;link href=&quot;https://bret.dk/intel-n100-radxa-x4-first-thoughts/&quot;/>; &lt;作者>; &lt;名称>;geerlingguy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=geerlingguy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://bret.dk/wp-content/uploads/2024/07/image-5.png&quot;样式=“宽度：220px； height: 159px;&quot; />;&lt;br />;采用 Intel N100 处理器的 Radxa x4 单板计算机以其易用性、灵活性和性能（包括运行 Windows 11 和 Debian 的能力）给笔者留下了深刻的印象。 ，作者指出了一些需要改进的地方，例如 WiFi 驱动程序问题、功耗和冷却系统，并期待在未来几周内进行进一步的测试和基准测试&lt;a href=&quot;https://hackernews.betacat.io。 /#intel-n100-radxa-x4-first-thoughts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41089911&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>; Ridgeway：英国最古老的道路，已有 5000 年历史&lt;/stitle>; &lt;id>;https://www.bbc.com/travel/article/20240723-the-ridgway-hike-the-5000-year-old- Pathway-thats-britains-oldest-road&lt;/id>; &lt;更新>;2024-07-28T13:58:15.279581Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/travel/article/20240723 -the-ridgway-hike-the-5000-year-old-pathway-thats-britains-oldest-road&quot;/>; &lt;author>; &lt;name>;andsoitis&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ichef.bbci.co.uk/images/ic/480xn/p0jd18gk.jpg.webp “样式=”宽度：220px;高度：124px;&quot; />;&lt;br />;The Ridgeway 是一条 87 英里长的史前小道，是一条宁静而历史悠久的小路，横跨英格兰南部的白垩山，为您提供一条穿越古老风景的宁静祥和的步道。已经使用了至少 5000 年，点缀着新石器时代的墓葬、铁器时代的山堡和其他历史地标，使其成为一次独特而迷人的旅程。 -ridgeway-the-5k-year-old-pathway-that-s-britain-s-oldest-road&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=41057088&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;