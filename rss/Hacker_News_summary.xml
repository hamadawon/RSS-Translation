<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-11-05T19:59:37.846973Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;网站托管在 ESP32（3 美元芯片）&lt;/stitle>; &lt;id>;https://esp.khalsalabs.com&lt;/id>; &lt;updated>;2023-11-05T18:59 :13.600717Z&lt;/updated>; &lt;link href=&quot;https://esp.khalsalabs.com&quot;/>; &lt;作者>; &lt;name>;harry247&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=harry247&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;此网页托管在 ESP32 上。此网站自 2023 年 11 月 1 日起生效。 &lt;a href=&quot;https://hackernews.betacat.io/ #website-is-hosted-on-esp32-3-chip&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38154045&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么《城市：天际线 2》表现不佳&lt;/stitle>; &lt;id>;https://blog.paavo.me/cities-skylines-2-performance/&lt;/id>; &lt;更新>;2023-11-05T17:59:13.603743Z&lt; /updated>; &lt;link href=&quot;https://blog.paavo.me/cities-skylines-2-performance/&quot;/>; &lt;作者>; &lt;name>;paavohtl&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=paavohtl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.paavo.me/cities-skylines-2-performance/cs2_character.jpeg “样式=”宽度：220px; height: 228px;&quot; />;&lt;br />;《城市：天际线 2》的发布反响褒贬不一。虽然游戏玩法和模拟似乎朝着正确的方向迈出了一步，但在平衡性、设计选择和错误方面存在重大问题。游戏的性能也达不到标准，系统要求很高，并且受 GPU 限制性能。&lt;a href=&quot;https://hackernews.betacat.io/#why-cities-skylines-2-performs-poorly&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38153573&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建高性能 JSON 解析器&lt;/stitle>; &lt;id>;https://dave .cheney.net/paste/gophercon-sg-2023.html&lt;/id>; &lt;更新>;2023-11-05T13:59:13.604561Z&lt;/更新>; &lt;link href=&quot;https://dave.cheney.net/ Paste/gophercon-sg-2023.html&quot;/>; &lt;作者>; &lt;名称>;davecheney&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=davecheney&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://dave.cheney.net/paste/diag-qrcode-md5-0418cdece501fe14783856b5d8a300dd.svg”样式=“宽度：220px; height: 220px;&quot; />;&lt;br />;本演讲讨论了用于构建高性能 JSON 解析器的高效 Go 包的设计。与标准 json.Decoder API 相比，该包提供了更高的吞吐量并减少了分配。 &lt;a href =&quot;https://hackernews.betacat.io/#building-a-high-performance-json-parser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=38150833&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;我喜欢 gentoo 的软件包弃用流程&lt;/stitle>; &lt;id>;https://artemis.sh/2023/11/05/gentoo-mask-process.html&lt;/id>; &lt;updated >;2023-11-05T14:59:13.605331Z&lt;/updated>; &lt;link href=&quot;https://artemis.sh/2023/11/05/gentoo-mask-process.html&quot;/>; &lt;作者>; &lt;名称>; edward&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=edward&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Gentoo 从主 gentoo 软件包存储库中删除软件包的过程旨在让用户意识到这一点并给他们时间做出反应。它会阻止新用户安装该软件包，并用屏蔽的软件包向现有用户发出警报。用户可以选择删除该软件包、将其维护在自己的存储库中或迁移到替代方案。 &lt;a href=&quot;https://hackernews.betacat.io/#i-like-gentoo-s-package-deprecation-process&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38151286&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;对于承受压力的开发人员来说，最好在生产中发现错误&lt;/stitle>; &lt;id>;https://www.amazingcto.com/tests-are- bad-for-developers/&lt;/id>; &lt;更新>;2023-11-05T16:59:13.606237Z&lt;/更新>; &lt;link href=&quot;https://www.amazingcto.com/tests-are-bad-for-开发者/&quot;/>; &lt;作者>; &lt;名称>;KingOfCoders&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=KingOfCoders&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://www.amazingcto.com/images/engineertesting.webp&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;测试是开发人员责任和提供安全性的重要组成部分。它们有助于发现错误并为开发人员提供编码参考框架。然而，由于业务压力和担心因错过最后期限而受到指责，开发人员经常避免编写测试。 &lt;a href=&quot;https://hackernews.betacat.io/#for-developers-under-stress-its-better-for-bugs-to-be-found-in-product&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38111986&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;纯 CSS 中的冒泡排序&lt;/stitle>; &lt;id>;https://dev.to/grahamthedev/bubble -sortin-pure-css-no-js-3bb1&lt;/id>; &lt;更新>;2023-11-05T09:59:13.606976Z&lt;/更新>; &lt;link href=&quot;https://dev.to/grahamthedev/bubble- sortin-pure-css-no-js-3bb1&quot;/>; &lt;作者>; &lt;名称>;andai&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=andai&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--QjNk8WUc--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https ://dev-to-uploads.s3.amazonaws.com/uploads/articles/glcmpr0db2775igcub39.jpg&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;想象一下，通过可视化在纯 CSS 中创建一个功能正常的冒泡排序算法。您可以更改这些值，它会为您排序。 &lt;a href=&quot;https://hackernews.betacat.io/#bubble-sort-in-pure-css&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38145625&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;英国人让亚马逊、Meta 停止使用第三方数据来削弱竞争对手&lt;/stitle>; &lt;id>;https://www.theregister.com/2023/11/04/amazon_meta_cma/ &lt;/id>; &lt;更新>;2023-11-05T17:59:13.607837Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2023/11/04/amazon_meta_cma/&quot;/>; &lt;作者>; &lt;name>;LinuxBender&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=LinuxBender&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /regmedia.co.uk/2023/09/20/amazon_shutterstock.jpg&quot; style=&quot;宽度：220 像素；高度：147 像素；&quot;据英国竞争与市场管理局称，亚马逊和 Meta 已同意不会使用从其市场收集的数据来为自己谋取不公平的利益。 CMA 指控两家公司收集有关卖家的信息并利用这些信息来获得商业优势。 &lt;a href=&quot;https://hackernews.betacat.io/#brits-make-amazon-meta-stop-using-third-party-data-to-undercut-rivals&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38153091&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;释放经过实验室改造的蚊子后，登革热发病率大幅下降&lt;/stitle>; &lt;id>;https://www.dw。 com/en/dengue-rates-plummeted-in-colombia-after-lab-infected-mosquito-release/a-67268943&lt;/id>; &lt;更新>;2023-11-05T16:59:13.608626Z&lt;/更新>; &lt;链接href=&quot;https://www.dw.com/en/dengue-rates-plummeted-in-colombia-after-lab-infected-mosquito-release/a-67268943&quot;/>; &lt;作者>; &lt;名称>;cxrlosfx&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cxrlosfx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.dw.com /image/66697248_6.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;感染沃尔巴克氏菌的蚊子可能与哥伦比亚阿布拉山谷三个城市的登革热感染率下降 97% 有关。与实验开始前十年相比，将受感染的蚊子引入当地蚊子种群中，每个城市的登革热发病率“显着减少”高达 97%。 &lt;a href=&quot;https://hackernews.betacat.io/#dengue-rates-plunged-after-release-of-lab-altered-mosquitoes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38152534&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Hexabyte – 一个现代、强大且可扩展的命令行十六进制编辑器&lt;/stitle>; &lt;id>;https://github.com/thetacom/hexabyte&lt; /id>; &lt;更新>;2023-11-05T15:59:13.609426Z&lt;/更新>; &lt;link href=&quot;https://github.com/thetacom/hexabyte&quot;/>; &lt;作者>; &lt;名称>;willm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=willm&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/thetacom /hexabyte/main/imgs/logo/hexabyte.png&quot; style=&quot;宽度：220px；高度：225px；&quot; />;&lt;br />;Hexabyte 是一个现代、强大且可扩展的命令行十六进制编辑器。它可以在三种不同的模式下运行：单文件模式、分屏模式和差异模式。 Hexabyte 的界面是高度可定制的，允许用户调整每种视图模式的列大小和计数。 &lt;a href=&quot;https://hackernews.betacat.io/#hexabyte-a-modern-robust-and-extensible-commandline-hex-editor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38111918&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;受信任的第三方是安全漏洞 (2005)&lt;/stitle>; &lt;id>;http://web.archive.org/web/20160309161628/http ://szabo.best.vwh.net/ttps.html&lt;/id>; &lt;更新>;2023-11-05T13:59:13.610942Z&lt;/更新>; &lt;link href=&quot;http://web.archive.org/ web/20160309161628/http://szabo.best.vwh.net/ttps.html&quot;/>; &lt;author>; &lt;name>;greyface-&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =greyface-&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://web.archive.org/web/20160323125018im_/http://szabo.best.vwh.net/奇迹.jpg&quot; style=&quot;宽度：220px；高度：206px；&quot; />;&lt;br />;受信任的第三方是安全漏洞。本文讨论了与安全协议中依赖可信第三方相关的风险和成本，并提出了一种最小化这些依赖性的方法。 &lt;a href=&quot;https://hackernews.betacat.io/#trusted-third-parties-are-security-holes-2005&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38125352&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;莎士比亚的第一本作品集&lt;/stitle>; &lt;id>;https://www.firstthings.com/web-exclusives/2023/10/shakespeares-first-folio-turns -400&lt;/id>; &lt;更新>;2023-11-05T14:59:13.612475Z&lt;/更新>; &lt;link href=&quot;https://www.firstthings.com/web-exclusives/2023/10/shakespeares-first- folio-turns-400&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://www.firstthings.com/uploads/article_653181e2c1835.jpg&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;1623 年出版的《第一对开本》对莎士比亚作为剧作家的地位发挥了至关重要的作用。它保留了他的戏剧，并与早期版本有所不同，展示了修订和纠正错误。 《对开本》不仅出版了戏剧，还旨在保存莎士比亚的记忆，让读者参与到他鲜活的遗产中。 &lt;a href=&quot;https://hackernews.betacat.io/#shakespeares-first-folio&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38115655&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;使用 Git log -L 查看方法的历史记录&lt;/stitle>; &lt;id>;https://calebhearth.com/git-method-history&lt;/id>; &lt;updated>;2023-11-05T17 ：59：13.613290Z &lt;/更新>; &lt;link href =“https://calebhearth.com/git-method-history”/>; &lt;作者>; &lt;名称>; caleb_thompson &lt;/名称>; &lt;uri>; https://news. ycombinator.com/user?id=caleb_thompson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://calebhearth.com/assets/caleb-hex-b6a3cbf2cd17b38b75a87ac7ec0530dac57979eeacc7016c02883973d981fce6.png&quot; style= “宽度：220 像素；高度：191 像素；” />;&lt;br />;当使用 &lt;funcname>; 变体传递 -L 时，Git 可以跟踪特定方法的演变。即使长度发生变化，它也可以识别方法的边界，并打印出完整的方法以及日志中每次提交的差异。 &lt;a href=&quot;https://hackernews.betacat.io/#see-the-history-of-a-method-with-git-log-l&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38153309&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新的 F# 编译器功能：基于图形的类型检查&lt;/stitle>; &lt;id>;https://devblogs.microsoft.com/ dotnet/a-new-fsharp-compiler-feature-graphbased-typechecking/&lt;/id>; &lt;更新>;2023-11-05T10:59:13.614833Z&lt;/更新>; &lt;link href=&quot;https://devblogs.microsoft. com/dotnet/a-new-fsharp-compiler-feature-graphbased-typechecking/&quot;/>; &lt;author>; &lt;name>;soheilpro&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=soheilpro &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2023/10/trie1.png “样式=”宽度：220px;高度：317px;“ />;&lt;br />;新的 F# 编译器功能 --test:GraphBasedChecking 允许对文件进行并行类型检查，无论它们是否由签名文件支持。它通过处理无类型抽象语法树（AST）构建文件之间的依赖关系图并检测文件之间的链接。 &lt;a href=&quot;https://hackernews.betacat.io/#a-new-f-compiler-feature-graph-based-type-checking&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38122679&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;StackStorm – IFTTT for Ops&lt;/stitle>; &lt;id>;https://stackstorm.com/&lt;/id>; &lt;更新>;2023-11- 05T09:59:13.616394Z&lt;/updated>; &lt;link href=&quot;https://stackstorm.com/&quot;/>; &lt;作者>; &lt;name>;alexzeitler&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=alexzeitler&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://stackstorm.com/wp/wp-content/themes/stackstorm/images/stackstorm-github。 png&quot; 样式=&quot;宽度：220 像素；高度：152 像素；&quot; />;&lt;br />;StackStorm 连接您已有的资源，可用于自动化和简化您业务的几乎任何部分。它被世界各地的许多人使用，并对安全问题提供一致、快速的响应。 &lt;a href=&quot;https://hackernews.betacat.io/#stackstorm-ifttt-for-ops&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38149595&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;数百人抗议苏黎世高租金&lt;/stitle>; &lt;id>;https://www.swissinfo.ch/eng/business/hundreds-demonstrate-against-high-rents-in-zurich /48953360&lt;/id>; &lt;更新>;2023-11-05T19:07:13.617169Z&lt;/更新>; &lt;link href=&quot;https://www.swissinfo.ch/eng/business/hundreds-demonstrate-against-high- rents-in-zurich/48953360&quot;/>; &lt;作者>; &lt;名称>;belltaco&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=belltaco&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.swissinfo.ch/resource/image/48953366/landscape_ratio3x2/280/187/a72a03084e6d614383aa1cfef2c10b21/44F4DE76591F384B9E16E13C93EEF228/589724 310_highres.jpg&quot; style=&quot;宽度：220px；高度：147px ;” />;&lt;br />;数百人举行示威抗议苏黎世房地产市场状况。示威者和平游行，谴责住房短缺和高租金。 &lt;a href=&quot;https://hackernews.betacat.io/#hundreds-demonstrate-against-high-rents-in-zurich&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38154431&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;柯尔莫哥洛夫神经网络可以表示不连续函数&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2311.00049&lt;/id>; &lt;updated>;2023-11 -05T05:59:13.617981Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs/2311.00049&quot;/>; &lt;author>; &lt;name>;ubj&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=ubj&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/ arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;柯尔莫哥洛夫二隐层神经网络模型可以表示连续、不连续有界和无界多元函数。 arXivLabs 是一个框架，允许合作者直接在我们的网站上开发和共享新的 arXiv 功能。 &lt;a href=&quot;https://hackernews.betacat.io/#kolmogorov-neural-networks-can-represent-discontinuous-functions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38148470&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;NewPipe – 适用于 Android 的轻量级 YouTube 体验&lt;/stitle>; &lt;id>;https://newpipe.net/&lt;/id>; &lt;更新>;2023-11-04T19： 59:13.619565Z&lt;/更新>; &lt;link href=&quot;https://newpipe.net/&quot;/>; &lt;作者>; &lt;名称>;vyrotek&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=vyrotek&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://newpipe.net/img/logo_app.svg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;NewPipe 是一款适用于 Android 的轻量级 YouTube 应用，可提供直观、功能丰富且保护隐私的体验，无广告和可疑权限。 &lt;a href=&quot;https://hackernews.betacat.io/#newpipe-lightweight-youtube-experience-for-android&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38144400&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;针对 ChatGPT 的电子邮件混淆几乎无效&lt;/stitle>; &lt;id>;https://bulkninja.notion.site/Email-Obfuscation-Rendered-almost-Inefficient-Against-ChatGPT -728fba1b948d42c6b8dfa73cb64984e4&lt;/id>; &lt;更新>;2023-11-05T11:59:13.620363Z&lt;/更新>; &lt;link href=&quot;https://bulkninja.notion.site/Email-Obfuscation-Rendered-almost-Inefficient-Against- ChatGPT-728fba1b948d42c6b8dfa73cb64984e4&quot;/>; &lt;作者>; &lt;name>;skeetmtp&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=skeetmtp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://www.notion.so/images/meta/default.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;一款新工具，可将您的日常工作应用程序融为一体。这是为您和您的团队提供的一体化工作空间&lt;a href=&quot;https://hackernews.betacat.io/#email-obfuscation-rendered-almost-inefficient-against-chatgpt&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38150096&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;迷幻药研究员平静而好奇地接近死亡&lt;/stitle>; &lt;id>;https://www. npr.org/2023/11/05/1210327976/psychedelic-drugs-psilocybin-roland-griffiths-depression-cancer-meditation&lt;/id>; &lt;更新>;2023-11-05T12:59:13.621166Z&lt;/更新>; &lt;链接href=&quot;https://www.npr.org/2023/11/05/1210327976/psychedelic-drugs-psilocybin-roland-griffiths-depression-cancer-meditation&quot;/>; &lt;作者>; &lt;名称>;ianai&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ianai&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/assets /img/2022/03/07/voss-rachelmartin031_sq-d1e71435df6fba5d0ca4ea30e6ca12fcf790c419.jpg?s=100&amp;c=85&amp;f=jpeg&quot; style=&quot;宽度：220px;身高：221px;&quot; />;&lt;br />;致幻剂研究员罗兰·格里菲斯 (Roland Griffiths) 冷静而好奇地接近自己的死亡，利用冥想和迷幻药物来度过他生命的最后几个月。他发现裸盖菇素（一种从蘑菇中提取的经典迷幻药物）具有惊人的效果。对癌症患者的影响，减少焦虑和抑郁，并提供接受感和安心感。&lt;a href=&quot;https://hackernews.betacat.io/#psychedelics-researcher-approached-his-death-with-calm-and-好奇心&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38150534&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;内存和存储方面的 PCIe 与 CXL&lt;/stitle>; &lt; id>;https://www.synopsys.com/designware-ip/technical-bulletin/cxl2-3-storage-memory-applications.html&lt;/id>; &lt;更新>;2023-11-05T07:59:13.621921Z&lt;/已更新>; &lt;link href=&quot;https://www.synopsys.com/designware-ip/technical-bulletin/cxl2-3-storage-memory-applications.html&quot;/>; &lt;作者>; &lt;名称>;teleforce &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;内存和存储传统上是不同的，内存提供对数据和数据的快速访问。存储提供长期保留。然而，新型持久内存正在模糊两者之间的界限。 PCIe 和 CXL 是两种用于内存和存储的接口技术。 PCIe 具有可扩展性和分层性，而 CXL 则提供低延迟和一致性。 CXL 支持内存池和共享以及可组合性，使其成为大型易失性和持久内存池的可行技术。 &lt;a href=&quot;https://hackernews.betacat.io/#pcie-vs-cxl-for-memory-and-storage&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38125885&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;实践中 C/C++ 宽松原子的提案修复&lt;/stitle>; &lt;id>;https://lukegeeson.com/blog/2023-10-17-A -Proposal-For-Relaxed-Atomics/&lt;/id>; &lt;更新>;2023-11-05T11:59:13.622731Z&lt;/更新>; &lt;link href=&quot;https://lukegeeson.com/blog/2023-10-17 -A-Proposal-For-Relaxed-Atomics/&quot;/>; &lt;author>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;本文讨论了 C/C++ 中宽松原子的语义以及当前编译器实现中发现的错误。它提出了一个名为“加载后分支”（BAL）的修复程序来解决这些错误并恢复推理宽松原子的能力。 &lt;a href=&quot;https://hackernews.betacat.io/#a-proposal-fix-for-cc-relaxed-atomics-in-practice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38124022&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Commodore/MOS KIM-1 (2004)&lt;/stitle>; &lt;id>;http://dunfield.classiccmp.org/kim1/index.htm &lt;/id>; &lt;更新>;2023-11-05T06:59:13.623498Z&lt;/更新>; &lt;link href=&quot;http://dunfield.classiccmp.org/kim1/index.htm&quot;/>; &lt;作者>; &lt;名称>; peter_d_sherman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=peter_d_sherman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://dunfield. classiccmp.org/kim1/l/kim1.jpg&quot; style=&quot;宽度：220px；高度：266px；&quot; />;&lt;br />;KIM-1 是 MOS Technology 于 1975 年设计的一款简单计算机，用于展示其新型 6502 处理器。它由一个 6502 处理器、两个 6530 多用途芯片以及附加内存和接口组成。 &lt;a href=&quot;https://hackernews.betacat.io/#commodore-mos-kim-1-2004&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38148892&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Fdupes：识别或删除重复文件&lt;/stitle>; &lt;id>;https://github.com/adrianlopezroche/fdupes&lt;/id>; &lt;更新>;2023-11-05T09:59 ：13.624271Z &lt;/更新>; &lt;link href=&quot;https://github.com/adrianlopezroche/fdupes&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/e244304f73c9d46a1852b4ad1ecb266389e7ac40467eab2e7887b2c1e7426319/adrianlopezroche/fdupes&quot; style=&quot;width: 220px; height : 110 像素;&quot; />;&lt;br />;FDUPES 是一个用于识别指定目录中重复文件的程序。 &lt;a href=&quot;https://hackernews.betacat.io/#fdupes-identify-or-delete-duplicate-files&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38113396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Hyphen – 一个优雅的自定义元素基类，具有良好的人体工程学原理&lt;/stitle>; &lt;id>;https://github.com/00000o1/-&lt;/id>; &lt;更新>;2023-11-05T08:59:13.625092Z&lt;/更新>; &lt;link href=&quot;https://github.com/00000o1/-&quot;/>; &lt;作者>; &lt;name>;keepamovin&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=keepamovin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/6c4e08c040facc25f2ec07def38c0e3a3c085f56a53d43bd274e472500bbb329/00000o1/- “样式=”宽度：220px;高度：110px;“ />;&lt;br />;Hyphen 是一个客户端 JavaScript 文件，可帮助 Web 开发人员轻松制作和管理网站的自定义部分，例如按钮或菜单，而无需处理复杂的代码。它通过为开发人员提供简化状态管理和模板集成的基类，简化了自定义 Web 组件的创建。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-hyphen-an-elegant-custom-element-base-class-with-good-ergonomics&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38149422&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;奥赛罗解决了吗？&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2310.19387&lt;/id >; &lt;更新>;2023-11-04T19:59:13.625822Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2310.19387&quot;/>; &lt;作者>; &lt;名称>;Tepix&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=Tepix&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse /0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;黑白棋游戏具有大量可能的游戏记录和局面，一直是计算解决的挑战。然而，最近已经实现了一个里程碑：经计算证明，当双方玩家完美下棋时，《奥赛罗》总是会导致平局。 &lt;a href=&quot;https://hackernews.betacat.io/#othello-is-solved&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38141366&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;