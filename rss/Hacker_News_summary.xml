<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-28T09:56:54.017985Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Google 让我毁了一个完美的网站 (2023)&lt;/stitle>; &lt;id>;https://theluddite.org/#!post/google-ads&lt;/id>; &lt;更新>;2024-04-27T23:55:43.361147Z&lt;/updated>; &lt;link href=&quot;https://theluddite.org/#!post/google-ads&quot;/>; &lt;作者>; &lt;name>;MrVandemar&lt;/name>; &lt; uri>;https://news.ycombinator.com/user?id=MrVandemar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://theluddite.org/img/logo. png&quot; 样式=&quot;宽度：220 像素；高度：221 像素；&quot; />;&lt;br />;一个反资本主义的科技博客。拥抱解放我们的技术。粉碎那些没有的。 &lt;a href=&quot;https://hackernews.betacat.io/#google-made-me-ruin-a-perfectly-good-website-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40184673&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google Quantum AI&lt;/stitle>; &lt;id>;https://quantumai.google/&lt;/id>; &lt;更新>;2024-04-28T04： 55:43.363647Z&lt;/updated>; &lt;link href=&quot;https://quantumai.google/&quot;/>; &lt;作者>; &lt;name>;segasaturn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=segasaturn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://quantumai.google/static/site-assets/images/marketing/home/slide-1.png&quot;样式=“宽度：220像素；高度：220像素；” />;&lt;br />;我们的使命是构建一流的量子计算纠错是创建真正有用的量子计算机的基本要求。它能够实现执行复杂计算所需的规模。对于其他不可能的问题。 &lt;a href=&quot;https://hackernews.betacat.io/#google-quantum-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40185883&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;请勿进入 - WebGL 游戏&lt;/stitle>; &lt;id>;http://www.playkeepout.com/&lt;/id>; &lt;更新>;2024-04-27T19:55:43.364156Z&lt;/更新>; &lt;link href=&quot;http://www.playkeepout.com/&quot;/>; &lt;作者>; &lt;name>;memalign&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=memalign&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www.playkeepout.com/og-image.jpg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;请勿入内！一场充满动感的冒险，可在浏览器中免费玩。探索地牢、对抗怪物并解锁史诗武器！ &lt;a href=&quot;https://hackernews.betacat.io/#keep-out-webgl-game&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40182868&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;如何改进 RISC-V 规范&lt;/stitle>; &lt;id>;https://alastairreid.github.io/riscv-spec-issues/&lt;/id>; &lt;updated>;2024-04 -28T01：55：43.364644Z &lt;/更新>; &lt;link href =“https://alastairreid.github.io/riscv-spec-issues/”/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://alastairreid.github.io/images/riscv-logo .png&quot;样式=&quot;宽度：220px；高度：172px；&quot; />;&lt;br />;作者分析了 RISC-V 规范，指出其分为多个部分，并建议集成其各种工件以保持连贯性。他们建议使用机器可读的架构信息格式来简化未来扩展的代码生成。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-improve-the-risc-v-specation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40185065&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;普林斯顿应用数学伴侣&lt;/stitle>; &lt;id>;https://nhigham.com/the-princeton-companion-to-applied-mathematics/&lt;/ id>; &lt;更新>;2024-04-28T05:55:43.365112Z&lt;/更新>; &lt;link href=&quot;https://nhigham.com/the-princeton-companion-to-applied-mathematics/&quot;/>; &lt;作者>; &lt;name>;teleforce&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /nhigham.com/wp-content/uploads/2016/03/pcam-cover.jpg?w=304&amp;h=380&quot; style=&quot;宽度：220px；高度：275px；&quot; />;&lt;br />;《普林斯顿应用数学指南》是海厄姆等人编辑的综合参考书，其中包含有关解决斯梅尔猜想的重要内容。它在评论中广受好评，并在“2016 年最佳数学写作”中精选了一些文章。 &lt;a href=&quot;https://hackernews.betacat.io/#the-princeton-companion-to-applied-mathematics&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40186146&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;日本月球着陆器又度过了另一个月球之夜&lt;/stitle>; &lt;id>;https://www.theregister.com/2024/04/25/slim_another_lunar_night/&lt;/id >; &lt;更新>;2024-04-27T21:55:43.365986Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2024/04/25/slim_another_lunar_night/&quot;/>; &lt;作者>; &lt;名称>; LorenDB&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia.LorenDB&quot; co.uk/2024/01/25/jaxa_slim_askew.jpg&quot; style=&quot;宽度：220px 高度：165px；&quot; />;&lt;br />;日本的 SLIM 着陆器出人意料地度过了三个月球之夜，尽管一些电子设备出现故障且缺乏加热器，但仍继续运行并拍照。它是为更短的任务而设计的，其耐用性超出了所有人的预期。 &lt;a href=&quot;https://hackernews.betacat.io/#japan-s-moon-lander-makes-it-through-another-lunar-night&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40159557&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作解释器：15 个月内 640 页&lt;/stitle>; &lt;id>;https://journal.stuffwithstuff.com/2021/07/ 29/640-in-15-months/&lt;/id>; &lt;更新>;2024-04-27T21:55:43.366328Z&lt;/更新>; &lt;link href=&quot;https://journal.stuffwithstuff.com/2021/ 07/29/640-pages-in-15-months/&quot;/>; &lt;author>; &lt;name>;auraham&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=auraham&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://journal.stuffwithstuff.com/image/2021/07/book.jpg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;作者宣布他的书《Crafting Interpreters》已完成，强调了为最终产品投入的大量工作，包括新的构建系统和页面设计。这本 640 页的实体书现已可供购买，作者反思了从内容到最终印刷的复杂过程。 &lt;a href=&quot;https://hackernews.betacat.io/#crafting-interpreters-640-pages-in-15-months&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40177687&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;让我们将 Go 程序嵌入到 Linux 内核中&lt;/stitle>; &lt;id>;https://sigma-star.at/blog/2023/07/embedded-go -prog/&lt;/id>; &lt;更新>;2024-04-27T23:55:43.366655Z&lt;/更新>; &lt;link href=&quot;https://sigma-star.at/blog/2023/07/embedded-go-prog /&quot;/>; &lt;作者>; &lt;名称>;st_goliath&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=st_goliath&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://sigma-star.at/assets/images/sigstr-logo-white-vertical.svg&quot; style=&quot;宽度：220px；高度：276px；&quot; />;&lt;br />;本文提出了一种将用户空间程序嵌入到 Linux 内核中的方法，使其能够在没有文件系统的情况下运行。该技术对于文件系统访问不可靠的情况很有用，它涉及 Go 等静态链接程序，并促进内核和程序之间的通信。 &lt;a href=&quot;https://hackernews.betacat.io/#let-s-embed-a-go-program-into-the-linux-kernel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40184515&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;穿着后燃烧&lt;/stitle>; &lt;id>;https://grist.org/international/burn-after-wearing-fashion-waste -chile/&lt;/id>; &lt;更新>;2024-04-27T23:55:43.366981Z&lt;/更新>; &lt;link href=&quot;https://grist.org/international/burn-after-wearing-fashion-waste-chile /&quot;/>; &lt;作者>; &lt;名称>;甲鼠&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=onychomys&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://grist.org/wp-content/uploads/2024/01/Fotos-camara-Blusas-del-desierto-095-min.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />; 纺织品回收倡导者安吉拉·阿斯图迪洛 (Ángela Astudillo) 和一个团队在他们计划前往进行研究的智利服装垃圾场遇到了大火。尽管有禁止纺织品处理的法律，但全球快时尚废弃品的堆积量仍在不受控制地增长。 &lt;a href=&quot;https://hackernews.betacat.io/#burn-after-wearing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40184434&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;微软在工作&lt;/stitle>; &lt;id>;https://computer.rip/2024-04-26-microsoft-at-work.html&lt;/id>; &lt;更新>;2024-04-27T21 :55:43.367301Z&lt;/updated>; &lt;link href=&quot;https://computer.rip/2024-04-26-microsoft-at-work.html&quot;/>; &lt;作者>; &lt;名称>;kryster&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=kryster&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者讨论了他们对 Microsoft At Work (MAW) 的兴趣，这是一项失败的努力微软在 90 年代中期将办公设备与 Windows 架构集成。尽管 MAW 的目标是统一文档处理和通信，但它的产品很少，市场失败，后来影响了 Windows CE 的发展。 &lt;a href=&quot;https://hackernews.betacat.io/#microsoft-at-work&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40183817&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;让我们逐点思考：Transformer 语言模型中的隐藏计算&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2404.15758&lt;/id>; &lt;updated>;2024-04-27T19： 55:43.367635Z&lt;/updated>; &lt;link href=&quot;https://arxiv.org/abs/2404.15758&quot;/>; &lt;作者>; &lt;name>;Jimmc414&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=Jimmc414&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb .png&quot;样式=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;文章揭示了语言模型可以使用填充标记而不是逻辑推理来解决复杂的任务，尽管很难训练它们这样做。它表明人们担心模型可能会执行与可见推理步骤无关的隐藏计算。 &lt;a href=&quot;https://hackernews.betacat.io/#let-s-think-dot-by-dot-hidden-computation-in-transformer-language-models&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40182695&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我如何不再担心并爱上 Makefile&lt;/stitle>; &lt;id>;https://gagor.pro/2024/02 /how-i-stopped-worrying-and-loved-makefiles/&lt;/id>; &lt;更新>;2024-04-27T19:55:43.367965Z&lt;/更新>; &lt;link href=&quot;https://gagor.pro/2024 /02/how-i-stopped-worrying-and-loved-makefiles/&quot;/>; &lt;作者>; &lt;名称>;___timor___&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=___timor___&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gagor.pro/2024/02/how-i-stopped-worrying-and-loved-makefiles/images/cover. webp&quot;样式=&quot;宽度：220px；高度：90px；&quot; />;&lt;br />;本文讨论了作者如何使用 GNU Make 来高效管理 IT 项目中的软件构建以及自动执行更新 Postfix 配置或 Python 依赖项管理等任务。它强调了 Make 简化流程的能力，否则这些流程将变得更加复杂且容易出错。 &lt;a href=&quot;https://hackernews.betacat.io/#how-i-stopped-worrying-and-loved-makefiles&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40182555&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国 44% 的独角兽初创公司是由外国工人创办的&lt;/stitle>; &lt;id>;https://twitter.com/IlyaStrebulaev/status/1481662020659257349&lt;/id >; &lt;更新>;2024-04-28T04:55:43.368966Z&lt;/更新>; &lt;link href=&quot;https://twitter.com/IlyaStrebulaev/status/1481662020659257349&quot;/>; &lt;作者>; &lt;名称>;ZuckMusk&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ZuckMusk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;出了点问题，但不要担心 - 让我们再试一次。 &lt;a href=&quot;https://hackernews.betacat.io/#44-unicorn-startups-in-the-us-were-founded-by-foreign-workers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40185970&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SVG 查看器 – 查看、编辑和优化 SVG&lt;/stitle>; &lt;id>;https://www.svgviewer.dev&lt; /id>; &lt;更新>;2024-04-27T15:55:43.370020Z&lt;/更新>; &lt;link href=&quot;https://www.svgviewer.dev&quot;/>; &lt;作者>; &lt;名称>;microflash&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=microflash&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.svgviewer.dev/images/svgviewer -og-image.png&quot; style=&quot;宽度: 220px 高度: 123px;&quot; />;&lt;br />;本文描述了具有特定元素的 SVG 图形：圆角矩形、路径、圆形和半透明的较小矩形，所有元素都具有指定的颜色和大小。该图形使用有限的调色板。 &lt;a href=&quot;https://hackernews.betacat.io/#svg-viewer-view-edit-and-optimize-svgs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40180821&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;哲学家自学者&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Hayy_ibn_Yaqdhan&lt;/id>; &lt;更新>;2024-04-28T00： 55:43.370595Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Hayy_ibn_Yaqdhan&quot;/>; &lt;作者>; &lt;name>;niemandhier&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=niemandhier&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章概述了伊本·图法伊尔的《Ḥayy ibn Yaqẓān》，这是一部启发伊斯兰和启蒙思想的哲学小说，在欧洲颇有影响力。文学和哲学。它通过自我发现和自然在理解创造中的作用来探索知识主题。 &lt;a href=&quot;https://hackernews.betacat.io/#philosophus-autodidactus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40154007&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;航空公司不会使用的更好的登机方法&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=oAHbLRjF0vo&lt;/id>; &lt;更新>;2024-04-28T05:55 ：43.371102Z&lt;/updated>; &lt;link href=&quot;https://www.youtube.com/watch?v=oAHbLRjF0vo&quot;/>; &lt;author>; &lt;name>;doener&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=doener&lt;/uri>; &lt;/author>; &lt;content type =“html”>;&lt;iframe src =“//www.youtube.com/embed/oAHbLRjF0vo”frameborder =“0”允许全屏加载= “懒惰”>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#the-better-boarding-method-airlines-won-t-use&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40186299&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Timo Noko 的 NokoLisp：HP Omnigo 700LX 上的裸机 Lisp&lt;/stitle>; &lt;id>;https://timonoko .github.io/Nokolisp.htm&lt;/id>; &lt;更新>;2024-04-28T03:55:43.371556Z&lt;/更新>; &lt;link href=&quot;https://timonoko.github.io/Nokolisp.htm&quot;/>; &lt;作者>; &lt;名称>;lproven&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lproven&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://timonoko.github.io/jemma/byte-lisp-issue-cover.jpg&quot; style=&quot;width: 220px; height: 294px;&quot; />;&lt;br />;Nokolisp，由 Timo Noko 于 1976 年为类似 Nova 的计算机创建，通过各种实现不断发展，直到最近的手机实现；Noko 在诺基亚失业后失去了作者身份。缺乏初始 lambda 演算知识的语言，以类似 Prolog 的模式匹配为特色，并演变成一种类似 Forth 的语言，具有 S 表达式和垃圾收集的独特实现。 timo-noko-s-nokolisp-bare-metal-lisp-on-the-hp-omnigo-700lx&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40179494&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;所以你想像大男孩一样刮擦（2021）&lt;/stitle>; &lt;id>;https://incolumitas.com/2021/11/03/so-you-want-to- scrape-like-the-big-boys/&lt;/id>; &lt;更新>;2024-04-27T09:55:43.371934Z&lt;/更新>; &lt;link href=&quot;https://incolumitas.com/2021/11/03/ so-you-want-to-scrape-like-the-big-boys/&quot;/>; &lt;author>; &lt;name>;文石&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=aragonite &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://incolumitas.com/images/work%20 Different.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;作者描述了他们在不购买代理的情况下抓取数百万个 SERP 的方法，出于合法原因使用 AWS Lambda 和 Headless Chrome，同时避免更多恶意活动。为了逃避反机器人公司的检测，他们建议使用具有不同 IP 的真实 Android 设备，而不是模拟器或代理。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40176738&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Moviecart – 适用于 Atari 2600 的全长彩色电影和音频盒&lt; /stitle>; &lt;id>;https://github.com/lodefmode/moviecart&lt;/id>; &lt;更新>;2024-04-27T12:55:43.372304Z&lt;/更新>; &lt;link href=&quot;https://github.com /lodefmode/moviecart&quot;/>; &lt;作者>; &lt;名称>;Lutzb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Lutzb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/lodefmode/moviecart/main/docs/screenshot_play.jpg&quot; style=&quot;宽度：220px;高度：168px;&quot; />;&lt;br />;Atari 2600 的新产品可以在家中制作分辨率为 80x192 且具有 4 位音频的完整长度的电影。每一秒的视频需要相当于 75.5 Combat 磁带的数据。&lt;a href =&quot;https://hackernews.betacat.io/#moviecart-full-length-color-movie-and-audio-cartridges-for-stock-atari-2600&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40179553&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Is_ready – 等待许多服务变得可用 – 0 依赖项&lt;/stitle>; &lt;id>;https://github。 com/Stavrospanakakis/is_ready&lt;/id>; &lt;更新>;2024-04-27T21:55:43.372688Z&lt;/更新>; &lt;link href=&quot;https://github.com/Stavrospanakakis/is_ready&quot;/>; &lt;作者>; &lt;名称>;stavepan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=stavepan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph .githubassets.com/308b1d1d7948cfede33114fb75e848f01873e4c49c0b08d346ab74e94ae96566/Stavrospanakakis/is_ready&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Is_ready 是一个独立的程序，它等待多个地址可访问，有助于协调启动 Docker 容器等相互依赖的服务。它与类似工具的不同之处在于，它支持多个地址，无需外部依赖. &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-is-ready-wait-for-many-services-to-become-available-0-dependencies&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40183933&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLM 永远不能做什么？&lt;/stitle>; &lt;id>;https://www.strangeloopcanon.com /p/what-c​​an-llms-never-do&lt;/id>; &lt;更新>;2024-04-27T11:55:43.373805Z&lt;/更新>; &lt;link href=&quot;https://www.strangeloopcanon.com/p/ What-c​​an-llms-never-do&quot;/>; &lt;author>; &lt;name>;henrik_w&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=henrik_w&lt;/uri>; &lt;/author>; &lt;内容类型 =“html”>; &lt;img src =“https://substackcdn.com/image/fetch/w_1456，c_limit，f_auto，q_auto：好，fl_progressive：steep/https％3A％2F％2Fsubstack-post-media。 s3.amazonaws.com%2Fpublic%2Fimages%2F45a04bd3-aa7c-4517-b4f9-6a35b2d8cb68_2000x1824.png&quot; style=&quot;width: 220px; height: 201px;&quot; />;&lt;br />;大型语言模型 (LLM) 在复杂任务上超出了预期，但在看似简单的推理上却失败了，作者通过测试单词网格和元胞自动机预测等任务探索了这一现象，揭示了 LLM 的局限性尽管概括和迭代推理的能力取得了进步，但法学硕士仍难以完成需要动态上下文重置和选择性注意力的任务，这表明需要更复杂的培训来模仿人类认知过程。 #what-c​​an-llms-never-do&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40179232&quot; target=&quot;_blank&quot; >;[评论]&lt;/a>;&lt;/内容>; &lt;/条目>; &lt;/提要>;