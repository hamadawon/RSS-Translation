<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-02-13T14:00:07.667721Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;英国地狱入口目录&lt;/stitle>; &lt;id>;https://www.entrances2hell.co.uk/&lt;/id>; &lt;更新>;2024-02-13T09： 59:54.562873Z&lt;/updated>; &lt;link href=&quot;https://www.entrances2hell.co.uk/&quot;/>; &lt;作者>; &lt;name>;Daub&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=Daub&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.entrances2hell.co.uk/pic279.gif&quot; style=&quot;width: 220px ；高度：164px；&quot; />;&lt;br />;来自英国各地的地狱入口照片以及历史信息和分析&lt;a href=&quot;https://hackernews.betacat.io/#the-catalogue-of-uk-entrances-to-hell&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39356066&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;所以你认为你了解 Git – Scott Chacon 的 Git 提示和技巧&lt; /stitle>; &lt;id>;https://blog.gitbutler.com/git-tips-and-tricks/&lt;/id>; &lt;更新>;2024-02-13T09:59:54.564672Z&lt;/更新>; &lt;link href=&quot; https://blog.gitbutler.com/git-tips-and-tricks/&quot;/>; &lt;author>; &lt;name>;ChrisArchitect&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ChrisArchitect &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.gitbutler.com/content/images/size/w500/2024/02/CleanShot-2024-02-08 -at-15.51.57@2x.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;作者曾经假设每个人都了解高级 Git 命令，但最近发现很多人都不懂。他们计划编写一系列关于鲜为人知或新的 Git 功能的文章来教育开发人员。 &lt;a href=&quot;https://hackernews.betacat.io/#so-you-think-you-know-git-git-tips-and-tricks-by-scott-chacon&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39356042&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;有什么东西困扰着你吗？&lt;/stitle>; &lt;id>;https://antithesis.com/blog/is_something_bugging_you /&lt;/id>; &lt;更新>;2024-02-13T12:59:54.565087Z&lt;/更新>; &lt;link href=&quot;https://antithesis.com/blog/is_something_bugging_you/&quot;/>; &lt;作者>; &lt;名称>;wwilson&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=wwilson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://antithesis.com/ images/people/will.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;由 FoundationDB 的创建者创立的初创公司 Antithesis 开发了一个确定性自主测试平台，可以识别和重现软件错误。该平台最初用于分布式系统可靠性测试，现已发展成为“始终在线”的服务，从而提高软件质量和工程生产力。 &lt;a href=&quot;https://hackernews.betacat.io/#is-something-bugging-you&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39356920&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;在现有工作流程之上用于同步分支的 Git 客户端&lt;/stitle>; &lt;id>;https://gitbutler.com&lt;/id>; &lt;updated>;2024-02-13T12:59： 54.565496Z&lt;/updated>; &lt;link href=&quot;https://gitbutler.com&quot;/>; &lt;作者>; &lt;name>;sandgiant&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sandgiant &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.gitbutler.com/content/images/2024/02/CleanShot-2024-02-08-at-15.51 .57@2x.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;如果您可以同时处理多个分支，则无需切换分支。在开发功能时修复错误。更多 只需拖放即可撤消、压缩和修改您的工作。无需纠结于 rebase -i。更多 你写了多少次 git commit -m 的东西？一键生成提交消息。更多&lt;a href=&quot;https://hackernews.betacat.io/#a-git-client-for-simultaneous-branches-on-top-of-your-existing-workflow&quot; target=&quot;_blank&quot;>;[摘要] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39357068&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;非代码贡献是开源成功的秘诀&lt;/stitle>; &lt;id>;https://github。 com/readme/featured/open-source-non-code-contributions&lt;/id>; &lt;更新>;2024-02-13T10:59:54.565895Z&lt;/更新>; &lt;link href=&quot;https://github.com/readme /featured/open-source-non-code-contributions&quot;/>; &lt;作者>; &lt;名称>;keepamovin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=keepamovin&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.ctfassets.net/s5uo95nf6njh/2cpt8SfXcLMJO0aXROCMK6/5f1e064ab2e1e35e4668a725a2b97441/Feature_Non-code_Github_Sketch__final.jpg?w=2000&amp;fm=jpg&quot;样式=“宽度：220px；高度：132px；” />;&lt;br />;本文以数学老师 Sarah Rainsberger 为例，强调文档和支持等非代码贡献对于开源项目成功的重要性，她后来成为 Astro 项目的关键贡献者。它还讨论了这些贡献如何为技术和非技术技能发展提供机会，并为维护人员吸引和欣赏非代码贡献者提供建议。 &lt;a href=&quot;https://hackernews.betacat.io/#non-code-contributions-are-the-secret-to-open-source-success&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39356320&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sparkle：macOS 的软件更新框架&lt;/stitle>; &lt;id>;https://github.com/sparkle-project/Sparkle&lt; /id>; &lt;更新>;2024-02-13T12:59:54.566280Z&lt;/更新>; &lt;link href=&quot;https://github.com/sparkle-project/Sparkle&quot;/>; &lt;作者>; &lt;名称>;nateb2022&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com /bc2bca94b1ba6a2fe91213c0119f540a81f0c954cd111a3314f425551b8c434b/sparkle-project/Sparkle&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Sparkle 2 引入了应用程序沙箱、自定义用户界面和更新外部包，具有更现代、更快、更可靠的架构。它还提供安全更新，支持沙盒应用程序，不需要应用程序内代码，并为应用程序和插件提供灵活性。 &lt;a href=&quot;https://hackernews.betacat.io/#sparkle-a-software-update-framework-for-macos&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39357014&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;稳定音频演示&lt;/stitle>; &lt;id>;https://stability-ai.github.io/stable-audio-demo/&lt;/id>; &lt;更新>;2024-02-13T03:59:54.566677Z&lt;/更新>; &lt;link href=&quot;https://stability-ai.github.io/stable-audio-demo/&quot;/>; &lt;作者>; &lt;名称>;beefman&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=beefman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章详细介绍了生成可变长度音乐和声音的模型44.1kHz 立体声效果，提供不同音乐风格的示例。它还评估了模型的音频保真度功能，注意到它与原始录音非常接近。 &lt;a href=&quot;https://hackernews.betacat.io/#stable-audio-demo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39354138&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;StreamingLLM：对 KV LRU 的微小调整改善了长对话&lt;/stitle>; &lt;id>;https://news.mit.edu/2024/new-way-let-ai-chatbots-converse-all- day-without-crashing-0213&lt;/id>; &lt;更新>;2024-02-13T08:59:54.567059Z&lt;/更新>; &lt;link href=&quot;https://news.mit.edu/2024/new-way-let -ai-chatbots-converse-all-day-without-crashing-0213&quot;/>; &lt;作者>; &lt;名称>;lucasluitjes&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lucasluitjes&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://news.mit.edu/sites/default/files/styles/news_article__download/public/download/202402/MIT-Streaming-LLMs -01-PRESS.jpg?itok=l3asfQxb&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;研究人员设计了一种解决方案 StreamingLLM，以防止大型语言模型（如 ChatGPT）在长时间对话期间性能恶化。该方法会调整键值缓存以保留初始数据点，从而实现高效、连续的对话，甚至超过 400 万字。 &lt;a href=&quot;https://hackernews.betacat.io/#streamingllm-tiny-tweak-to-kv-lru-improves-long-conversations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39355804&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;酷 URI 可能很丑&lt;/stitle>; &lt;id>;https://unterwaditzer.net/2023/cool-uris.html&lt;/id>; &lt;更新>;2024-02-13T07:59:54.568219Z&lt;/更新>; &lt;link href=&quot;https://unterwaditzer.net/2023/cool-uris.html&quot;/>; &lt;作者>; &lt;名称>;aendruk&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=aendruk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;为了简单起见，作者将他们的博客从 GitHub 页面移至 Cloudflare 页面，但是当 Cloudflare 的静态站点托管更改所有博客文章 URL 的格式并发出永久重定向时，遇到了问题。由于对这种缺乏控制和可能出现链接损坏的情况感到不满，他们切换回 GitHub 页面，保留其原始 URL 格式。 &lt;a href=&quot;https://hackernews.betacat.io/#cool-uris-can-be-ugly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39345439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;约翰·洛克的煎饼食谱（2021）&lt;/stitle>; &lt;id>;https://rarecooking.com/2021/12/14/john-lockes-recipe-for-pancakes/ &lt;/id>; &lt;更新>;2024-02-13T05:59:54.568606Z&lt;/更新>; &lt;link href=&quot;https://rarecooking.com/2021/12/14/john-lockes-recipe-for-pancakes/ &quot;/>; &lt;author>; &lt;name>;benbreen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rarecooking.files.wordpress.com/2021/12/2021-12-14-10.48.28.jpg?w=676&amp;h=507&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;这篇文章讨论了哲学家约翰·洛克在博德利图书馆的论文中发现的一种古老的煎饼食谱，作者尝试过，发现它味道丰富且美味。该配方涉及奶油、鸡蛋、面粉、黄油、肉豆蔻和橙花水，制作出的煎饼介于经典英式煎饼和苏格兰煎饼之间。 &lt;a href=&quot;https://hackernews.betacat.io/#john-locke-s-recipe-for-pancakes-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39354870&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DNA 从哪里来？&lt;/stitle>; &lt;id>;https://genicsunzipped.com/transcripts/2021/8/26/where-did-dna-来自&lt;/id>; &lt;更新>;2024-02-13T08:59:54.568988Z&lt;/更新>; &lt;link href=&quot;https://genicsunzipped.com/transcripts/2021/8/26/where-did-dna -come-from&quot;/>; &lt;作者>; &lt;名称>;andsoitis&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/v1/5bfc3f54620b850d2cc9c374/1629739791345-IM97H9CH5ZI2B84NZF4C/43Spirals+of+DNA+molecules.png&quot; style=&quot;宽度：220px；高度：165px； ” />;&lt;br />;本文探讨了地球生命的起源，重点关注 RNA 世界假说，该假说认为生命始于自我复制的 RNA 分子。它讨论了从 RNA 到 DNA 的转变、复杂分子的形成以及有关生命化学起源的各种理论。 &lt;a href=&quot;https://hackernews.betacat.io/#where-did-dna-come-from&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39340998&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;神经网络训练产生美丽的分形&lt;/stitle>; &lt;id>;https://sohl-dickstein.github.io/2024/02/12/fractal.html&lt;/id>; &lt;更新>;2024-02-13T00:59:54.569375Z&lt;/更新>; &lt;link href=&quot;https://sohl-dickstein.github.io/2024/02/12/fractal.html&quot;/>; &lt;作者>; &lt;名称>;telotortium&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=telotortium&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了作者对之间关系的探索分形和人工神经网络，揭示了成功或失败的神经网络训练的超参数之间的边界呈现出分形结构。它还强调了元学习（一种传统上手工设计的人工智能管道的学习方法）对人工智能未来的潜在影响。 &lt;a href=&quot;https://hackernews.betacat.io/#neural-network-training-makes-beautiful-fractals&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39349992&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AMD 的轻度混合策略：华硕 ROG Ally 中的 Ryzen Z1&lt;/stitle>; &lt;id>;https://chipsandcheese.com/2024/02/12/amds-mild-hybrid -strategy-ryzen-z1-in-asuss-rog-ally/&lt;/id>; &lt;更新>;2024-02-13T07:59:54.569754Z&lt;/更新>; &lt;link href=&quot;https://chipsandcheese.com/2024 /02/12/amds-mild-hybrid-strategy-ryzen-z1-in-asuss-rog-ally/&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/ 01/zen4c_hc2023_slide.jpg?resize=688%2C240&amp;ssl=1&quot; style=&quot;宽度：220px；高度：77px；&quot; />;&lt;br />;本文讨论了 AMD 的 Ryzen Z1，这是一种半混合核心配置，由华硕在 ROG Ally 中实现，它结合了高性能 Zen 4 核心和密度优化的 Zen 4c 核心。它强调了AMD采用的性能优化、时钟速度差异以及保守的混合策略，并将其与英特尔的做法进行了对比。 &lt;a href=&quot;https://hackernews.betacat.io/#amd-s-mild-hybrid-strategy-ryzen-z1-in-asus-s-rog-ally&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39355343&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Perun2 编程语言&lt;/stitle>; &lt;id>;https://perun2.org/&lt;/id>; &lt;更新>; 2024-02-13T11:59:54.570181Z&lt;/updated>; &lt;link href=&quot;https://perun2.org/&quot;/>; &lt;author>; &lt;name>;mlv-&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=mlv-&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://perun2.org/images/menuex.png&quot; style=&quot;width ：220px；高度：192px；” />;&lt;br />;本文讨论了管理文件和目录的方法，包括按创建时间对 PDF 文件进行排序和删除空目录。它还详细介绍了如何隐藏不包含 MP3 文件的目录。 &lt;a href=&quot;https://hackernews.betacat.io/#perun2-programming-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39352354&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;视觉演算&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Visual_calculus&lt;/id>; &lt;更新>;2024-02-13T01:59:54.570557Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Visual_calculus&quot;/>; &lt;作者>; &lt;名称>;larion1&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=larion1 &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Mamikons_Theorem.svg/300px-Mamikons_Theorem.svg .png&quot; style=&quot;宽度：220px；高度：89px；&quot; />;&lt;br />;Mamikon Mnatsakanian 的视觉微积分方法简化了复杂的积分微积分问题，首先通过几何问题进行了演示。他的定理指出，无论原始曲线的形状如何，切线扫描的面积等于其切线簇的面积。 &lt;a href=&quot;https://hackernews.betacat.io/#visual-calculus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39353207&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;香港废弃村庄&lt;/stitle>; &lt;id>;https://www.cnn.com/2024/02/13/style/hong-kong-abandoned-villages-stefan-irvine-photographer-hnk /index.html&lt;/id>; &lt;更新>;2024-02-13T01:59:54.570933Z&lt;/更新>; &lt;link href=&quot;https://www.cnn.com/2024/02/13/style/hong- kong-abandoned-villages-stefan-irvine-photographer-hnk/index.html&quot;/>; &lt;作者>; &lt;名称>;keepamovin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=keepamovin&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.cnn.com/api/v1/images/stellar/prod/201211100301-01b-style-abandoned-churches- photos-restricted.jpg?q=x_3,y_6,h_1684,w_2993,c_crop/h_144,w_256&quot; style=&quot;宽度: 220px; 高度: 147px;&quot; />;&lt;br />;摄影师 Stefan Irvine 在他的著作《香港废弃村庄》中记录了香港的废弃村庄，揭示了与城市景观的对比。这些因城市移民而留下的村庄正在被大自然开垦，其中一些村庄正在为旅游业而复兴，反映出人们对香港遗产的日益重视。 &lt;a href=&quot;https://hackernews.betacat.io/#abandoned-villages-of-hong-kong&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39353231&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;数学作为一种习惯&lt;/stitle>; &lt;id>;https://kidswholovemath.substack.com/p/math-as-a-habit&lt;/id>; &lt;更新>;2024- 02-13T03:59:54.571316Z&lt;/更新>; &lt;link href=&quot;https://kidswholovemath.substack.com/p/math-as-a-habit&quot;/>; &lt;作者>; &lt;名称>;sebg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/# math-as-a-habit&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39354155&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;家庭助理：三年后&lt; /stitle>; &lt;id>;https://eamonnsullivan.co.uk/posts-output/home-automation-third-years/2024-02-11-home-assistant-third-years-later/&lt;/id>; &lt;更新>;2024-02-13T00:59:54.571723Z&lt;/更新>; &lt;link href=&quot;https://eamonnsullivan.co.uk/posts-output/home-automation-third-years/2024-02-11-home- Assistant-三年后/&quot;/>; &lt;作者>; &lt;名称>;eamonnsullivan&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=eamonnsullivan&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://eamonnsullivan.co.uk/posts/home-automation-third-years/mainlights.png”风格=“宽度：220px; height: 281px;&quot; />;&lt;br />;作者分享了他使用 Home Assistant 的三年历程，赞赏它的灵活性和广泛的集成性，使他能够使用来自不同制造商的设备。他强调了本地协议相对于云的重要性可靠性服务，以及转向更挑剔的设备选择和更微妙的自动化。&lt;a href=&quot;https://hackernews.betacat.io/#home-assistant-third-years-later&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39345122&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;分析 Spotify 流历史记录&lt;/stitle>; &lt;id>;https://ericchiang.github.io/ post/spotify/&lt;/id>; &lt;更新>;2024-02-13T04:59:54.572106Z&lt;/更新>; &lt;link href=&quot;https://ericchiang.github.io/post/spotify/&quot;/>; &lt;作者>; &lt;name>;ericchiang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ericchiang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /ericchiang.github.io/post/imgs/spotify_downloads.png&quot; style=&quot;width: 220px; height: 213px;&quot; />;&lt;br />;本文讨论了作者对其个人 Spotify 流媒体历史的探索，该历史跨越十多年，包括超过 120,000 个事件。作者分析了趋势、顶级艺术家以及随着时间的推移对其使用的影响，欣赏这次怀旧之旅，并鼓励其他人也这样做。&lt;a href=&quot;https://hackernews.betacat.io/#analyzing-spotify-stream-history&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39350541&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Elixir 编写 Shell 脚本&lt;/stitle>; &lt;id>;https://arathunku.com/b/2024/shell-scripting-with -elixir/&lt;/id>; &lt;更新>;2024-02-13T05:59:54.573216Z&lt;/更新>; &lt;link href=&quot;https://arathunku.com/b/2024/shell-scripting-with-elixir/&quot; />; &lt;author>; &lt;name>;bo0tzz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bo0tzz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论作者在处理复杂脚本方面比 Perl、Ruby 或 Python 等其他语言更喜欢 Elixir，强调了它的多功能性、添加依赖项的简便性以及 LiveBook 带来的最新改进。作者还分享了他们使用 Elixir 执行各种任务的经验，例如显示天气、转换 CSV 文件、创建 Telegram 机器人，并强调了其出色的开箱即用默认设置和符合人体工程学的开发人员体验。 &lt;a href=&quot;https://hackernews.betacat.io/#shell-scripting-with-elixir&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39342863&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;淹没在代码中：不断增长的代码库带来的日益严重的问题&lt;/stitle>; &lt;id>;https://www.theregister.com/2024/02/12/drowning_in_code/&lt;/ id>; &lt;更新>;2024-02-13T11:59:54.573972Z&lt;/更新>; &lt;link href=&quot;https://www.theregister.com/2024/02/12/drowning_in_code/&quot;/>; &lt;作者>; &lt;名称>;pseudolus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pseudolus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://regmedia .co.uk/2024/02/12/shutterstock_code_flood.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文讨论了计算机行业面临的挑战，重点介绍了软件设计巨头 Niklaus Wirth 的遗产和软件膨胀的现状。它强调需要更精简、更简单的软件来应对当前系统的复杂性和低效率。 &lt;a href=&quot;https://hackernews.betacat.io/#drowning-in-code-the-ever-having-problem-of-ever-having-codebases&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39356574&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GOFAI 的兴衰&lt;/stitle>; &lt;id>;https://billwadge.com/2024/02/12/ the-rise-and-fall-of-gofai/&lt;/id>; &lt;更新>;2024-02-13T04:59:54.574345Z&lt;/更新>; &lt;link href=&quot;https://billwadge.com/2024/02/ 12/the-rise-and-fall-of-gofai/&quot;/>; &lt;author>; &lt;name>;herodotus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=herodotus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://billwadge.files.wordpress.com/2024/02/screenshot-2024-02-12-at-5.39.20e280afam.png?w =1024&quot; 样式=&quot;宽度：220 像素；高度：181 像素；&quot; />;&lt;br />;本文详细介绍了 Good Old Fashioned AI (GOFAI) 的兴起和衰落，这是一个基于符号推理的系统，起源于 1956 年达特茅斯人工智能会议。尽管取得了重大胜利，GOFAI 在将所有数学公理化的尝试中遇到了挫折，导致其最终被机器学习等非符号推理技术取代。 &lt;a href=&quot;https://hackernews.betacat.io/#the-rise-and-fall-of-gofai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39344934&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PEP 701 – f 字符串的语法形式化&lt;/stitle>; &lt;id>;https://peps.python.org/pep-0701/&lt;/id>; &lt;更新>; 2024-02-12T22：59：54.575074Z &lt;/更新>; &lt;link href =“https://peps.python.org/pep-0701/”/>; &lt;作者>; &lt;名称>;PaulHoule &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该文档提出了 Python 中 f 字符串的形式化语法，解除了 PEP 498 的一些限制，这可能会给最终用户和开发人员带来好处并降低维护成本。它还解决了 CPython 当前实现的局限性，并提出了可能有利于替代 Python 实现的改进建议。 &lt;a href=&quot;https://hackernews.betacat.io/#pep-701-syntropic-formalization-of-f-strings&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39351494&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;声学摄像机可以看到声音（2023）[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=QtMTvsi-4Hw &lt;/id>; &lt;更新>;2024-02-12T23:59:54.575441Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=QtMTvsi-4Hw&quot;/>; &lt;作者>; &lt;名称>;melenaboija&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=melenaboija&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www. youtube.com/embed/QtMTvsi-4Hw&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#acoustic-cameras-can-see- sound-2023-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39344433&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/内容>; &lt;/条目>; &lt;/提要>;