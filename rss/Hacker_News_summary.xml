<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-29T17:54:02.141257Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;可移动树 CRDT 和 Loro 的实现&lt;/stitle>; &lt;id>;https://loro.dev/blog/movable-tree&lt;/id>; &lt;更新>;2024-07-29T12: 53:55.529124Z&lt;/updated>; &lt;link href=&quot;https://loro.dev/blog/movable-tree&quot;/>; &lt;作者>; &lt;name>;czx111331&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=czx111331&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://loro.dev/_next/static/media/movable-tree-cover.f2c64ff7 .png&quot;样式=&quot;宽度：220px；高度：126px；&quot; />;&lt;br />;本文讨论了实现可移动树 CRDT（用于管理分布式系统中的层次关系）的挑战，并提出了两种可移动树的创新算法。 Loro作为一款协作应用程序，集成了这些算法，可以实现实时协作和无缝历史版本检查，使其适合各种应用场景。 &lt;a href=&quot;https://hackernews.betacat.io/#movable-tree-crdts-and-loro-s-implementation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41099901&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我的 setf 心理模型是错误的&lt;/stitle>; &lt;id>;https://simonobson.org/2024/07/27/my-mental-model-of -setf-was-wrong/&lt;/id>; &lt;更新>;2024-07-29T12:53:55.530917Z&lt;/更新>; &lt;link href=&quot;https://simonobson.org/2024/07/27/my-mental -model-of-setf-was-wrong/&quot;/>; &lt;作者>; &lt;名称>;nemoniac&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nemoniac&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;Setf 是一个使用通用函数来更新位置的宏，而不是用于位置的特殊形式，它的第一个参数是返回要更新的位置的定位器表达式。 setf 宏合成函数名称符号并使用该名称调用通用函数，将新值和定位器的其余部分作为参数传递，从而允许灵活且结构化的代码更新。 &lt;a href=&quot;https://hackernews.betacat.io/#my-mental-model-of-setf-was-wrong&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41093719&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN: Roame (YC S23) – 信用卡积分的航班搜索引擎&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item ?id=41100094&lt;/id>; &lt;更新>;2024-07-29T13:53:55.531498Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=41100094&quot;/>; &lt;作者>; &lt;name>;zman0225&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zman0225&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Roame 是一个航班搜索引擎，帮助用户使用积分和里程而不是现金查找和兑换商务舱航班。该工具通过实时搜索多达 16 个航空公司忠诚度计划并显示结果（包括航班信息、积分成本和兑换说明）来简化流程。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-roame-yc-s23-flight-search-engine-for-your-credit-card-points&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41100094&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;虚拟阿波罗制导计算机&lt;/stitle>; &lt;id>;https://github.com/virtualagc/virtualagc&lt; /id>; &lt;更新>;2024-07-29T12:53:55.532094Z&lt;/更新>; &lt;link href=&quot;https://github.com/virtualagc/virtualagc&quot;/>; &lt;作者>; &lt;名称>;Duke_Pixie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Duke_Pixie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/904b6403362c89b2766f1b308ab659ef47c7713038e123902fbbe453add3bef3 /virtualagc/virtualagc&quot; style=&quot;宽度: 220px; 高度: 110px;&quot; />;&lt;br />;阿波罗制导计算机（AGC）是阿波罗航天器中使用的复杂计算机系统，用于在月球任务期间导航和控制航天器。 Virtual AGC项目是AGC的开源模拟器，允许用户在现代计算机上运行原始Apollo软件并研究或修改代码。 &lt;a href=&quot;https://hackernews.betacat.io/#virtual-apollo-guidance-computer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41094044&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Show HN：Tea-tasting，用于 A/B 测试统计分析的 Python 包&lt;/stitle>; &lt;id>;https://e10v.me/tea-tasting-analysis-of -experiments/&lt;/id>; &lt;更新>;2024-07-29T12:53:55.532633Z&lt;/更新>; &lt;link href=&quot;https://e10v.me/tea-tasting-analysis-of-experiments/&quot;/>; &lt;作者>; &lt;名称>;e10v_me &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=e10v_me&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://e10v.me/tea-tasting-analysis-of-experiments/tea-tasting.png&quot; style=&quot;宽度：220px；高度：136px；&quot; />;&lt;br />;Tea-tasting是一款统计分析工具，提供了多种分析实验的方法和途径，包括Student&#39;s t-test、Bootstrap、CUPED方差缩减等，并支持多种数据后端。它提供了方便的 API、优化的计算效率和详细的文档，使其成为分析实验和 A/B 测试的有用工具。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-tea-tasting-a-python-package-for-the-statistical-analysis-of-ab-tests&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41099028&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何构建高度可调试的 C++ 二进制文件&lt;/stitle>; &lt;id>;https://dhashe。 com/how-to-build-highly-debuggable-c-binaries.html&lt;/id>; &lt;更新>;2024-07-29T11:53:55.533174Z&lt;/更新>; &lt;link href=&quot;https://dhashe.com /how-to-build-highly-debuggable-c-binaries.html&quot;/>; &lt;author>; &lt;name>;synergy20&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=synergy20&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文提供了有关如何配置 C++ 工具链以生成高度可调试的二进制文件的建议，包括使用清理程序、为标准库启用调试模式以及添加帧指针，以提高调试体验。它还涵盖了各种调试技术，例如使用交互式调试、printf 式调试以及使用 Python 自定义调试器... &lt;a href=&quot;https://hackernews.betacat.io/#how-to-build- height-debuggable-c-binaries&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41074703&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;归因正在消亡，点击正在消亡&lt;/stitle>; &lt;id>;https://sparktoro.com/blog/attribution-is-dying-clicks-are-dying-marketing-is-going-back-to-the-20th- century/&lt;/id>; &lt;已更新>;2024-07-29T17:10:55.533716Z&lt;/已更新>; &lt;link href=&quot;https://sparktoro.com/blog/attribution-is-dying-clicks-are-dying-marketing-is-going-back -to-the-20th- century/&quot;/>; &lt;author>; &lt;name>;dotcoma&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dotcoma&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://images.sparktoro.com/blog/wp-content/uploads/2022/07/zero-click-content-chart-pink-1024x731.png”样式= “宽度：220px； height: 158px;&quot; />;&lt;br />;过去20年的营销方式因点击量和归因的下降而结束，我们需要专注于通过各种渠道和形式影响人们。 2024 年的营销就像 1964 年的营销一样，需要正确的信息、受众和时机，我们应该使用基于提升的测量而不是归因进行投资。 attribution-is-dying-clicks-are-dying&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41101948&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SVG 三角形妥协&lt;/stitle>; &lt;id>;https://me.micahrl.com/blog/svg-triangle-of-compromise/&lt;/id>; &lt;更新>;2024-07-29T03:53:55.534229Z&lt;/更新>; &lt; link href=&quot;https://me.micahrl.com/blog/svg-triangle-of-compromise/&quot;/>; &lt;author>; &lt;name>;mrled&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=mrled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://me.micahrl.com/images/profile.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;本文讨论了使用 SVG 的优点和局限性，包括缓存、样式和悬停效果。它还探讨了引用和设置 SVG 样式的替代方法，例如使用 iframe、对象标签、和内嵌嵌入。 news.ycombinator.com/item?id=41070709&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;STS-93：我们不再需要这些（2014）&lt;/stitle>; &lt;id>;https://waynehale.wordpress.com/2014/10/ 26/sts-93-we-dont-need-any-more-of-those/&lt;/id>; &lt;更新>;2024-07-29T05:53:55.534742Z&lt;/更新>; &lt;link href=&quot;https:// waynehale.wordpress.com/2014/10/26/sts-93-we-dont-need-any-more-of-those/&quot;/>; &lt;作者>; &lt;名称>;LorenDB &lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=LorenDB&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://waynehale.wordpress.com/wp-content/uploads/2014 /10/sts-93-missionstatusbriefing-slide-2.jpg?w=300&amp;h=225&quot; style=&quot;宽度：220px;高度：165px;&quot; />;&lt;br />;1999 年 7 月 23 日的 STS-93 航天飞机发射是一次复杂而多事的任务，经历了多种异常情况，包括其中一个主发动机喷嘴泄漏、尽管面临挑战，机组人员和任务控制团队共同努力克服了这些问题并确保了……&lt;a href=&quot;https://hackernews. betacat.io/#sts-93-we-dont-need-any-more-of-those-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=41077753&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;MeTube：自托管 YouTube 下载器&lt;/stitle>; &lt;id>;https://github.com/alexta69/metube&lt;/id>; &lt;更新>;2024-07-29T09:53： 55.535265Z&lt;/updated>; &lt;link href=&quot;https://github.com/alexta69/metube&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/alexta69/metube/master/screenshot.gif&quot; style=&quot;width: 220 像素； height: 139px;&quot; />;&lt;br />;MeTube 是一款基于网络的 YouTube 视频下载器，允许用户从 YouTube 和其他网站下载视频，具有播放列表支持、自定义下载目录以及设置环境变量的功能等功能该软件构建在 yt-dlp 库之上，需要 64 位操作系统，建议定期更新以跟上视频网站和底层库的变化。 .io/#metube-self-hosted-youtube-downloader&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41098974&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;理解超级任天堂视频系统的设计&lt;/stitle>; &lt;id>;https://fabiensanglard.net/snes_video/index.html&lt;/id>; &lt;updated>;2024-07-29T05:53:55.535841Z&lt;/updated>; &lt;link href=&quot;https://fabiensanglad.net/snes_video/index.html&quot;/>; &lt;作者>; &lt;name>;guiambros&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=guiambros &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://fabiensanglad.net/snes_video/tv.svg&quot; style=&quot;width: 220px; height: 134px;&quot; />;&lt;br />;作者通过研究1989年可用的技术，对超级任天堂娱乐系统（SNES）的视频系统进行了探索，包括电视机和CRT，并设计了满足要求的视频系统作者讨论了任天堂工程师做出的设计选择，包括选择每帧 262 行、每行 256 个可见点以及... &lt;a href=&quot;https://hackernews.betacat. io/#understanding-the-design-of-the-the-super-nintendo-video-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=41098141&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ps aux 用 bash 编写，无需分叉&lt;/stitle>; &lt;id>;https://github.com/izabera/ps&lt;/id>; &lt;updated>;2024-07-29T01:53:55.536988Z &lt;/更新>; &lt;link href=&quot;https://github.com/izabera/ps&quot;/>; &lt;作者>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/9faf6f5ef12d7300bb112b0316e1f33f1298572fd204baa68e8d03e9bcb69173/izabera/ps&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;如果您通过 ssh 连接到一台机器，您位于值得信赖的 bash shell 中，但不幸的是您无法生成任何新进程，因为实际上所有其他进程如果这就是您所面临的情况，那么现在您可以假装可以访问可用的 ps aux。 href=&quot;https://hackernews.betacat.io/#ps-aux-writing-in-bash-without-forking&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=41097241&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;tolower() 与 AVX-512&lt;/stitle>; &lt;id>;https://dotat.at/@/2024-07-28-tolower-avx512.html&lt;/ id>; &lt;更新>;2024-07-28T20:53:55.537523Z&lt;/更新>; &lt;link href=&quot;https://dotat.at/@/2024-07-28-tolower-avx512.html&quot;/>; &lt;作者>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户探索AVX的使用-512-BW指令用于快速字符串处理，特别是对于短字符串，并编写了一个可以一次处理64字节的tolower()函数。用户对多个功能进行了基准测试，发现 AVX-512-BW 实现始终接近最快，性能平稳且没有性能低谷。 &lt;a href=&quot;https://hackernews.betacat.io/#tolower-with-avx-512&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=41095790&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Show HN：我构建了一个开源工具来减少 on-call 的糟糕程度&lt;/stitle>; &lt;id>;https://github.com/opslane/opslane&lt;/id>; &lt;更新>;2024-07-28T17:53:55.538044Z&lt;/updated>; &lt;link href=&quot;https://github.com/opslane/opslane&quot;/>; &lt;author>; &lt;name>;aray07&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=aray07&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/opslane/opslane/main/资产/opslane-arch.png&quot; style=&quot;宽度: 220px 高度: 133px;&quot; />;&lt;br />;Opslane 使用 LLM 将警报分类为可操作警报或噪音警报，并提供用于处理 Slack 通道中警报的上下文信息。它还提供分析和报告数据，以帮助团队管理和消除噪音警报，并采用支持多种集成的模块化架构。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-an-open-source-tool-to-make-on-call-suck-less&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41086620&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cloudflare 是否对我们的图像服务收取过高费用？&lt;/stitle>; &lt;id>;http://jpetazzo .github.io/2024/07/26/cloudflare-images-overcharge-billing/&lt;/id>; &lt;更新>;2024-07-29T15:53:55.539565Z&lt;/更新>; &lt;link href=&quot;http://jpetazzo .github.io/2024/07/26/cloudflare-images-overcharge-billing/&quot;/>; &lt;author>; &lt;name>;rdg42&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= rdg42&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://jpetazzo.github.io/assets/cloudflare-images-charges.png&quot; style=&quot;width: 220px; height : 117 像素;&quot; />;&lt;br />;作者的网站 EphemeraSearch 使用 Cloudflare Images 进行图像托管，但注意到他们的账单始终高于预期，某些月份的费用达到了 400 美元以上。笔者经过调查发现，Cloudflare对于图片存储的预付费计费模式，与图片交付的后付费模式相结合，导致了暂时性的多收费，这是...... &lt;a href=&quot;https://hackernews.betacat.io /#is-cloudflare-overcharging-us-for-their-images-service&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 41100958&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;同步多线程的工作原理&lt;/stitle>; &lt;id>;https://blog.codingconfessions.com/p/simultaneous-multithreading&lt;/id>; &lt;updated>;2024-07-28T17:53:55.540109Z&lt; /updated>; &lt;link href=&quot;https://blog.codingconfessions.com/p/simultaneous-multithreading&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.unsplash.com/photo-1465447142348-e9952c393450?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm= jpg&amp;ixid=M3wzMDAzMzh8MHwxfHNlYXJjaHw1fHxmb3JrZWQlMjByb2FkfGVufDB8fHx8MTcyMTgxMDM4N3ww&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=1080&quot; style=&quot;宽度: 220px; height: 165px;&quot; />;&lt;br />;同步多线程（SMT）是一种允许处理器同时处理来自两个不同线程的指令的技术，提高了 CPU 利用率和资源使用率，但它也有一些权衡，例如由于共享资源的竞争和潜在的安全风险，SMT 的实现涉及在... &lt;a href=&quot;https://hackernews.betacat.io/#how-simultaneous-multithreading 之间复制某些部分并共享或划分其他部分。 -works-under-the-hood&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41093916&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pallene：静态编译的伴侣Lua 语言&lt;/stitle>; &lt;id>;https://github.com/palllene-lang/palllene/blob/master/doc/manual.md&lt;/id>; &lt;更新>;2024-07-29T04:53:55.540645Z &lt;/更新>; &lt;link href=&quot;https://github.com/pallene-lang/pallene/blob/master/doc/manual.md&quot;/>; &lt;作者>; &lt;名称>;wsc981&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=wsc981&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/21c464735b584cc022081b60457e06cd882119202dbd1d123ab867b451779d0e/palllene-lang /pallene&quot; style=&quot;宽度：220px; height: 110px;&quot; />;&lt;br />;Pallene 是 Lua 的静态类型配套语言，允许类型注释并与 Lua 兼容，具有类型推断、数组、表、函数和记录等功能。该语言具有严格的语法，旨在与 Lua 解释器的特定发布版本一起使用，具有自动强制、隐式转换和 Pallene 等功能。 io/#palllene-a-statically-compiled-companion-language-for-lua&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =41097842&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;OCaml 中的更高种类有界多态性 (2021)&lt;/stitle>; &lt;id>;https://okmij.org/ftp/ML/higher-kind-poly.html&lt;/id>; &lt;更新>;2024-07 -28T21：53：55.541166Z &lt;/更新>; &lt;link href =“https://okmij.org/ftp/ML/higher-kind-poly.html”/>; &lt;作者>; &lt;名称>;tinyspacewizard &lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=tinyspacewizard&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;更高级的多态性，它对类型和类型构造函数进行抽象，并不直接OCaml 支持，但可以通过各种解决方法来实现，例如使用函子、初始代数或存在类型来抽象类型构造函数。这些解决方法可用于实现更高种类的多态函数，例如折叠和求和，可应用于... &lt;a href=&quot;https://hackernews.betacat.io/#higher-kinded-bounded-polymorphism -in-ocaml-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41096187&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SD卡磨损均衡和转换层（2014 ）&lt;/stitle>; &lt;id>;https://msreekan.com/2014/01/15/sdcard/&lt;/id>; &lt;更新>;2024-07-28T19:53:55.542219Z&lt;/更新>; &lt;link href=&quot; https://msreekan.com/2014/01/15/sdcard/&quot;/>; &lt;作者>; &lt;名称>;goodburb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=goodburb&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://msreekan.com/wp-content/uploads/2014/01/sdcard.png?w=650&quot; style=&quot;width: 220 像素；高度：165 像素；” />;&lt;br />;SD 卡使用闪存，通过转换层抽象复杂性，将虚拟地址映射到物理地址，并管理磨损均衡和垃圾收集。该卡的固件针对 SPI 和 SD 总线模式实现了不同的软件堆栈，并通过启动代码检查引脚 1 来识别接口并跳转到相应的软件堆栈。 &lt;a href=&quot;https://hackernews.betacat.io/#sdcard-wear-leveling-and-translation-layers-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41095429&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;DNS LOC 记录的奇异而奇妙的世界&lt;/stitle>; &lt;id>;https://blog.cloudflare.com/the-weird-and-wonderful-world -of-dns-loc-records&lt;/id>; &lt;更新>;2024-07-29T11:53:55.542739Z&lt;/更新>; &lt;link href=&quot;https://blog.cloudflare.com/the-weird-and- Wonder-world-of-dns-loc-records&quot;/>; &lt;作者>; &lt;名称>;avipars&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=avipars&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.cloudflare.com/content/images/480px-Trinity_Site_Obelisk_National_Historic_Landmark.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;CloudFlare 的 RRDNS 权威 DNS 服务器缺少用于指定物理位置的 LOC 记录的解析器，直到开发人员编写了解析器并修复了该问题。 LOC记录格式在RFC 1876中进行了描述，具有二进制格式，该格式被解析并转换为固定大小的二进制格式，其值的范围从1cm到大于木星的直径。 &lt;a href=&quot;https://hackernews.betacat.io/#the-weird-and-wonderful-world-of-dns-loc-records&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41099567&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LeanDojo：使用法学硕士进行精益定理证明&lt;/stitle>; &lt;id>;https://leandojo.org/&lt;/id>; &lt;更新>;2024 -07-28T22：53：55.543257Z &lt;/更新>; &lt;link href =“https://leandojo.org/”/>; &lt;作者>; &lt;名称>;aseg &lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=aseg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://leandojo.org/images/LeanDojo.jpg&quot; style=&quot;width: 220px;高度：115px；” />;&lt;br />;LeanDojo 从 GitHub 存储库中提取数据，包括文件依赖项、AST、证明状态和前提，为前提选择提供有价值的信息。它使用具有挑战性的数据分割来防止高估，要求模型泛化到训练期间未见过的新前提。 &lt;a href=&quot;https://hackernews.betacat.io/#leandojo-theorem-proving-in-lean-using-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=41096486&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;由从业者主导的法学硕士公开课程&lt;/stitle>; &lt;id>;https://hamel.dev/blog/posts/course/&lt;/id>; &lt;已更新>;2024-07-29T15:53:55.543790Z&lt;/已更新>; &lt;link href=&quot;https://hamel.dev/blog/posts/course/&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt; uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hamel.dev/blog/posts/ course/course.png&quot; style=&quot;宽度: 220px 高度: 124px;&quot; />;&lt;br />;Mastering LLM 是一个由行业资深人士讲授的研讨会和讲座系列，主题包括评估、检索增强生成和微调等，专为具有一些 LLM 经验的技术 IC 设计。该课程提供了法学硕士的全面概述，包括现实生活经验、技巧和技术挑战，以及活跃的 Discord 社区和慷慨的计算学分。 &lt;a href=&quot;https://hackernews.betacat.io/#an-open-course-on-llms-led-by-practitioners&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=41100951&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;重新审视非理性饥饿法官效应（2023）&lt;/stitle>; &lt;id>;https://www.cambridge.org/core/journals/judgment-and -决策/文章/非理性饥饿判断效应重温模拟揭示了效应的幅度被高估/61CE825D4DC137675BB9CAD04571AE58&lt;/id>; &lt;更新>;2024-07-28T17 ：53：55.544342Z &lt;/更新>; &lt;link href =“https://www.cambridge.org/core/journals/judgment-and-decision-making/article/irrational-hungry-judge-effect-revisited-simulations- Reveal-that-the-magnitude-of-the-effect-is-overestimated/61CE825D4DC137675BB9CAD04571AE58&quot;/>; &lt;author>; &lt;name>;fzliu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= fzliu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.cambridge.org/covers/JDM_0_0_0/judgment-and-decision-making.jpg&quot; style=&quot;width ：220像素； height: 311px;&quot; />;&lt;br />;文章重新审视了“非理性饥饿法官效应”，即法官在比赛结束时的决定变得不那么有利，并发现合理的时间管理解释可以解释大部分分析表明，最初的发现可能被高估了，需要进一步的研究来理清序列顺序、心理……的影响。&lt;a href=&quot;https://hackernews.betacat.io/#the- irrational-hungry-judge-effect-revisited-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41091803&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;技术行星湮灭：ChronoCam (2013)&lt;/stitle>; &lt;id>;https://www.forrestthewoods.com/blog/tech_of_planetary_annihilation_chrono_cam/&lt;/id>; &lt;更新>;2024-07-29T01:53:55.544865Z&lt;/更新>; &lt; link href=&quot;https://www.forrestthewoods.com/blog/tech_of_planetary_annihilation_chrono_cam/&quot;/>; &lt;author>; &lt;name>;resatori&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=resatori &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.forrestthewoods.com/blog/tech_of_planetary_annihilation_chrono_cam/assets/img/header.jpeg&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;Planetary Annihilation 是一款实时策略游戏，它使用客户端-服务器架构和新颖的曲线系统来启用 ChronoCam 等功能，让玩家能够及时跳回过去并重玩游戏曲线系统将游戏对象数据存储为时间线，从而实现高效的数据传输和压缩，并允许可变播放速率、搜索等功能...... &lt;a href=&quot;https://hackernews.betacat.io /#the-tech-of-planetary-annihilation-chronocam-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41097228&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;Show HN：我制作了一个工具，可以在答案发生变化时接收警报&lt;/stitle>; &lt;id>;https://www.alertfor.com/&lt;/id>; &lt;updated>;2024-07-28T17:53:55.545392Z&lt;/已更新>; &lt;link href=&quot;https://www.alertfor.com/&quot;/>; &lt;作者>; &lt;name>;saran945&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=saran945&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.thee.ai/static/images/web/rocket-laptop.svg&quot; style=&quot;width: 220px; height: 260px;&quot; />;&lt;br />;Alertfor 使用 AQTA 跟踪用户问题的答案，提供不断变化的信息的持续更新。该过程可以提供准确、及时的答案，无需手动检查。&lt;a href=&quot;https ://hackernews.betacat.io/#show-hn-i-made-a-tool-to-receive-alerts-when-answers-change&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=41093161&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：CeLLama – 具有本地 LLM 的单细胞注释&lt;/stitle>; &lt;id>;https://github.com/CelVoxes/ceLLama&lt;/ id>; &lt;更新>;2024-07-28T17:53:55.545920Z&lt;/更新>; &lt;link href=&quot;https://github.com/CelVoxes/ceLLama&quot;/>; &lt;作者>; &lt;名称>;celltalk&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=celltalk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/CelVoxes/ ceLLama/main/ceLLama_files/cellama.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;该脚本使用 Seurat 和 ceLLama 库来分析 10X PBMC 数据集，执行质量控制、标准化和聚类，然后使用 ceLLama 对聚类进行注释。该脚本还生成报告并可视化使用 DimPlot 和 theme_void() 的结果 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-cellama-single-cell-annotation-with-local-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=41092862&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/饲料>;