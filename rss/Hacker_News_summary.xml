<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-09-04T09:51:39.707645Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;战争游戏：战场策略和国际象棋游戏&lt;/stitle>; &lt;id>;https://www.thearticle.com/war-games-battlefield-strategy-and-the-国际象棋游戏&lt;/id>; &lt;更新>;2023-09-04T08:51:34.599590Z&lt;/更新>; &lt;link href=&quot;https://www.thearticle.com/war-games-battlefield-strategy-and -the-game-of-chess&quot;/>; &lt;作者>; &lt;名称>;mellosouls&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mellosouls&lt;/uri>; &lt;/author>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://s3-eu-west-2.amazonaws.com/photos.thearticle.com/app/product/authors/4/detail_330px-Raymond_Keene_1985_21.jpg&quot; style=&quot;宽度：220px； height: 221px;&quot; />;&lt;br />;国际象棋游戏最初是根据古印度陆军的四个兵种：骑兵、步兵、大象和战车进行的。它最初被称为“Chaturanga”，指的是这四个兵种早在白垩纪时期，当我在德威学院学习国际象棋和历史时，我的国际象棋教育就以国际象棋棋手的战略圣经《我的系统》的作者阿伦·尼姆佐维奇的著作为基础。当时，我还形成了理论我可以进一步模仿威灵顿公爵的军事行动，特别是在西班牙/葡萄牙半岛战争中，对抗拿破仑元帅领导的法国军队。我从铁公爵那里得到的重要教训——主要是从查尔斯·奥曼爵士的《英国史》和阿瑟·布莱恩特爵士关于拿破仑战争的三部曲——都是坚不可摧的防御的建设，威灵顿在托雷斯韦德拉什防线消灭马塞纳元帅的纵队就证明了这一点。当机会出现时，牢不可破的抵抗将与闪电袭击结合起来，就像威灵顿在萨拉曼卡和维多利亚取得的决定性胜利一样。后者激发了路德维希·范·贝多芬的“战斗交响曲”。半岛战争期间，威灵顿面对法国元帅马塞纳、马尔蒙、维克多、内伊、苏尔特和拿破仑的弟弟西班牙国王约瑟夫，以智取胜。当然，他的终极杰作是滑铁卢战役，威灵顿亲自击败了拿破仑，从而结束了皇帝短暂的百日帝国重生。总的来说，令我印象深刻的是，许多最著名的陆上军事胜利都可以与国际象棋游戏找到相似之处，正如 Hieronymus Vida 在他的诗 Scacchia Ludus (1525) 中所写：“Ludimus effigiem belli, simulataque veris”（“我们玩国际象棋”）国际象棋游戏，模拟战争”）。事实上，一些军队（例如纳粹德国和苏联的军队）积极鼓励他们的军队下国际象棋。与此同时，在第二次世界大战期间，美军（在著名拳击冠军乔·路易斯的支持下）敦促部队参加要求不那么高的跳棋/跳棋游戏。最后，斯科特·布尔曼在他的著作《旷日持久的游戏：毛泽东革命战略的魏棋解读》中，通过中国古代古典围棋（也称为围棋）的折射和解释媒介，解释了毛泽东的军事行动。卫驰）。因此，我提出的平行论点是有历史、先例和事实支持的。在我看来，这些著名的战役即使不是精确的复制品，至少也能带来有趣的国际象棋相似之处：高格马拉之战（又名阿尔贝拉之战），公元前 331 年：亚历山大大帝击败了波斯万王之王大流士的大军，绕过了大流士的庞大军队。他集结军队，将侵略直接瞄准敌方君主。这里让我产生共鸣的是 1851 年阿道夫·安德森 (Adolf Anderssen) 和莱昂内尔·基塞利茨基 (Lionel Kieseritzky) 之间的不朽游戏，巨大的物质差距丝毫没有改变怀特对黑王发动检查交配袭击的目的。这场比赛结束时，白方以微小但紧凑的兵力将黑王将死，而黑军的其余部分则只能袖手旁观。在接下来的八个例子中，我邀请 TheArticle 的读者和我一起解决识别国际象棋游戏的难题，无论是您自己的游戏，还是已知的经典游戏，都符合平行法案。为了让事情顺利进行，我在每种情况下都指出了与国际象棋游戏的链接，我相信这提供了合适的相似之处。公元前 216 年坎尼之战：汉尼拔引诱拥挤的罗马中锋，然后从侧翼粉碎，近两千年后，苏丹苏莱曼·卡努尼（被称为“伟大的”）重复了这一策略，当时他从德夫希尔挑选的禁卫军消灭了罗马军队。 1526 年莫哈奇战役中匈牙利国王的基督教军队。这与 1971 年前世界冠军蒂格兰·彼得罗相 (Tigran Petrosian) 和维克多·科尔奇诺伊 (Viktor Korchnoi) 之间的国际象棋比赛类似。在这里，科尔奇诺伊 (Korchnoi) 建立了一个巨大而笨重的棋子中心，彼得罗相 (Petrosian) 从侧翼摧毁了它。法萨卢斯之战（Battle of Pharsalus）公元前 48 年：尤利乌斯·凯撒军队中训练有素的步兵击败了庞培大帝的骑兵。一场决定性的战斗最终导致罗马共和国被凯撒/奥古斯都元首统治所取代。与 1961 年约翰·利特尔伍德 (John Littlewood) 与米哈伊尔·鲍特维尼克 (Mikhail Botvinnik) 的对局进行比较，以及白方如何发起大规模的骑士式进攻，而鲍特维尼克却用他的棋子巧妙地阻止了进攻。 1415年阿金库尔战役：紧凑的英国步兵，依靠长弓，消灭了一支规模更大的马背上的法国装甲骑士。类似的例子是 1843 年皮埃尔·查尔斯·富尼耶·德·圣阿芒 (Pierre Charles Fournier de Saint Amant) 和英国伟人霍华德·斯汤顿 (Howard Staunton) 之间的比赛。斯汤顿阻止了他英勇的法国对手的每一次进攻。事实上，当时斯汤顿在巴黎这场比赛中的胜利经常被比作威灵顿在滑铁卢的胜利，尽管我保留了这种类比，正如我们将看到的，鲍比·费舍尔和鲍里斯·斯帕斯基之间的一场混战。 1645 年内斯比之战：英国内战中的一次决定性交战，奥利弗·克伦威尔 (Oliver Cromwell) 和新模范军的骑兵向查理一世的保皇党军队挥出右勾拳，基本上终止了国王在第一次内战中的抵抗。 1970 年，在我自己与欧文·欣德尔 (Owen Hindle) 的比赛中，我遵循了克伦威尔 (Cromwell) 的策略，先从一侧冲过，然后向右转动，详细摧毁了黑人的阵地。 1704 年布伦海姆战役：马尔伯勒公爵是英格兰陆战中最伟大的军事天才，他削弱了面对他的法巴军队的侧翼，然后以集结的骑兵中队从中央突破。 1960 年乔纳森·彭罗斯 (Jonathan Penrose) 和米哈伊尔·塔尔 (Mikhail Tal) 之间的比赛首先是侧翼小冲突，然后是海啸般的大规模中央推进。 1805 年奥斯特利茨战役（也称为三皇之战）：拿破仑的杰作。矛盾的是，皇帝放弃了中央高地，却在毁灭性的反击中夺回了它。这场战斗在托尔斯泰的巨著《战争与和平》中占有重要地位。 1986 年，两位伟大的国际象棋世界冠军加里·卡斯帕罗夫 (Garry Kasparov) 和阿纳托利·卡尔波夫 (Anatoly Karpov) 之间的国际象棋比赛取得了胜利，卡斯帕罗夫放弃了王后一侧和中心的大部分区域，以攻击黑王的庇护所。 1815 年滑铁卢战役：惠灵顿公爵与当时最伟大的将军拿破仑本人进行了经典的惠灵顿战役。公爵将坚不可摧的防御与致命一击相结合，恰到好处地发动反击。在我看来，这场战斗类似于另一场伟大的竞争：1972年，鲍里斯·斯帕斯基和鲍比·费舍尔这对对立的巨人之间的国际象棋比赛，标志着世界超级大国之间的同源之战——不再是大英帝国与法国，而是美国与苏联。在这场比赛的第 13 场比赛中，就像在滑铁卢一样，斯帕斯基以令人印象深刻的活力向前推进，但被费舍尔的反攻击退。经过多次“猛烈打击”后，美国人最终通过在翼上传球的前进来决定比赛，这在以前并不是主要的行动场景，反映了布吕歇尔率领的普鲁士军队抵达滑铁卢战场的情况。 1863 年葛底斯堡战役：南方联盟将军罗伯特·E·李 (Robert E. Lee) 率领 15,000 名步兵发动拿破仑纵队攻击，称为皮克特冲锋。与滑铁卢战役一样，北方指挥官米德精心策划的集中防御火力挫败了进攻，纵队全部人力的损失使战争的天平向有利于北方的方向倾斜。此后，尤利西斯·S·格兰特将军在荒野之战中进行了旷日持久的消耗战，最终消灭了南方联盟的抵抗。每个棋手都会认识到过早和考虑不周的攻击会导致灾难的综合症。 1996 年深蓝（国际象棋计算机）击败加里·卡斯帕罗夫就是一个典型的例子：&lt;a href=&quot;https://hackernews.betacat.io/#war-games-battlefield-strategy-and-the-game- of-chess&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37378196&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Amiga Samplers：1990 年的廉价舞曲&lt;/stitle >; &lt;id>;https://www.youtube.com/watch?v=i9MXYZh1jcs&lt;/id>; &lt;更新>;2023-09-04T02:51:34.717249Z&lt;/更新>; &lt;link href=&quot;https://www .youtube.com/watch?v=i9MXYZh1jcs&quot;/>; &lt;author>; &lt;name>;bane&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bane&lt;/uri>; &lt;/author>; &lt;content type =“html”>;&lt;iframe src =“//www.youtube.com/embed/i9MXYZh1jcs”frameborder =“0”allowfullscreen loading =“lazy”>;&lt;/iframe>; &lt;a href =“https://” hackernews.betacat.io/#amiga-samplers-budget-dance-music-in-1990&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=37376675&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;科学家使用量子装置将化学过程减慢 100B&lt;/stitle>; &lt;id>;https://www.sydney.edu.au/news-opinion/news/2023/08/29/conical -intersection-simulation-slowed-by-quantum-computer-100-billion-times.html&lt;/id>; &lt;更新>;2023-09-04T04:51:34.719308Z&lt;/更新>; &lt;link href=&quot;https:// www.sydney.edu.au/news-opinion/news/2023/08/29/conical-intersection-simulation-slowed-by-quantum-computer-100-billion-times.html&quot;/>; &lt;作者>; &lt;名称>; yoquan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yoquan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.youquan.com/ sydney.edu.au/dam/corporate/images/news-and-opinion/news/2023/august/vanessa-olaya-aguedelo-christophe-valahu-quantum-control-lab-sydney-nanoscience-hub-photo-stefanie- zingsheim.jpg/_jcr_content/renditions/cq5dam.web.1280.1280.jpeg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;悉尼大学的科学家使用量子计算机将关键化学过程减慢了 1000 亿倍。这一突破可能在材料科学、药物设计和太阳能收集。&lt;a href=&quot;https://hackernews.betacat.io/#scientists-use-quantum-device-to-slow-chemical-process-by-factor-of-100b&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376998&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我所知道的有关软盘的一切&lt;/stitle>; &lt;id>;https://thejpster.org。 uk/blog/blog-2023-08-28/&lt;/id>; &lt;更新>;2023-09-04T01:51:34.719752Z&lt;/更新>; &lt;link href=&quot;https://thejpster.org.uk/blog/ blog-2023-08-28/&quot;/>; &lt;作者>; &lt;名称>;jnord&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;软盘驱动器是一种奇怪的东西。我们知道它们是容纳那些几乎方形的小塑料“软盘”的插槽，而我们现在只在计算机博物馆中真正看到它们。 &lt;a href=&quot;https://hackernews.betacat.io/#everything-i-know-about-floppy-disks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37376369&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Haskell 迷你模式手册（2020）&lt;/stitle>; &lt;id>;https://kowainik.github.io/posts/haskell-mini-patterns&lt;/id>; &lt;更新>;2023-09-04T05:51:34.720203Z&lt;/更新>; &lt;link href=&quot;https://kowainik.github.io/posts/haskell-mini-patterns&quot;/>; &lt;作者>; &lt;名称>;Tomte&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://kowainik.github.io /images/logo-tr.png&quot; style=&quot;宽度：220px；高度：80px；&quot; />;&lt;br />;尽管 Haskell 是一种强大的语言，有助于实现健壮且可维护的程序，但在 Haskell 的可能性海洋中航行仍然具有挑战性。该语言为您提供了大量很棒的方法，但了解如何以及在何处正确使用它们并不总是那么简单。幸运的是，与任何其他主流编程语言一样，Haskell 也有生成高质量代码的最佳实践和推荐方法。 &lt;a href=&quot;https://hackernews.betacat.io/#haskell-mini-patterns-handbook-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37377246&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;历史学家越来越有动力讲述戏剧性故事&lt;/stitle>; &lt;id>;https://www.ian-leslie.com/p/stories-are-bad-for-你的智力&lt;/id>; &lt;更新>;2023-09-03T19:51:34.720636Z&lt;/更新>; &lt;link href=&quot;https://www.ian-leslie.com/p/stories-are-bad-for -your-intelligence&quot;/>; &lt;作者>; &lt;名称>;jseliger&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jseliger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com %2Fpublic%2Fimages%2F5b102b0d-13ee-4cf2-b431-74991ebfccc7_445x556.jpeg&quot; style=&quot;宽度：220px；高度：275px；&quot; />;&lt;br />;亨利·科特 (Henry Cort) 是工业革命期间的一位发明家，他因开发出一种生产方法而彻底改变了英国的钢铁工业而受到赞誉。然而，最近的一篇论文认为，科特实际上是从牙买加的黑人奴隶那里窃取了他的创新。这篇论文引起了广泛的讨论，但已被另一位学者彻底揭穿。 &lt;a href=&quot;https://hackernews.betacat.io/#historians-have-an-increasingly-strong-incentive-to-tell-dramatic-stories&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37373257&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cola：用于实时协作编辑的文本 CRDT&lt;/stitle>; &lt;id>;https://nomad.foo/blog/cola &lt;/id>; &lt;更新>;2023-09-03T20:51:34.721081Z&lt;/更新>; &lt;link href=&quot;https://nomad.foo/blog/cola&quot;/>; &lt;作者>; &lt;名称>;homarp&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=homarp&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://avatars.githubusercontent.com/ u/59321248?v=4&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Cola 是一个用 Rust 编写的用于实时协作编辑的文本 CRDT。它保证所有副本的收敛，并可用于表示纯文本文档。 &lt;a href=&quot;https://hackernews.betacat.io/#cola-a-text-crdt-for-real-time-collaborative-editing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37373796&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用未初始化的内存来获取乐趣和利润 (2008)&lt;/stitle>; &lt;id>;https://research.swtch.com/sparse&lt;/id >; &lt;更新>;2023-09-04T00:51:34.722416Z&lt;/更新>; &lt;link href=&quot;https://research.swtch.com/sparse&quot;/>; &lt;作者>; &lt;名称>;Smaug123&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=Smaug123&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://research.swtch.com/sparse0b.png “样式=”宽度：220px;高度：114px;“ />;&lt;br />;本文讨论了一个巧妙的技巧，它允许数组值保持未初始化状态，并且在正常操作期间仍然可以正确运行。该技巧涉及使用两个数组（一个名为密集数组，一个名为稀疏数组）来表示一组稀疏整数。密集数组按插入顺序存储集合中的元素，而稀疏数组将整数映射到密集数组中的索引。这种表示形式允许高效的集合操作和迭代，尽管它是以增加内存使用为代价的。 &lt;a href=&quot;https://hackernews.betacat.io/#using-uninitialized-memory-for-fun-and-profit-2008&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37360314&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;乐高 3 轴泡沫塑料切割机 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=gR0SYhG76fw&lt;/ id>; &lt;更新>;2023-09-03T22:51:34.722852Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=gR0SYhG76fw&quot;/>; &lt;作者>; &lt;名称>;pavel_lishin&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=pavel_lishin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/嵌入/gR0SYhG76fw&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#lego-3-axis-styrofoam-cutter-video&quot;target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37375254&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Glove80 人体工学键盘&lt;/stitle>; &lt;id>;https://danieldk.eu /Posts/2023-09-03-Glove80.html&lt;/id>; &lt;更新>;2023-09-04T03:51:34.723318Z&lt;/更新>; &lt;link href=&quot;https://danieldk.eu/Posts/2023- 09-03-Glove80.html&quot;/>; &lt;作者>; &lt;名称>;JNRowe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=JNRowe&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://danieldk.eu/Posts/2023-09-03-Glove80/glove80-black.jpeg&quot; style=&quot;宽度：220px;高度：129px;&quot; />;&lt;br />;Glove80 是 MoErgo 开发的一款人体工学键盘。它具有可变分体设计、拇指簇、键槽、掌托和低调的 Choc v1 开关。与 Kinesis Advantage2 相比/360 Pro，Glove80 提供改进的键孔设计，更容易接触外食指柱。&lt;a href=&quot;https://hackernews.betacat.io/#glove80-ergonomic-keyboard&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376686&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;铜消失：PCB 蚀刻背后的化学&lt;/stitle>; &lt;id>;https://hackaday。 com/2023/08/31/copper-be-gone-the-chemistry-behind-pcb-etching/&lt;/id>; &lt;更新>;2023-09-04T04:51:34.723751Z&lt;/更新>; &lt;link href=&quot; https://hackaday.com/2023/08/31/copper-be-gone-the-chemistry-behind-pcb-etching/&quot;/>; &lt;作者>; &lt;name>;rolph&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hackaday.com/wp-content/uploads/2023/08 /dscf8748_featured.png?w=800&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;由于快速 PCB 制造服务的便利性和低成本，家庭蚀刻 PCB 变得越来越不受欢迎。但是，仍然有理由蚀刻自己的电路板，重要的是了解蚀刻工艺背后的化学原理。PCB 蚀刻方法可分为湿法和干法工艺，每种工艺都有各自的优点和缺点。&lt;a href=&quot;https://hackernews.betacat.io/#copper-be-gone- the-chemistry-behind-pcb-etching&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37375431&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;丹尼斯·里奇主页&lt; /stitle>; &lt;id>;http://cm.bell-labs.co/who/dmr/&lt;/id>; &lt;更新>;2023-09-04T01:51:34.724171Z&lt;/更新>; &lt;link href=&quot;http: //cm.bell-labs.co/who/dmr/&quot;/>; &lt;作者>; &lt;名称>;colinprince&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=colinprince&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://cm.bell-labs.co/who/dmr/dmr.gif&quot; style=&quot;width: 220px;身高：256px;&quot; />;&lt;br />;丹尼斯·里奇是一位善良、可爱、谦逊、慷慨的兄弟。他有一种冷幽默感，对生活的荒谬有着敏锐的鉴赏力。他在世界上留下了印记，他的温柔个性很好理解。&lt;a href=&quot;https://hackernews.betacat.io/#dennis-ritchie-home-page&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https:/ /news.ycombinator.com/item?id=37376377&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;液体类型的简要介绍&lt;/stitle>; &lt;id>;https://goto.ucsd.edu/~ucsdpl-blog/liquidtypes/2015/09/19/液体类型/&lt;/id>; &lt;更新>;2023-09-03T21:51:34.724601Z&lt;/更新>; &lt;link href=&quot;https://goto.ucsd.edu/~ucsdpl-blog/liquidtypes/2015/09 /19/liquid-types/&quot;/>; &lt;作者>; &lt;名称>;marvinborner&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=marvinborner&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://goto.ucsd.edu/~nvazou/liquid.jpg&quot; style=&quot;宽度：220px; height: 149px;&quot; />;&lt;br />;Liquid Types 通过逻辑谓词丰富了现有的类型系统，并允许您指定和自动验证代码的语义属性。它们提供了一种指定和自动验证代码的语义属性的方法。&lt;a href=&quot;https://hackernews.betacat.io/#a-gentle-introduction-to-liquid-types&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37349276&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;WiiLink – 日语 Wii 频道恢复&lt;/stitle>; &lt;id>;https://www.wiilink24.com/&lt;/id>; &lt;updated>;2023-09-04T01:51:34.725236 Z&lt;/updated>; &lt;link href=&quot;https://www.wiilink24.com/&quot;/>; &lt;作者>; &lt;name>;mdwalters&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =mdwalters&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.wiilink24.com/Images/wiinomaicon.svg&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;WiiLink 是唯一在日本独家 Wii 频道正式关闭后重新恢复的服务。通过我们的服务，您可以在您的 Nintendo Wii 上再次体验所有这些 - 可能是为了第一次。&lt;a href=&quot;https://hackernews.betacat.io/#wiilink-japanese-wii-channels-revived&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=37376254&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我不想将我的自由设计工作室发展成为一家机构&lt;/stitle>; &lt;id>;https://neladunato.com/blog/why-wont-grow -freelance-studio-into-agency/&lt;/id>; &lt;更新>;2023-09-03T15:51:34.726121Z&lt;/更新>; &lt;link href=&quot;https://neladunato.com/blog/why-wont-grow -freelance-studio-into-agency/&quot;/>; &lt;作者>; &lt;名称>;taubek&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=taubek&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://neladunato.com/wp-content/uploads/grow-freelance-studio-agency.jpg”样式=“宽度：220px; height: 132px;&quot; />;&lt;br />;不，作者并不打算将他们的自由设计工作室发展成为一家代理机构。他们更喜欢独立工作并在逐个项目的基础上与其他创意人员合作。&lt;a href= “https://hackernews.betacat.io/#i-dont-want-to-grow-my-freelance-design-studio-into-an-agency” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37371084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;费尔南多·佩索阿的无私&lt;/stitle>; &lt;id>;https://www.theparisreview.org/blog/2023/06/23/fernando -pessoas-many-personalities/&lt;/id>; &lt;更新>;2023-09-04T00:51:34.726546Z&lt;/更新>; &lt;link href=&quot;https://www.theparisreview.org/blog/2023/06/23 /fernando-pessoas-many-personalities/&quot;/>; &lt;作者>; &lt;名称>;Caiero&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Caiero&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://www.theparisreview.org/blog/wp-content/uploads/2023/06/fernando-pessoa-810x1024.jpg”样式=“宽度：220px;身高：279px;&quot; />;&lt;br />;葡萄牙作家费尔南多·佩索阿在诗歌和散文中采用不同的人物形象来表达不受欢迎和极端的观点。他创造了虚构的作家，称为异名作家，他们用英语、法语和阿拉伯语写作。葡萄牙语。佩索阿最著名的异名是阿尔贝托·卡埃罗、阿尔瓦罗·德·坎波斯和里卡多·雷斯。&lt;a href=&quot;https://hackernews.betacat.io/#fernando-pessoas-unselving&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37367896&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;调查公元 3 世纪至 7 世纪日本的有意颅骨改造&lt;/stitle>; &lt;id>;https://journals.plos .org/plosone/article?id=10.1371/journal.pone.0289219&lt;/id>; &lt;更新>;2023-09-03T23:51:34.726973Z&lt;/更新>; &lt;link href=&quot;https://journals.plos. org/plosone/article?id=10.1371/journal.pone.0289219&quot;/>; &lt;作者>; &lt;name>;diodorus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=diodorus&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://journals.plos.org/resource/img/logo-plos.png&quot; style=&quot;width: 220px; height: 174px;&quot; />;&lt;br />;有意颅骨改造有着悠久的历史，几千年来在世界各地的许多文化中都是普遍存在的做法。本研究旨在调查日本广田遗址的颅骨形状特征，以澄清颅骨是否被有意改造。&lt;a href=&quot;https://hackernews.betacat.io/#investigating-intentional-cranial-modification-in-3rd-to-7th- century-ce-japan&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37367199&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google 成立 25 年前的今天&lt;/stitle>; &lt;id>;https://en .wikipedia.org/wiki/History_of_Google&lt;/id>; &lt;更新>;2023-09-04T07:51:34.727391Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/History_of_Google&quot;/>; &lt;作者>; &lt;名称>;keepamovin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=keepamovin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Google_page_brin.jpg/220px-Google_page_brin.jpg&quot; style=&quot;width: 220px; height: 153px;&quot; />;&lt;br />;Google 由拉里·佩奇 (Larry Page) 和谢尔盖·布林 (Sergey Brin) 于 1998 年创立，是一家基于网络的搜索引擎。它很快取得了成功，并扩大了其产品范围，成为世界上最大的媒体公司之一。&lt; a href=&quot;https://hackernews.betacat.io/#google-was-founded-25-years-ago-today&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=37378069&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;每天学一些旧东西，第九部分：Aha-154xB 和 ASPI4DOS.SYS&lt;/stitle>; &lt;id>;https://www.os2museum.com/wp/learn -something-old-every-day-part-ix-aha-154xb-and-api4dos-sys/&lt;/id>; &lt;更新>;2023-09-03T20:51:34.727832Z&lt;/更新>; &lt;link href=&quot;https ://www.os2museum.com/wp/learn-something-old-every-day-part-ix-aha-154xb-and-aspi4dos-sys/&quot;/>; &lt;作者>; &lt;名称>;userbinator&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=userbinator&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.os2museum.com/wp/ wp-content/uploads/2023/08/aha1540b-api4dos-fail-640x356.png&quot; style=&quot;width: 220px; height: 123px;&quot; />;&lt;br />;AHA-154xB SCSI HBA 无法与 Adaptec 1999 年左右的最新 DOS 驱动程序一起使用。该驱动程序的行为就好像根本没有 HBA 一样。该问题是由于ASPI4DOS.SYS 版本 3.36 驱动程序，错误地坚持使用 AHA-154xB 适配器中不存在的特定签名。&lt;a href=&quot;https://hackernews.betacat.io/#learn-something-old-every-day -part-ix-aha-154xb-and-api4dos-sys&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37367267&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;华为拆解显示芯片在美国制裁的打击中取得突破&lt;/stitle>; &lt;id>;https://www.bloomberg.com/news/features/2023-09-04/look-inside-huawei-mate-60-pro-phone -powered-by-made-in-china-chip&lt;/id>; &lt;更新>;2023-09-04T07:51:34.728254Z&lt;/更新>; &lt;link href=&quot;https://www.bloomberg.com/news/ features/2023-09-04/look-inside-huawei-mate-60-pro-phone-powered-by-made-in-china-chip&quot;/>; &lt;author>; &lt;name>;fspeech&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=fspeech&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;请确保您的浏览器支持 JavaScript 和 cookie，并且您没有阻止它们加载。欲了解更多信息，您可以查看我们的 和 。 &lt;a href=&quot;https://hackernews.betacat.io/#huawei-t​​eardown-shows-chip-breakthrough-in-blow-to-us-sanctions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37377926&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Yenish 人&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Yenish_people&lt;/id>; &lt;更新>; 2023-09-03T20:51:34.728674Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Yenish_people&quot;/>; &lt;author>; &lt;name>;merename&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=merename&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb /e/e4/Jenische1928e.jpg/300px-Jenische1928e.jpg&quot; style=&quot;宽度：220px；高度：143px；&quot; />;&lt;br />;叶尼什人是西欧的一个流动群体，主要居住在德国、奥地利、瑞士、卢森堡、比利时和法国部分地区。他们在 19 世纪初成为一个独特的群体，其中大多数人在 19 世纪中叶至 20 世纪中叶开始定居。 &lt;a href=&quot;https://hackernews.betacat.io/#yenish-people&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37373865&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;我们如何知道原始印欧语等语言的存在[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=jIgoBRbfkUA&lt;/id>; &lt;更新>;2023- 09-04T03:51:34.729110Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=jIgoBRbfkUA&quot;/>; &lt;作者>; &lt;name>;ipnon&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ipnon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/jIgoBRbfkUA&quot;frameborder=&quot; 0&quot;allowfullscreen loading=&quot;lazy&quot;>;&lt;/iframe>;&lt;a href=&quot;https://hackernews.betacat.io/#how-we-know-languages-like-proto-indo-european-existed-video&quot;目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37376879&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何使用 Coq Proof Assistant 构建来编写正确的代码&lt;/stitle>; &lt;id>;https://betterprogramming.pub/a-taste-of-coq-and- Correct-code-by-construction-111bf74d3b98&lt;/id>; &lt;更新>;2023-09-03T20:51:34.729539Z&lt;/更新>; &lt;link href=&quot;https://betterprogramming.pub/a-taste-of-coq-and- Correct-code-by-construction-111bf74d3b98&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/resize:适合:1358/0*43Djm3LnABmrW5fl&quot; style=&quot;宽度: 220px; height: 118px;&quot; />;&lt;br />;有一些工具可以进行更严格的编程，并为您提供一些使用它们的演示。我们将了解如何验证二叉搜索树，这是一个流行的主题for coding interviews. We code up the Binary Search Tree in Kotlin to use some syntax lots of people are used to. &lt;a href=&quot;https://hackernews.betacat.io/#how-to-write-correct-code- by-construction-using-the-coq-proof-assistant&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37373983&quot; target= &quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google preemptively banned hundreds of millions of &#39;pirate&#39; URLs last year&lt;/stitle>; &lt;id>;https://torrentfreak.com/google-preemptively-banned-hundreds-of-millions-of-pirate-urls-last-year-230903 /&lt;/id>; &lt;updated>;2023-09-03T19:51:34.729958Z&lt;/updated>; &lt;link href=&quot;https://torrentfreak.com/google-preemptively-banned-hundreds-of-millions-of-pirate -urls-last-year-230903/&quot;/>; &lt;author>; &lt;name>;CoBE10&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CoBE10&lt;/uri>; &lt;/author>; &lt; content type=&quot;html&quot;>;Google has taken extra anti-piracy measures and emphasized the importance of providing legal alternatives to combat piracy.他们实施了先发制人的删除操作，在 URL 被编入索引之前对其进行阻止，并接受尚未发生的盗版行为的删除通知。降级网站平均会损失 89% 的搜索结果点击次数。 &lt;a href=&quot;https://hackernews.betacat.io/#google-preemptively-banned-hundreds-of-millions-of-pirate-urls-last-year&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37373280&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;The Raft Consensus Algorithm (2015)&lt;/stitle>; &lt;id>;https://raft.github.io&lt;/id>; &lt;updated>;2023-09-03T12:51:34.730383Z&lt;/updated>; &lt;link href=&quot;https://raft.github.io&quot;/>; &lt;author>; &lt;name>;oumua_don17&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=oumua_don17&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raft.github.io/logo/solo.svg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;这是在浏览器中运行的 Raft 集群。您可以与其交互以查看 Raft 的运行情况。左侧显示了五台服务器，右侧显示了它们的日志。 &lt;a href=&quot;https://hackernews.betacat.io/#the-raft-consensus-algorithm-2015&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37369826&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;He created the Katamari games, but they&#39;re rolling on without him&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/07/28/arts/katamari-damacy-keita-takahashi.html&lt;/id>; &lt;updated>;2023-09-04T00:51:34.730838Z&lt;/updated>; &lt;link href=&quot;https://www.nytimes.com/2023/07/28/arts/katamari-damacy-keita-takahashi.html&quot;/>; &lt;author>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/07/31/multimedia/28takahashi-games8-zlgh/28takahashi-games8-zlgh-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Keita Takahashi, the creator of the Katamari games, has left the franchise and does not receive any royalties from its sales. He originally trained as a sculptor but turned to video games to provide joy and fun to people. Despite his unique vision, the gaming industry often does not give individual creators ownership of their creations. &lt;a href=&quot;https://hackernews.betacat.io/#he-created-the-katamari-games-but-theyre-rolling-on-without-him&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37374489&quot; target=&quot;_blank&quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;