<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-08-27T19:50:53.293776Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;古典音乐适合每个人&lt;/stitle>; &lt;id>;https://www.firstthings.com/web-exclusives/2023/08/classical-music-is-for-everyone &lt;/id>; &lt;更新>;2023-08-27T18:50:41.814603Z&lt;/更新>; &lt;link href=&quot;https://www.firstthings.com/web-exclusives/2023/08/classical-music-is- for-everyone&quot;/>; &lt;author>; &lt;name>;Bostonian&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Bostonian&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://d2ipgh48lxx565.cloudfront.net/uploads/article_64de75a83fea4.jpeg?Expires=1695754804&amp;Signature=eOpNUQS2dET060YRrZTh0xCswV3ZaLQ30lrGeZuZYPspohKYmHbnIRN7-23k6U6lP2 G9iq~wXLjxmSC0uCEgyiSfv~2Gm6IQLb5disgwkeDs0loeTxYi1UEgstqoay-WT74dArvJVtR06trkzepnB2k3xQhVpskf8ZmrjoKo-gW5YkX2QcO3Ju-0jxPwRIkSQhFj48HGvbogB9qz6DUml JgOeOBQd02y1EWRXcbkgPv8O2BHfBVV9VVZKpqTKtXp~KYw1k-H0SINnkDTGdjLeJxNXWdg3OttR5-i2rwy84Ej-ZWrROfdfyf38zdkt2jOaYkkI-OnnZBT8z3N- YKgqw__&amp;Key-Pair-Id=APKAIN7SVXNLPAOVDKZQ&quot; style=&quot;宽度：220px; height: 92px;&quot; />;&lt;br />;作者从电影《2001太空漫游》中的音乐开始，讲述了他对古典音乐的发现和热爱。他描述了古典音乐如何吸引他并改变他的生活，使他成为广播电台的古典音乐播音员。&lt;a href=&quot;https://hackernews.betacat.io/#classical-music-is-for-everyone&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37285413&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Apple 的 MPW C 编译器 (2006) 产生的一些错误消息&lt;/stitle>; &lt;id>;https://www.cs。 cmu.edu/~jasonh/personal/humor/compile.html&lt;/id>; &lt;更新>;2023-08-27T15:50:41.926782Z&lt;/更新>; &lt;link href=&quot;https://www.cs.cmu. edu/~jasonh/personal/humor/compile.html&quot;/>; &lt;作者>; &lt;名称>;Asdrubalini&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Asdrubalini&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;Apple 的 MPW C 编译器 (2006) 生成的一些错误消息包括：“字符串文字太长”、“switch 语句内只能有 case 或 default 标签”、“A typedef 名称完全令人惊讶&#39;, &#39;您不能修改常量&#39;, &#39;输入（强制转换）必须是标量&#39;, &#39;不能将 void 类型强制转换为 void 类型&#39;, &#39;此标签是 a 的目标从块外部转到&#39;，&#39;符号表已满 - 致命堆错误&#39;。 &lt;a href=&quot;https://hackernews.betacat.io/#some-of-the-error-messages-productd-by-apple-s-mpw-c-compiler-2006&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37283375&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Python 类型提示 – *args 和 **kwargs (2021)&lt;/stitle>; &lt;id>;https:// /adamj.eu/tech/2021/05/11/python-type-hints-args-and-kwargs/&lt;/id>; &lt;更新>;2023-08-27T13:50:41.927588Z&lt;/更新>; &lt;link href= “https://adamj.eu/tech/2021/05/11/python-type-hints-args-and-kwargs/”/>; &lt;author>; &lt;name>;ekiauhce&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=ekiauhce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;在 Python 中编写类型提示时，确定如何处理 * 和 ** 运算符可能会令人困惑（通常称为 *args 和 **kwargs）。 * 运算符捕获元组中的可变位置参数，而 ** 运算符捕获字典中的可变关键字参数。添加类型提示时，只需定义所包含参数的类型，因为类型检查器会自动添加适当的容器类型。 &lt;a href=&quot;https://hackernews.betacat.io/#python-type-hints-args-and-kwargs-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37282385&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Kraftwerk 发布了自己的袖珍计算器合成器（2019）&lt;/stitle>; &lt;id>;https://www.openculture.com/2019/06/when-kraftwerk- Issued-their-own-pocket-calculator-synthesizer.html&lt;/id>; &lt;更新>;2023-08-27T14:50:41.928082Z&lt;/更新>; &lt;link href=&quot;https://www.openculture.com/2019 /06/when-kraftwerk-issued-their-own-pocket-calculator-synthesizer.html&quot;/>; &lt;author>; &lt;name>;layer8&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =layer8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn8.openculture.com/2019/06/05220917/kraftcalc3.png&quot; style=&quot;width: 220px;高度：130px；” />;&lt;br />;Kraftwerk 于 1981 年发行了他们的第八张录音室专辑《Computer World》。专辑中的歌曲“Pocket Calculator”是使用 Casio fx-501P 可编程计算器录制的。 Kraftwerk 甚至委托卡西欧制作了一款可以播放音乐的特殊计算器，让粉丝可以在自己的计算器上播放 Kraftwerk 的热门歌曲。 &lt;a href=&quot;https://hackernews.betacat.io/#kraftwerk-issued-their-own-pocket-calculator-synthesizer-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37271644&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Overthewire.org&lt;/stitle>; &lt;id>;https://overthewire.org/wargames/&lt;/id>; &lt;更新>;2023-08-27T12： 50:41.928529Z&lt;/updated>; &lt;link href=&quot;https://overthewire.org/wargames/&quot;/>; &lt;作者>; &lt;name>;ghostfoxgod&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=ghostfoxgod&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;OverTheWire 社区提供的战争游戏可以帮助您以充满乐趣的游戏形式学习和实践安全概念。游戏页面上提供了有关如何使用 SSH 连接到每个游戏的信息。 &lt;a href=&quot;https://hackernews.betacat.io/#overthewire-org&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37281745&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;探索日本废弃村庄的怪异之美&lt;/stitle>; &lt;id>;https://www.japantimes.co.jp/news/2023/08/18/japan/society/exploring-the-eerie- beauty-of-japans-abandoned-villages/&lt;/id>; &lt;更新>;2023-08-27T15:50:41.928969Z&lt;/更新>; &lt;link href=&quot;https://www.japantimes.co.jp/news/ 2023/08/18/japan/society/exploring-the-eerie-beauty-of-japans-abandoned-villages/&quot;/>; &lt;author>; &lt;name>;benbreen&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn4.premiumread.com/?url=https://japantimes.co。 jp/japantimes/uploads/images/2023/08/18/245992.jpg&amp;q=100&amp;f=jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;摄影师 Johan Brooks 和作者探索日本秩父市废弃的村庄，这些村庄因乡村逃亡和水坝建设而被遗弃。这些被称为“haikyo”的废弃社区已经成为一种探索和欣赏腐烂废墟的亚文化。 &lt;a href=&quot;https://hackernews.betacat.io/#exploring-the-eerie-beauty-of-japan-s-abandoned-villages&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37270007&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;获得解决非原创问题的权限&lt;/stitle>; &lt;id>;https://landmines.substack.com/p/earning-the-工作权限&lt;/id>; &lt;更新>;2023-08-27T15:50:41.930331Z&lt;/更新>; &lt;link href=&quot;https://landmines.substack.com/p/earning-the-privilege -to-work-on&quot;/>; &lt;作者>; &lt;名称>;甜甜圈商店&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=donutshop&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws .com%2Fpublic%2Fimages%2Fc3ec4d82-80a9-4741-8393-e3aea4a64cf9_599x599.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;初创企业专注于创造新的和创新的东西，但往往会陷入投资支持未来可扩展性的系统和工具的陷阱，而不是专注于寻找产品与市场契合的真正问题。构建工具感觉像是进步，但它可能会分散注意力并浪费时间。初创公司应该优先考虑客户交互和验证，而在平台工作方面则要懒惰。 &lt;a href=&quot;https://hackernews.betacat.io/#earning-the-privilege-to-work-on-unoriginal-problems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37272362&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过从 Profobuf 解密和剥离广告来阻止 AppleTV 上的 YouTube 广告&lt;/stitle>; &lt;id>;https://ericdraken.com/pfsense-decrypt-ad-流量/&lt;/id>; &lt;更新>;2023-08-27T03:50:41.930769Z&lt;/更新>; &lt;link href=&quot;https://ericdraken.com/pfsense-decrypt-ad-traffic/&quot;/>; &lt;作者>; &lt;name>;rolph&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rolph&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /ericdraken.com/files/eric-draken.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;让我们使用 FreeBSD 和 pfSense 构建一个加密强度高的路由器，以完全阻止 YouTube 广告，利用 Google Protocol Buffer 格式中的缺陷完全阻止 Apple 上的前贴片、中贴片和片尾 YouTube 广告电视和 iPhone，全网络。 &lt;a href=&quot;https://hackernews.betacat.io/#block-youtube-ads-on-appletv-by-decrypting-and-stripping-ads-from-profobuf&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37279109&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;字体从哪里来？这一项业务，主要&lt;/stitle>; &lt;id>;https://thehustle.co/where-do-fonts-come-from/&lt;/id>; &lt;updated>;2023-08-27T16:50:41.931606Z&lt;/updated >; &lt;link href=&quot;https://thehustle.co/where-do-fonts-come-from/&quot;/>; &lt;作者>; &lt;name>;kansaswriter&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=kansaswriter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thehustle.co/wp-content/uploads/2023/08/Fonts.gif&quot; 样式=“宽度：220像素；高度：165像素；” />;&lt;br />;字体是一种无处不在的商品，许多独立设计师在过度饱和的市场中挣扎着谋生。 Monotype 是一家拥有 MyFonts 等流行字体和字体交换的公司，它正在接近庞然大物的地位，让独立设计师的选择越来越少。该行业正在慢慢走向垄断，抑制竞争，并使替代模式难以发展。 &lt;a href=&quot;https://hackernews.betacat.io/#where-do-fonts-come-from-this-one-business-mostly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37283860&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用过滤器替换高级搜索的原因&lt;/stitle>; &lt;id>;https://adamsilver.io/blog/7-reasons-to-replace -advanced-search-with-filters-so-users-can-easily-find-what-they-need/&lt;/id>; &lt;更新>;2023-08-27T11:50:41.932036Z&lt;/更新>; &lt;link href= “https://adamsilver.io/blog/7-reasons-to-replace-advanced-search-with-filters-so-users-can-easily-find-what-they-need/”/>; &lt;作者>; &lt;名称>;田川&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=takawa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// adamsilver.io/assets/images/7-reasons-to-replace-advanced-search-with-filters-so-users-can-easily-find-what-they-need/advanced-search-link.png&quot; style= “宽度：220 像素；高度：111 像素；” />;&lt;br />;高级搜索是一种允许用户访问单独页面上的搜索选项的模式，但与上下文过滤器相比，它可能会导致糟糕的用户体验。用户必须在搜索表单和结果之间导航，即使没有结果，也会显示所有可能的选项。 &lt;a href=&quot;https://hackernews.betacat.io/#reasons-to-replace-advanced-search-with-filters&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37270108&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;WTFPython：通过令人惊讶的片段探索和理解 Python&lt;/stitle>; &lt;id>;https://github.com/satwikkansal/wtfpython&lt;/id>; &lt;updated>;2023 -08-27T11:50:41.932470Z&lt;/更新>; &lt;link href=&quot;https://github.com/satwikkansal/wtfpython&quot;/>; &lt;作者>; &lt;名称>;Tomte&lt;/名称>; &lt;uri>;https:// news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/satwikkansal/wtfpython/master/images/徽标.png&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;Python 为程序员提供了许多方便的功能，但有时 Python 代码片段的结果可能看起来并不明显。本文探讨并解释了 Python 中一些反直觉的片段和鲜为人知的功能。 &lt;a href=&quot;https://hackernews.betacat.io/#wtfpython-exploring-and-understanding-python-through-surprising-snippets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37281692&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AnnaArchivist/annas-archive&lt;/stitle>; &lt;id>;https://annas-software.org/AnnaArchivist/annas-archive&lt;/id>; &lt;已更新>;2023-08-27T13:50:41.932905Z&lt;/更新>; &lt;link href=&quot;https://annas-software.org/AnnaArchivist/annas-archive&quot;/>; &lt;作者>; &lt;名称>;hggh&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=hggh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://annas-software.org/assets/ twitter_card-570ddb06edf56a2312253c5872489847a0f385112ddbcd71ccfa1570febab5d2.jpg&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;加入我们的聊天吧！ https://chat.annas-software.org/（现在应该修复注册问题！）&lt;a href=&quot;https://hackernews.betacat.io/#annaarchivist-annas-archive&quot; target=&quot;_blank&quot;>;[summary ]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我可以吃玻璃&lt;/stitle >; &lt;id>;https://en.wikipedia.org/wiki/I_Can_Eat_Glass&lt;/id>; &lt;更新>;2023-08-27T15:50:41.933338Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia .org/wiki/I_Can_Eat_Glass&quot;/>; &lt;作者>; &lt;名称>;向量空间&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=向量空间&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/GNOME_Font_Viewer_%22I_Can_Eat_Glass%22_Chinese_Font_Sample.png/220px-GNOME_Font_Viewer_%22I_Can_Eat_Glass%22_Chinese_Font_Sample.png&quot; style=&quot;宽度：220 像素；高度：177 像素；” />;&lt;br />;我可以吃玻璃是一个语言项目，由当时的哈佛大学学生 Ethan Mollick 在早期网络上记录。目的是提供“我可以吃玻璃，它不会伤害我”这句话的多种语言的翻译。 &lt;a href=&quot;https://hackernews.betacat.io/#i-can-eat-glass&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37283636&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;电子墨水太复古了&lt;/stitle>; &lt;id>;https://rmkit.dev/eink-is-so-retropunk/&lt;/id>; &lt;更新>;2023-08-26T19 :50:41.933767Z&lt;/updated>; &lt;link href=&quot;https://rmkit.dev/eink-is-so-retropunk/&quot;/>; &lt;作者>; &lt;name>;raisjn&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=raisjn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.imgur.com/8760cI9.jpg&quot; style=&quot;宽度：220 像素；高度：220 像素；” />;&lt;br />;电子墨水是黑客的梦想，让人想起80、90年代电脑的神奇感觉。它具有简单性、低功耗和紧密联系的爱好者社区。 &lt;a href=&quot;https://hackernews.betacat.io/#e-ink-is-so-retropunk&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37272652&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;静静地躺在床上&lt;/stitle>; &lt;id>;https://ognjen.io/lie-still-in-bed/&lt;/id>; &lt;更新>;2023-08-27T10 :50:41.934803Z&lt;/updated>; &lt;link href=&quot;https://ognjen.io/lie-still-in-bed/&quot;/>; &lt;作者>; &lt;name>;rognjen&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=rognjen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ognjen.io/images/profile.jpg&quot; style=&quot;宽度：220 像素；高度：221 像素；” />;&lt;br />;要建立规律的睡眠模式，每天在同一时间上床睡觉并避免使用手机或看电视等干扰因素很重要。通过持续练习，可以改善睡眠习惯并成为早起的人。同样的原则可以应用于生活的其他领域，例如保持床铺整洁或养成新习惯。 &lt;a href=&quot;https://hackernews.betacat.io/#lie-still-in-bed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37281060&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;研究：碳补偿没有发挥作用，夸大了影响&lt;/stitle>; &lt;id>;https://arstechnica.com/science/2023/08/study-carbon-offsets-arent -doing-their-job-overstate-impact/&lt;/id>; &lt;更新>;2023-08-27T17:50:41.935254Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/science/2023/08 /study-carbon-offsets-arent-doing-their-job-overstate-impact/&quot;/>; &lt;author>; &lt;name>;donutshop&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=甜甜圈店&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2023/08/GettyImages-1366011761-800x532.jpg&quot;样式=“宽度：220像素；高度：147像素；” />;&lt;br />;一项新的研究表明，声称遏制森林砍伐的碳抵消项目明显高估了其影响。研究发现，绝大多数项目实际上并没有减缓森林砍伐，而那些确实减缓森林砍伐的项目的效果却远不如他们声称的那么有效。 &lt;a href=&quot;https://hackernews.betacat.io/#study-carbon-offsets-arent-doing-their-job-overstate-impact&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37284764&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用 Assembly 编写的论坛引擎&lt;/stitle>; &lt;id>;https://asm32.info/fossil/asmbb/index&lt;/id>; &lt;更新>;2023-08-27T18:50:41.935699Z&lt;/更新>; &lt;link href=&quot;https://asm32.info/fossil/asmbb/index&quot;/>; &lt;作者>; &lt;名称>;utf_8x &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=utf_8x&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这是一个完全用汇编语言实现的基于网络的留言板（论坛）的引擎，使用FastCGI接口和SQLite数据库作为存储。它的目标是成为快速、轻便的留言板引擎，并且仍然能够提供现代的外观和感觉以及高度活跃的互联网社区所需的所有功能。 &lt;a href=&quot;https://hackernews.betacat.io/#a-forum-engine-writing-in-assemble&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37285156&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google Android 开发的囚徒&lt;/stitle>; &lt;id>;https://solutional.ee/blog/2023-08-26-Prisoners-of-Google-Android-Development .html&lt;/id>; &lt;更新>;2023-08-27T09:50:41.936143Z&lt;/更新>; &lt;link href=&quot;https://solutional.ee/blog/2023-08-26-Prisoners-of-Google- Android-Development.html&quot;/>; &lt;author>; &lt;name>;jarm0&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jarm0&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://solutional.ee/img/blog/prisoners-of-google-android-development/google-email.png&quot; style=&quot;宽度：220px；高度：222px；&quot; />;&lt;br />;关于开发 Android（或 iOS）应用程序时事情如何快速变得非常糟糕的现实案例研究。本文描述了更新旧版 Android 应用以满足 Google API 级别要求时所面临的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#prisoners-of-google-android-development&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37280972&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;古代文化每 60 年就会烧毁自己的家园&lt;/stitle>; &lt;id>;https://daily.jstor.org/burned-house-mystery-why-did-this-ancient -culture-torch-its-own-homes-every-60-years/&lt;/id>; &lt;更新>;2023-08-27T08:50:41.936597Z&lt;/更新>; &lt;link href=&quot;https://daily.jstor .org/burned-house-mystery-why-did-this-ancient-culture-torch-its-own-homes-every-60-years/&quot;/>; &lt;作者>; &lt;名称>;萨米兹迪斯&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=samizdis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://daily.jstor.org/wp-content/ uploads/2023/08/burned_house_mystery_why_did_this_ancient_culture_torch_its_own_homes_every_60_years_800_3.jpg&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;库库泰尼-特里皮利亚文化是欧洲的一个古老社会，建造了令人印象深刻的建筑并种植了农作物。然而，他们的定居点每隔60至80年就会被反复烧毁，这种现象被称为“烧毁的房屋地平线”。研究人员仍在争论这些故意焚烧的原因。 &lt;a href=&quot;https://hackernews.betacat.io/#ancient-culture-torched-its-own-homes-every-60-years&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=37247906&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;展示 HN：Graphweaver – Postgres、MySQL、SQLite 等上的即时 GraphQL API&lt;/stitle>; &lt;id>;https://github.com/ exogee-technology/graphweaver&lt;/id>; &lt;更新>;2023-08-27T11:50:41.937033Z&lt;/更新>; &lt;link href=&quot;https://github.com/exogee-technology/graphweaver&quot;/>; &lt;作者>; &lt;name>;graphweaver&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=graphweaver&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /camo.githubusercontent.com/6a0a0144d5e8c28227d8b01c832364d692a2a21a33d41eeb1a7f7e81076a53ca/68747470733a2f2f67726170687765617665722e636f6d2f6 46f63732f5f6e6578742f696d6167653f75726c3d68747470732533412532462532466173736574732e73757065722e736f25324633343632336462392d 326466312d343531312d393236362d343433616163326431646533253246696d6167657325324632646131663030642d366263612d343838312d3861386 32d61336235383966386131393125324653637265656e73686f745f323032332d30352d31315f61745f342e31322e32385f706d2e706e6726773d313932 3026713d3830&quot;样式=&quot;宽度：220px； height: 82px;&quot; />;&lt;br />;我们构建 Graphweaver 是为了解决从多个源同步数据的问题。它允许您轻松构建跨不同数据库和平台的单个 GraphQL API。使用 Graphweaver，您可以管理您的来自一处的数据并执行涉及多个数据源的查询。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-graphweaver-instant-graphql-api-on-postgres-mysql-sqlite-and-更多&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37281411&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ubus（OpenWrt 微总线架构）&lt;/stitle>; &lt;id >;https://openwrt.org/docs/techref/ubus&lt;/id>; &lt;更新>;2023-08-27T06:50:41.937458Z&lt;/更新>; &lt;link href=&quot;https://openwrt.org/docs/ techref/ubus&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;Ubus是在OpenWrt中开发的一个项目，用于提供守护进程和应用程序之间的进程间通信。它由守护进程、库和额外的帮助程序组成，其中 ubusd 守护进程是核心。该项目使用 Unix 套接字和 TLV 消息。该代码在 LGPL 2.1 许可证下发布，可以在 git.openwrt.org 上找到。 &lt;a href=&quot;https://hackernews.betacat.io/#ubus-openwrt-micro-bus-architecture&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37279773&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;适用于 Unix 系统的便携式 OpenBSD vi&lt;/stitle>; &lt;id>;https://github.com/johnsonjh/OpenVi&lt;/id>; &lt;更新>;2023-08-27T06:50: 41.937879Z&lt;/更新>; &lt;link href=&quot;https://github.com/johnsonjh/OpenVi&quot;/>; &lt;作者>; &lt;名称>;rdpintqogeogsaa &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=rdpintqogeogsaa&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://repository-images.githubusercontent.com/451329808/4b611da2-1788-4e97-a416-2a51b8e0b36f&quot;样式=“宽度：220像素；高度：190像素；” />;&lt;br />;OpenVi 是 Berkeley vi / ex 文本编辑器的增强型和可移植实现，最初由 Bill Joy 开发。它基本上符合相关标准，并且可以轻松移植到大多数具有类 UNIX 操作系统的平台。 &lt;a href=&quot;https://hackernews.betacat.io/#portable-openbsd-vi-for-unix-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37271001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Waku：带有服务器组件的极简 React 框架&lt;/stitle>; &lt;id>;https://waku.gg/&lt;/id>; &lt;更新>;2023-08-27T11： 50:41.938743Z&lt;/updated>; &lt;link href=&quot;https://waku.gg/&quot;/>; &lt;作者>; &lt;name>;bpierre&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=bpierre&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;带有服务器组件 &lt;a href=&quot;https://hackernews.betacat.io/#waku-the-minimalist-react-framework-with-服务器组件&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37281630&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ubuntu 中的 i386 不会消亡&lt;/stitle>; &lt;id>;https://popey.com/blog/2023/08/i386-in-ubuntu-wont-die/&lt;/id>; &lt;更新>;2023-08-27T09:50:41.939194Z&lt;/更新>; &lt;link href=&quot;https://popey.com/blog/2023/08/i386-in-ubuntu-wont-die/&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Ubuntu 23.04 用户在从 Ubuntu 存档安装 Steam deb 包时遇到困难，但后来发现这是一个错误，并且错误已提交。目前尚不确定 Ubuntu 23.04 的 ISO 映像是否会被重建，或者问题是否仍然存在。 2019 年曾提议从 Ubuntu 中删除 i386 支持，但在被推迟后，创建了 i386 deb 软件包的“白名单”以满足用户的需求。 &lt;a href=&quot;https://hackernews.betacat.io/#i386-in-ubuntu-won-t-die&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=37280878&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;