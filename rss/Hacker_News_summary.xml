<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-06-22T16:01:43.154424Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我父亲去世后，我跑了并卖掉了他的公司（2018）&lt;/stitle>; &lt;id>;https://anandsanwal.me/2018/06/19/dad-company-销售/&lt;/id>; &lt;更新>;2024-06-22T13:01:25.621729Z&lt;/更新>; &lt;link href=&quot;https://anandsanwal.me/2018/06/19/dad-company-sale/&quot;/ >; &lt;作者>; &lt;名称>;ziptron&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ziptron&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://i0.wp.com/research-assets.cbinsights.com/2018/06/18125433/atlas-1024x768.png?resize=1024%2C768&amp;ssl=1” style=&quot;宽度：220px；高度：165px； ” />;&lt;br />;笔者是CB Insights的联合创始人，在父亲去世后接管了父亲的化学制造公司Atlas，并经过13个月的过程，成功将其出售给了规模更大的化学公司Eternis。作者分享了他从并购过程中学到的知识和观察，包括明确目标、简单性和公平性的重要性，以及应对......的挑战&lt;a href=&quot;https://hackernews.betacat.io/# after-my-dad-died-i-ran-and-sold-his-company-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40758767&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;HybridNeRF：高效神经渲染&lt;/stitle>; &lt;id>;https://haithemturki.com/hybrid-nerf/&lt;/id>; &lt;更新>;2024-06-22T15:01:25.623625Z&lt;/已更新>; &lt;link href=&quot;https://haithemturki.com/hybrid-nerf/&quot;/>; &lt;作者>; &lt;name>;tzmlab&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= tzmlab&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://haithemturki.com/hybrid-nerf/images/teaser.png&quot; style=&quot;宽度：220px；高度：107px ;” />;&lt;br />;神经辐射场提供高质量的视图合成，但由于体积渲染而速度缓慢。 HybridNeRF 是一种新方法，结合了表面和体积渲染来提高质量和速度，实现了 15-30% 的错误率和实时帧率降低。 &lt;a href=&quot;https://hackernews.betacat.io/#hybridnerf-efficient-neural-rendering&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;训练人工智能&lt;/stitle>; &lt;id>;https://lmnt.me/blog/training-ai.html&lt; /id>; &lt;更新>;2024-06-22T15:11:25.624129Z&lt;/更新>; &lt;link href=&quot;https://lmnt.me/blog/training-ai.html&quot;/>; &lt;作者>; &lt;名称>;zdw &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lmnt.me /files/images/opengraph/louie-yellow.webp&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;该用户辩称，未经明确同意，不应将公共数据用于人工智能训练，理由是所有权和版权问题。他们还强调了转发内容的问题，原创者可能无法控制人工智能训练，甚至不知道他们的作品是否正在被使用。 &lt;a href=&quot;https://hackernews.betacat.io/#training-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;C/C++ 中自己的常量文件夹&lt;/stitle>; &lt;id>;https://www.neilhenning.dev/posts/yourownconstantfolder/&lt; /id>; &lt;更新>;2024-06-22T11:01:25.624609Z&lt;/更新>; &lt;link href=&quot;https://www.neilhenning.dev/posts/yourownconstantfolder/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户讨论在代码中使用 rsqrtps 指令的问题，原因是Intel和AMD CPU之间的精度差异，并建议使用内联汇编来保证指令选择。他们还描述了使用 __builtin_constant_p 内在函数进行常量折叠的解决方法，但请注意它有局限性，并主张放松内在函数的行为。 &lt;a href=&quot;https://hackernews.betacat.io/#own-constant-folder-in-cc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40757787&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;从签名重建公钥&lt;/stitle>; &lt;id>;https://keymaterial.net/2024/06/15/reconstructing-public-keys-from-signatures/&lt;/id >; &lt;更新>;2024-06-22T10:01:25.625088Z&lt;/更新>; &lt;link href=&quot;https://keymaterial.net/2024/06/15/reconstructing-public-keys-from-signatures/&quot;/>; &lt;作者>; &lt;名称>;tatersolid&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tatersolid&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://i0.wp.com/keymaterial.net/wp-content/uploads/2020/09/letter_key.png?fit=512%2C512&amp;ssl=1&quot; style=&quot;宽度：220px 高度：220px;&quot; />;&lt;br />;本文讨论了各种加密签名方案及其属性，包括从有效签名恢复公钥的能力，其中某些方案比其他方案更容易受到密钥恢复的影响。讨论的方案包括 ECDSA、RSA、Schnorr、Dilithium、SPHINCS+ 和不平衡油醋，其中一些方案比其他方案更能抵抗密钥恢复，因为... &lt;a href=&quot;https://hackernews.betacat.io/ #reconstructing-public-keys-from-signatures&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40738534&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：信封– 现代环境变量 cli 工具&lt;/stitle>; &lt;id>;https://github.com/mattighetti/envelope&lt;/id>; &lt;updated>;2024-06-22T13:01:25.625605Z&lt;/updated>; &lt;link href= “https://github.com/mattighetti/envelope”/>; &lt;作者>; &lt;名称>;mattighetti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mattighetti&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://repository-images.githubusercontent.com/694684052/93378f7c-975f-4d66-b413-2c01c2913044&quot; style=&quot;宽度：220px；高度：124px； ” />;&lt;br />;Envelope 是一个命令行实用程序，它使用 SQLite 数据库来管理环境变量，允许在配置之间轻松切换。它创建一个 .env 文件并提供用于导出和删除变量的命令，以及软删除和硬删除的选项。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-envelope-a-modern-environment-variable-cli-tool&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40758703&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;八百万像素并不断增加：改进 Firefox 中的纹理图集分配（2021）&lt;/stitle>; &lt;id>;https://nical.github.io /posts/etagere.html&lt;/id>; &lt;更新>;2024-06-22T12:01:25.626088Z&lt;/更新>; &lt;link href=&quot;https://nical.github.io/posts/etagere.html&quot;/>; &lt;作者>; &lt;名称>;fanf2&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://nical.github.io/images/atlas/atlas-allocation.svg&quot; style=&quot;宽度：220px 高度：113px；&quot; />;&lt;br />;作者通过实现一个简单的架子分配器改进了 WebRender 中的纹理图集分配，该分配器将项目紧密打包并减少浪费，并且还优化了板分配器以获得更好的性能。这些改进包括用于可视化算法的命令行工具，已集成到 Firefox 中，从而减少了绘制调用、CPU 到 GPU 的传输以及 GPU 的数量... &lt;a href=&quot;https://hackernews .betacat.io/#eight-million-pixels-and-counting-improving-texture-atlas-allocation-in-firefox-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40741236&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;技术奇迹，第 3 部分：Yupana&lt;/stitle>; &lt;id>;https://cacm.acm.org/blogcacm/technical-marvels-part-3- the-yupana/&lt;/id>; &lt;更新>;2024-06-22T14:01:25.626473Z&lt;/更新>; &lt;link href=&quot;https://cacm.acm.org/blogcacm/technical-marvels-part-3- the-yupana/&quot;/>; &lt;作者>; &lt;名称>;zdw &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://cacm.acm.org/wp-content/uploads/2024/05/050224.BLOG_.Herbert-BrudererAA.jpg&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;Yupana是一种古老的秘鲁算盘，用于计算，仅存少数，其用途和功能仍未完全了解。Yupana被印加人用于计算和可能已用于城市规划，学者们提出了关于其使用和功能的各种理论和假设&lt;a href=&quot;https://hackernews.betacat.io/#technical-marvels-part-3-the-yupana。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40754624&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Farm：用 Rust 编写的快速 vite 兼容构建工具&lt;/stitle>; &lt;id>;https://www.farmfe.org/&lt;/id>; &lt;更新>;2024-06-22T04:01:25.626852Z&lt;/更新>; &lt;link href=&quot;https://www.farmfe.org/&quot; />; &lt;作者>; &lt;名称>;rk06&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rk06&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.farmfe.org/assets/images/rocket-84b12b0b9c2fedde390e122d2563ecbc.png&quot; style=&quot;宽度：220px; height: 220px;&quot; />;&lt;br />;Farm 是一个基于 Rust 的工具，可以在毫秒内启动 React/Vue 项目，并在 10 毫秒内实现热模块替换（HMR）更新。它支持增量构建、持久缓存和各种插件编译和捆绑 HTML、CSS、JavaScript 和其他资源，支持 Rust 和 JavaScript 插件&lt;a href=&quot;https://hackernews.betacat.io/#farm-fast-vite-兼容-build-tool-。 write-in-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40756034&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Atari 520ST 创意计算评论 – 作者：Paul Lefebvre&lt;/stitle>; &lt;id>;https://www.goto10retro.com/p/atari-520st-review-in-creative-computing&lt;/id>; &lt;更新>;2024-06-22T06:01:25.627251Z&lt;/已更新>; &lt;link href=&quot;https://www.goto10retro.com/p/atari-520st-review-in-creative-computing&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto ,q_auto:好,fl_progressive:陡峭/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3f630c6-4f37-426a-b007-743466674b1b_5712x4284.heic&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;Atari 520ST 于 1985 年 7 月发布，但由于交货时间的原因，杂志评论直到 10 月份才出现。该计算机的设计因笨重而受到批评，但它以较低的价格提供了令人印象深刻的规格。价格低廉，使其成为 Atari 爱好者的热门选择。 &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40740602&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sheryl Crow：“用 AI 复活 Tupac 是可恶的”&lt;/stitle>; &lt;id>;https ://www.bbc.com/news/articles/cn00e695lpvo​​&lt;/id>; &lt;更新>;2024-06-22T15:05:25.627639Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/ news/articles/cn00e695lpvo​​&quot;/>; &lt;author>; &lt;name>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://ichef.bbci.co.uk/news/480/cpsprodpb/2905/live/ab1a7c80-2f9f-11ef-9552-ddad3d31dcba.jpg.webp&quot; style=&quot;宽度：220px ; height: 124px;&quot; />;&lt;br />;Sheryl Crow 公开反对在音乐中使用人工智能，称其为反人类的“滑坡”和“背叛”。她还对人工智能的影响表示担忧社会和政治，并呼吁政治家对人工智能实施更严格的控制。 =&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40759585&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GNU C 库的内存密封&lt;/stitle>; &lt;id>;https: //lwn.net/Articles/978010/&lt;/id>; &lt;更新>;2024-06-22T04:01:25.628372Z&lt;/更新>; &lt;link href=&quot;https://lwn.net/Articles/978010/&quot;/ >; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;mseal()系统调用允许进程阻止对其地址空间进行更改，该系统调用已合并到即将发布的 6.10 内核版本中，并添加到 GNU C 库 (glibc) 中以提高安全性。但是，由于容器环境中缺乏运行时一致性，可能无法在不破坏与旧主机的兼容性的情况下强制支持 mseal() ... &lt;a href=&quot;https://hackernews.betacat.io/# memory-sealing-for-the-gnu-c-library&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40741833&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;&#39; 《Meridian》：为什么 Netflix 在内容和代码方面帮助竞争对手 (2016)&lt;/stitle>; &lt;id>;https://variety.com/2016/digital/news/netflix-meridian-imf-tools-open-source-1201859416/ &lt;/id>; &lt;更新>;2024-06-22T15:01:25.628753Z&lt;/更新>; &lt;link href=&quot;https://variety.com/2016/digital/news/netflix-meridian-imf-tools-open- source-1201859416/&quot;/>; &lt;author>; &lt;name>;joelanman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=joelanman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://variety.com/wp-content/uploads/2016/09/netflix-meridian-featured-e1473791337733.jpg?w=1000&amp;h=667&amp;crop=1&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;Netflix 发布了一个 12 分钟的原创节目“Meridian”，作为评估视频编解码器和流媒体性能的测试片段，并根据知识共享许可免费赠送。该公司也是帮助业界采用互操作主格式（IMF）来交换主文件的开源工具，并且拥有在云中发布开源项目的历史...... betacat.io/#meridian-why-netflix-is-helping-competitors-with-content-and-code-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news .ycombinator.com/item?id=40759393&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed .xml&quot;>; &lt;title type=&quot;text&quot;>;测试电路板设计的生成式人工智能&lt;/stitle>; &lt;id>;https://blog.jitx.com/jitx-corporate-blog/testing-generative-ai-for-电路板设计&lt;/id>; &lt;更新>;2024-06-21T17:01:25.629128Z&lt;/更新>; &lt;link href=&quot;https://blog.jitx.com/jitx-corporate-blog/testing-generative -ai-for-电路板设计&quot;/>; &lt;作者>; &lt;名称>;DHaldane &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=DHaldane&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.jitx.com/hs-fs/hubfs/image-png-1.png?width=510&amp;height=467&amp;name=image-png-1.png “样式=”宽度：220px; height: 202px;&quot; />;&lt;br />;本文测试了大型语言模型 (LLM) 在设计电路板方面的能力，重点关注其生成代码和从数据表中提取信息的能力。虽然 LLM 在某些任务中表现出了希望，例如生成代码和从数据表中提取数据，他们在原始设计综合和细致入微的决策方面遇到了困难，这表明他们是最好的...... &lt;a href=&quot;https://hackernews.betacat.io/#testing-generative -ai-for- Circuit-board-design&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40751020&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;策划我的角落使用徒手网页编辑器访问互联网&lt;/stitle>; &lt;id>;https://rafichaudhury.com/site/blog/Freehand-Web&lt;/id>; &lt;updated>;2024-06-22T08:01:25.629508Z&lt;/updated>; &lt;link href=&quot;https://rafichaudhury.com/site/blog/Freehand-Web&quot;/>; &lt;作者>; &lt;name>;rchaud&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =rchaud&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rafichaudhury.com/site/assets/blog/Screenshot%202024-06-11%20at%208.57.34 %20AM.jpg&quot; style=&quot;宽度: 220px; height: 166px;&quot; />;&lt;br />;作者认为，互联网已经失去了魔力，变成了一个平淡的、商业化的空间，解决方案在于创建允许创意表达和个性化的徒手网站，而不是依赖于作者强调了 Hotglue（一种徒手网络构建器）等工具以及其他替代方案的潜力，这些工具可以... &lt;a href=&quot;https://hackernews.betacat.io/#curating-my- corner-of-the-internet-with-a-freehand-web-editor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40739356&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;一种新型舞蹈科学（社交舞蹈的组合）&lt;/stitle>; &lt;id>;https://zacksdancelab.com/blog/a-new-kind-of-dance-science/&lt;/id>; &lt;updated >;2024-06-22T13:01:25.629894Z&lt;/更新>; &lt;link href=&quot;https://zacksdancelab.com/blog/a-new-kind-of-dance-science/&quot;/>; &lt;作者>; &lt;名称>;nullsub&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nullsub&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zacksdancelab .com/assets/images/rolling_clock-e61668b07806fb7d23cb659b339effd9.gif&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;作者是一名社交舞者，一直在努力写下舞蹈动作和笔记，但在学习 3D 建模软件和组合学之后，他们发现了一种表征和研究舞蹈姿势的新方法，导致为了更深入地了解舞蹈并提高舞蹈技能，作者计划分享他们的研究并创建资源，以帮助其他人更多地学习和记住舞蹈动作... &lt;a href=&quot;https://hackernews.betacat.io/#a -new-kind-of-dance-science-combinatorics-of-social-dancing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40735038&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;语言主要是沟通工具而不是思考工具 [pdf]&lt;/stitle>; &lt;id>;https://gwern.net/doc/psychology/linguistics/2024-fedorenko.pdf&lt;/id>; &lt;更新>; 2024-06-22T05:01:25.630280Z&lt;/更新>; &lt;link href=&quot;https://gwern.net/doc/psychology/linguistics/2024-fedorenko.pdf&quot;/>; &lt;作者>; &lt;名称>;hardmaru&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=hardmaru&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;人脑中的语言网络对于复杂的思维来说并不是必需的，因为患有严重语言障碍的人仍然可以进行各种形式的思考和推理。相反，语言是一种高效的通信代码，它的发展是为了促进信息的传输，具有诸如声音库、单词形式和语法等功能，以方便...... &lt;a href=&quot;https://hackernews.betacat. io/#language-is-primarily-a-tool-for-communication-rather-than-thought-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=40756176&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;1955 年悉尼上空 Aster 被击落&lt;/stitle>; &lt;id>;https://navyhistory.au/aster-shootdown-over-sydney-in-1955/&lt;/id>; &lt;updated>; 2024-06-21T18:01:25.631052Z&lt;/更新>; &lt;link href=&quot;https://navyhistory.au/aster-shootdown-over-sydney-in-1955/&quot;/>; &lt;作者>; &lt;名称>;tapper&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=tapper&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://navyhistory.au/ wp-content/uploads/NHSA-originaltagline-1.jpg&quot; style=&quot;宽度: 220px 高度: 82px;&quot; />;&lt;br />;1955年8月30日，一架无人驾驶的奥斯特飞机从班克斯敦机场起飞，失控地飞越悉尼上空，引起了当局和公众的强烈反应。经过3个小时的追逐，这架飞机最终于1142年被两架海军“海怒”战斗机击落，坠入距海岸五英里的海中。 &lt;a href=&quot;https://hackernews.betacat.io/#aster-shootdown-over-sydney-in-1955&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40751813&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么电流从电子流向相反的方向？&lt;/stitle>; &lt;id>;https://mathstodon.xyz/@johncarlosbaez/112653640999819867&lt;/id>; &lt;updated>; 2024-06-21T19:01:25.631433Z&lt;/更新>; &lt;link href=&quot;https://mathstodon.xyz/@johncarlosbaez/112653640999819867&quot;/>; &lt;作者>; &lt;名称>;johncarlosbaez &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=johncarlosbaez&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.mathstodon.xyz/media_attachments/files/112/ 654/420/323/434/029/small/7696ba4c8b5ae3a9.png&quot; style=&quot;宽度：220px；高度：254px；&quot; />;&lt;br />;称电子为“负”、质子为“正”的惯例是任意的，并且导致了令人困惑的情况，例如沿电子流相反方向流动的电流的定义。 1794年至1800年使用的法国共和历有10小时100分100秒的十进制时间系统，但由于其... &lt;a href=&quot;https://hackernews .betacat.io/#why-does-current-flow-the-opposite-way-from-the-electrons&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40750506&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;连接机器 Lisp (1986)&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/pdf/10.1145/319838.319870&lt;/id>; &lt;更新>;2024- 06-21T21:01:25.631811Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/pdf/10.1145/319838.319870&quot;/>; &lt;作者>; &lt;名称>;twoodfin &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=twoodfin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;输入似乎是字符和单词的序列，可能与字符到相关-状态转换和抽象。它包括“字符到状态小睡”和“查找上下文”等短语。 &lt;a href=&quot;https://hackernews.betacat.io/#connection-machine-lisp-1986&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40739046&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;CRIU，一个为 Linux 实现检查点/恢复功能的项目&lt;/stitle>; &lt;id>;https://criu.org/Main_Page&lt;/id>; &lt;更新>;2024-06-21T17： 01:25.632187Z&lt;/updated>; &lt;link href=&quot;https://criu.org/Main_Page&quot;/>; &lt;作者>; &lt;name>;JeremyNT&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=JeremyNT&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://criu.org/w/images/thumb/9/95/3.19.jpg/340px-3.19 .jpg&quot; 样式=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;CRIU 是一款 Linux 软件，它可以冻结正在运行的容器或应用程序，将其状态保存到磁盘，并允许精确恢复。它支持实时迁移、快照和远程调试，并被各种软件和 Linux 发行版使用，但在保存和恢复任务状态方面存在一些限制。 &lt;a href=&quot;https://hackernews.betacat.io/#criu-a-project-to-implement-checkpoint-restore-functionity-for-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40751468&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从 Infocom 到 80 天：文字游戏和互动小说的口述历史&lt;/stitle>; &lt;id>;https://arstechnica.com /gaming/2024/06/from-infocom-to-80-days-an-oral-history-of-text-games-and-interactive-fiction/&lt;/id>; &lt;更新>;2024-06-21T16:01： 25.632567Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/gaming/2024/06/from-infocom-to-80-days-an-oral-history-of-text-games-and-interactive -fiction/&quot;/>; &lt;作者>; &lt;名称>;pseudolus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pseudolus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2023/11/45897016062_e1c52b1dd9_k-800x1199.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;互动小说是 20 世纪 70 年代在大型机上兴起的一种讲故事形式，尽管视频游戏、电视和文学取得了进步，但它仍然持续存在。该类型的根源与计算机行业息息相关，威尔·克劳瑟 (Will Crowther) 和唐·伍兹 (Don Woods) 等先驱者创造的文字游戏激发了好奇心并激励了忠实的观众。 &lt;a href=&quot;https://hackernews.betacat.io/#from-infocom-to-80-days-an-oral-history-of-text-games-and-interactive-fiction&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40749426&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Eidos – Notion 的离线替代品&lt;/stitle>; &lt;id>;https://github .com/mayneyao/eidos&lt;/id>; &lt;更新>;2024-06-21T16:01:25.632946Z&lt;/更新>; &lt;link href=&quot;https://github.com/mayneyao/eidos&quot;/>; &lt;作者>; &lt;名称>;mayne&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mayne&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// raw.githubusercontent.com/mayneyao/eidos/main/public/show/table-and-doc.webp&quot; style=&quot;宽度：220px 高度：151px；&quot; />;&lt;br />;首页 | Discord Eidos 是一个可扩展框架，用于在一个地方管理您一生中的个人数据。离线支持：无需互联网连接即可访问您的数据。数据存储在本地以实现极快的性能。人工智能功能：与法学硕士深度集成，提供人工智能驱动的功能。在 Eidos 中翻译、总结您的数据并与之交互。人工智能甚至可以离线工作。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-eidos-offline-alternative-to-notion&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40746773&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;恶意软件睡眠混淆简介 (2023)&lt;/stitle>; &lt;id>;https://dtsec.us/2023-04-24-Sleep/&lt;/ id>; &lt;更新>;2024-06-22T01:01:25.633320Z&lt;/更新>; &lt;link href=&quot;https://dtsec.us/2023-04-24-Sleep/&quot;/>; &lt;作者>; &lt;名称>;jstrieb &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jstrieb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent .com/Cracked5pider/Ekko/main/ekko_logo.png&quot; style=&quot;宽度：220px 高度：98px;&quot; />;&lt;br />;作者讨论了睡眠混淆，这是一种逃避防御软件检测的技术，并修改了 Ekko 睡眠混淆实现以绕过 Hunt Sleeping Beacons。作者使用 shellcode 加载器针对 HSB 测试修改后的 Ekko，发现它可以通过欺骗调用堆栈和使用更长的睡眠来逃避检测。 &lt;a href=&quot;https://hackernews.betacat.io/#an-introduction-to-sleep-obfuscation-for-malware-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40713595&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;台积电试验矩形晶圆与圆形晶圆，以提高每晶圆更多芯片&lt;/stitle>; &lt;id>;https://asia.nikkei.com/Business/Tech /Semiconductors/TSMC-explores-radical-new-chip-packaging-approach-to-feed-AI-boom&lt;/id>; &lt;更新>;2024-06-21T20:01:25.633702Z&lt;/更新>; &lt;link href=&quot; https://asia.nikkei.com/Business/Tech/Semiconductors/TSMC-explores-radical-new-chip-packaging-approach-to-feed-AI-boom&quot;/>; &lt;作者>; &lt;名称>;alok-g&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=alok-g&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www. ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-product-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com% 2Fimages%2F9%2F1%2F3%2F5%2F47855319-1-eng-GB%2FIMG_7607.png?width=700&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;台积电正在开发一种新的芯片封装方法，以满足人工智能驱动的计算能力需求。该方法与供应商合作，可能需要几年时间才能商业化。 &lt;a href=&quot;https: //hackernews.betacat.io/#tsmc-experimenting-with-rectangular-wafers-vs-round-for-more-chips-per-wafer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=40752721&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Stockfish 识别理想方块&lt;/stitle>; &lt;id>;https://lichess.org/@/jk_182/blog/using-stockfish-to -identify-ideal-squares/x3U2g3NP&lt;/id>; &lt;更新>;2024-06-22T00:01:25.634108Z&lt;/更新>; &lt;link href=&quot;https://lichess.org/@/jk_182/blog/using- stockfish-to-identify-ideal-squares/x3U2g3NP&quot;/>; &lt;作者>; &lt;名称>;akkartik&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=akkartik&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://image.lichess1.org/display?h=550&amp;op=thumbnail&amp;path=jk_182:ublog:x3U2g3NP:I4F5HU8j.jpg&amp;w=880&amp;sig=8cd694fa683dae5beaa4a87aa57787f2e0fc2c59&quot; style=&quot;width ：220像素； height: 138px;&quot; />;&lt;br />;作者创建了一个程序，使用 Stockfish 找到棋子在国际象棋位置上的理想方格，通过比较材料平衡来评估位置，并忽略一方获胜多于棋子的方格。程序提供了有希望的结果，但仍有一些问题需要解决，例如考虑现实的方块和棋子结构&lt;a href=&quot;https://hackernews.betacat.io/#using-stockfish-to-identify-ideal-squares。 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40746144&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算机/计算器如何计算对数？&lt;/stitle>; &lt; id>;https://zachartrand.github.io/SoME-3-Living/&lt;/id>; &lt;更新>;2024-06-21T16:01:25.634490Z&lt;/更新>; &lt;link href=&quot;https://zachartrand. github.io/SoME-3-Living/&quot;/>; &lt;author>; &lt;name>;ykonstant&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ykonstant&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zachartrand.github.io/SoME-3-Living/images/desmos-geometric-series.png&quot; style=&quot;width: 220px; height: 198px;&quot; />;&lt;br />;本文解释了计算器和计算机如何使用级数展开式计算对数，特别是自然对数的泰勒级数。通过组合两个级数展开式，本文展示了如何导出一个新的级数：收敛速度更快，并且需要更少的项来达到相同的精度水平，从而更有效地计算对数。对数&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40749670&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：高频交易和做市回测工具示例&lt;/stitle>; &lt;id>;https://github.com/nkaz001/hftbacktest/tree/master/rust&lt;/id>; &lt;updated>;2024-06-21T17:01:25.634858Z&lt;/updated>; &lt;link href =&quot;https://github.com/nkaz001/hftbacktest/tree/master/rust&quot;/>; &lt;作者>; &lt;名称>;nkaz001&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id= nkaz001&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/0209b30158d7d9660159ffce158557cdcea06a1205e2ced65ee1f8e6577a8046/nkaz001/hftbacktest&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;该项目是一个用于高频交易和做市策略的 Rust 框架，专注于基于准确的市场重放的回测和实时机器人部署。它允许可定制的逐笔交易模拟、订单填写模拟以及在 Binance Futures 和 Bybit 上的部署，欢迎贡献以改进该项目。 market-making-backtesting-tool-with-examples&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40751178&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;