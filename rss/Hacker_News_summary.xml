<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-12T00:27:40.795664Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;高通利润率背后的秘密？专利&lt;/stitle>; &lt;id>;https://blog.withedge.com/p/the-secret-behind-qualcomms-margins&lt;/id>; &lt;updated>;2023-12-11T23:26:38.587869Z&lt;/updated>; &lt;link href=&quot;https://blog.withedge.com/p/the-secret-behind-qualcomms-margins&quot;/>; &lt;作者>; &lt;name>;ejz&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=ejz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good ,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d557c26-323d-41f9-8d27-6926d070b196_1600x900.jpeg&quot; style=&quot;宽度: 220px; 高度: 124px; ” />;&lt;br />;苹果努力打造自己的无线调制解调器，不仅是为了绕开高通的芯片，也是为了规避其专利授权策略。高通独特的专利授权方式使其获得了高利润率，超过了行业平均水平。该公司将其专利许可业务与芯片业务合并在一起，即使公司不使用高通的产品，也可以获得其专利许可。 &lt;a href=&quot;https://hackernews.betacat.io/#the-secret-behind-qualcomm-s-margins-patents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38606488&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Beeper Mini 回来了&lt;/stitle>; &lt;id>;https://blog.beeper.com/p/beeper-mini-is-back&lt;/id>; &lt;已更新>;2023-12-11T18:26:38.589963Z&lt;/已更新>; &lt;link href=&quot;https://blog.beeper.com/p/beeper-mini-is-back&quot;/>; &lt;作者>; &lt;名称>;erohead &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=erohead&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com /image/fetch/w_1456,c_limit,f_auto,q_auto:好,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0111f204-871b-40a1-bd77-30e1d6087415_2000x830 .png&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;Beeper Mini 在修复了导致消息发送和接收问题的问题后又回来了。可以通过手机上的 beeper.com/update 获取更新。 &lt;a href=&quot;https://hackernews.betacat.io/#beeper-mini-is-back&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38602575&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;OpenBSD – 固定所有系统调用&lt;/stitle>; &lt;id>;https://marc.info/?l=openbsd-tech&amp;m=170205367232026&amp;w=2&lt;/id>; &lt;更新>;2023-12 -11T23:26:38.590358Z&lt;/更新>; &lt;link href=&quot;https://marc.info/?l=openbsd-tech&amp;m=170205367232026&amp;w=2&quot;/>; &lt;作者>; &lt;名称>;g0xA52A2A &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=g0xA52A2A&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;OpenBSD 实现了一项名为“固定所有系统调用”的新功能，以破坏常见的攻击方法用于攻击。此功能将系统调用限制为地址空间中的特定入口点，使攻击者更难以利用漏洞。 &lt;a href=&quot;https://hackernews.betacat.io/#openbsd-pinning-all-system-calls&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38579913&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;机械手表（2022）&lt;/stitle>; &lt;id>;https://ciechanow.ski/mechanical-watch/&lt;/id>; &lt;更新>;2023-12-11T12:26： 38.590740Z&lt;/更新>; &lt;link href=&quot;https://ciechanow.ski/mechanical-watch/&quot;/>; &lt;作者>; &lt;名称>;Akcium&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=Akcium&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ciechanow.ski/images/og/watch.png&quot; style=&quot;width: 220px; height : 116 像素;&quot; />;&lt;br />;机械手表由主发条提供动力，主发条通过心轴紧密缠绕。主发条储存在发条盒内，为腕表的运作提供能量。齿轮用于将发条盒的缓慢旋转转换为指针的更快旋转。擒纵机构由擒纵轮和擒纵叉组成，控制能量的释放&lt;a href=&quot;https://hackernews.betacat.io/#mechanical-watch-2022&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38591084&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我构建了 Azure OpenAI 服务的 OSS 替代品&lt;/stitle>; &lt;id>;https://github.com /bricks-cloud/BricksLLM&lt;/id>; &lt;更新>;2023-12-11T19:26:38.591464Z&lt;/更新>; &lt;link href=&quot;https://github.com/bricks-cloud/BricksLLM&quot;/>; &lt;作者>; &lt;name>;luyuanxin1995&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=luyuanxin1995&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //raw.githubusercontent.com/bricks-cloud/BricksLLM/main/assets/bricks-logo.png&quot; style=&quot;width: 220px; height: 217px;&quot; />;&lt;br />;BricksLLM 是一个用 Go 编写的云原生 AI 网关，充当 OpenAI 的代理。它允许细粒度的访问控制，并与 OpenAI API 和 SDK 兼容。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-an-oss-alternative-to-azure-openai-services&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38603853&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;比较 6502 乘法例程&lt;/stitle>; &lt;id>;https://github.com/TobyLobster/multiply_test&lt;/id>; &lt;已更新>;2023-12-11T21:26:38.591848Z&lt;/已更新>; &lt;link href=&quot;https://github.com/TobyLobster/multiply_test&quot;/>; &lt;author>; &lt;name>;adunk&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=adunk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/5048a4dedf3d991477311c3396d29c059a04164e58a428812b5d45939320085e/TobyLobster/multiply_测试“样式=”宽度：220px;高度：110px;“ />;&lt;br />;本文比较了 6502 CPU 的各种通用乘法例程的运行时性能和内存使用情况。结论是，不存在单一的“最佳”例程，因为速度和内存之间存在权衡，但某些例程始终优于其他例程。 &lt;a href=&quot;https://hackernews.betacat.io/#comparing-6502-multiply-routines&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38598940&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;如果 SQL 语句返回数据库怎么办？&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2312.00638&lt;/id>; &lt;updated>;2023-12-11T22:26 ：38.592210Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2312.00638&quot;/>; &lt;作者>; &lt;name>;matt_d&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=matt_d&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo- fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;每个 SQL 语句仅限于返回单个表（可能是非规范化的表）。这种设计决策对数据库用户产生了深远的影响，包括查询性能低、查询结果传输时间长、Web 应用程序和对象关系映射器中 SQL 的可用性问题。此外，对于数据库架构师来说，在设计查询优化器时，它会产生逻辑（代数）连接枚举工作、中间结果具体化的内存消耗以及物理运算符选择工作的后果。整个查询优化堆栈是由该设计决策决定的。 &lt;a href=&quot;https://hackernews.betacat.io/#what-if-an-sql-statement-returned-a-database&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38606146&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;FISA“改革”法案将极大地扩大被迫监视用户的实体&lt;/stitle>; &lt;id>;https://www.zwillgen.com/law- forcement/fisa-reform-b​​ill-702-surveillance/&lt;/id>; &lt;更新>;2023-12-11T21:26:38.592955Z&lt;/更新>; &lt;link href=&quot;https://www.zwillgen.com/law- forcement/fisa-reform-b​​ill-702-surveillance/&quot;/>; &lt;author>; &lt;name>;jacooper&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jacooper&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.zwillgen.com/wp-content/uploads/2023/12/uscapitolbuilding-960x540.png&quot; style=&quot;宽度：220px；高度： 124 像素；” />;&lt;br />;《2023 年外国情报监视法案改革和重新授权法案》(FRRA) 已获得众议院情报常设特别委员会的批准。它将重新授权《外国情报监视法》(FISA 702) 第 702 条，并对政府获取有关美国人的信息施加新的限制。然而，它还包含一项条款，通过扩大可以被迫协助监视的“电子通信服务提供商”(ECSP) 的定义，极大地扩大 FISA 702 规定的政府权力。 &lt;a href=&quot;https://hackernews.betacat.io/#fisa-reform-b​​ill-would-greatly-expand-the-entities-forced-to-surveil-users&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38605525&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;最好的 WebAssembly 运行时可能是无运行时&lt;/stitle>; &lt;id>;https://00f.net/2023/ 12/11/webassemble-compilation-to-c/&lt;/id>; &lt;更新>;2023-12-11T18:26:38.593319Z&lt;/更新>; &lt;link href=&quot;https://00f.net/2023/12/ 11/web assembly-compilation-to-c/&quot;/>; &lt;作者>; &lt;名称>;jedisct1 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jedisct1&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;wasm2c 工具和单文件 WebAssembly 转译器将 WebAssembly 代码转换为 C 源代码，具有人类可读性、易于调试以及直接从 C 或任何语言调用 WebAssembly 函数等优点。 C FFI。这种方法提高了安全性，允许沙箱，并且可用于在嵌入式目标和新操作系统上编译和运行 WebAssembly。 &lt;a href=&quot;https://hackernews.betacat.io/#the-best-web assembly-runtime-may-be-no-runtime&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38602750&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;文本编辑器数据结构：重新思考撤消&lt;/stitle>; &lt;id>;https://cdacamar.github.io/data%20structs/algorithms/benchmarking/text %20editors/c++/rethinking-undo/&lt;/id>; &lt;更新>;2023-12-11T16:26:38.593680Z&lt;/更新>; &lt;link href=&quot;https://cdamar.github.io/data%20structs/algorithms /benchmarking/text%20editors/c++/rethinking-undo/&quot;/>; &lt;作者>; &lt;名称>;starfreakclone&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=starfreakclone&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdacamar.github.io/images/undo-redo-graph-initial.png&quot; style=&quot;width: 220px; height: 144px;&quot; />;&lt;br />;撤消和重做可能自从出现第一个拼写错误以来就一直是文本编辑器的主要操作，但在完善撤消和重做的概念方面还没有太多创新。让我们探讨一下我的意思...... &lt;a href=&quot;https://hackernews.betacat.io/#text-editor-data-structs-rethinking-undo&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38601435&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;他当然偷了它们&lt;/stitle>; &lt;id>;https://literaryreview.co.uk/he-steals-them-of-课程&lt;/id>; &lt;更新>;2023-12-11T16:26:38.594078Z&lt;/更新>; &lt;link href=&quot;https://literaryreview.co.uk/he-steals-them-of-course&quot;/>; &lt;作者>; &lt;name>;Caiero&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Caiero&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://literaryreview.co.uk/wp-content/lr-files/2023/11/OFC-cropped-high-res-200x266.png&quot; style=&quot;宽度：220px；高度：293px；&quot; />;&lt;br />;托马斯·詹姆斯·怀斯 (Thomas James Wise) 曾经被誉为一代人中最伟大的收藏家，现在却因伪造维多利亚时代初版而臭名昭著。他不仅伪造​​书籍，还从大英博物馆偷树叶来修复他收藏的损坏的四开本。 &lt;a href=&quot;https://hackernews.betacat.io/#he-steals-them-of-course&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38592432&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;深度学习 – 基础和概念（Chris Bishop）&lt;/stitle>; &lt;id>;https://www.bishopbook.com/&lt;/id>; &lt;更新>;2023-12-11T21 :26:38.594452Z&lt;/updated>; &lt;link href=&quot;https://www.bishopbook.com/&quot;/>; &lt;作者>; &lt;name>;armcat&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=armcat&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bishopbook.com/assets/images/chris.png&quot; style=&quot;width: 220 像素；高度：220 像素；&quot; />;&lt;br />;本书全面介绍了支撑深度学习的中心思想。它既适合机器学习的新手，也适合该领域已经有经验的人。 &lt;a href=&quot;https://hackernews.betacat.io/#deep-learning-foundations-and-concepts-chris-bishop&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38605453&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Terminal Trove – CLI、TUI 和终端中所有内容的集合&lt;/stitle>; &lt;id>;https://terminaltrove.com/&lt;/id>; &lt;更新>;2023-12-11T21:26:38.594813Z&lt;/更新>; &lt;link href=&quot;https://terminaltrove.com/&quot;/>; &lt;作者>; &lt;name>;diazc&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=diazc&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.terminaltrove.com/m/f2b2099b-bb2a-4498- 92e4-f91f60f53b82.gif&quot; style=&quot;宽度：220px；高度：150px；&quot; />;&lt;br />;Terminal Trove 展示了终端的最佳功能，在 Terminal Trove 中探索 CLI、TUI 和更多开发人员工具的集合。 &lt;a href=&quot;https://hackernews.betacat.io/#terminal-trove-a-collection-of-clis-tuis-and-all-things-in-the-terminal&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38605466&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;数学家发现了拉姆齐数的新上限&lt;/stitle>; &lt;id>;https://www .quantamagazine.org/after-nearly-a- century-a-new-limit-for-patterns-in-graphs-20230502/&lt;/id>; &lt;更新>;2023-12-11T13:26:38.595178Z&lt;/更新>; &lt;link href=&quot;https://www.quantamagazine.org/after-nearly-a- century-a-new-limit-for-patterns-in-graphs-20230502/&quot;/>; &lt;作者>; &lt;名称>;georgehill&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=georgehill&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront. net/uploads/2022/08/HP-Design-A%402x-1.png&quot; style=&quot;宽度：220px；高度：290px；&quot; />;&lt;br />;研究人员在计算组合数学的基本问题拉姆齐数方面取得了重大突破。拉姆齐数量化了在特定模式不可避免地出现之前范式示例必须有多大，尽管经过了数十年的研究，数学家们一直在努力计算它。然而，四位数学家最近发表的一篇论文声称将拉姆齐数的上限提高了指数级，这在数学界引起了兴奋和乐观。 &lt;a href=&quot;https://hackernews.betacat.io/#mathematicians-have-found-a-new-upper-limit-to-the-ramsey-number&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38590156&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;“冰川小鼠”困扰着科学家&lt;/stitle>; &lt;id>;https://www.atlasobscura.com/articles/herds- of-glacier-mice-baffle-scientists&lt;/id>; &lt;更新>;2023-12-11T17:26:38.595540Z&lt;/更新>; &lt;link href=&quot;https://www.atlasobscura.com/articles/herds-of -glacier-mice-baffle-scientists&quot;/>; &lt;作者>; &lt;名称>;janandonly&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=janandonly&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://img.atlasobscura.com/2_YNzy-bhm_8Le2qGfDnhocH1rPAR882klG5ZCljIc4/rt:fit/w:1280/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh /cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy80YjVmMjQ5NC0w/ZWRlLTRmN2UtOTQ5/Zi1lMGI3OTAzZDBl/YTQ3M2U5ODhkNWRk/N2E1NzNjNjNfc2h1/dHRl cnN0b2NrXzIw/NDgzOTUyNzcuanBn.jpg&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;冰川鼠，也称为冰川苔藓球，是在冰川上形成的模糊的绿色苔藓球。它们一致移动，可以活至少六年，但协调的因素它们的运动仍然是个谜。研究人员推测，苔藓球之所以会移动，是因为它们可以防止其下方的冰融化，但确切原因尚不清楚。尽管人们对冰川鼠感到好奇，但目前还没有对它们进行广泛的研究。 &lt;a href=&quot;https://hackernews.betacat.io/#glacier-mice-baffle-scientists&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38602228&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;为了重振波特兰，官员们寻求禁止公共场所吸毒&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/12/11/us/portland-oregon-drug -laws.html&lt;/id>; &lt;更新>;2023-12-11T21:26:38.596058Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2023/12/11/us/portland- oregon-drug-laws.html&quot;/>; &lt;作者>; &lt;名称>;mikhael&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mikhael&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2023/12/11/multimedia/11nat-portland-rescue-placeholders-02-fjmb/11nat-portland-rescue-placeholders- 02-fjmb-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;俄勒冈州州长蒂娜·科特克 (Tina Kotek) 和市政府官员提议撤销该州毒品非刑罪化法的一部分，以重振波特兰。该计划包括禁止公共场所吸毒，并增加警方资源阻止毒品传播。&lt;a href=&quot;https://hackernews.betacat.io/#to-revive-portland-officials-seek-to-ban-public-drug-use&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38605643&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;透明木材很快就会在智能手机屏幕、隔热窗户中找到用途&lt;/stitle>; &lt;id>;https:/ /arstechnica.com/science/2023/12/why-scientists-are-making-transparent-wood/&lt;/id>; &lt;更新>;2023-12-11T14:26:38.596482Z&lt;/更新>; &lt;link href=&quot;https ://arstechnica.com/science/2023/12/why-scientists-are-making-transparent-wood/&quot;/>; &lt;author>; &lt;name>;pseudolus&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=pseudolus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2023/12/media_transparent-木材-1600x600-1-800x300.jpg&quot; style=&quot;width: 220px;高度：83px;&quot; />;&lt;br />;通过漂白植物细胞中的色素而制成的透明木材可以有多种应用，例如智能手机的超强屏幕、柔和的灯具和变色窗户。通过修改或去除将细胞束固定在一起的胶水，并用一种​​使光线弯曲程度与细胞壁相似的物质填充气穴。透明木材比塑料和玻璃更坚固，而且比玻璃是更好的绝缘体，使其适合 Windows 等建筑功能。 &lt;a href=&quot;https://hackernews.betacat.io/#transparent-wood-could-soon-find-uses-in-smartphone-screens-insulated-windows&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38600031&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用 C# 为 Raspberry Pi 构建裸机可启动游戏&lt;/stitle>; &lt;id >;https://migeel.sk/blog/2023/12/08/building-bare-metal-bootable-game-for-raspberry-pi-in-csharp/&lt;/id>; &lt;更新>;2023-12-11T10： 26:38.597181Z&lt;/更新>; &lt;link href=&quot;https://migeel.sk/blog/2023/12/08/building-bare-metal-bootable-game-for-raspberry-pi-in-csharp/&quot; />; &lt;作者>; &lt;名称>;pjmlp&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pjmlp&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://migeel.sk/blog/2023/12/08/building-bare-metal-bootable-game-for-raspberry-pi-in-csharp/title_huc7a14d4e60eac6a2042eb7c5aacefd59_82400_800x0_resize_box_3.png&quot; style=&quot;width: 220px; height: 108px;&quot; />;&lt;br />;随着 .NET 7 中原生 AOT 的加入，将 C# 编译为不需要虚拟机运行的原生代码成为可能。bflat 项目是一个超前的项目C# 编译器，允许您构建可以在 UEFI 固件上运行的小型可启动应用程序，例如迷宫游戏。&lt;a href=&quot;https://hackernews.betacat.io/#building-a-bare-metal-bootable- game-for-raspberry-pi-in-c&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38599027&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;你能做什么用爱因斯坦（非周期单瓦片）做什么？&lt;/stitle>; &lt;id>;https://www.nytimes.com/2023/12/10/science/mathematics-tiling-einstein.html&lt;/id>; &lt;updated>;2023- 12-11T20:26:38.597537Z&lt;/updated>; &lt;link href=&quot;https://www.nytimes.com/2023/12/10/science/mathematics-tiling-einstein.html&quot;/>; &lt;作者>; &lt;姓名>;robinhouston&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=robinhouston&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01 .nyt.com/images/2023/12/11/science/11SCI-DIYEINSTEIN/11SCI-DIYEINSTEIN-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;width: 220px;高度：275px;&quot; />;&lt;br />;发现“非周期单块”（一种可以以不重复图案平铺无限平坦表面的形状）一年后，举办了一场竞赛，以寻找最具创意的表现形式这个形状。获奖者包括俄罗斯方块的单块变体、帽子馄饨、折纸帽子瓷砖和各种艺术表现形式。&lt;a href=&quot;https://hackernews.betacat.io/#what-c​​an-you-do-with- an-einstein-aperiodic-monotile&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38592662&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TSA 引入自助筛查技术在拉斯维加斯&lt;/stitle>; &lt;id>;https://upgradedpoints.com/news/tsa-self-service-screening/&lt;/id>; &lt;更新>;2023-12-11T19:26:38.597918Z&lt;/更新>; &lt; link href=&quot;https://upgradedpoints.com/news/tsa-self-service-screening/&quot;/>; &lt;author>; &lt;name>;mji&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=mji&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upgradedpoints.com/wp-content/uploads/2023/12/PAX-M2-self-service -screening-concept-design.jpeg?auto=webp&amp;disable=upscale&amp;width=1200&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;本站许多信用卡优惠均来自提供经济补偿的公司。本站公布的信用卡信息均由专家撰写和评估。本站不包含所有信用信用卡公司或市场上的优惠。&lt;a href=&quot;https://hackernews.betacat.io/#tsa-introducing-self-service-screening-technology-in-las-vegas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38603440&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cowgol 2.0 (2022)&lt;/stitle>; &lt;id>;http://cowlark.com/cowgol/index .html&lt;/id>; &lt;更新>;2023-12-11T18:26:38.598270Z&lt;/更新>; &lt;link href=&quot;http://cowlark.com/cowgol/index.html&quot;/>; &lt;作者>; &lt;名称>; 082349872349872&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Cowgol 是一种实验性的、受 Ada 启发的语言，适用于非常小型系统。它旨在在这些设备上自托管，并旨在在 8 位微处理器上重建整个编译器。它支持各种平台，并具有死代码删除、静态变量分配和小而高效的二进制文件等功能。 &lt;a href=&quot;https://hackernews.betacat.io/#cowgol-2-0-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38590786&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;关于限量版（1998）&lt;/stitle>; &lt;id>;http://woodblock.com/surimono/atgallery01.html&lt;/id>; &lt;更新>;2023-12-11T17:26： 38.598636Z&lt;/updated>; &lt;link href=&quot;http://woodblock.com/surimono/atgallery01.html&quot;/>; &lt;作者>; &lt;name>;wallflower&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;木刻版画画家戴夫·布尔 (Dave Bull) 讨论了他对限量版版画的看法。他认为版本号是不必要的，印刷品应该让尽可能多的人可以访问。他还批评了版画的高价以及画廊在艺术市场中的作用。 &lt;a href=&quot;https://hackernews.betacat.io/#on-limited-editions-1998&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38591581&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Mamba 的表现优于变形金刚“无论我们尝试过的任何地方”&lt;/stitle>; &lt;id>;https://old.reddit.com/r/singularity/comments/18asto2/announcing_mamba_a_new_ssm_arch_that_has/&lt;/id>; &lt;updated >;2023-12-11T23:26:38.598993Z&lt;/updated>; &lt;link href=&quot;https://old.reddit.com/r/singularity/comments/18asto2/announcing_mamba_a_new_ssm_arch_that_has/&quot;/>; &lt;作者>; &lt;名称>;behnamoh &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=behnamoh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;一个致力于了解人工智能超越人类时刻的 Reddit 子版块智力，称为奇点。这个社区相信奇点很快就会发生，应该采取行动确保它造福人类。 &lt;a href=&quot;https://hackernews.betacat.io/#mamba-outperforms-transformers-everywhere-we-tried&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38606590&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;输入元素的深度&lt;/stitle>; &lt;id>;https://www.htmhell.dev/adventcalendar/2023/8/&lt;/id>; &lt;updated>;2023 -12-11T21:26:38.599351Z&lt;/更新>; &lt;link href=&quot;https://www.htmhell.dev/adventcalendar/2023/8/&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.htmhell.dev/images/og /advent23_8.png?s=011221s&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;大多数元素的行为方式相同，无论其属性如何，但 &lt;input>; 元素根据其 type 属性具有不同的行为和视觉外观。还有一些属性可以调整 &lt;input>; 元素的行为，使其更可用和更易于访问。例如，inputmode 属性可以针对预期输入优化键盘，而 readonly 属性可以使字段保持惰性，同时仍允许访问其内容。 &lt;a href=&quot;https://hackernews.betacat.io/#the-depths-of-the-input-element&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38605477&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Clockhands：无序处理器的免重命名指令集架构&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/fullHtml/10.1145 /3613424.3614272&lt;/id>; &lt;更新>;2023-12-11T11:26:38.600066Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/fullHtml/10.1145/3613424.3614272&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //dl.acm.org/cms/attachment/html/10.1145/3613424.3614272/assets/html/images/micro23-28-fig1.jpg&quot; style=&quot;宽度：220px；高度：245px；&quot; />;&lt;br />;乱序超标量处理器是目前唯一能够加速不规则程序的架构。最近的商用处理器集成了更多海量乱序核心，以提高 CPU 单线程性能。然而，这种方法并不节能。我们提出 Clockhands，一种具有多个寄存器组的 ISA，不会导致错误的依赖关系，并且不需要寄存器重命名 &lt;a href=&quot;https://hackernews.betacat.io/#clockhands-rename-free-instruction-set-architecture -for-out-of-order-processors&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38581719&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;神奇的斐波那契公式&lt; /stitle>; &lt;id>;https://orlp.net/blog/magical-fibonacci-formulae/&lt;/id>; &lt;更新>;2023-12-11T11:26:38.600419Z&lt;/更新>; &lt;link href=&quot;https: //orlp.net/blog/magical-fibonacci-formulae/&quot;/>; &lt;作者>; &lt;名称>;alexmolas&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=alexmolas&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;斐波那契数列可以使用生成函数计算。生成函数是变量 x 中的“无限多项式”，其系数对应于斐波那契数列。 &lt;a href=&quot;https://hackernews.betacat.io/#magical-fibonacci-formulae&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=38599168&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;