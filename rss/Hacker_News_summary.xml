<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-01T12:09:00.593018Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;塑造互联网的 10 个奇怪的 HTML 黑客&lt;/stitle>; &lt;id>;https://tedium.co/2023/11/24/weird-html-hacks-history/&lt;/ id>; &lt;更新>;2023-12-01T11:08:52.515148Z&lt;/更新>; &lt;link href=&quot;https://tedium.co/2023/11/24/weird-html-hacks-history/&quot;/>; &lt;作者>; &lt;name>;marban&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=marban&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://images.tedium.co/uploads/tedium112423.gif&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;HTML hack 在塑造互联网方面发挥了至关重要的作用。从使用黑客技术来解决浏览器限制到创建创新的解决方案，这些黑客技术使开发人员能够创建具有视觉吸引力和功能性的网站。一些值得注意的黑客行为包括使用两个 HTML 文件来绕过浏览器布局问题、使用 HTML 表格进行网站布局以及使用条件注释来修复 Internet Explorer 中损坏的 HTML。 &lt;a href=&quot;https://hackernews.betacat.io/#10-weird-html-hacks-that-shape-the-internet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38485295&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;代码运行多于读取&lt;/stitle>; &lt;id>;https://olano.dev/2023-11-30-code-is-run- more-than-read/&lt;/id>; &lt;更新>;2023-12-01T05:08:52.517203Z&lt;/更新>; &lt;link href=&quot;https://olano.dev/2023-11-30-code-is- run-more-than-read/&quot;/>; &lt;作者>; &lt;名称>;signa11&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://olano.dev/assets/img/readrun.png”样式 =“宽度：220 像素；高度：120 像素；” />;&lt;br />;代码的阅读多于编写，强调了使代码可维护和以用户为中心的重要性。尽早并频繁地将程序呈现在用户面前以吸收他们的反馈至关重要。软件开发过程应考虑业务角度，同时仍优先考虑用户体验。 &lt;a href=&quot;https://hackernews.betacat.io/#code-is-run-more-than-read&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38483181&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Marker：快速高精度地将 PDF 转换为 Markdown&lt;/stitle>; &lt;id>;https://github.com/VikParuchuri/marker&lt;/id>; &lt;updated>;2023- 12-01T02:08:52.517700Z&lt;/updated>; &lt;link href=&quot;https://github.com/VikParuchuri/marker&quot;/>; &lt;author>; &lt;name>;sebg&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/VikParuchuri/marker/master/data/images /overall.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Marker是一款将PDF、EPUB、MOBI转换为Markdown的工具。它比牛轧糖更快、更准确，且产生幻觉的风险较低。 Marker 仅通过 LLM 正向传递来传递方程块，从而加快处理速度并降低 VRAM 使用率。 &lt;a href=&quot;https://hackernews.betacat.io/#marker-convert-pdf-to-markdown-quickly-with-high-accuracy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38482007&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;视觉字谜：使用扩散模型生成视错觉&lt;/stitle>; &lt;id>;https://dangeng.github.io/visual_anagrams/&lt;/id >; &lt;更新>;2023-11-30T19:08:52.518200Z&lt;/更新>; &lt;link href=&quot;https://dangeng.github.io/visual_anagrams/&quot;/>; &lt;作者>; &lt;名称>;beefman&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=beefman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dangeng.github.io/visual_anagrams/ static/images/method.jpg&quot; style=&quot;宽度：220px；高度：93px；&quot; />;&lt;br />;训练扩散模型来估计以时间步 t 为条件的噪声数据中的噪声。视图 v 必须通过使其呈线性来维持信号和噪声之间的权重。 &lt;a href=&quot;https://hackernews.betacat.io/#visual-anagrams-geneating-optical-illusions-with-diffusion-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38477259&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Postgres 和 SQLite 之间的双向同步&lt;/stitle>; &lt;id>;https://powersync.com&lt;/id>; &lt;updated>;2023 -11-30T22：08：52.518711Z &lt;/更新>; &lt;link href =“https://powersync.com”/>; &lt;作者>; &lt;名称>; matharmin &lt;/名称>; &lt;uri>; https://news.ycombinator。 com/user?id=matharmin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets-global.website-files.com/651d89402147985dc475ff48/65250f3e82c9e9a06c5f7c4b_img-tyler-shukert。 png&quot; 样式=&quot;宽度：220 像素；高度：221 像素；&quot; />;&lt;br />;使用性能优化的 SQLite 数据库进行本地读写，使您的应用程序响应迅速且始终可用。无需进行客户端迁移。自动将数据更新事件从后端 Postgres 流式传输到用户。本地数据库上的实时查询监听更改并实时更新您的 UI，&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-双向同步之间-postgres-and-sqlite&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38473743&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Turbo帕斯卡 40 岁了&lt;/stitle>; &lt;id>;https://blog.marcocantu.com/blog/2023-november-turbopascal40.html&lt;/id>; &lt;updated>;2023-11-30T20:08:52.519226Z&lt;/updated>; &lt;link href=&quot;https://blog.marcocantu.com/blog/2023-november-turbopascal40.html&quot;/>; &lt;作者>; &lt;name>;andsoitis&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.marcocantu.com/images/forblog/turbopascal40.png&quot; style=&quot;width: 220 像素；高度：151 像素；&quot; />;&lt;br />;Turbo Pascal 是业界的里程碑产品，它创立了 Borland 公司，并成为第一个流行的集成开发环境 (IDE)。它的成功令人难以置信，并且由 Embarcadero 继续开发。 &lt;a href=&quot;https://hackernews.betacat.io/#turbo-pascal-turns-40&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38477688&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Skyfield：Python 的优雅天文学&lt;/stitle>; &lt;id>;https://rhodesmill.org/skyfield/&lt;/id>; &lt;更新>;2023-12-01T00:08:52.520196Z&lt; /updated>; &lt;link href=&quot;https://rhodesmill.org/skyfield/&quot;/>; &lt;作者>; &lt;name>;stefankuehnel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=stefankuehnel &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://rhodesmill.org/skyfield/_static/logo.png&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Skyfield 计算绕地球轨道上的恒星、行星和卫星的位置。其结果应与美国海军天文台及其天文年鉴生成的位置一致，误差范围在 0.0005 角秒（半个“mas”或毫角秒）以内。 &lt;a href=&quot;https://hackernews.betacat.io/#skyfield-elegant-astronomy-for-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38481063&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Intel 386 处理器芯片：时钟电路&lt;/stitle>; &lt;id>;https://www.righto.com/2023/11/intel-386-clock- Circuit.html &lt;/id>; &lt;更新>;2023-12-01T02:08:52.520676Z&lt;/更新>; &lt;link href=&quot;https://www.righto.com/2023/11/intel-386-clock- Circuit.html&quot; />; &lt;作者>; &lt;名称>;图片&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=picture&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://static.righto.com/images/386-clock/386-die-labeled-w600.jpg&quot; style=&quot;宽度：220px；高度：234px；&quot; />;&lt;br />;Intel 386 处理器使用四个时钟信号来控制其时序。时钟电路由二分频逻辑、驱动器电路和时钟分配网络组成。时钟信号经过仔细定时，以防止重叠并确保处理器正常运行。 &lt;a href=&quot;https://hackernews.betacat.io/#the-intel-386-processor-die-the-clock- Circuit&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38475804&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：玩一种在美国和欧洲几乎不为人知的纸笔游戏&lt;/stitle>; &lt;id>;https://www.betacat.io/feed.xml&quot;>; paper-ctics.com&lt;/id>; &lt;更新>;2023-11-30T21:08:52.521166Z&lt;/更新>; &lt;link href=&quot;https://www.paper-tropics.com&quot;/>; &lt;作者>; &lt;姓名>;Kharacternyk&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Kharacternyk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;在线学习和玩纸笔游戏游戏 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-play-a-pen-and-paper-game-that-is-almost-unknown-in-the-us-and-europe &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38472333&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何为数据可视化选择更漂亮的颜色（2020）&lt; /stitle>; &lt;id>;https://blog.datawrapper.de/beautifulcolors/&lt;/id>; &lt;更新>;2023-12-01T03:08:52.521659Z&lt;/更新>; &lt;link href=&quot;https://blog. datawrapper.de/beautifulcolors/&quot;/>; &lt;作者>; &lt;名称>;williamwoodhq &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=williamwoodhq&lt;/uri>; &lt;/author>; &lt;内容类型= “html”>; &lt;img src =“https://blog.datawrapper.de/wp-content/uploads/2021/01/full-200805_goodcolors34.png”样式=“宽度：220px; height: 111px;&quot; />;&lt;br />;为图表选择合适的颜色很困难。本文试图让它变得更容易。&lt;a href=&quot;https://hackernews.betacat.io/#how-to-pick- more-beautiful-colors-for-your-data-visualizations-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38482486&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;我见过的最奇怪的错误&lt;/stitle>; &lt;id>;https://engineering.gusto.com/the-weirdest-bug-ive-seen-yet/&lt;/id>; &lt;updated>;2023-11-30T19 :08:52.522153Z&lt;/updated>; &lt;link href=&quot;https://engineering.gusto.com/the-weirdest-bug-ive-seen-yet/&quot;/>; &lt;作者>; &lt;名称>;jevans &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jevans&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.unsplash.com/photo -1565635897404-6c9a6515cc91？crop=熵&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3wxMTc3M3wwfDF8c2VhcmNofDJ8fExlYWZob3BwZXJ8ZW58MHx8fHwxNzAwNjg3MjM4fDA&amp;ixlib= rb-4.0.3&amp;q=80&amp;w=2000&quot; style=&quot;宽度：220px; height: 147px;&quot; />;&lt;br />;在值班轮换期间，Gusto 内部软件用户的 Chrome 浏览器崩溃，导致客户服务中断。经过数周的调查，发现在该应用程序导致崩溃。&lt;a href=&quot;https://hackernews.betacat.io/#the-weirdest-bug-i-ve-seen-yet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38477100&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;肖恩·麦高恩去世&lt;/stitle>; &lt;id>;https://www.bbc.com/news/entertainment-arts-67546785 &lt;/id>; &lt;更新>;2023-11-30T20:08:52.522629Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/news/entertainment-arts-67546785&quot;/>; &lt;作者>; &lt;名称>;acdanger&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=acdanger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// ichef.bbci.co.uk/news/1024/branded_news/2AEC/product/_131888901_gettyimages-575765887.jpg&quot; style=&quot;width: 220px;身高：124px;&quot; />;&lt;br />;Pogues 主唱肖恩·麦高恩 (Shane MacGowan) 因脑炎住院，最近去世，享年 65 岁。他的妻子维多利亚·玛丽·克拉克 (Victoria Mary Clarke) 在 Instagram 上表示，麦高恩“对我来说意味着整个世界”。 &lt;a href=&quot;https://hackernews.betacat.io/#shane-macgowan-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38473484&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;现代 Uni Wheel 电动驱动系统可以彻底改变电动汽车设计&lt;/stitle>; &lt;id>;https://www.autoblog.com/2023/11/29/uni-wheel-hyundai-kia- electric-vehicle-design/&lt;/id>; &lt;更新>;2023-11-30T23:08:52.523111Z&lt;/更新>; &lt;link href=&quot;https://www.autoblog.com/2023/11/29/uni- wheel-hyundai-kia-electric-vehicle-design/&quot;/>; &lt;作者>; &lt;名称>;yread&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=yread&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://edgecast-img.yahoo.net/mysterio/api/6E0E34B2FF2AB642BC892AD661471937EF2FCD4E38112DAB463BF04A8B594FE2/autoblog/resizefill_w1200_h675;quality_80;format_webp;cc_31 536000；/https://s. aolcdn.com/os/ab/_cms/2023/11/29084754/23646-UniversalWheelDriveSystemExterior.jpg&quot; style=&quot;width: 220px;高度：124px;&quot; />;&lt;br />;现代和起亚推出了通用车轮驱动系统 (Uni Wheel)，该系统用轮毂内的齿轮排列取代了标准等速万向节。该系统具有以下优点：缩小包装尺寸，改善乘坐质量，提高耐用性并提高效率。可用于电动汽车、卡车、踏板车、摩托车、轮椅和送货机器人。&lt;a href=&quot;https://hackernews.betacat.io/#现代-uni-wheel-electric-drive-system-could-revolutionize-ev-design&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38471815&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;开源大型语言模型正在迎头赶上吗？&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2311.16989&lt;/id>; &lt;updated>;2023-12-01T02:08:52.523614Z &lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2311.16989&quot;/>; &lt;作者>; &lt;name>;rkwz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =rkwz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png “样式=”宽度：220px; height: 129px;&quot; />;&lt;br />;ChatGPT 于 2022 年底发布，为整个人工智能领域（无论是研究还是商业）带来了翻天覆地的变化。人们对开源大型语言模型 (LLM) 的兴趣日益浓厚，声称与闭源 LLM 相比，在某些任务上实现了同等甚至更好的性能。上&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38481970&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;44 分钟了解查理·芒格的 99 年智慧 [视频]&lt; /stitle>; &lt;id>;https://www.youtube.com/watch?v=ySErrOs093o&lt;/id>; &lt;更新>;2023-12-01T10:08:52.524096Z&lt;/更新>; &lt;link href=&quot;https:// /www.youtube.com/watch?v=ySErrOs093o&quot;/>; &lt;作者>; &lt;名称>;mustafabisic1&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mustafabisic1&lt;/uri>; &lt;/作者>; &lt;content type=“html”>;&lt;iframe src=“//www.youtube.com/embed/ySErrOs093o”frameborder=“0”allowfullscreen=“lazy”>;&lt;/iframe>; &lt;a href=“https： //hackernews.betacat.io/#99-years-of-charlie-munger-wisdom-in-44-minutes-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=38485073&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将我从这个死亡陷阱中救出来，Scotty (1980)&lt;/stitle>; &lt;id>;http://www.iasa-intl.com/folders/shuttle/GoodbyeColumbia .html&lt;/id>; &lt;更新>;2023-12-01T03:08:52.524572Z&lt;/更新>; &lt;link href=&quot;http://www.iasa-intl.com/folders/shuttle/GoodbyeColumbia.html&quot;/>; &lt;作者>; &lt;名称>;juliusdavies&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=juliusdavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; http://www.iasa-intl.com/folders/shuttle/GoodbyeColumbia_files/text-ad5.jpg&quot; style=&quot;width: 220px; height: 184px;&quot; />;&lt;br />;文章讨论了 NASA 航天飞机计划的问题和进展，重点关注了 Spruce Goose 和哥伦比亚号航天飞机的研制。重点介绍了所面临的延误、成本超支和性能问题由航天飞机计划。&lt;a href=&quot;https://hackernews.betacat.io/#beam-me-out-of-this-death-trap-scotty-1980&quot; target=&quot;_blank&quot;>;[summary]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38457455&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：澳大利亚声学天文台搜索&lt;/stitle>; &lt;id>;https://search.acousticobservatory.org/&lt;/ id>; &lt;更新>;2023-12-01T06:08:52.525555Z&lt;/更新>; &lt;link href=&quot;https://search.acousticobservatory.org/&quot;/>; &lt;作者>; &lt;名称>;sdenton4 &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=sdenton4&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#show- hn-australian-acoustic-observatory-search&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38483650&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;现实扭曲错误苹果的计算摄影&lt;/stitle>; &lt;id>;https://appleinsider.com/articles/23/11/30/a-bride-to-be-discovers-a-reality-bending-mistake-in-apples-computational-摄影&lt;/id>; &lt;更新>;2023-12-01T03:08:52.526045Z&lt;/更新>; &lt;link href=&quot;https://appleinsider.com/articles/23/11/30/a-bride-to-be -discovers-a-reality-bending-mistake-in-apples-computational-photography&quot;/>; &lt;author>; &lt;name>;indrora&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=indrora &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://photos5.appleinsider.com/gallery/57517-117154-iPhone-15-cameras-xl.jpg&quot; style=&quot;宽度：220px； height: 124px;&quot; />;&lt;br />;一名英国女子被拍到站在镜子前，她的倒影不匹配，但这并不是因为矩阵出现故障。相反，这是一个简单的 iPhone 计算摄影错误。&lt;a href=&quot;https://hackernews.betacat.io/#a-reality-bending-mistake-in-apple-s-computational-photography&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38482085&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为什么我总是点击人行横道按钮（2015）&lt;/stitle>; &lt;id>;https://www.klittlepage.com/2015/01/21/为什么-i-always-hit-the-crosswalk-button/&lt;/id>; &lt;更新>;2023-11-30T17:08:52.526989Z&lt;/更新>; &lt;link href=&quot;https://www.klittlepage.com/ 2015/01/21/why-i-always-hit-the-crosswalk-button/&quot;/>; &lt;author>; &lt;name>;costco&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =costco&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;芝加哥的一个主要人行横道是行人的热门地点，但经常出现交通拥堵，并且不知道谁应该按下步行按钮。这种情况可以用志愿者困境来解释，这是一个博弈论问题，个人依赖他人采取行动。 &lt;a href=&quot;https://hackernews.betacat.io/#why-i-always-hit-the-crosswalk-button-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38461726&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lights Out 的属性：游戏&lt;/stitle>; &lt;id>;https://imois.in/posts/the-properties-of-lights-out -the-game/&lt;/id>; &lt;更新>;2023-11-30T22:08:52.527454Z&lt;/更新>; &lt;link href=&quot;https://imois.in/posts/the-properties-of-lights-out -the-game/&quot;/>; &lt;author>; &lt;name>;duck&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=duck&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://imois.in/images/lights_out/graph20.png&quot; style=&quot;宽度：220px；高度：219px；&quot; />;&lt;br />;本文讨论了 Lights Out 游戏，并探讨了解决该游戏的各种策略和数学方法。作者分析了不同板尺寸的可解性，使用矩阵乘法来寻找解决方案，并优化了程序以计算大型板的无效性。 &lt;a href=&quot;https://hackernews.betacat.io/#properties-of-lights-out-the-game&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38470355&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;斯坦尼斯瓦夫·莱姆对人工生命的愿景&lt;/stitle>; &lt;id>;https://thereader.mitpress.mit.edu/stanislaw-lems-prescient-vision-of-artificial-生活/&lt;/id>; &lt;更新>;2023-11-30T17:08:52.527935Z&lt;/更新>; &lt;link href=&quot;https://thereader.mitpress.mit.edu/stanislaw-lems-prescient-vision-of- Artificial-life/&quot;/>; &lt;作者>; &lt;名称>;axiomdata316 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=axiomdata316&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://thereader.mitpress.mit.edu/wp-content/uploads/2023/09/the-invincible_lead-image-700x420.jpg&quot; style=&quot;宽度：220px；高度：132px； ” />;&lt;br />;在小说《无敌》中，斯坦尼斯瓦夫·莱姆探索了宇航员与从自主机器进化而来的生命形式之间的相遇。这个故事提出了关于人类知识的局限性和人造生命的本质的问题。 &lt;a href=&quot;https://hackernews.betacat.io/#stanislaw-lem-s-vision-of-artificial-life&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38475545&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;联邦法官在蒙大拿州的 TikTok 禁令生效前阻止其生效&lt;/stitle>; &lt;id>;https://www.npr.org/2023/11/30/1205735647/蒙大拿州-tiktok-ban-blocked-state&lt;/id>; &lt;更新>;2023-12-01T09:08:52.528426Z&lt;/更新>; &lt;link href=&quot;https://www.npr.org/2023/11/30 /1205735647/montana-tiktok-ban-blocked-state&quot;/>; &lt;作者>; &lt;名称>;isaacfrond&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=isaacfrond&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/assets/img/2019/05/20/wany3565_sq-c1d3894b615f19a72a094168c0823f027a2fb667.jpg?s=100&amp;c=85&amp;f=jpeg&quot;样式=“宽度：220像素；高度：221像素；” />;&lt;br />;一名联邦法官阻止了蒙大拿州一项试图在全州范围内禁止 TikTok 的法律，这对在州境内完全限制单一应用程序的前所未有的尝试造成了打击。周四做出的裁决意味着蒙大拿州原定于 1 月 1 日生效的 TikTok 禁令现已暂时停止。 &lt;a href=&quot;https://hackernews.betacat.io/#federal-judge-blocks-montana-s-tiktok-ban-before-it-takes-effect&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38484705&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Qdorks.com – 高级 Google 搜索查询编辑器&lt;/stitle>; &lt;id>;https://qdorks.com/作曲家&lt;/id>; &lt;更新>;2023-11-30T22:08:52.528938Z&lt;/更新>; &lt;link href=&quot;https://qdorks.com/composer&quot;/>; &lt;作者>; &lt;名称>;adriaanb &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=adriaanb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;使用我们直观的查询编辑器简化您的高级 Google 搜索。轻松创建、组织和共享复杂的查询。无需注册即可开始探索！ &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-qdorks-com-advanced-google-search-query-composer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38474190&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;音乐地图 – 查找类似音乐&lt;/stitle>; &lt;id>;https://www.music-map.com&lt;/id>; &lt;已更新>;2023-12-01T01:08:52.529431Z&lt;/updated>; &lt;link href=&quot;https://www.music-map.com&quot;/>; &lt;author>; &lt;name>;explaininjs&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=explaininjs&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.music-map.com/elements/objects/ og_logo.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Music-Map 是一款类似的音乐查找器，可帮助您找到与您喜爱的乐队和艺术家类似的乐队和艺术家。 &lt;a href=&quot;https://hackernews.betacat.io/#music-map-find-similar-music&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38481426&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Marginalia Search 采访 Viktor Lofgren&lt;/stitle>; &lt;id>;https://nlnet.nl/news/2023/20231016-marginalia.html&lt;/id>; &lt;更新>;2023 -11-30T19:08:52.529900Z&lt;/更新>; &lt;link href=&quot;https://nlnet.nl/news/2023/20231016-marginalia.html&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://nlnet.nl/image/Marginalia-界面.jpg&quot; style=&quot;宽度：220px；高度：101px；&quot; />;&lt;br />;Viktor Lofgren 是 Marginalia Search 的创建者，该搜索引擎允许用户找到经常被商业搜索引擎忽视的小质量网页。他在疫情期间开始研究搜索引擎，旨在通过提供多样化的搜索结果并减少广告的影响，为主流搜索引擎提供替代方案。 &lt;a href=&quot;https://hackernews.betacat.io/#interview-with-viktor-lofgren-from-marginalia-search&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38470832&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Animate Anyone：角色动画的图像到视频合成&lt;/stitle>; &lt;id>;https:// humanaigc.github.io/animate-anyone/&lt;/ id>; &lt;更新>;2023-11-30T18:08:52.530369Z&lt;/更新>; &lt;link href=&quot;https:// humanaigc.github.io/animate-anyone/&quot;/>; &lt;作者>; &lt;名称>;jasondavies&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// humanaigc.github.io /animate-anyone/static/images/f2_img.png&quot; style=&quot;宽度：220px；高度：86px；&quot; />;&lt;br />;角色动画旨在通过驱动信号从静止图像生成角色视频。我们提出了一种专为角色动画量身定制的新颖框架，该框架利用扩散模型的力量并解决图像到视频合成的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#animate-anyone-image-to-video-synthesis-for-character-animation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38476482&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 PyTorch II 加速生成式 AI：GPT，快速&lt;/stitle>; &lt;id>;https://pytorch.org/blog/acceleating-generative- ai-2/&lt;/id>; &lt;更新>;2023-11-30T19:08:52.530851Z&lt;/更新>; &lt;link href=&quot;https://pytorch.org/blog/acceleating-generative-ai-2/&quot;/ >; &lt;作者>; &lt;名称>;polyrand&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=polyrand&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://pytorch.org/assets/images/acceleating-generative-ai-2/image23.png”样式=“宽度：220px；高度：198px；” />;&lt;br />;这篇文章是多系列博客的第二部分，重点介绍如何使用纯原生 PyTorch 加速生成式 AI 模型。在这篇博客中，作者讨论了各种优化技术，包括推测解码、torch.compile、int8 量化和张量并行性，以提高 Transformer 推理模型的性能。他们提供了实际示例和代码实现来演示这些技术的有效性。 &lt;a href=&quot;https://hackernews.betacat.io/#acceleating-generative-ai-with-pytorch-ii-gpt-fast&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38477197&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;