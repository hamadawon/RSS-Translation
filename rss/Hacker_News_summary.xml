<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-29T05:58:47.954372Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;日本战俘营中建造的小型车床（1949 年）&lt;/stitle>; &lt;id>;http://www.lathes.co.uk/bradley-pow-lathe/&lt;/ id>; &lt;更新>;2024-04-28T18:57:28.114560Z&lt;/更新>; &lt;link href=&quot;http://www.lathes.co.uk/bradley-pow-lathe/&quot;/>; &lt;作者>; &lt;名称>;CommieBobDole&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CommieBobDole&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www .lathes.co.uk/bradley-pow-lathe/img0.jpg&quot; style=&quot;宽度：220px 高度：327px；&quot; />;&lt;br />;如果您认为在家制作车床很困难，这可能会鼓励您尝试一下。这是人类聪明才智的真实证明。 &lt;a href=&quot;https://hackernews.betacat.io/#a-small-lathe-built-in-a-japanese-prison-camp-1949&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40190542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Postgres 中常见的数据库架构更改错误&lt;/stitle>; &lt;id>;https://postgres.ai/blog/20220525-common-db -schema-change-mistakes&lt;/id>; &lt;更新>;2024-04-29T01:57:28.117286Z&lt;/更新>; &lt;link href=&quot;https://postgres.ai/blog/20220525-common-db-schema-更改错误”/>; &lt;作者>; &lt;名称>;thunderbong &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type =“html” >;&lt;img src=&quot;https://postgres.ai/assets/thumbnails/20220525-common-db-schema-change-mistakes2.jpg&quot; style=&quot;宽度：220px；高度：102px；&quot; />;&lt;br />;本文讨论了高级 PostgreSQL 模式迁移挑战和解决方案，包括作者 1000 多次迁移的经验以及用于测试更改的数据库实验室引擎的开发。它强调了在大规模环境中测试迁移以防止常见错误的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#common-db-schema-change-mistakes-in-postgres&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40186752&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我在 Wayback Machine 上找到了我的第一个程序（Java，2011）并且它运行&lt;/stitle>; &lt;id>;https://github.com/khiner /CrosswordFiller&lt;/id>; &lt;更新>;2024-04-28T23:57:28.117964Z&lt;/更新>; &lt;link href=&quot;https://github.com/khiner/CrosswordFiller&quot;/>; &lt;作者>; &lt;名称>;khiner&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=khiner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent. com/khiner/CrosswordFiller/main/ScreenRecording.gif&quot; style=&quot;宽度：220px 高度：124px；&quot; />;&lt;br />;作者回忆起他们早期的填字游戏程序，该程序是通过 Wayback Machine 重新发现的，由于 Java 兼容性，该程序仍然可以在现代 MacBook 上运行。他们记得它在渲染解决方案方面非常高效，并且是在第一次 GitHub 提交之前编码的。 &lt;a href=&quot;https://hackernews.betacat.io/#i-found-one-of-my-first-programs-java-2011-on-the-wayback-machine-and-it-runs&quot; target= &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40177553&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;FreeBee：AT&amp;T Unix PC 模拟器&lt;/stitle>; &lt;id>;https:// www.philpem.me.uk/code/3b1emu&lt;/id>; &lt;更新>;2024-04-29T00:57:28.118580Z&lt;/更新>; &lt;link href=&quot;https://www.philpem.me.uk/code /3b1emu&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://www.philpem.me.uk/_media/code/3b1emu/freebee.png?w=600&amp;tok=6a1223&quot; style=&quot;宽度：220px；高度：127px；&quot; />;&lt;br />;本文讨论了 AT&amp;T UNIX PC 模拟器的开发，该模拟器能够启动 3B1 UNIX 操作系统并运行各种软件。尽管尚未模拟关键外设，但模拟器已正常运行，社区的贡献增强了其功能。 &lt;a href=&quot;https://hackernews.betacat.io/#freebee-at-t-unix-pc-emulator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40193216&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;个人计算为个人图书馆科学铺平了道路&lt;/stitle>; &lt;id>;https://www.bramadams.dev/issue-55/&lt;/id>; &lt;updated>; 2024-04-28T21：57：28.119329Z &lt;/更新>; &lt;link href =“https://www.bramadams.dev/issue-55/”/>; &lt;作者>; &lt;名称>; _bramses &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=_bramses&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bramadams.dev/content/images/ 2024/04/卡米尔-柯罗-Muse.jpeg&quot; style=&quot;宽度：220px；高度：294px；&quot; />;&lt;br />;本文探讨了个人图书馆科学的演变和影响，并将其与个人计算的兴起进行了比较，强调了从企业技术到由用户需求驱动的个性化解决方案的历程，并展望了个人图书馆的未来是数据交互和遗产不可或缺的一部分。 &lt;a href=&quot;https://hackernews.betacat.io/#personal-computing-paves-the-way-for-personal-library-science&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40192359&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;6502 – 逆向工程指南（如何阅读模具镜头）[pdf]&lt;/stitle>; &lt;id>;https://downloads.reactivemicro。 com/Electronics/Reverse%20Engineering/6502%20-%20Guideline%20to%20Reverse%20Engineering%20v1.0.pdf&lt;/id>; &lt;更新>;2024-04-28T22:57:28.119990Z&lt;/更新>; &lt;link href =&quot;https://downloads.reactivemicro.com/Electronics/Reverse%20Engineering/6502%20-%20Guideline%20to%20Reverse%20Engineering%20v1.0.pdf&quot;/>; &lt;作者>; &lt;名称>;siraben&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=siraben&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章描述了显微镜下晶体管可观察的细节，突出了清晰的p 区和 n+ 区之间的划分以及晶体管存在时多晶硅线穿过有源区的要求。它还涉及处理器中逻辑门的功能，特别是反相器和或非门，并解释了总线系统中的传输门如何控制数据流。 &lt;a href=&quot;https://hackernews.betacat.io/#6502-guideline-to-reverse-engineering-how-to-read-die-shots-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Dotenv，如果它是 Unix 实用程序&lt;/stitle>; &lt;id>;https://github.com/gyf304 /dotenv&lt;/id>; &lt;更新>;2024-04-28T20:57:28.120670Z&lt;/更新>; &lt;link href=&quot;https://github.com/gyf304/dotenv&quot;/>; &lt;作者>; &lt;名称>;gyf304&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=gyf304&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets. com/2542618be1fce54d96610652734ec399c4f20cfbb96ffb3e7e87552eb7fecebb/gyf304/dotenv&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;Dotenv 将环境变量从 .env 文件加载到脚本中；用 C 编译器安装并 make。它支持键值对，忽略空格，并允许使用井号进行注释。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-dotenv-if-it-is-a-unix-utility&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40191510&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;再入 - 轨道模拟器&lt;/stitle>; &lt;id>;https://reentrygame.com/&lt;/id>; &lt;更新>;2024-04- 28T21:57:28.121386Z&lt;/updated>; &lt;link href=&quot;https://reentrygame.com/&quot;/>; &lt;作者>; &lt;name>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://reentrygame.com/____impro/1/onewebmedia/34e9104e6ac9b758132b378e6d5b975ea6159a0c.png?etag=%2211be0c-5edf62ba %22&amp;sourceContentType=image%2Fpng&amp;ignoreAspectRatio&amp;resize=415%2B276&amp;extract=0%2B0%2B415%2B269&quot; style=&quot;宽度：220px 高度：143px;&quot; />;&lt;br />;再入通过现实和虚构的任务模拟太空飞行，教授如何在沉浸式环境中操作航天器系统。玩家通过手册和清单进行学习，体验真实性和可玩性之间的平衡。 &lt;a href=&quot;https://hackernews.betacat.io/#reentry-an-orbital-simulator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40188173&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;针对 USPS 的网络钓鱼活动所看到的网络流量与 USPS 本身一样多&lt;/stitle>; &lt;id>;https://www.akamai.com/blog/security-research/phishing-usps-malicious -domains-traffic-equal-to-legitimate-traffic&lt;/id>; &lt;更新>;2024-04-29T04:57:28.122072Z&lt;/更新>; &lt;link href=&quot;https://www.akamai.com/blog/ security-research/phishing-usps-malicious-domains-traffic-equal-to-legitimate-traffic&quot;/>; &lt;作者>; &lt;名称>;rexbee&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=rexbee&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#phishing-campaigns-targeting-usps-see-as-much-web -traffic-as-the-usps-itself&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40194346&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简史Web 开发，以及为什么你的框架并不重要&lt;/stitle>; &lt;id>;https://gebna.gg/blog/brief-history-of-web-development&lt;/id>; &lt;updated>;2024-04-29T00： 57:28.122701Z&lt;/更新>; &lt;link href=&quot;https://gebna.gg/blog/brief-history-of-web-development&quot;/>; &lt;作者>; &lt;name>;thunderbong&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文记录了 Web 开发的演变，强调了从简单、静态网站到复杂单一网站的转变-页面应用程序 (SPA) 以及 React 和 Next.js 等框架的兴起。然后讨论 GraphQL、TypeScript 和 Svelte 等现代进步，并思考为什么旧技术由于开发人员的熟悉而持续存在。 &lt;a href=&quot;https://hackernews.betacat.io/#a-brief-history-of-web-development-and-why-your-framework-doesn-t-matter&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40155294&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;第二次机会的神话&lt;/stitle>; &lt;id>;https://ft.pressreader.com/文章/282557318242321&lt;/id>; &lt;更新>;2024-04-28T16:57:28.123292Z&lt;/更新>; &lt;link href=&quot;https://ft.pressreader.com/article/282557318242321&quot;/>; &lt;作者>; &lt;姓名>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;来自《金融时报》的新闻、分析和评论，世界领先的全球商业出版物 &lt;a href=&quot;https://hackernews.betacat.io/#the-myth-of-the-second-chance&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40189928&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;连续编译的本质 (1993) [pdf]&lt;/stitle>; &lt;id>;https://dl.acm.org/doi/ pdf/10.1145/173262.155113&lt;/id>; &lt;更新>;2024-04-28T22:57:28.123889Z&lt;/更新>; &lt;link href=&quot;https://dl.acm.org/doi/pdf/10.1145/173262.155113&quot;/ >; &lt;作者>; &lt;名称>;swatson741&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;a href= “https://hackernews.betacat.io/#the-essence-of-compiling-with-continuations-1993-pdf” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40192579&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;加快 C++ 构建时间&lt;/stitle>; &lt;id>;https://www.figma.com/blog/speeding-up-build-times/&lt;/id>; &lt;已更新>;2024-04-28T18:57:28.124609Z&lt;/已更新>; &lt;link href=&quot;https://www.figma.com/blog/speeding-up-build-times/&quot;/>; &lt;作者>; &lt;名称>;熟练&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=skilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn. sanity.io/images/599r6htc/localized/d52b738e1057214775d55e92e0333f8033fa6e7a-3840x2160.png?w=3840&amp;h=2160&amp;q=75&amp;fit=max&amp;auto=format&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Figma 通过针对不必要的包含、创建 DIWYDU 和includes.py 等工具以及引入用于前向声明的 Fwd.h 文件来解决 C++ 缓慢的构建时间问题，将构建时间缩短了 50%。他们的方法包括自动识别多余的标头和优化开发效率。 >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40178634&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;失速的飞机&lt;/stitle>; &lt;id>;https://fearoflanding.com/accidents/accident-reports/the -unstallable-plane-that-stalled/&lt;/id>; &lt;更新>;2024-04-28T15:57:28.125233Z&lt;/更新>; &lt;link href=&quot;https://fearoflanding.com/accidents/accident-reports/the -unstallable-plane-that-stalled/&quot;/>; &lt;作者>; &lt;名称>;sni&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sni&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>; &lt;img src =“https://fearoflanding.com/files/2024/04/N914ST_Cessna_A185Floats_PAE_11JUL12_7553419848-640x427.jpg”样式=“宽度：220px;高度：147px;&quot; />;&lt;br />;经过浮筒和其他套件改装的塞斯纳 185 Skywagon 由于飞行员在起飞时管理不善而坠毁，导致一人溺水身亡。尽管飞行员经验丰富，但缺乏失速恢复能力实践和飞机的广泛修改没有完整记录&lt;a href=&quot;https://hackernews.betacat.io/#the-unstallable-plane-that-stalled&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>;。 &lt;a href=&quot;https://news.ycombinator.com/item?id=40189346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OSWorld：对真实计算机中开放式任务的多模式代理进行基准测试&lt;/stitle>; &lt;id>;https://os-world。 github.io/&lt;/id>; &lt;更新>;2024-04-28T19:57:28.125904Z&lt;/更新>; &lt;link href=&quot;https://os-world.github.io/&quot;/>; &lt;作者>; &lt;名称>;kristianpaul&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kristianpaul&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://os -world.github.io/static/images/task_demonstration.png&quot; style=&quot;width: 220px; height: 136px;&quot; />;&lt;br />;OSWorld 是一种新颖的多模式代理环境，支持跨操作系统平台的多样化、开放式计算机任务，并附带 369 个基准任务。尽管进行了广泛的评估，但与现有模型相比，当前模型的能力有限&lt;a href=&quot;https://hackernews.betacat.io/#osworld-benchmarking-multimodal-agents-for-open-ending-tasks-in-real-computers&quot; target=&quot;_blank&quot;>;[摘要] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191047&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;与内存对话：Intel 8088 处理器总线接口状态机内部&lt;/stitle>; &lt;id>;http:// www.righto.com/2024/04/intel-8088-bus-state-machine.html&lt;/id>; &lt;更新>;2024-04-28T15:57:28.126367Z&lt;/更新>; &lt;link href=&quot;http:// /www.righto.com/2024/04/intel-8088-bus-state-machine.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/8086-bus8088/die-labeled-w600.jpg&quot; 样式=“宽度：220px； height: 230px;&quot; />;&lt;br />;Intel 的 8088 微处理器于 1979 年推出，作为 1981 年 IBM PC 的关键组件，巩固了 x86 架构的成功。IBM 选择 8088 是因为它的熟悉性和 8 位总线兼容性，允许通过复杂的六步总线周期进行复杂的计时和高效的内存操作，包括两个未记录的步骤。 8088-processor-s-bus-interface-state-machine&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40189447&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;建筑物FreeDOS 上的 MS-DOS 4.00 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=X7r76V_gWQ8&lt;/id>; &lt;更新>;2024-04-28T21:57:28.126859Z&lt;/已更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=X7r76V_gWQ8&quot;/>; &lt;作者>; &lt;name>;zdw&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/X7r76V_gWQ8&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt; /iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#building-ms-dos-4-00-on-freedos-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192074&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// /hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;运行已知最早的数字视频游戏“Spacewar”的 DEC PDP-1 模拟器&lt;/stitle>; &lt;id>;https://www.masswerk .at/spacewar/index.html&lt;/id>; &lt;更新>;2024-04-28T21:57:28.127297Z&lt;/更新>; &lt;link href=&quot;https://www.masswerk.at/spacewar/index.html&quot; />; &lt;author>; &lt;name>;smartmic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://www.masswerk.at/spacewar/images/cbs-opening.png&quot; style=&quot;宽度：220px； height: 223px;&quot; />;&lt;br />;虚拟 DEC PDP-1 模拟器运行原始的“Spacewar!”，这是一款开创性的视频游戏，增加了对游戏手柄的支持，以提供真实的体验；它使用历史代码版本进行维护，并提供各种游戏选项和设置&lt;a href=&quot;https://hackernews.betacat.io/#dec-pdp-1-emulator-running-spacewar-the-earliest-known-digital-video-game&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40192240&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大麦植物通过含糖分泌物微调根部微生物群落&lt;/stitle>; &lt;id>;https ://phys.org/news/2024-04-barley-fine-tune-root-microbial.html&lt;/id>; &lt;更新>;2024-04-28T17:57:28.128309Z&lt;/更新>; &lt;link href=&quot; https://phys.org/news/2024-04-barley-fine-tune-root-microbial.html&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=wglb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2024/barley- plant-fine-tun.jpg&quot; style=&quot;width: 220px; height: 146px;&quot; />;&lt;br />;不同的大麦品种通过分泌特定的糖和化合物来吸引独特的土壤微生物；一项研究表明，这些关系随植物遗传学的不同而变化，会影响植物的生长和健康。未来的谷物育种可能会利用这些相互作用来实现提高作物恢复能力&lt;a href=&quot;https://hackernews.betacat.io/#barley-plants-fine-tune-root-microbial-communities-through-sugary-secretions&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40165329&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如果 null 是 Java 中的对象会怎样？&lt;/stitle>; &lt;id>;https://donraab.medium.com /what-if-null-was-an-object-in-java-3f1974954be2&lt;/id>; &lt;更新>;2024-04-28T16:57:28.130282Z&lt;/更新>; &lt;link href=&quot;https://donraab. medium.com/what-if-null-was-an-object-in-java-3f1974954be2&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/da:true/resize:fit:1200/0*9g0ruViNF2_mcdeD&quot;样式=“宽度：220px； height: 165px;&quot; />;&lt;br />;Smalltalk 是一种纯粹的面向对象语言，其中所有元素都是对象，这与 Java 不同，Java 也有基元；本文探讨了 Java 中“null”和 Smalltalk 中“nil”的处理。解释了 Smalltalk 中的“nil”是一个实际对象，而 Java 中的“null”则不然，并暗示了这给 Smalltalk 带来的一致性。 if-null-was-an-object-in-java&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40178325&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;做了我们在制作高效软件方面迷失了方向？&lt;/stitle>; &lt;id>;https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc- file-vs-browser-fed12dd866a4&lt;/id>; &lt;更新>;2024-04-28T16:57:28.130784Z&lt;/更新>; &lt;link href=&quot;https://rufatmammadli.medium.com/did-we-lose-our -way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4&quot;/>; &lt;author>; &lt;name>;rumad&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=rumad&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:1200/0*DMufC1Qq6Sz7Bous.jpg “样式=”宽度：220px; height: 151px;&quot; />;&lt;br />;由于性能问题，该人发现 Google Docs 不足以处理 30 MB 的文档文件，导致他们改用 LibreOffice，效果很顺利。这一经历促使他们质疑现代办公软件的效率软件开发和网络应用程序高规格硬件的趋势。 &quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40189682&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt; /entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：OpenLIT – 使用 OpenTelemetry 的开源 LLM 可观测性&lt;/stitle>; &lt; id>;https://github.com/openlit/openlit&lt;/id>; &lt;更新>;2024-04-28T16:57:28.131374Z&lt;/更新>; &lt;link href=&quot;https://github.com/openlit/openlit &quot;/>; &lt;author>; &lt;name>;aman_041&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=aman_041&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://raw.githubusercontent.com/openlit/.github/main/profile/assets/wide-logo-no-bg.png”样式=“宽度：220px； height: 79px;&quot; />;&lt;br />;OpenLIT 通过一行代码行轻松简化了与 GenAI 项目的可观察性集成，支持流行的库和数据库。它符合 OpenTelemetry 标准，可实现透明、供应商中立的应用程序监控。&lt;a href= “https://hackernews.betacat.io/#show-hn-openlit-open-source-llm-observability-with-opentelemetry” target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40167461&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ollama v0.1.33 与 Llama 3、Phi 3 和 Qwen 110B&lt;/stitle>; &lt;id>;https://github.com/ollama/ollama/releases/标签/v0.1.33-rc5&lt;/id>; &lt;更新>;2024-04-28T20:57:28.131881Z&lt;/更新>; &lt;link href=&quot;https://github.com/ollama/ollama/releases/tag/v0 .1.33-rc5&quot;/>; &lt;作者>; &lt;名称>;ashvardanian&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ashvardanian&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/cc9c5b5f4bebffb646b0e214f4bf124b559e8e59334ae92821c87433dd875be4/ollama/ollama/releases/tag/v0.1.33-rc5&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Meta的Llama 3是目前最先进的开放式LLM，而Eric Hartford在其上构建的Dolphin Llama 3技能多样。Qwen 110B超过100B的参数，在测试中表现出色。 &lt; a href=&quot;https://hackernews.betacat.io/#ollama-v0-1-33-with-llama-3-phi-3-and-qwen-110b&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40191723&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;观看汽车使用遗传算法进化&lt;/stitle>; &lt;id>;https://rednuht.org/genic_cars_2/&lt;/id >; &lt;更新>;2024-04-28T13:57:28.132341Z&lt;/更新>; &lt;link href=&quot;https://rednuht.org/genic_cars_2/&quot;/>; &lt;作者>; &lt;name>;memalign&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=memalign&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该程序使用遗传算法和 Box2D 物理原理将两轮形状演变成汽车；通过seedrandom.js 和可变遗传变异保持一致的轨迹，它允许暂停查看顶级赛车，但性能可能会随着重新运行而变化。 &lt;a href=&quot;https://hackernews.betacat.io/#watch-cars-evolve-using-genic-algorithm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40177599&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Zilog Z80 CPU – 现代、免费和开源的硅克隆&lt;/stitle>; &lt;id>;https://github.com/rejunity/z80-open-silicon&lt;/id >; &lt;更新>;2024-04-28T11:57:28.132870Z&lt;/更新>; &lt;link href=&quot;https://github.com/rejunity/z80-open-silicon&quot;/>; &lt;作者>; &lt;名称>;jnord&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jnord&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com /rejunity/z80-open-silicon/main/docs/tt07_z80.png&quot; style=&quot;宽度：220px；高度：318px；&quot; />;&lt;br />;Zilog 宣布 Z80 CPU 寿命终止，促使开源社区使用 OpenROAD 和 Skywater PDK 开发 FOSS Z80 进行生产。最初的 FOSS Z80 设计将于 2024 年 6 月制造，模仿原始 Z80 布局，从而实现更便宜的芯片制造。 &lt;a href=&quot;https://hackernews.betacat.io/#zilog-z80-cpu-modern-free-and-open-source-silicon-clone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40187656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;碎片化思维对心流状态的威胁比中断更大&lt;/stitle>; &lt;id>;https://blog.stackblitz.com/posts /flow-state/&lt;/id>; &lt;更新>;2024-04-28T10:57:28.133424Z&lt;/更新>; &lt;link href=&quot;https://blog.stackblitz.com/posts/flow-state/&quot;/>; &lt;author>; &lt;name>;nickwritesit&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nickwritesit&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://blog.stackblitz.com/posts/flow-state/hero.png&quot; style=&quot;宽度：220px 高度：114px；&quot; />;&lt;br />;开发人员和同事努力平衡心流状态和工作中断，却没有意识到实现心流的细微差别很复杂，而且经常被误解。最近的研究表明，内部障碍是心流的主要干扰因素，提倡正念和组织变革以提高生产力。 &lt;a href=&quot;https://hackernews.betacat.io/#fragmented-thinking-is-a-bigger-threat-to-flow-state-than-interruptions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40155713&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;