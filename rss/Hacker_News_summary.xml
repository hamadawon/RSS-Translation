<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-06T19:58:08.172918Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Faces.js，用于生成基于矢量的卡通面孔的 JavaScript 库&lt;/stitle>; &lt;id>;https://zengm.com/facesjs/&lt;/id>; &lt;updated>;2024 -04-06T18:57:55.739911Z&lt;/更新>; &lt;link href=&quot;https://zengm.com/facesjs/&quot;/>; &lt;作者>; &lt;name>;starkparker&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=starkparker&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Faces.js 是一个 JS 库，用于将卡通面孔创建为 SVG，并将特征存储为 JS 对象以供以后使用。它提供的选项有限，邀请用户通过 GitHub 对其进行增强。 &lt;a href=&quot;https://hackernews.betacat.io/#faces-js-a-javascript-library-for-generate-vector-based-cartoon-faces&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39954422&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;野蛮黑客新闻&lt;/stitle>; &lt;id>;https://github.com/wkyleg/brutalist-hacker-news&lt;/ id>; &lt;更新>;2024-04-06T18:57:55.741823Z&lt;/更新>; &lt;link href=&quot;https://github.com/wkyleg/brutalist-hacker-news&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets. com/edde54adbda356af8737b1876b049d223f7adf6556b6778f4d9dc0f746ee0e03/wkyleg/brutalist-hacker-news&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Brutalist Hacker News 是一款极简主义阅读器，它拥抱野兽派网页设计、效率和赛博朋克/故障艺术美学，拒绝臃肿的网站和复杂的 JavaScript 框架。它处于 alpha 版本，适合移动设备，并邀请用户提供反馈来探索普通 JavaScript 和可访问性的潜力。 &lt;a href=&quot;https://hackernews.betacat.io/#brutalist-hacker-news&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39954541&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Chisel：基于 HTTP 的快速 TCP/UDP 隧道&lt;/stitle>; &lt;id>;https://github.com/jpillora/chisel&lt;/id>; &lt;更新>;2024-04-06T14:57： 55.742326Z&lt;/updated>; &lt;link href=&quot;https://github.com/jpillora/chisel&quot;/>; &lt;作者>; &lt;name>;lyu07282&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=lyu07282&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://camo.githubusercontent.com/f211df8890519ba2e5b50f7268f089117e5f754be9f759aa05617b92cc27d24a/68747470733a2f2f646f 63732e676f6f676c652e636f6d2f64726177696e67732f642f317035335657787a474e667938726a722d6d5738707669734a6d686b6f4c6c3832764167637 44f5f366631772f7075623f773d39363026683d373230&quot;样式=“宽度：220像素；高度：135像素； ” />;&lt;br />;Chisel 是一种使用 SSH 通过 HTTP 的安全 TCP/UDP 隧道，客户端和服务器都在一个 Go 编写的可执行文件中。它绕过防火墙并保护网络端点，提供经过身份验证的连接和用户配置文件。 &lt;a href=&quot;https://hackernews.betacat.io/#chisel-a-fast-tcp-udp-tunnel-over-http&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39928681&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;协议编写理论&lt;/stitle>; &lt;id>;https://programming-journal.org/2023/7/6/&lt;/id>; &lt;已更新>;2024-04-06T17:57:55.742815Z&lt;/已更新>; &lt;link href=&quot;https://programming-journal.org/2023/7/6/&quot;/>; &lt;作者>; &lt;name>;mpweiher&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=mpweiher&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;协议管理软件交互，遵守这些协议对于避免错误至关重要。本文讨论了一种将多个协议组合到单个组件中的新颖方法，从而提高复杂的多协议环境中的软件质量。 &lt;a href=&quot;https://hackernews.betacat.io/#a-theory-of-composition-protocols&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39954059&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;标记、N-Gram 和词袋模型&lt;/stitle>; &lt;id>;https://zilliz.com/learn/introduction-to-natural-language-processing -tokens-ngrams-bag-of-words-models&lt;/id>; &lt;更新>;2024-04-06T12:57:55.743290Z&lt;/更新>; &lt;link href=&quot;https://zilliz.com/learn/introduction- to-natural-language-processing-tokens-ngrams-bag-of-words-models&quot;/>; &lt;author>; &lt;name>;fzliu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= fzliu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://assets.zilliz.com/frank_984c125080.jpeg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;本文深入研究了 GPT-3.5 和 Pi 等语言模型的工作原理，重点关注自然语言处理基础知识，例如标记、n-gram 和标记化。它进一步阐述了概率语言模型中 n-gram 的概念，演示了它们如何计算特定标记出现在一串标记之后的概率，并引入了词袋模型作为表示文档的简单方法。 &lt;a href=&quot;https://hackernews.betacat.io/#tokens-n-grams-and-bag-of-words-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39928223&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;无安排学习——一种新的训练方式&lt;/stitle>; &lt;id>;https://github.com/facebookresearch/schedule_free&lt;/id>; &lt;更新>;2024-04-06T14:57:55.743784Z&lt;/更新>; &lt;link href=&quot;https://github.com/facebookresearch/schedule_free&quot;/>; &lt;作者>; &lt;name>;ironbound&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=ironbound&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/4aeca36576d188a4ad7db1781ead6381ccbb6e8812b6a09322c2ec1cd70dfbbe/facebookresearch/schedule_free “样式=”宽度：220px;高度：110px;“ />;&lt;br />;本文介绍了无计划学习，它通过使用插值和平均来消除预设学习计划的需要，可能优于最先进的方法。它需要与基本优化器相同的内存，并且可以与现有代码集成，尽管可能需要进行一些特定于模型的调整。 &lt;a href=&quot;https://hackernews.betacat.io/#schedule-free-learning-a-new-way-to-train&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39952736&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ChrysaLisp GUI 演示 [视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=ADvyZOxlBu4&lt;/id>; &lt;更新>;2024-04-06T14:57:55.744305Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=ADvyZOxlBu4&quot;/>; &lt;作者>; &lt;名称>;科什金&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Koshkin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com/embed/ADvyZOxlBu4 “frameborder =“0”allowfullscreen loading =“lazy”>;&lt;/iframe>; &lt;a href =“https://hackernews.betacat.io/#chrysalisp-gui-demo-video”target =“_blank”>; [摘要] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39930052&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我编辑时的想法（2019）&lt;/stitle>; &lt;id>;https://evaparish.com /blog/how-i-edit&lt;/id>; &lt;更新>;2024-04-06T07:57:55.744785Z&lt;/更新>; &lt;link href=&quot;https://evaparish.com/blog/how-i-edit&quot; />; &lt;author>; &lt;name>;tarf&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tarf&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://images.squarespace-cdn.com/content/v1/5ae09a4dc258b4491ba760e3/1594410433831-S4PGTYTMAZ2385O142SV/noun_Bird+Paradise_3160276.png?format=1500w&quot; style=&quot;width: 220px; height: 198px;&quot; />;&lt;br />;文章讨论了作者的编辑方法，强调清晰度、重述要点和删除不必要的词语的重要性。他们还强调在写作之前了解预期信息和受众的价值。 &lt;a href=&quot;https://hackernews.betacat.io/#what-i-think-about-when-i-edit-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39950760&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PiVPN v4.6.0：终结&lt;/stitle>; &lt;id>;https://github.com/pivpn/pivpn/releases/tag/v4.6.0 &lt;/id>; &lt;更新>;2024-04-06T15:57:55.745744Z&lt;/更新>; &lt;link href=&quot;https://github.com/pivpn/pivpn/releases/tag/v4.6.0&quot;/>; &lt;作者>; &lt;name>;allanbreyes&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=allanbreyes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //opengraph.githubassets.com/ca6d5433ab0e9ebad00391a2e02959f6c238b142dd0f3146a2404a204f48cb82/pivpn/pivpn/releases/tag/v4.6.0&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;作者回顾了 PiVPN 使命的完成情况，对贡献表示感谢，并承认该项目的自然结束。只要域名得以维护，PiVPN 将被存档并保持可访问。&lt;a href=&quot;https://hackernews.betacat.io/#pivpn-v4-6-0-the-end&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39953207&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Loki：用于事实验证的开源工具&lt;/stitle>; &lt;id>;https://github.com/Libr-AI/OpenFactVerification&lt;/id>; &lt;updated>;2024- 04-06T11:57:55.746238Z&lt;/updated>; &lt;link href=&quot;https://github.com/Libr-AI/OpenFactVerification&quot;/>; &lt;author>; &lt;name>;旭东&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=Xudong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/Libr-AI/OpenFactVerification/main /fig/cmd_example.gif&quot; style=&quot;width: 220px; height: 183px;&quot; />;&lt;br />;Loki 是一款开源工具，用于通过分解文本、评估声明和搜索证据来验证事实。它专为那些重视信息完整性的人而设计，并提供更新订阅和社区参与. &lt;a href=&quot;https://hackernews.betacat.io/#loki-an-open-source-tool-for-fact-verification&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=39951571&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;家庭保险公司正在根据航拍图像放弃客户&lt;/stitle>; &lt;id>;https://www.wsj.com/real-estate/home- Insurance-aerial-images-37a18b16&lt;/id>; &lt;更新>;2024-04-06T14:57:55.746713Z&lt;/更新>; &lt;link href=&quot;https://www.wsj.com/real-estate/home-insurance -aerial-images-37a18b16&quot;/>; &lt;作者>; &lt;名称>;traviswingo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=traviswingo&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;请启用 JS 并禁用任何广告拦截器 &lt;a href=&quot;https://hackernews.betacat.io/#home-insurers-are-dropping-customers-based-on-aerial-images&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39952902&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;语言模型就是超级马里奥：从同源模型中吸收能力&lt;/stitle>; &lt;id>;https ://arxiv.org/abs/2311.03099&lt;/id>; &lt;更新>;2024-04-06T14:57:55.747235Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2311.03099&quot;/>; &lt;作者>; &lt;名称>;托什&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;文章揭示了语言模型可以通过 DARE 获得新技能，DARE 简化和合并来自不同模型的参数，无需重新训练。DARE 的稀疏和融合方法提高了组合模型的性能，在以下方面优于其他模型基准测试。&lt;a href=&quot;https://hackernews.betacat.io/#language-models-are-super-mario-absing-powered-from-homologous-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39952826&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;源代码控制系统的历史：SCCS 和 RCS&lt;/stitle>; &lt;id>;https://experimentalworks.net/posts/ 2024-03-18-a-history-of-vcs-part1/&lt;/id>; &lt;更新>;2024-04-06T07:57:55.747736Z&lt;/更新>; &lt;link href=&quot;https://experimentalworks.net/ posts/2024-03-18-a-history-of-vcs-part1/&quot;/>; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://experimentalworks.net/posts/2024-03-18-a-history-of-vcs-part1/cover.webp “样式=”宽度：220px; height: 220px;&quot; />;&lt;br />;SCM 系统从 70 年代和 80 年代的本地单文件版本控制发展到 Git 和 GitHub 的广泛采用。本文追溯了 SCCS 和 RCS 等关键系统的历史和影响，注意它们的功能和限制。&lt;a href=&quot;https://hackernews.betacat.io/#a-history-of-source-control-systems-sccs-and-rcs&quot; target=&quot;_blank&quot;>;[summary]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39950712&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;乔丹·梅赫纳 (Jordan Mechner) 对阵时之沙&lt;/stitle>; &lt;id>;https://www.washingtonpost.com/娱乐/视频游戏/2024/04/01/jordan-mechner-prince-persia-karateka/&lt;/id>; &lt;更新>;2024-04-06T14:57:55.748210Z&lt;/更新>; &lt;link href=&quot;https: //www.washingtonpost.com/entertainment/video-games/2024/04/01/jordan-mechner-prince-persia-karateka/&quot;/>; &lt;author>; &lt;name>;anonymousab&lt;/name>; &lt;uri>;https:/ /news.ycombinator.com/user?id=anonymousab&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.washingtonpost.com/wp-apps/imrs.php ?src=https://s3.amazonaws.com/arc-authors/washpost/6568e6a6-0b9f-42d6-9cc1-f4ff71882efc.jpg&amp;w=196&amp;h=196&quot; style=&quot;width: 220px;高度：220px;&quot; />;&lt;br />;乔丹·梅赫纳 (Jordan Mechner) 在他的图形回忆录《重播》(Replay) 中使用了希特勒的水彩画（以换取签证作为交换），该回忆录向他的家族历史和他自己作为革命性游戏设计师的遗产致敬。包括《波斯王子》在内的作品影响了现代电影游戏，他现在专注于保存这段历史。&lt;a href=&quot;https://hackernews.betacat.io/#jordan-mechner-vs-the-sands-of -time&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39945063&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国宇航局航天器在飞过太阳大气层时拍摄疯狂的漩涡&lt;/ stitle>; &lt;id>;https://mashable.com/article/nasa-sun-footage-parker-solar-probe&lt;/id>; &lt;更新>;2024-04-06T12:57:55.748681Z&lt;/更新>; &lt;link href =&quot;https://mashable.com/article/nasa-sun-footage-parker-solar-probe&quot;/>; &lt;author>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://helios-i.mashable.com/imagery/articles/05JUllEJJjwEO1N0VRBQJlK/images-1.fill。 size_2000x1120.v1712160131.png&quot; style=&quot;宽度：220px;高度：124px;&quot; />;&lt;br />;美国宇航局的帕克太阳探测器是距离太阳最近的航天器，记录了日冕中的漩涡状结构，可能来自日冕物质抛射 (CME)。这一发现有助于了解日冕物质抛射 (CME)，它可以扰乱地球的电网和通信。&lt;a href=&quot;https://hackernews.betacat.io/#nasa-spacecraft-films-crazy-vortex-while-flying-through-sun-s-atmosphere&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39952111&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;网络安全遭到破坏&lt;/stitle>; &lt;id>;https://crankysec.com/blog/破碎/&lt;/id>; &lt;更新>;2024-04-06T17:57:55.750181Z&lt;/更新>; &lt;link href=&quot;https://crankysec.com/blog/broken/&quot;/>; &lt;作者>; &lt;名称>;obscurette &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=obscurette&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://crankysec.com /img/QivKU4GUoD-600.png&quot; style=&quot;宽度：220px; height: 222px;&quot; />;&lt;br />;文章批评了网络安全状况，强调了数据泄露的疏忽和缺乏后果。它呼吁制定更强有力的数据保护法并采取集体行动来解决行业的系统性问题。 &lt;a href =&quot;https://hackernews.betacat.io/#cybersecurity-is-broken&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =39954026&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;System/360 – CHM革命&lt;/stitle>; &lt;id>;https://www.computerhistory.org/revolution/mainframe-computers/7/164&lt;/id>; &lt;updated>;2024-04-06T14:57 ：55.750658Z &lt;/更新>; &lt;link href =“https://www.computerhistory.org/revolution/mainframe-computers/7/164”/>; &lt;作者>; &lt;名称>; rbanffy &lt;/名称>; &lt;uri>; https： //news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.computerhistory.org/revonline/images/500004977- 03-01.jpg?w=600&quot; style=&quot;宽度: 220px; height: 277px;&quot; />;&lt;br />;在 20 世纪 60 年代，IBM 的 Gene Amdahl 负责设计 System/360 系列大型计算机，旨在支持不同的速度和外围设备，同时运行相同的软件，这一挑战导致了IBM 最赚钱的产品的创建。尽管最初在编写操作系统 OS/360 时遇到了困难，但该项目还是被 Brooks 挽救了，System/360 的架构和软件，包括 Solid Logic 技术和微编程等创新，对后来的 IBM 产生了重大影响&lt;a href=&quot;https://hackernews.betacat.io/#system-360-chm-revolution&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.mainframes. ycombinator.com/item?id=39952570&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;通过编写自己的数据库节省云成本&lt;/stitle>; &lt;id>;https://hivekit.io/blog/how-weve-saved-5000-percent-in-cloud- cost-by-writing-our-own-database/&lt;/id>; &lt;更新>;2024-04-06T14:57:55.751129Z&lt;/更新>; &lt;link href=&quot;https://hivekit.io/blog/how- weve-saved-5000-percent-in-cloud-costs-by-writing-our-own-database/&quot;/>; &lt;作者>; &lt;名称>;wolframhempel&lt;/名称>; &lt;uri>;https://news.ycombinator.com /user?id=wolframhempel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hivekit.io/blog/how-weve-saved-5000-percent-in-cloud -costs-by-writing-our-own-database/title.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;本文讨论了为处理大量位置更新的云平台构建自定义数据库的挑战，选择创建内部解决方案以提高效率和成本效益。自定义引擎显着降低了通过以紧凑​​的二进制格式存储数据并使用 AWS 服务进行存储和备份来降低成本并提高性能。&lt;a href=&quot;https://hackernews.betacat.io/# saving-cloud-costs-by-writing-our-own -database&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39929185&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PID 控制器讲解 (2022)&lt;/stitle>; &lt;id >;https://ben.bolte.cc/pid-controller&lt;/id>; &lt;更新>;2024-04-06T08:57:55.752094Z&lt;/更新>; &lt;link href=&quot;https://ben.bolte.cc/ pid-controller&quot;/>; &lt;author>; &lt;name>;mean_mistreater&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mean_mistreater&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;本文讨论了作者对理解 PID 控制器的探索，PID 控制器在不了解系统内部结构的情况下调整系统输入以有效地达到目标值。它通过示例和 Python 模拟解释了 PID（比例、积分、微分）组件，以找到最佳 PID 值。 &lt;a href=&quot;https://hackernews.betacat.io/#pid-controller-explainer-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39950812&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;深度失语症：受先验影响最小的视觉大脑？&lt;/stitle>; &lt;id>;https://www.frontiersin.org/journals/psychology/articles/10.3389/fpsyg.2024.1374349/完整&lt;/id>; &lt;更新>;2024-04-06T12:57:55.752558Z&lt;/更新>; &lt;link href=&quot;https://www.frontiersin.org/journals/psychology/articles/10.3389/fpsyg.2024.1374349/full &quot;/>; &lt;author>; &lt;name>;negativelambda&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=negativelambda&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章探讨了两个先天性失语症患者的主观体验，强调了他们无法想象的能力如何影响他们对视觉现象的感知。它表明失语症中存在子类，例如深度失语症，它也会影响实际的视觉体验。 &lt;a href=&quot;https://hackernews.betacat.io/#deep-aphantasia-a-visual-brain-with-minimal-influence-from-priors&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39951990&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Ohmyksh：OpenBSD Ksh 的框架&lt;/stitle>; &lt;id>;https://github.com/qbit/ohmyksh&lt;/id>; &lt;更新>;2024-04-06T09:57:55.753036Z&lt;/更新>; &lt;link href=&quot;https://github.com/qbit/ohmyksh&quot;/>; &lt;作者>; &lt;名称>;ecliptik &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=ecliptik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/deaecacde6745567ca83371bd3032561329d7449a8e226680c6237c2d358070d/qbit/欧米克什”样式=“宽度：220px；高度：110px；” />;&lt;br />;本文介绍了 ohmyksh（一个 shell 配置框架）的设置 OHMYKSH_DIR 环境变量以及加载路径、扩展和补全。欢迎通过 GitHub PR 或电子邮件向 ohmyksh 做出贡献，并提供描述功能集的 .org 文件。 &lt;a href=&quot;https://hackernews.betacat.io/#ohmyksh-a-framework-for-openbsd-s-ksh&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39951275&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;生成式 UI 和面向结果的设计&lt;/stitle>; &lt;id>;https://www.nngroup.com/articles/generative-ui/&lt;/id>; &lt;更新>;2024-04-06T14:57:55.753500Z&lt;/更新>; &lt;link href=&quot;https://www.nngroup.com/articles/generative-ui/&quot;/>; &lt;作者>; &lt;名称>;marban&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=marban&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.nngroup.com/ media/editor/2024/03/21/genui-personalized-interface-for-each-user-nng.png&quot; style=&quot;width: 220px; height: 169px;&quot; />;&lt;br />;生成式 UI 将创建专注于用户目标的实时、个性化界面，将设计从元素转变为结果。这将挑战传统的用户体验，要求设计人员设置人工智能约束并优先考虑以用户为中心的问题解决。 &lt;a href=&quot;https://hackernews.betacat.io/#generative-ui-and-outcome-orient-design&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39927698&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;PostgreSQL 及其烦人的交叉表&lt;/stitle>; &lt;id>;https://blog.aurelianix.com/2024/04/04/postgresql-and-its-annoying-crosstab /&lt;/id>; &lt;更新>;2024-04-06T13:57:55.753988Z&lt;/更新>; &lt;link href=&quot;https://blog.aurelianix.com/2024/04/04/postgresql-and-its-annoying -crosstab/&quot;/>; &lt;作者>; &lt;名称>;leononame&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=leononame&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;本文讨论了使用横向联接和交叉表函数创建一个 PostgreSQL 函数来在一个查询中收集表元数据，这需要 tablefunc 扩展和仔细的数据类型处理。作者成功地转换了数据，但注意到交叉表的局限性并欢迎提出改进建议。 &lt;a href=&quot;https://hackernews.betacat.io/#postgresql-and-its-annoying-crosstab&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39928542&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Optuna – 超参数优化框架&lt;/stitle>; &lt;id>;https://optuna.org/&lt;/id>; &lt;updated>;2024-04-06T08:57:55.754453Z&lt; /updated>; &lt;link href=&quot;https://optuna.org/&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tosh&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文概述了一种在各种机器学习框架中优化超参数的方法，并在 Github 上提供了示例。它还提到了与此优化过程相关的可视化演示。 &lt;a href=&quot;https://hackernews.betacat.io/#optuna-a-hyperparameter-optimization-framework&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39950929&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;LSST相机：最大的天文学相机&lt;/stitle>; &lt;id>;https://www6.slac.stanford.edu/lsst&lt;/id>; &lt;更新>;2024-04-06T08 ：57：55.754932Z &lt;/更新>; &lt;link href =“https://www6.slac.stanford.edu/lsst”/>; &lt;作者>; &lt;名称>;除霜&lt;/名称>; &lt;uri>;https://news。 ycombinator.com/user?id=defrost&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www6.slac.stanford.edu/sites/default/files/styles/居中/public/2022-10/LSST%20Title%20Slide%20%280-00-03-15%29.jpg?itok=yNYWZYyj&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;由 SLAC 国家加速器实验室领导、智利正在建设的维拉·C·鲁宾天文台将拥有世界上最大的天文相机。其长达十年的遗产巡天将广泛绘制南方天空的地图，增强我们对宇宙的了解。 &lt;a href=&quot;https://hackernews.betacat.io/#lsst-camera-largest-camera-for-astronomy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39927682&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;