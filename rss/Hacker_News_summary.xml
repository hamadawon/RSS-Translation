<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-01T14:05:21.056887Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;我的Python代码是一个神经网络&lt;/stitle>; &lt;id>;https://blog.gabornyeki.com/2024-07-my-python-code-is-a-neural -network/&lt;/id>; &lt;更新>;2024-07-01T13:17:05.951897Z&lt;/更新>; &lt;link href=&quot;https://blog.gabornyeki.com/2024-07-my-python-code-is -a-neural-network/&quot;/>; &lt;作者>; &lt;名称>;gnyeki&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gnyeki&lt;/uri>; &lt;/作者>; &lt;内容类型=&quot;html&quot;>;作者讨论了如何检测代码审查期间发送的消息中的代码，使用循环神经网络 (RNN) 来改进手写算法，该算法面临复杂性和漏报问题。 RNN 经过训练，可以使用二进制指示函数和修正线性单元 (ReLU) 激活函数将消息分类为包含代码或不包含代码，以克服以下限制：&lt;a href=&quot;https://hackernews.betacat.io /#my-python-code-is-a-neural-network&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;RegreSSHion：基于 glibc 的 Linux 系统上 OpenSSH 服务器中的 RCE&lt;/stitle>; &lt;id>;https://www.qualys.com/2024/07 /01/cve-2024-6387/regresshion.txt&lt;/id>; &lt;更新>;2024-07-01T09:05:05.953805Z&lt;/更新>; &lt;link href=&quot;https://www.qualys.com/2024/ 07/01/cve-2024-6387/regresshion.txt&quot;/>; &lt;作者>; &lt;名称>;robinhoodexe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=robinhoodexe&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;Qualys 安全通报报告了基于 glibc 的 Linux 系统上 OpenSSH 服务器 (sshd) 中的远程代码执行漏洞，允许未经身份验证的远程攻击者以 root 身份执行任意代码。该漏洞是由 SIGALRM 处理程序中的信号处理程序竞争条件引起的，可以通过中断对 free() 的调用并稍后在另一个... &lt;a href=&quot;https://hackernews.betacat.io /#regresshion-rce-in-openssh-s-server-on-glibc-based-linux-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40843778&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;显示 HN：我创建了 After Effects 替代方案&lt;/stitle>; &lt;id>;https://pikimov.com/&lt;/id>; &lt;updated>;2024-07-01T09:05:05.954313Z &lt;/更新>; &lt;link href=&quot;https://pikimov.com/&quot;/>; &lt;作者>; &lt;名称>;clementpiki&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=clementpiki&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pikimov.com/pikimov-cover.png&quot; style=&quot;width: 220px; height: 133px;&quot; />;&lt;br />;创建动效设计作品，在线快速裁剪视频，或修剪视频以使其更短。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-created-an-after-effects-alternative&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40843867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pipes：Yahoo Pipes 的精神继承者&lt;/stitle>; &lt;id>;https://www.pipes.digital/docs&lt;/id>; &lt;更新>; 2024-07-01T03:05:05.954808Z&lt;/updated>; &lt;link href=&quot;https://www.pipes.digital/docs&quot;/>; &lt;author>; &lt;name>;sea-gold&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=sea-gold&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.pipes.digital/imgs/feed_tiny .png&quot;样式=&quot;宽度：220px；高度：123px；&quot; />;&lt;br />;Pipes 是一个可视化编程编辑器，允许用户通过连接从各种来源（包括 RSS、Atom、JSON 和 HTML）获取、过滤和操作数据的块来创建自定义提要。该平台支持一系列模块，包括过滤器、排序器、提取器和中继器，这些模块可以组合起来创建复杂的数据管道和工作流程。 &lt;a href=&quot;https://hackernews.betacat.io/#pipes-a-spiritual-successor-to-yahoo-pipes&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40841980&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我的微调模型击败了 OpenAI 的 GPT-4&lt;/stitle>; &lt;id>;https://mlops.systems/posts/2024-07-01-full-finetuned- model-evaluation.html&lt;/id>; &lt;更新>;2024-07-01T09:05:05.955312Z&lt;/更新>; &lt;link href=&quot;https://mlops.systems/posts/2024-07-01-full-finetuned -model-evaluation.html&quot;/>; &lt;作者>; &lt;名称>;majc2 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=majc2&lt;/uri>; &lt;/作者>; &lt;内容类型= “html”>; &lt;img src =“https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-22-output-1.png”样式=“宽度：220 像素；高度：181 像素；” />;&lt;br />;作者在新闻稿中的结构化数据提取任务上评估了多个微调模型和 OpenAI 模型的性能，微调模型总体优于 OpenAI 模型。作者计算了各种属性的准确度分数，包括事件类型、省份、目标群体和被杀死/捕获的领导者，经过微调的模型达到了...... &lt;a href=&quot;https://hackernews.betacat.io/#my -finetuned-models-beat-openai-s-gpt-4&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40843848&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：带有音频说明的 AI 辅助图像编辑&lt;/stitle>; &lt;id>;https://github.com/ShaShekhar/aaiela&lt;/id>; &lt;updated>;2024-07-01T10:05:05.955793Z&lt;/updated>; &lt; link href=&quot;https://github.com/ShaShekhar/aaiela&quot;/>; &lt;作者>; &lt;名称>;ShaShekhar&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ShaShekhar&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/192d9a15c2c34b41d21df65fd9d52d654aca29835d9956b8ace7acf1a08e1a8c/ShaShekhar/aaiela&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;该系统使用计算机视觉、语音转文本和大型语言模型的开源人工智能模型来创建无缝编辑体验，弥合口语和视觉转换之间的差距。它从自然语言指令中提取对象、动作和提示，并生成用于文本到图像修复的蒙版，具有面部标志检测等功能...... &lt;a href=&quot;https://hackernews.betacat.io/#show -hn-ai-auxiliary-image-editing-with-audio-instructions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40844056 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;四行代码，这是四行代码&lt;/stitle>; &lt;id>;https://boston.conman.org/2024/06/30.1&lt;/id>; &lt;updated>;2024-07-01T04:05:05.956293 Z&lt;/updated>; &lt;link href=&quot;https://boston.conman.org/2024/06/30.1&quot;/>; &lt;作者>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.conman.org/people/spc/about/2024/0604.t。 png&quot; 样式=&quot;宽度：220 像素；高度：220 像素；&quot; />;&lt;br />;由于特定的代码差异，TCP 服务可能比 TLS 服务花费更多时间，特别是 TCP 实现中的 Linux 专用字段和 ioctl 系统调用，而 TLS 实现中不存在。删除此代码解决了该问题，因为它仅适用于本地域套接字，并导致 TCP 服务在可写性和可读性之间来回切换，直到内核... &lt;a href=&quot;https://hackernews.betacat.io/#four -lines-of-code-it-was-four-lines-of-code&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40842275&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;Elixir 中的统一&lt;/stitle>; &lt;id>;https://www.ericpfahl.com/from-pattern-matching-to-unification/&lt;/id>; &lt;updated>;2024-07-01T04:05:05.957220 Z&lt;/updated>; &lt;link href=&quot;https://www.ericpfahl.com/from-pattern-matching-to-unification/&quot;/>; &lt;作者>; &lt;名称>;天气灯&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=weatherlight&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ericpfahl.com/content/images/size/w100 /2023/01/angry_ human-1.png&quot; style=&quot;宽度: 220px 高度: 243px;&quot; />;&lt;br />;模式匹配是 Elixir 中的一个强大工具，本文探讨了统一的概念，这是一种求解符号方程的算法，以及如何使用它来创建逻辑编程语言。本文提供了统一的详细解释，包括其在 Elixir 中的实现，并展示了如何使用它来创建逻辑编程语言...... &lt;a href=&quot;https://hackernews.betacat.io/#unification- in-elixir&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40840315&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;卷积、快速傅立叶变换和多项式 (2022)&lt; /stitle>; &lt;id>;https://www.alvarorevuelta.com/posts/fft-polynomials&lt;/id>; &lt;更新>;2024-06-30T22:05:05.957683Z&lt;/更新>; &lt;link href=&quot;https:// /www.alvarorevuelta.com/posts/fft-polynomials&quot;/>; &lt;作者>; &lt;名称>;clearprop&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=clearprop&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/alrevuelta/myblog/main/assets/img/time_freq.png&quot; style=&quot;width: 220px; height: 110px; ” />;&lt;br />;传统的多项式相乘方法的复杂度为O(n^2)，速度慢且效率低，尤其是对于大型多项式。通过使用傅里叶变换和卷积，可以以 O(nlogn) 复杂度来乘多项式，这更快、更高效，尤其是对于大型多项式。 &lt;a href=&quot;https://hackernews.betacat.io/#volvings-fast-fourier-transform-and-polynomials-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40840396&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;心灵模型&lt;/stitle>; &lt;id>;https://tylerneylon.com/a/mind_model/mind_model.html&lt;/id>; &lt;更新>;2024 -07-01T01:05:05.958192Z&lt;/更新>; &lt;link href=&quot;https://tylerneylon.com/a/mind_model/mind_model.html&quot;/>; &lt;作者>; &lt;名称>;adamesque&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=adamesque&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://tylerneylon.com/a/mind_model/img/ mind_model_v2.png&quot; style=&quot;宽度：220px 高度：159px；&quot; />;&lt;br />;作者提出了一种思维模型，通过使用连续并行运行的模块之间的数据流图来解释人类认知的各个方面，包括代理、学习、思考和内省。该模型可以捕捉复杂的思维方式，例如预测、创造力和解决问题，甚至可以模拟内部心理对话，但作者... &lt;a href=&quot;https://hackernews.betacat.io/#a -model-of-a-mind&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40841502&quot; target=&quot;_blank&quot;>;[ comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;预写日志是不是耐用性的通用部分&lt;/stitle>; &lt;id>;https://notes.eatonphil.com/2024-07-01-a-write-ahead-log-is-not-a-universal-part-of-durability .html&lt;/id>; &lt;更新>;2024-07-01T12:05:05.958651Z&lt;/更新>; &lt;link href=&quot;https://notes.eatonphil.com/2024-07-01-a-write-ahead- log-is-not-a-universal-part-of-durability.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;数据库可以通过在返回客户端之前将其长期数据结构持久写入磁盘来实现无需预写日志 (WAL) 的持久性，但这种方法是不安全，需要 fsync 来确保数据写入磁盘。预写日志是持久性的关键组成部分，它提供了一种廉价的方法来确保数据写入磁盘并允许逻辑... &lt;a href=&quot;https://hackernews.betacat.io/#a- write-ahead-log-is-not-a-universal-part-of-durability&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40844825&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;如何获得对您的 Sleep Number 床的 root 访问权限&lt;/stitle>; &lt;id>;https://dillan.org/articles/how-to-get-root-access-to-your-sleep-number-床&lt;/id>; &lt;更新>;2024-06-30T17:05:05.959149Z&lt;/更新>; &lt;link href=&quot;https://dillan.org/articles/how-to-get-root-access-to-your -sleep-number-bed&quot;/>; &lt;作者>; &lt;名称>;jandeboevrie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jandeboevrie&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj10.2e873fcb.png&amp;w=3840&amp;q=75&quot; style=&quot;宽度：220px；高度：172px ;” />;&lt;br />;作者描述了获得对 Sleep Number 集线器的本地网络访问权限的过程，其中涉及修改内部文件并设置 UART 设备以与集线器的控制台进行通信。作者还详细介绍了如何使用集线器的 Python 2.7.18 环境设置 HTTP 服务器并通过本地网络控制床的设置。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-get-root-access-to-your-sleep-number-bed&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40838167&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LLVM 19 中的集成汇编器改进&lt;/stitle>; &lt;id>;https://maskray.me/blog/2024-06-30- Integrated-assembler-improvements-in-llvm-19&lt;/id>; &lt;更新>;2024-07-01T03:05:05.959626Z&lt;/更新>; &lt;link href=&quot;https://maskray.me/blog/2024-06 -30-integrated-assembler-improvements-in-llvm-19&quot;/>; &lt;作者>; &lt;名称>;MaskRay&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=MaskRay&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;LLVM MC 项目进行了重大更改，以提高性能、可读性和效率，包括对片段管理、符号处理和节创建的优化。这些更改带来了显着的性能提升、内存使用量减少以及代码库更加精简，为未来的改进铺平了道路。 &lt;a href=&quot;https://hackernews.betacat.io/#integrated-assembler-improvements-in-llvm-19&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40842173&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;信号和图像处理中的四元数&lt;/stitle>; &lt;id>;https://ieeexplore.ieee.org/document/10243497&lt;/id>; &lt;更新>;2024-07- 01T06:05:05.960093Z&lt;/updated>; &lt;link href=&quot;https://ieeexplore.ieee.org/document/10243497&quot;/>; &lt;作者>; &lt;name>;teleforce&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=teleforce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ieeexplore.ieee.org/assets/img/ieee_logo_smedia_200X200.png&quot; 样式=“宽度：220像素；高度：221像素；” />;&lt;br />;四元数经常被误解为一种“奇异”的信号表示形式，但它们在信号和图像处理中具有实际用途。本文旨在通过全面概述关键方面、模型和方法并重点介绍旗舰应用来揭开四元数代数的神秘面纱。 &lt;a href=&quot;https://hackernews.betacat.io/#quaternions-in-signal-and-image-processing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40842898&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sieve：缓存驱逐可以简单、有效且可扩展&lt;/stitle>; &lt;id>;https://www.usenix.org/publications/loginonline/sieve-cache-驱逐可以简单有效且可扩展&lt;/id>; &lt;更新>;2024-07-01T09:05:05.960564Z&lt;/更新>; &lt;link href=&quot;https://www.usenix.org/publications /loginonline/sieve-cache-eviction-can-be-simple- effective-and-scalable&quot;/>; &lt;author>; &lt;name>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.usenix.org/sites/default/files/styles/article_embedded/public/complexity.png?itok =CoE2e4xj&quot;样式=&quot;宽度：220px；高度：107px；&quot; />;&lt;br />;研究人员提出了各种缓存替换算法，包括 ARC、Cliquemap、CACHEUS 和基于 FIFO 的方法，以优化缓存性能。研究分析了这些算法在现实场景中的有效性，例如 Twitter 的内存缓存集群和 Web 缓存，强调了它们的优点和局限性。 &lt;a href=&quot;https://hackernews.betacat.io/#sieve-cache-eviction-can-be-simple- effective-and-scalable&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新闻专线：一个世纪历史新闻的大型结构化数据库&lt; /stitle>; &lt;id>;https://arxiv.org/abs/2406.09490&lt;/id>; &lt;更新>;2024-07-01T00:05:05.961033Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org /abs/2406.09490&quot;/>; &lt;作者>; &lt;名称>;h2odragon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=h2odragon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;将定制的深度学习管道应用于美国当地报纸的原始图像扫描，创建了包含 1878 年至 1977 年 270 万篇公共领域新闻专线文章的综合档案。生成的数据集包括地理参考位置、标记主题、识别的命名实体和消除歧义的个体，为大型语言建模和研究各种... &lt;a href=&quot;https://hackernews.betacat.io/#newswire-a -大型结构化数据库的一个世纪的历史新闻&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40839830&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;在 NASA 的 Osiris-Rex 小行星样本中发现令人惊讶的磷酸盐&lt;/stitle>; &lt;id>;https://www.nasa.gov/missions/osiris-rex/surprising-磷酸盐-finding-in-nasas-osiris -rex-asteroid-sample/&lt;/id>; &lt;更新>;2024-07-01T04:05:05.961525Z&lt;/更新>; &lt;link href=&quot;https://www.nasa.gov/missions/osiris-rex/surprising -磷酸盐-finding-in-nasas-osiris-rex-asteroid-sample/&quot;/>; &lt;作者>; &lt;名称>;kumarm&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=kumarm&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.nasa.gov/wp-content/uploads/2024/06/osiris-rex-bennu-磷酸盐-figure- 17-topleft.jpg?w=1536&quot; style=&quot;宽度: 220px;高度：160px;&quot; />;&lt;br />;OSIRIS-REx任务的样本分析显示，小行星Bennu的尘埃富含生命必需的碳、氮和有机化合物，并且含有磷酸镁钠，这是一个令人惊讶的发现。样本的成分反映了地球上的洋中脊岩石，并暗示了这颗小行星的水过去，提供了有关其历史条件和地球上生命起源的线索&lt;a href=&quot;https://hackernews.betacat.io/#。令人惊讶的磷酸盐发现在 NASA-s-osiris-rex-asteroid-sample&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40816631&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;程序员永远不应该相信任何人，甚至是他们自己&lt;/stitle>; &lt;id>;https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html&lt;/id>; &lt;更新>;2024-07-01T06:05:05.962003Z&lt;/更新>; &lt;link href=&quot;https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html&quot;/>; &lt;author>; &lt;name>;kiyanwang&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kiyanwang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;编程中的抽象可以是既乐于助人又奸诈，隐藏着复杂性，让我们看起来比实际知道的更多。为了降低抽象失败的风险，程序员应该努力更深入地理解他们使用的抽象，并愿意验证和学习比他们需要的更多的东西。 &lt;a href=&quot;https://hackernews.betacat.io/#programmers-should-never-trust-anyone-not-even-themselves&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40842867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;与 Jujutsu 更好的合并工作流程&lt;/stitle>; &lt;id>;https://ofcr.se/jujutsu-merge-workflow&lt;/id>; &lt;更新>; 2024-07-01T06:05:05.962472Z&lt;/更新>; &lt;link href=&quot;https://ofcr.se/jujutsu-merge-workflow&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ofcr.se/assets/images/cover/jujutsu -merge-workflow.jpg&quot; style=&quot;宽度: 220px 高度: 110px;&quot; />;&lt;br />;作者讨论了使用 Jujutsu（一种新的版本控制系统 (VCS) 工具）来管理多个代码分支和合并提交的好处，从而可以更轻松地处理单独的功能并一起测试它们。作者分享了一个名为“The Austin Mega Merge Strategy”的工作流程，它允许用户将多个分支合并在一起，并将合并后的合并提交保留在他们的工作中...... &lt;a href=&quot;https://hackernews.betacat.io/ #a-better-merge-workflow-with-jujutsu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40842762&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;物理飞机飞行&lt;/stitle>; &lt;id>;https://10maurycy10.github.io/misc/the_physicals_of_flight/&lt;/id>; &lt;updated>;2024-06-30T22:05:05.962980Z&lt;/updated>; &lt;link href=&quot; https://10maurycy10.github.io/misc/the_physicals_of_flight/&quot;/>; &lt;author>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://10maurycy10.github.io/misc/the_physicals_of_flight/square.png&quot; style=&quot;width: 220px; height: 109px;&quot; />;&lt;br />;机翼不需要特定的翼型形状即可工作；任何有角度的表面都可以产生升力。然而，适当的机翼几何形状在失速之前会产生更大的升力并产生更少的阻力，这对于高效飞行至关重要。 &lt;a href=&quot;https://hackernews.betacat.io/#the-physicals-of-airplane-flight&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40835223&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;为 Windows 编写 GUI 应用程序很痛苦&lt;/stitle>; &lt;id>;https://tulach.cc/writing-gui-apps-for-windows-is-painful/&lt;/id >; &lt;更新>;2024-06-30T19:05:05.963448Z&lt;/更新>; &lt;link href=&quot;https://tulach.cc/writing-gui-apps-for-windows-is-painful/&quot;/>; &lt;作者>; &lt;name>;wild_pointer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=wild_pointer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //tulach.cc/assets/img/posts/7_winui.png&quot; style=&quot;宽度：220px 高度：131px；&quot; />;&lt;br />;您已经尝试了各种适用于 Windows 的 C++ GUI 库，考虑了大小、依赖性和样式等因素，并发现 Dear ImGui 通过小型、可移植的可执行文件和轻松的自定义来满足您的要求。但是，您在使用其他库（例如 Qt、wxWidgets 和 WinUI）时遇到了问题，因为它们的大小、依赖性和样式限制。 &lt;a href=&quot;https://hackernews.betacat.io/#writing-gui-apps-for-windows-is-painful&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40839208&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：基于 SQLite 的直接 SQS 替换&lt;/stitle>; &lt;id>;https://github.com/poundifdef/SmoothMQ&lt;/id>; &lt;更新>;2024-06-30T16:05:05.963910Z&lt;/updated>; &lt;link href=&quot;https://github.com/poundifdef/SmoothMQ&quot;/>; &lt;author>; &lt;name>;memset&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=memset&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/poundifdef/SmoothMQ/main/文档/queue.gif&quot; style=&quot;宽度：220px 高度：160px；&quot; />;&lt;br />;SmoothMQ 是 SQS 的直接替代品，具有更流畅的开发人员体验，提供 UI、可观察性和消息调度等功能。它可以部署为单个 Go 二进制文件并与现有 SQS 客户端一起使用，从而允许在任何云上使用私有 SQS 实例。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-drop-in-sqs-replacement-based-on-sqlite&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40837610&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;什么才是一棵好树？我们用人工智能问鸟&lt;/stitle>; &lt;id>;https://theconversation.com/what-makes-a-good-tree-we-used-ai-to-ask-birds-233281&lt;/id>; &lt;更新>;2024-07-01T10:05:05.964315Z&lt;/更新>; &lt;link href=&quot;https://theconversation.com/what-makes-a-good-tree-we-used-ai-to-ask-birds- 233281&quot;/>; &lt;作者>; &lt;名称>;iancoleman&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=iancoleman&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://images.theconversation.com/files/603857/original/file-20240630-17-i63qvi.jpg?ixlib=rb-4.1.0&amp;rect=22%2C35%2C2973%2C1612&amp;q=20&amp;auto=format&amp;w= 320&amp;fit=clip&amp;dpr=2&amp;usm=12&amp;cs=strip&quot; style=&quot;宽度：220px 高度：120px;&quot; />;&lt;br />;堪培拉的研究人员利用人工智能和机器学习来设计模仿大型古树特征的人造树结构，结合鸟类的喜好和行为，为鸟类创造更好的栖息地。这种参与式设计方法包括鸟类和树木等非人类利益相关者，可以为多个物种带来更具包容性和弹性的环境，并且...... &lt;a href=&quot;https://hackernews.betacat.io/#what- make-a-good-tree-we-used-ai-to-ask-birds&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40844095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;科学家发现沙漠苔藓“可以在火星上生存”&lt;/stitle>; &lt;id>;https://www.theguardian.com/science/article/2024/jun/30/scientists-find-desert-moss -that-c​​an-survive-on-mars&lt;/id>; &lt;更新>;2024-07-01T11:05:05.964695Z&lt;/更新>; &lt;link href=&quot;https://www.theguardian.com/science/article/ 2024/jun/30/scientists-find-desert-moss-that-c​​an-survive-on-mars&quot;/>; &lt;作者>; &lt;name>;nabla9&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=nabla9&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.guim.co.uk/img/media/b4e51ae420d0fbe419a03ff48761561e821d70ab/0_192_5760_3456/master/5760。 jpg?width=445&amp;dpr=1&amp;s=none&quot; style=&quot;宽度：220px; height: 132px;&quot; />;&lt;br />;中国研究人员发现，沙漠苔藓 Syntrichia caninervis 可以在类似火星的条件下生存和再生，包括干旱、辐射和严寒，使其成为潜在的先锋植物在火星上建立生命。苔藓能够承受极端条件并在正常生长条件下再生，使其成为未来太空的有希望的候选者...... &lt;a href=&quot;https://hackernews.betacat.io/#scientists-find-desert -moss-that-c​​an-survive-on-mars&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40844503&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;瑞士广播公司公司将停止使用 FM 收音机&lt;/stitle>; &lt;id>;https://www.swissinfo.ch/eng/life-aging/swiss-broadcasting-corporation-to-pull-plug-on-fm-radio/81956760&lt; /id>; &lt;更新>;2024-06-30T14:05:05.965082Z&lt;/更新>; &lt;link href=&quot;https://www.swissinfo.ch/eng/life-aging/swiss-broadcasting-corporation-to-pull -plug-on-fm-radio/81956760&quot;/>; &lt;作者>; &lt;名称>;austinallegro&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=austinallegro&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.swissinfo.ch/content/wp-content/uploads/sites/13/2024/06/349662619_highres.jpg&quot; style=&quot;width: 220px;高度：147px;&quot; />;&lt;br />;瑞士广播公司将在 12 月底之前关闭其模拟 FM 发射机，因为大多数人现在通过数字音频广播 (DAB+) 或互联网收听广播。此举是预计将成为新的无线电标准，DAB+ 提供更好的质量、更多的节目选择和成本效率。 -on-fm-radio&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40834012&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简化的 Python 扩散模拟&lt;/ stitle>; &lt;id>;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&lt;/id>; &lt;更新>;2024-06-30T19:05:05.965464Z&lt;/更新>; &lt;link href =&quot;https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120,c_limit,f_auto,q_auto:good,fl_progressive:陡峭/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9985e718-02ac-4510-a809-41adfbd60f7e_1024x1024.webp&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;文章演示了Python模拟气体分子在2D容器中的运动，使用turtle模块可视化粒子的运动和碰撞。通过将模拟区域划分为网格，文章展示如何优化碰撞检测算法，减少运行模拟所需的时间并提高其效率。扩散&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40838945&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;计算生活：自我复制程序如何从简单的交互中出现&lt; /stitle>; &lt;id>;https://arxiv.org/abs/2406.19108&lt;/id>; &lt;更新>;2024-06-30T14:05:05.965834Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org /abs/2406.19108&quot;/>; &lt;作者>; &lt;名称>;jasondavies&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px; height: 129px;&quot; />;&lt;br />;研究人员研究了计算基质，以了解自我复制器是如何出现的，发现随机程序可以在没有明确适应性景观的环境中进化为自我复制器。该研究展示了自我复制是如何通过随机产生的相互作用和自我修改，并表明随着自我复制器的兴起，可以出现复杂的动态&lt;a href=&quot;https://hackernews.betacat.io/#computational-life-how-self-replicating-programs-emerge。 -from-simple-interaction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40820022&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;艺术与技巧&lt;/stitle>; &lt; id>;https://harpers.org/archive/2024/07/art-and-artifice-donna-tartt/&lt;/id>; &lt;更新>;2024-07-01T03:05:05.966201Z&lt;/更新>; &lt;link href =&quot;https://harpers.org/archive/2024/07/art-and-artifice-donna-tartt/&quot;/>; &lt;作者>; &lt;名称>;棱镜&lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=prismatic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://harpers.org/wp-content/uploads/2019/11/9-Harpers -FINAL-480x350-c-default.jpg&quot; style=&quot;width: 220px; height: 161px;&quot; />;&lt;br />;JF Martel 的《在技巧时代回收艺术》一书探讨了艺术作为解放和超越手段的重要性，并将其与受功利和意识形态驱动的技巧区分开来。凭借其无意识和非线性的性质，它有能力帮助我们思考世界，而不是思考它，并可以引导我们走向真实。 -artifice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40835181&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;单靠监管并不能将我们从大型科技公司手中拯救出来&lt;/stitle >; &lt;id>;https://pages.near.org/blog/regulation-alone-will-not-save-us-from-big-tech/&lt;/id>; &lt;更新>;2024-07-01T02:05:05.966572 Z&lt;/updated>; &lt;link href=&quot;https://pages.near.org/blog/regulation-alone-will-not-save-us-from-big-tech/&quot;/>; &lt;作者>; &lt;名称>;beefman &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=beefman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pages.near .org/wp-content/uploads/2024/06/ai-master-plan-b-blog.png&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;作者认为，单靠监管并不能防止企业拥有的人工智能的风险，而是建议开源、用户拥有的人工智能作为确保透明度、安全性和问责制的解决方案。方法将允许用户定制和个性化他们的数字体验，优化他们的福祉，并从他们的数据中受益，而不是被利润驱动的利用...... &lt;a href=&quot;https://hackernews.betacat.io /#regulation-alone-will-not-save-us-from-big-tech&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40841960&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;