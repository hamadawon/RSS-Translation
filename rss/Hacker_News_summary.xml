<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-11T02:26:37.272324Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;科学家发现了狼疮的病因，以及逆转它的可能方法&lt;/stitle>; &lt;id>;https://news.feinberg.northwestern.edu/2024/07/10/scientists- discovery-a-cause-of-lupus-and-a-possible-way-to-reverse-it/&lt;/id>; &lt;更新>;2024-07-10T21:26:35.393213Z&lt;/更新>; &lt;link href=&quot; https://news.feinberg.northwestern.edu/2024/07/10/scientists-discover-a-cause-of-lupus-and-a-possible-way-to-reverse-it/&quot;/>; &lt;作者>; &lt;name>;adamredwoods&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=adamredwoods&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /news.feinberg.northwestern.edu/wp-content/uploads/2024/02/choi_headshot_scaled-235x300.jpg&quot; style=&quot;宽度：220px; height: 281px;&quot; />;&lt;br />;科学家发现了一种促进狼疮的分子缺陷，并发现逆转这种缺陷可能会逆转这种疾病。这种缺陷是由调节免疫反应的芳基碳氢化合物受体激活不足引起的，可以通过激活该途径或限制血液中过多的干扰素来纠正。反向它&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40931636&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Dut，一个快速的 Linux 磁盘使用计算器&lt;/stitle>; &lt;id>;https://codeberg.org/201984/dut&lt;/id>; &lt;更新>;2024-07-11T00:26:35.395167Z&lt;/更新>; &lt;link href=&quot;https://codeberg. org/201984/dut&quot;/>; &lt;author>; &lt;name>;201984&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=201984&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;Dut 是一个命令行工具，它显示最大目录的树及其磁盘使用情况，并提供限制行和深度的选项。它速度很快，但在某些情况下可能会被其他程序超越，例如当磁盘缓存未填充时。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-dut-a-fast-linux-disk-usage-calculator&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40932492&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我在编写 x86 模拟器时学到的东西 (2013)&lt;/stitle>; &lt;id>;https://www.timdbg.com/posts/useless -x86-trivia/&lt;/id>; &lt;更新>;2024-07-10T15:26:35.395639Z&lt;/更新>; &lt;link href=&quot;https://www.timdbg.com/posts/useless-x86-trivia/&quot; />; &lt;author>; &lt;name>;fanf2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fanf2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者分享他们在编写用于时间旅行调试的 x86 和 AMD64 模拟器时的经验和观察，重点介绍了 x86 指令集的各种怪癖和细微差别，包括替代编码、前缀字节和段寄存器。作者指出，编写 CPU 模拟器是深入了解 CPU 工作原理的好方法，并分享了一些有趣的... &lt;a href=&quot;https://hackernews.betacat.io/#things-i- learn-while-writing-an-x86-emulator-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40927438&quot; target= &quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;大泥球 (1999)&lt;/stitle>; &lt;id>;http://laputan.org/mud/&lt;/id>; &lt;更新>;2024-07-10T20:26:35.396070Z&lt;/更新>; &lt;link href=&quot;http ://laputan.org/mud/&quot;/>; &lt;作者>; &lt;名称>;thesuperbigfrog&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thesuperbigfrog&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“http://laputan.org/images/pictures/harrison-small.jpg”样式=“宽度：220px；高度：277px；” />;&lt;br />;“BIG BALL OF MUD”是一种常见的软件架构，它是由多种因素综合产生的，包括时间限制、资源缺乏和需要快速修复，导致系统难以维护并理解。为了应对大泥球，人们可以通过重构和整合来保持系统健康，扔掉它并重新开始，或者投降...... &lt;a href=&quot;https://hackernews.betacat.io/#big- ball-of-mud-1999&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40930549&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;视觉语言模型是盲目的&lt;/ stitle>; &lt;id>;https://vlmsareblind.github.io/&lt;/id>; &lt;更新>;2024-07-10T14:26:35.396509Z&lt;/更新>; &lt;link href=&quot;https://vlmsareblind.github.io /&quot;/>; &lt;作者>; &lt;名称>;taesiri&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=taesiri&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://vlmsareblind.github.io/static/images/OlympicLikeLogo/dataset_samples/pixels_384_linewidth_0.5_diameter_0.1_numCircles_5_black.svg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;用户在各种任务上测试 VLM，包括计算相交的圆、嵌套的正方形和网格中的行/列，以及遵循地铁地图中的路径。结果表明，VLM 很难处理需要计算重叠或嵌套形状的任务，但在更简单的任务上表现良好。 &lt;a href=&quot;https://hackernews.betacat.io/#vision-language-models-are-blind&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40926734&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Brian Kernighan 谈“编程实践”[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=_QQ7k5sn2-o&lt;/id >; &lt;更新>;2024-07-10T15:26:35.396944Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=_QQ7k5sn2-o&quot;/>; &lt;作者>; &lt;名称>;zdw &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;//www.youtube.com /embed/_QQ7k5sn2-o&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#brian-kernighan-on-the-practice-of -programming-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40927481&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;多代理聊天机器人谋杀之谜&lt;/stitle>; &lt;id>;https://ai-murder-mystery.onrender.com/&lt;/id>; &lt;更新>;2024-07-10T13:26:35.397409Z&lt;/更新>; &lt;link href=&quot;https://ai-murder -mystery.onrender.com/&quot;/>; &lt;作者>; &lt;名称>;PaulScotti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=PaulScotti&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://ai-murder-mystery.onrender.com/static/media/officer.7ee648892d4ea747006f.png&quot; style=&quot;宽度：220px; height: 220px;&quot; />;&lt;br />;游戏涉及通过与嫌疑人聊天、收集线索、拼凑真相来侦破谋杀案。玩家可以要求 Cleo 警官调查地点并提供观察证据，并可以点击准备好后进行扣除的“结束游戏”按钮&lt;a href=&quot;https://hackernews.betacat.io/#multi-agent-chatbot-murder-mystery&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40921989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;实时音频编程101：时间不等人&lt;/stitle>; &lt;id>;http://www.rossbencina.com/code /real-time-audio-programming-101-time-waits-for-nothing&lt;/id>; &lt;更新>;2024-07-10T14:26:35.398034Z&lt;/更新>; &lt;link href=&quot;http://www.real-time-audio-programming-101-time-waits-for-nothing&quot; rossbencina.com/code/real-time-audio-programming-101-time-waits-for-nothing&quot;/>; &lt;author>; &lt;name>;ssfrr&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=ssfrr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://farm6.static.flickr.com/5059/5516786774_19a166b180.jpg&quot; style=&quot;width: 220px ; height: 147px;&quot; />;&lt;br />;为通用操作系统编写实时音频软件需要遵守确保稳定和无故障行为的原则，例如避免内部的锁、内存分配和 I/O 操作相反，使用无锁 FIFO 队列、非阻塞数据结构和原子数据访问在实时和非实时上下文之间进行通信，并且... &lt;a href=&quot;https:// hackernews.betacat.io/#real-time-audio-programming-101-time-waits-for-nothing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=40912271&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;Pyxel：Python 的复古游戏引擎&lt;/stitle>; &lt;id>;https://github.com/kitao/pyxel&lt;/id>; &lt;更新>;2024-07-10T16:26 ：35.399159Z&lt;/updated>; &lt;link href=&quot;https://github.com/kitao/pyxel&quot;/>; &lt;作者>; &lt;name>;nateb2022&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=nateb2022&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kitao/pyxel/main/docs/images/pyxel_message.png&quot;样式=“宽度：220px； height: 124px;&quot; />;&lt;br />;Pyxel 是一个用于创建复古风格游戏的 Python 库，具有像素艺术图形、简单的音效和图块地图支持等功能。该库提供了一系列用于创建和操作的函数游戏资源，包括图像和图块地图加载、绘图和动画，以及声音和音乐播放。 python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40899520&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;物理神经网络的训练&lt;/stitle>; &lt;id>;https ://arxiv.org/abs/2406.03372&lt;/id>; &lt;更新>;2024-07-10T13:26:35.399761Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2406.03372&quot;/>; &lt;作者>; &lt;名称>;Anon84&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Anon84&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;物理神经网络 (PNN) 利用物理系统执行计算，有可能实现 1000 倍大的 AI 模型，并在边缘设备上进行本地和私有推理。研究正在探索大规模训练 PNN 的各种方法，具有多样化的技术生态系统，为未来高效且规模空前的人工智能模型提供线索&lt;a href=&quot;https://hackernews.betacat.io/#training-of-physical-neural-networks&quot; target=&quot;_blank&quot;。 >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40926515&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SimSig：铁路信号模拟&lt;/stitle>; &lt;id>;https://www.simsig。 co.uk/&lt;/id>; &lt;更新>;2024-07-10T09:26:35.400363Z&lt;/更新>; &lt;link href=&quot;https://www.simsig.co.uk/&quot;/>; &lt;作者>; &lt;名称>;untilted&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=untilted&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www .simsig.co.uk/Media/CScot.jpg&quot; style=&quot;width: 220px; height: 151px;&quot; />;&lt;br />;SimSig 是一款基于 PC 的模拟游戏，让您扮演信号员的角色，操作信号和地点，让火车准时到达目的地，并具有多个操作区域和多人游戏选项。该模拟具有时间表编辑器、用户提供的时间表和 ARS 等自动化选项，可提供逼真且引人入胜的体验。 target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40925025&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AMD 以 6.65 亿美元收购 Silo AI&lt;/stitle>; &lt;id>; https://www.ft.com/content/7b8d2057-2687-45b3-bae4-1488a75ac5b2&lt;/id>; &lt;更新>;2024-07-10T14:26:35.400899Z&lt;/更新>; &lt;link href=&quot;https:// /www.ft.com/content/7b8d2057-2687-45b3-bae4-1488a75ac5b2&quot;/>; &lt;作者>; &lt;name>;helsinkiandrew&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=helsinkiandrew &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;AMD 将以 6.65 亿美元收购 Silo AI，以与 Nvidia 竞争。 《金融时报》通过各种订阅选项提供优质新闻的数字访问。 &lt;a href=&quot;https://hackernews.betacat.io/#amd-to-buy-silo-ai-for-665m&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40926648&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Linux 上的 Zed 已上线&lt;/stitle>; &lt;id>;https://zed.dev/linux&lt;/id>; &lt;更新>;2024-07-10T17:26 :35.401418Z&lt;/updated>; &lt;link href=&quot;https://zed.dev/linux&quot;/>; &lt;作者>; &lt;name>;0xedb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=0xedb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zed.dev/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fapp-logo2.9b5f959f .png&amp;w=256&amp;q=75&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;要在大多数 Linux 发行版上安装 Zed，请运行以下 shell 脚本。 &lt;a href=&quot;https://hackernews.betacat.io/#zed-on-linux-is-here&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40928893&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;在疯狂之山&lt;/stitle>; &lt;id>;https://antithesis.com/blog/madness/&lt;/id>; &lt;更新>;2024-07-10T13:26： 35.401960Z&lt;/updated>; &lt;link href=&quot;https://antithesis.com/blog/madness/&quot;/>; &lt;作者>; &lt;name>;wwilson&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=wwilson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://antithesis.com/images/people/001_will.jpg&quot; style=&quot;width: 220px; height : 221 像素;&quot; />;&lt;br />;作者描述了构建一个可以在 NixOS 和普通 Linux 上运行的工具的挑战，以及他们如何开发元加载器来解决动态库依赖问题。元加载器使用可执行文件中的 RPATH 和 RUNPATH 标头来确定要使用的正确加载器，并且可用于在 NixOS 和普通 Linux 上运行二进制文件而无需修改。 &lt;a href=&quot;https://hackernews.betacat.io/#at-the-mountains-of-madness&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40926439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;顶级 PyPI 包内的模块名称分析&lt;/stitle>; &lt;id>;https://joshcannon.me/2024/07/05/package-names.html&lt;/id>; &lt;更新>;2024-07-10T20:26:35.402480Z&lt;/更新>; &lt;link href=&quot;https://joshcannon.me/2024/07/05/package-names.html&quot;/>; &lt;作者>; &lt;名称>; thejcannon&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thejcannon&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者分析了PyPI上下载次数最多的前8000个包为了理解包名称和模块名称之间的关系，发现并不总是遵循约定，并且命名空间包可能会出现问题。分析显示，81% 的包具有与包名称相关的单个前缀，但 19% 没有，作者计划维护一个映射...... &lt;a href=&quot;https://hackernews.betacat.io /#an-analysis-of-module-names-inside-top-pypi-packages&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40890002&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;航行者号任务的顶尖科学家兼推销员埃德·斯通去世，享年 88 岁&lt;/stitle>; &lt;id>;https://www.wsj.com/science/space-astronomy/ed-stone-scientist -voyager-mission-dies-at-88-44c65bc4&lt;/id>; &lt;更新>;2024-07-10T17:26:35.403503Z&lt;/更新>; &lt;link href=&quot;https://www.wsj.com/science/ space-astronomy/ed-stone-scientist-voyager-mission-dies-at-88-44c65bc4&quot;/>; &lt;作者>; &lt;name>;impish9208&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=impish9208&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;请启用 JS 并禁用任何广告拦截器 &lt;a href=&quot;https://hackernews.betacat.io/#ed-stone-top-scientist -and-salesman-for-the-voyager-mission-dies-at-88&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40929104&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;《纽约时报》书评是书评不应该有的一切&lt;/stitle>; &lt;id>;https://www.currentaffairs.org/news/new-york-times-book-review&lt;/id>; &lt;更新>;2024-07-10T20:26:35.404045Z&lt;/updated>; &lt;link href=&quot;https://www.currentaffairs.org/news/new-york-times-book-review&quot;/>; &lt;作者>; &lt;名称>; XzetaU8&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=XzetaU8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.ycombinator.com/user?id=XzetaU8&lt;/uri>; &lt;/author>; currentaffairs.org/hubfs/bookreview.jpg&quot; style=&quot;width: 220px; height: 139px;&quot; />;&lt;br />;《纽约时报》书评只关注明星或其潜力，创造对乏味故事和重新包装叙事的需求，并在不顾一切的情况下塑造文学品味，从而延续了出版界的不平等。任何对评价或批评的真正承诺都将是它在复制虚假和破坏性的等级制度中所扮演的角色，迫使作家……&lt;a href=&quot;https://hackernews.betacat.io/#the-nyt-book- review-is-everything-book-criticism-shouldn-t-be&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40930983&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;CD pregap 如何获得隐藏的曲目超能力&lt;/stitle>; &lt;id>;https://tedium.co/2024/07/06/compact-disc-pregap-history/&lt;/id>; &lt;updated>;2024-07-10T02 ：26：35.404582Z &lt;/更新>; &lt;link href =“https://tedium.co/2024/07/06/compact-disc-pregap-history/”/>; &lt;作者>; &lt;名称>;shortformblog &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=shortformblog&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.tedium.co/uploads /tedium070624.gif&quot; style=&quot;宽度：220px; height: 92px;&quot; />;&lt;br />;pregap 是 CD 开头的一小段无声部分，曾经是艺术家和唱片公司用来向专辑添加秘密曲目或数据的隐藏功能。pregap 的受欢迎程度达到顶峰在 20 世纪 90 年代，Willie Nelson 和 Barenaked Ladies 等艺术家使用它来添加隐藏曲目，Justice Records 等唱片公司为该技术申请了专利，以创造新的收入来源。 how-cd-pregaps-gained-their-hidden-track-superpowers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40920122&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;RouteLLM：用于服务和评估 LLM 路由器的框架&lt;/stitle>; &lt;id>;https://github.com/lm-sys/RouteLLM&lt;/id>; &lt;更新>;2024-07-10T02:26:35.405093Z&lt;/已更新>; &lt;link href=&quot;https://github.com/lm-sys/RouteLLM&quot;/>; &lt;作者>; &lt;name>;djhu9&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =djhu9&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/lm-sys/RouteLLM/main/assets/router.png&quot; style=&quot;宽度：220px； height: 196px;&quot; />;&lt;br />;RouteLLM 是一个用于服务和评估 LLM 路由器的框架，允许在强模型和弱模型之间进行经济高效的路由，同时保持质量。它包括预先训练的路由器和用于优化路由的校准过程性能，支持多个基准测试和模型对&lt;a href=&quot;https://hackernews.betacat.io/#routellm-a-framework-for-serving-and-evaluating-llm-routers&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40922739&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在编码中使用 5S 原则&lt;/stitle>; &lt;id>;https://santhoshsundar.medium .com/using-the-5s-principle-in-coding-6237a1614a02&lt;/id>; &lt;更新>;2024-07-10T09:26:35.405654Z&lt;/更新>; &lt;link href=&quot;https://santhoshsundar.medium. com/using-the-5s-principle-in-coding-6237a1614a02&quot;/>; &lt;作者>; &lt;名称>;Gigacore&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Gigacore&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/da:true/resize:fit:1200/0*2AID9rk0a_8JDJSt&quot; style=&quot;width: 220px ; height: 143px;&quot; />;&lt;br />;5S原则源于精益制造，是一种旨在通过系统化组织提高效率和生产力的方法论，可以通过识别和消除未使用的代码、构建代码库和通过实施这些原则，开发人员可以提高代码的可读性、可维护性和... &lt;a href=&quot;https://hackernews.betacat.io/#using-the-5s-principle-in-coding &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40891391&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过对比层进行的 Dola 解码提高了大型语言模型的真实性&lt;/stitle >; &lt;id>;https://arxiv.org/abs/2309.03883&lt;/id>; &lt;更新>;2024-07-10T16:26:35.406157Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs /2309.03883&quot;/>; &lt;author>; &lt;name>;johnsutor&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=johnsutor&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;一种新的解码策略，通过对比层解码 (DoLa)，通过对比后面和前面的层 logits 来减少大型语言模型中的幻觉。DoLa 将多个任务（包括 TruthfulQA）的真实性提高了 12 -17% 绝对分数，使法学硕士在生成事实知识方面更加可靠&lt;a href=&quot;https://hackernews.betacat.io/#dola-decoding-by-contrasting-layers-improves-factuality-in-large-language。 -models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40928145&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;复制具有块结构堆的收集器是不可靠的&lt;/stitle >; &lt;id>;https://wingolog.org/archives/2024/07/10/copying-collectors-with-block-structed-heaps-are-unreliable&lt;/id>; &lt;更新>;2024-07-10T11:26： 35.407212Z&lt;/更新>; &lt;link href=&quot;https://wingolog.org/archives/2024/07/10/copying-collectors-with-block-structed-heaps-are-unreliable&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;具有块结构的半空间收集器由于不可交换的疏散，堆是不可靠的，这可能会根据分配顺序产生不同的块尾碎片。但是，可以通过增加堆大小或使用虚拟内存和可增长堆来减轻这种不可靠性，这提供了一种软可靠性形式。 &lt;a href=&quot;https://hackernews.betacat.io/#copying-collectors-with-block-structed-heaps-are-unreliable&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40925474&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;研究人员发现了一种新形式的科学欺诈：“偷偷引用”&lt;/stitle>; &lt;id>;https://phys.org/news/2024-07 -scientific-fraud-uncovering.html&lt;/id>; &lt;更新>;2024-07-10T17:26:35.407733Z&lt;/更新>; &lt;link href=&quot;https://phys.org/news/2024-07-scientific- fraud-uncovering.html&quot;/>; &lt;author>; &lt;name>;toss1&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=toss1&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2021/research-1.jpg&quot; style=&quot;宽度：220px 高度：146px；&quot; />;&lt;br />;研究人员发现了一种新形式的科学欺诈，称为“偷偷引用”，即在元数据中添加额外的引用以人为地增加引用计数。这种操纵可能导致不公正的决定，并引起人们对科学影响测量系统完整性的担忧，而这些系统可能被操纵以促进研究人员之间的不健康竞争。 &lt;a href=&quot;https://hackernews.betacat.io/#researchers-discover-a-new-form-of-scientific-fraud-sneaked-references&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40928756&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Turbopuffer：对象存储上的快速搜索&lt;/stitle>; &lt;id>;https://turbopuffer.com/blog/turbopuffer&lt;/id>; &lt;更新>;2024-07-10T02:26:35.408276Z&lt;/更新>; &lt;link href=&quot;https://turbopuffer.com/blog/turbopuffer&quot;/>; &lt;作者>; &lt;名称>;Sirupsen&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=Sirupsen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://turbopuffer.com/api/og?title= Turbopuffer%3A%20fast%20search%20on%20object%20storage&quot; style=&quot;宽度：220px 高度：116px；&quot; />;&lt;br />;作者构建了turbopuffer，这是一种新的搜索方法，通过利用对象存储和智能缓存，将成本效率与高性能结合起来，从而以传统解决方案成本的一小部分实现可扩展且可靠的搜索。该公司已经在包括 Cursor 在内的早期客户中取得了成功，其成本降​​低了 10 倍，并改善了冷热延迟...... &lt;a href=&quot;https://hackernews.betacat.io/#turbopuffer-fast-search -on-object-storage&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40916786&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Circos – 圆形可视化&lt;/stitle>; &lt;id>;https://circos.ca/&lt;/id>; &lt;更新>;2024-07-10T02:26:35.408781Z&lt;/更新>; &lt;link href=&quot;https://circos.ca/&quot;/>; &lt;作者>; &lt;name>;smartmic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //circos.ca/img/ironman2-hologram-periodictable.jpg&quot; style=&quot;宽度: 220px 高度: 111px;&quot; />;&lt;br />;Circos 是一个用于以圆形布局可视化数据的软件包，非常适合探索对象或位置之间的关系，并且可用于创建具有高数据墨水比的出版质量的信息图表和插图。它非常灵活，可以自动化，并已用于可视化各种类型的数据，包括基因组数据、客户流量、快递量...... &lt;a href=&quot;https://hackernews.betacat.io/#circos-循环可视化&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40914958&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;SRB 的密封故障注定了挑战者号的失败（2021 年） ）&lt;/stitle>; &lt;id>;https://exrocketman.blogspot.com/2021/12/the-seal-failure-in-srb-that-doomed.html&lt;/id>; &lt;更新>;2024-07-10T02： 26:35.409294Z&lt;/updated>; &lt;link href=&quot;https://exrocketman.blogspot.com/2021/12/the-seal-failure-in-srb-that-doomed.html&quot;/>; &lt;作者>; &lt;名称>;phendrenad2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=phendrenad2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger .googleusercontent.com/img/b/R29vZ2xl/AVvXsEgy3G06GH8JoAli9mSuLMYWEs_XSnlRMONXhTkLZcoP3lR8-blQHj6nixYc3cdejlmtaeaT0S_YSJYKjvfVFCwbt_KCYqUjp-spbow1OApR5tM2Wh2ZjaiV yYLRLwBvgkwMSbwb-O09NEMy/w400-h215/F1+SRB+O+环+关节+1.png&quot; style=&quot;宽度：220px; height: 119px;&quot; />;&lt;br />;作者解释了导致挑战者号航天飞机灾难的设计缺陷，包括使用两个O形环接头设计以及用腻子阻塞O形环加压路径，导致 O 形环失效并导致爆炸。 作者还批评了 NASA 的管理决策，包括在寒冷温度下飞行航天飞机的决定以及失败...... &lt;a href=&quot;https://hackernews. betacat.io/#the-seal-failure-in-the-srb-that-doomed-challenger-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=40922874&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;RAG 中的知识图谱：炒作与 Ragas 分析&lt;/stitle>; &lt;id>;https://aiencoder.substack.com/p/graphrag-analysis-part-1-how-indexing &lt;/id>; &lt;更新>;2024-07-10T02:26:35.409837Z&lt;/更新>; &lt;link href=&quot;https://aiencoder.substack.com/p/graphrag-analysis-part-1-how-indexing&quot; />; &lt;author>; &lt;name>;rooftopzen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rooftopzen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages% 2Fc7ba9c3c-c640-4bf3-9a36-2c6eb3467dc8_1402x750.png&quot;样式=&quot;宽度：220px； height: 118px;&quot; />;&lt;br />;您使用 Neo4j 进行了一项研究，衡量 RAG 系统中知识图谱的效果，发现知识图谱可能不会显着影响上下文检索，但 Neo4j 拥有自己的索引，可以实现更高的答案相关性和您的结果表明知识图在高精度应用中可能是有益的，但投资回报率限制可能不值得...... &lt;a href=&quot;https://hackernews.betacat.io/#knowledge-graphs- in-rag-hype-vs-ragas-analysis&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40921038&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;