<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-07-14T13:56:21.972956Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我构建了一个支持蜂鸣器的 Jeopardy 游戏制作器&lt;/stitle>; &lt;id>;https://buzzinga.io/&lt;/id>; &lt;更新>;2024-07-14T13 :06:13.754597Z&lt;/updated>; &lt;link href=&quot;https://buzzinga.io/&quot;/>; &lt;作者>; &lt;name>;Wolfmans55&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=Wolfmans55&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://buzzinga.s3.us-east-2.amazonaws.com/75cdf8146ced554ebae24fd8872f07682f3d62a6a05c78d130b5266d7e111b1b&quot; style=&quot;width: 220 像素；高度：124 像素；” />;&lt;br />;创建并托管您自己的自定义 Jeopardy 游戏。非常适合游戏之夜、课堂、企业培训和社交活动。查看每条线索的答案，并始终知道哪个团队正在选择下一条线索。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-a-jeopardy-game-maker-with-buzzer-support&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40960508&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从头开始编写 64 位模式的 BIOS 引导加载程序&lt;/stitle>; &lt;id>;https://thasso.xyz/2024 /07/13/setting-up-an-x86-cpu.html&lt;/id>; &lt;更新>;2024-07-14T08:56:13.756327Z&lt;/更新>; &lt;link href=&quot;https://thasso.xyz/ 2024/07/13/setting-up-an-x86-cpu.html&quot;/>; &lt;作者>; &lt;名称>;D4ckard&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=D4ckard&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thasso.xyz/public/figures/x86-mode-transitions.png&quot; style=&quot;宽度：220px；高度：154px ;” />;&lt;br />;作者描述了使用 Intel 手册、汇编器和 QEMU 从 BIOS 加载的引导扇区以 16 位实模式到 64 位长模式设置 x86_64 CPU 的过程。该设置涉及引导、加载阶段、切换到保护模式和启用分页，重点是平面模型和长模式特定的功能。 &lt;a href=&quot;https://hackernews.betacat.io/#writing-a-bios-bootloader-for-64-bit-mode-from-scratch&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40959742&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建和扩展 Notion 的数据湖&lt;/stitle>; &lt;id>;https://www.notion.so/de-de/blog/建筑和缩放概念-数据湖&lt;/id>; &lt;更新>;2024-07-14T09:56:13.756876Z&lt;/更新>; &lt;link href=&quot;https://www.notion.so/de-de /blog/building-and-scaling-notions-data-lake&quot;/>; &lt;作者>; &lt;名称>;alexzeitler&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=alexzeitler&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.notion.so/cdn-cgi/image/format=webp,width=3840,quality=80/https://images .ctfassets.net/spoqsaf9291f/66rsNrrnpIWvY1WJhDdLP6/5c10cce95943826515f8edb371810906/cubes2_1.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Notion 的数据在过去三年中增长了 10 倍，需要开发数据湖来管理快速增长并满足关键产品和分析用例的需求。数据湖使用分片的 Postgres 数据库、Apache Hudi 进行数据摄取，并使用 Spark 进行数据处理，从而显着节省成本并提高数据新鲜度和可扩展性。 &lt;a href=&quot;https://hackernews.betacat.io/#building-and-scaling-notion-s-data-lake&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40959787&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Git-PR：通过 SSH 的补丁请求&lt;/stitle>; &lt;id>;https://pr.pico.sh/&lt;/id>; &lt;更新>;2024-07 -14T07:56:13.757427Z&lt;/updated>; &lt;link href=&quot;https://pr.pico.sh/&quot;/>; &lt;作者>; &lt;name>;steventhedev&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=steventhedev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我们的目标是创建一个简单的自托管 git 协作工具，它结合了邮件列表和拉取请求工作流程，允许外部贡献者提交在不牺牲易用性的情况下修补并接受评论。该工具将利用 SSH、RSS 和静态 Web 资源在本地开发环境中实现代码审查和协作。 &lt;a href=&quot;https://hackernews.betacat.io/#git-pr-patch-requests-over-ssh&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40959526&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;固件更新隐藏设备的蓝牙指纹&lt;/stitle>; &lt;id>;https://today.ucsd.edu/story/a-simple-firmware-update-completely-hides -a-devices-bluetooth-fingerprint&lt;/id>; &lt;更新>;2024-07-14T05:56:13.758520Z&lt;/更新>; &lt;link href=&quot;https://today.ucsd.edu/story/a-simple- firmware-update-completely-hides-a-devices-bluetooth-fingerprint&quot;/>; &lt;author>; &lt;name>;transpute&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=transpute&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://today.ucsd.edu/news_uploads/_social/Bluetooth_fix_rotator.jpg&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;加州大学圣地亚哥分校的研究人员开发了一种固件更新来隐藏智能手机独特的蓝牙指纹，从而消除了可用于跟踪设备用户的漏洞。该更新使用多层随机化，使推断设备身份变得困难，需要攻击者观察设备 10 天以上才能达到相同水平的跟踪精度。 &lt;a href=&quot;https://hackernews.betacat.io/#firmware-update-hides-a-devices-bluetooth-fingerprint&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40958946&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Mazeppa：用于按值调用函数式语言的现代超级编译器&lt;/stitle>; &lt;id>;https://github.com/mazeppa-dev/mazeppa&lt;/ id>; &lt;更新>;2024-07-14T08:56:13.759589Z&lt;/更新>; &lt;link href=&quot;https://github.com/mazeppa-dev/mazeppa&quot;/>; &lt;作者>; &lt;name>;Jhsto&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=Jhsto&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/ 684de5aab82a4d64b66029503fb1012cf13c160b1f0d0d529dc1868903f10782/mazeppa-dev/mazeppa&quot;样式=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;Mazeppa 是一个超级编译器，它通过分析和优化给定程序的执行模式，将其转换为更高效的残差程序。它结合了函数展开、模式匹配和代数简化等技术来实现这一目标，并为用户定制编译过程提供了灵活的接口。 &lt;a href=&quot;https://hackernews.betacat.io/#mazeppa-a-modern-supercompiler-for-call-by-value-function-languages&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40943891&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;内华达州公共雇员养老基金被动投资并击败同行（2016）&lt;/stitle>; &lt;id>;https://www.wsj.com /articles/what-does-nevadas-35-billion-fund-manager-do-all-day-nothing-1476887420&lt;/id>; &lt;更新>;2024-07-14T01:56:13.760593Z&lt;/更新>; &lt;link href =&quot;https://www.wsj.com/articles/what-does-nevadas-35-billion-fund-manager-do-all-day-nothing-1476887420&quot;/>; &lt;作者>; &lt;名称>;cpncrunch&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cpncrunch&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;请启用 JS 并禁用任何广告拦截器 &lt;a href=&quot;https: //hackernews.betacat.io/#nevadas-public-employee-pension-fund-invests-passively-and-beats-peers-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=40957656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;展示 HN：复活死去的沙丘 RTS 游戏&lt;/stitle>; &lt;id>;https://wheybags.com/blog/emperor.html&lt;/id>; &lt;更新>;2024-07-13T19:56:13.761164Z&lt;/更新>; &lt;link href=&quot;https://wheybags.com/blog/emperor.html&quot;/>; &lt;作者>; &lt;name>;wheybags&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=wheybags&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://wheybags.com/assets/blog_pics/emperor /cnc_vs_dune.jpg&quot; style=&quot;宽度：220px; height: 129px;&quot; />;&lt;br />;作者创建了一个名为EmperorLauncher的补丁来修改2001年的即时战略游戏Emperor：Battle for Dune以在现代系统上运行，包括修复图形、多人游戏和在线连接问题。该补丁涉及使用 IDA 和 detours 等工具对游戏代码进行逆向工程，并对分辨率限制、4:3 信箱等问题进行修复，以及... &lt;a href=&quot;https://hackernews.betacat.io/ #show-hn-resurrecting-a-dead-dune-rts-game&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40956087 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;学生使用黑水虻在模拟火星土壤中种植豌豆&lt;/stitle>; &lt;id>;https://phys.org/news/2024-06-aerospace-student-black-soldier-flies.html&lt;/id >; &lt;更新>;2024-07-13T19:56:13.761684Z&lt;/更新>; &lt;link href=&quot;https://phys.org/news/2024-06-aerospace-student-black-soldier-flies.html&quot;/ >; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://scx1.b-cdn.net/csz/news/800a/2024/could-the-red-planets.jpg”样式=“宽度：220px； height: 125px;&quot; />;&lt;br />;航空航天工程专业的学生 Emmanuel Mendoza 正在尝试使用黑水虻幼虫的粪质（充当肥料）在模拟火星土壤中种植豌豆植物，结果发现 10% 的粪质是他的研究旨在开发太空和地球的可持续农业技术，他希望建立一个展示植物生长的系统...... &lt;a href=&quot;https://hackernews.betacat.io/#student-使用-black-soldier-flies-to-grow-pea-plants-in-simulated-martian-soil&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40914350&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Oxidize – 关于将 Harfbuzz 和 Freetype 工具和库迁移到 Rust 的说明&lt;/stitle>; &lt;id>;https://github.com/googlefonts/oxydize&lt;/id>; &lt;updated>;2024-07 -14T08：56：13.762269Z &lt;/更新>; &lt;link href =“https://github.com/googlefonts/氧化”/>; &lt;作者>; &lt;名称>;ladyanita22 &lt;/名称>; &lt;uri>;https://news。 ycombinator.com/user?id=ladyanita22&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/34df767c6b330b66b4b62c79cdcd66b425351bfd163660592079a8ec63a31a1c/googlefonts/oxydize&quot; style=&quot;width ：220像素； height: 110px;&quot; />;&lt;br />;团队正在考虑将字体编译、光栅化和操作从 Python 和 C++ 转移到 Rust，以实现更快、更安全的代码，并在开发速度和性能之间取得平衡。目标是建立一个针对只读和读写用例的干净模式，提供开发人员友好的代码库，并阻止 HarfBuzz 和 FreeType 中的模糊器问题流。 Notes-on-moving-harfbuzz-and-freetype-tools-and-libraries-to-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40934022&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;计算机安全中的六个最愚蠢的想法（2005）&lt;/stitle>; &lt;id>;http://www.ranum.com/security/computer_security/editorials/dumb/&lt;/id>; &lt;updated>;2024 -07-14T05:56:13.762803Z&lt;/更新>; &lt;link href=&quot;http://www.ranum.com/security/computer_security/editorials/dumb/&quot;/>; &lt;作者>; &lt;名称>;lsb &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lsb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://www.ranum.com/security /computer_security/editorials/dumb/apps.gif&quot; style=&quot;width: 220px; height: 147px;&quot; />;&lt;br />;作者指出了计算机安全中的六个“愚蠢想法”，包括“默认许可”、“枚举坏点”、“渗透和补丁”、“黑客很酷”、“教育用户” 、“行动胜于不行动”，这些都是可能导致安全漏洞的常见陷阱。作者认为，这些想法不仅无效，而且还会助长一种自满和缺乏批判性的文化…… &lt;a href=&quot; https://hackernews.betacat.io/#the-6-dumbest-ideas-in-computer-security-2005&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news .ycombinator.com/item?id=40959121&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed .xml&quot;>; &lt;title type=&quot;text&quot;>;用于动态排名和选择的紧凑 Fenwick 树（2019）&lt;/stitle>; &lt;id>;https://arxiv.org/abs/1904.12370&lt;/id>; &lt;updated>;2024- 07-14T07:56:13.763323Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/1904.12370&quot;/>; &lt;作者>; &lt;name>;luu&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv -logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;芬威克树是一种隐式数据结构，允许进行对数时间操作，例如修改、访问和计算前缀和，其变体可以提高性能并减小大小。该结构可以是用于实现高效的动态位向量，性能优于具有相同目的的现有数据结构&lt;a href=&quot;https://hackernews.betacat.io/#compact-fenwick-trees-for-dynamic-ranking-and-selection- 2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40959412&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;赋予埃塞尔斯坦生命&lt;/stitle>; &lt;id>;https: //www.historytoday.com/archive/feature/giving-life-aethelstan&lt;/id>; &lt;更新>;2024-07-14T04:56:13.763853Z&lt;/更新>; &lt;link href=&quot;https://www.historytoday .com/archive/feature/giving-life-aethelstan&quot;/>; &lt;作者>; &lt;名称>;pepys&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=pepys&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.historytoday.com/sites/default/files/2024-07/aethelstan_history_today.jpg&quot; style=&quot;width: 220px;身高：253px;&quot; />;&lt;br />;埃塞尔斯坦国王作为一位强大而虔诚的统治者的声誉有据可查，但由于资料有限，他的个人生活和动机仍然不清楚。这本传记试图通过探索埃塞尔斯坦的人际关系来重建埃塞尔斯坦的生活，在各种情况下的行动和决定，揭示了一个复杂且多面的个体。 a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40958922&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;漂亮的图片、可启动软盘和第一个 Canon Cat 演示？&lt;/stitle>; &lt;id>;http://oldvcr .blogspot.com/2024/07/pretty-pictures-bootable-floppy-disks.html&lt;/id>; &lt;更新>;2024-07-14T02:56:13.764364Z&lt;/更新>; &lt;link href=&quot;http:// oldvcr.blogspot.com/2024/07/pretty-pictures-bootable-floppy-disks.html&quot;/>; &lt;author>; &lt;name>;classichasclass&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id = classichasclass &lt;/uri>; &lt;/uri>; &lt;content type =“ html”>; &lt;img src =” SZ63RZEHWGP5Y-4HMDTYC2EGL0XJ3P0VA_2ZRQEHJPT96JH82PCQQQQQITSALOQ-6_UXT9S8PQJ4WFD35Z21IB 40518_235223735％ 20%281%29.jpg&quot; style=&quot;宽度: 220px; height: 293px;&quot; />;&lt;br />;Canon Cat 是 Jef Raskin 设计的 1980 年代计算机，它拥有独特的操作系统和名为 Forth 的编程语言。本文讨论如何使用 Canon Cat，包括其文字处理器 -例如界面、Forth 编程语言，以及如何使用 Greaseweazle 设备创建和映像软盘 &lt;a href=&quot;https://hackernews.betacat.io/#pretty-pictures-bootable-floppy-disks-and-the-。 first-canon-cat-demo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40958340&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;线程创建者悖论&lt;/stitle >; &lt;id>;https://www.augment.ink/the-threads-creator-paradox/&lt;/id>; &lt;更新>;2024-07-13T22:56:13.764895Z&lt;/更新>; &lt;link href=&quot;https: //www.augment.ink/the-threads-creator-paradox/&quot;/>; &lt;author>; &lt;name>;hn1986&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=hn1986&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.augment.ink/content/images/2024/02/received_322200897498364-2.jpeg&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;Threads 是一个微博平台，拥有独特的社区建设方式，由原生创作者促进讨论和联系，但 Meta 需要投资于这些创作者及其社区，而不是依赖外部影响者该平台的成功取决于其能够独立实现其独特的目的并激励用户遵循该目的，而不是...... &lt;a href=&quot;https://hackernews.betacat.io/#the-threads-creator-悖论&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40957346&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;对 Google 位置数据的隐私没有合理期望&lt;/stitle >; &lt;id>;https://fourthamendment.com/?p=58338&lt;/id>; &lt;更新>;2024-07-14T02:56:13.765401Z&lt;/更新>; &lt;link href=&quot;https://fourthamendment.com/ ?p=58338&quot;/>; &lt;作者>; &lt;名称>;DanAtC&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=DanAtC&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;http://fourthamendment.com/wp-content/uploads/2017/11/1217Web100_Honoree.jpg&quot; style=&quot;宽度：220px; height: 221px;&quot; />;&lt;br />;美国第四巡回上诉法院裁定，政府从谷歌获取用户移动设备位置数据不构成第四修正案规定的搜索，用户必须采取法院还概述了谷歌响应地理围栏请求的一些积极措施，其中包括审查和... &lt;a href=&quot;https://hackernews.betacat.io/#no-reasonable-expectation -of-privacy-in-one-s-google-location-data&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40958458 &quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text &quot;>;巨型低温流星的特殊现象（2006）&lt;/stitle>; &lt;id>;https://www.damninteresting.com/the-peculiar-phenomenon-of-megacryometeors/&lt;/id>; &lt;更新>;2024-07-14T01： 56:13.765954Z&lt;/updated>; &lt;link href=&quot;https://www.damninteresting.com/the-peculiar-phenomenon-of-megacryometeors/&quot;/>; &lt;作者>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=bookofjoe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://damn-8791.kxcdn.com/wp-内容/上传/2006/04/Screen-Shot-2021-07-11-at-6.40.48-PM.jpg&quot; style=&quot;width: 220px;高度：165px;&quot; />;&lt;br />;巨型冰流星是从晴朗的天空落下的巨大而神秘的冰块，全球记录有超过 50 个冰块，重量达 400 磅。科学家认为，它们可能是由于异常的天气条件而在大气中形成的，而其他人则推测它们可能是由飞机甚至恶作剧引起的，但真正的起源仍然未知。 target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40958097&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Disruptor-rs：比 crossbeam 更好的延迟和吞吐量&lt;/stitle>; &lt; id>;https://github.com/nicholassm/disruptor-rs&lt;/id>; &lt;更新>;2024-07-13T13:56:13.766472Z&lt;/更新>; &lt;link href=&quot;https://github.com/nicholassm /disruptor-rs&quot;/>; &lt;作者>; &lt;名称>;nicholassm83&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nicholassm83&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/987cb8e3da422e58559991ebf041688eb2fd94839515d4294e0b6a2f4fff3986/nicholassm/disruptor-rs&quot; style=&quot;宽度：220px; height: 110px;&quot; />;&lt;br />;Disruptor库提供了低延迟、高吞吐量的事件处理系统，支持单次发布和批量发布、多个生产者和多个消费者。它专为实时应用程序和在某些情况下，特别是在批量发布和多个生产者的情况下，其性能优于 Crossbeam。 target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40954104&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;年度预付费如何创造无限的营销预算&lt;/stitle>; &lt; id>;https://longform.asmartbear.com/annual-prepay/&lt;/id>; &lt;更新>;2024-07-14T09:56:13.766985Z&lt;/更新>; &lt;link href=&quot;https://longform.asmartbear. com/annual-prepay/&quot;/>; &lt;作者>; &lt;名称>;jger15&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jger15&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://longform.asmartbear.com/annual-prepay/l-somethings-clicking-i-want-you-find-out-what-c​​lick-holy-hell-out-it -2325w.png&quot; style=&quot;宽度: 220px; height: 131px;&quot; />;&lt;br />;本文讨论了理解企业现金流的重要性，特别是对于 SaaS 公司而言，以及如何通过优化 CAC、ARPC 和 GPM 等指标来转变现金流。改善现金流的策略，包括提高价格、提供年度计划和核算取消，并强调考虑所有费用的重要性...... &lt;a href=&quot;https://hackernews.betacat.io/#how- Annual-pre-pay-creates-an-infinite-marketing-budget&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40959937&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;哲学教授的期末课（2023）&lt;/stitle>; &lt;id>;https://www.newyorker.com/culture/annals-of-inquiry/a-philosophy-professors-final-class&lt;/id>; &lt;更新>; 2024-07-13T20:56:13.767502Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/culture/annals-of-inquiry/a-philosophy-professors-final-class&quot;/>; &lt;作者>; &lt;name>;dotcoma&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dotcoma&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://media.newyorker.com/photos/63ac7732a292e0d27b31fc33/master/w_2560%2Cc_limit/Graupera-Bernstein.jpg&quot; style=&quot;width: 220px;身高：147px;&quot; />;&lt;br />;哲学家兼教授理查德·J·伯恩斯坦 (Richard J. Bernstein) 在社会研究新学院教授他的最后一门课程，其中包括一场关于汉娜·阿伦特 (Hannah Arendt) 的研讨会，他是一位朋友和知识分子对话者。伯恩斯坦的一生被打上烙印凭借他对哲学对话的承诺以及将来自不同传统的思想家聚集在一起的能力，他继续教学和写作，直到 90 岁去世。 &lt;a href=&quot;https://hackernews.betacat.io/#a -philosophy-professor-s-final-class-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40956593&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;插图AlphaFold&lt;/stitle>; &lt;id>;https://elanapearl.github.io/blog/2024/the-illusterated-alphafold/&lt;/id>; &lt;更新>;2024-07-13T15:56:13.768010Z&lt;/更新>; &lt; link href=&quot;https://elanapearl.github.io/blog/2024/the-illusterated-alphafold/&quot;/>; &lt;author>; &lt;name>;dil8&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=dil8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://elanapearl.github.io/assets/img/af3_post/single_and_pair_rep.png&quot; style=&quot;宽度：220px； height: 167px;&quot; />;&lt;br />;AlphaFold 3 是一种蛋白质结构预测模型，它结合使用注意力机制（包括 Atom Transformer、Pairformer 和 Triangle Updates）来更新蛋白质的标记级和原子级表示然后，该模型使用条件扩散来预测蛋白质的结构，以输入序列的多种表示为条件...... target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40954497&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;群岛：多重世界多游戏随机发生器&lt;/stitle>; &lt;id>;https ://archipelago.gg/&lt;/id>; &lt;更新>;2024-07-13T22:56:13.768517Z&lt;/更新>; &lt;link href=&quot;https://archipelago.gg/&quot;/>; &lt;作者>; &lt;名称>; jeffchien&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jeffchien&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://archipelago. gg/static/static/button-images/popover.png&quot; style=&quot;width: 220px; height: 132px;&quot; />;&lt;br />;跨游戏修改系统将不同的游戏组合成一个多人游戏，允许玩家共享物品并协作完成彼此的游戏。该项目是许多才华横溢的人的共同努力我们花费了无数的时间来创建一个庞大的源代码存储库&lt;a href=&quot;https://hackernews.betacat.io/#archipelago-multiworld-multi-game-randomizer&quot; target=&quot;_blank&quot;>;[summary]&lt;/a。 >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40932512&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Z80 CPU 微处理器即时参考卡 (1981) [pdf]&lt;/stitle>; &lt;id>;https://ballyalley.com/ ml/z80_docs/Z80%20CPU%20Instant%20Reference%20Card%20(Color).pdf&lt;/id>; &lt;更新>;2024-07-14T08:56:13.769052Z&lt;/更新>; &lt;link href=&quot;https:// ballyalley.com/ml/z80_docs/Z80%20CPU%20Instant%20Reference%20Card%20(Color).pdf&quot;/>; &lt;author>; &lt;name>;hggh&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=hggh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#z80-cpu-microprocessor-instant-reference-card- 1981-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40959558&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在 Haswell 上以几乎以下速度求和 ASCII 编码整数memcpy&lt;/stitle>; &lt;id>;http://blog.mattstuchlik.com/2024/07/12/summing-integers-fast.html&lt;/id>; &lt;更新>;2024-07-13T13:56:13.769567Z&lt;/已更新>; &lt;link href=&quot;http://blog.mattstuchlik.com/2024/07/12/summing-integers-fast.html&quot;/>; &lt;作者>; &lt;name>;iliekcomputers&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=iliekcomputers&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;作者描述了一种高性能解决方案，用于计算统一采样的 5000 万个 ASCII 编码整数的总和[0, 2^31-1]，使用 SIMD 指令和一种新颖的方法来初始化查找表。该解决方案迭代 32 字节的输入块，跟踪每个小数位的数字总和，然后将这些总和乘以 10 的幂以产生最终结果。 &lt;a href=&quot;https://hackernews.betacat.io/#summing-ascii-encoded-integers-on-haswell-at-almost-the-speed-of-memcpy&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40947170&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AT&amp;T 称犯罪分子在数据泄露中窃取了“几乎所有”客户的电话记录&lt;/stitle>; &lt;id>;https:/ /techcrunch.com/2024/07/12/att-phone-records-stolen-data-breach/&lt;/id>; &lt;更新>;2024-07-12T13:56:13.770119Z&lt;/更新>; &lt;link href=&quot;https ://techcrunch.com/2024/07/12/att-phone-records-stolen-data-breach/&quot;/>; &lt;作者>; &lt;名称>;impish9208&lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=impish9208&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://techcrunch.com/wp-content/uploads/2024/07/att-data-漏洞-网络安全-电话-记录.jpg?w=1024&quot; style=&quot;宽度：220px 高度：147px；&quot; />;&lt;br />;AT&amp;T 披露了一起影响 1.1 亿客户的数据泄露事件，被盗数据包括电话号码、通话和短信记录以及位置相关数据。此次泄露事件发生时，一个未知的网络犯罪组织窃取了云数据巨头 Snowflake 的数据，AT&amp;T 正在与执法部门合作逮捕肇事者。 &lt;a href=&quot;https://hackernews.betacat.io/#at-t-says-criminals-stole-phone-records-of-nearly-all-customers-in-data-breach&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40944505&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;标准错误的诞生 (2013)&lt;/stitle>; &lt;id>;https://www2. dmst.aueb.gr/dds/blog/20131211/index.html&lt;/id>; &lt;更新>;2024-07-13T13:56:13.770649Z&lt;/更新>; &lt;link href=&quot;https://www2.dmst.aueb .gr/dds/blog/20131211/index.html&quot;/>; &lt;作者>; &lt;名称>;marbu&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=marbu&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;标准错误概念源于 20 世纪 70 年代在贝尔实验室使用照排机的经验，当时与设备的单向连接导致需要一个单独的错误输出通道消息。这个概念最终成为过去 40 年来所有主要操作系统和语言库的标准。 &lt;a href=&quot;https://hackernews.betacat.io/#the-birth-of-standard-error-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40953268&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bio – 实验性 Lisp 方言，用 Zig 编写&lt;/stitle>; &lt;id>;https://github.com/cryptocode/bio&lt;/id>; &lt;updated>;2024-07 -13T22：56：13.771234Z &lt;/更新>; &lt;link href =“https://github.com/cryptocode/bio”/>; &lt;作者>; &lt;名称>; montyanderson &lt;/名称>; &lt;uri>; https://news。 ycombinator.com/user?id=montyanderson&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://user-images.githubusercontent.com/34946442/143932794-213c6eaa-76ca- 4f98-985f-345d1fc8e925.png&quot;样式=&quot;宽度：220像素；高度：221像素；&quot; />;&lt;br />;Bio 是一种实验性的 Lisp 方言，具有宏、垃圾收集、错误处理和模块设施等功能，允许创建复合类型和模块。该语言提供了用于数据操作的各种函数和宏，例如过滤、映射和排序，以及对文件 I/O、哈希映射和随机数生成的支持。 &lt;a href=&quot;https://hackernews.betacat.io/#bio-experimental-lisp-dialect-writing-in-zig&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40957286&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;