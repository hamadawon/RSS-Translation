<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-06-29T15:58:50.336961Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;字节码分解：揭开 Factorio 的 Lua 安全缺陷&lt;/stitle>; &lt;id>;https://memorycorruption.net/posts/rce-lua-factorio/&lt;/id>; &lt;更新>;2024 -06-29T12：58：15.636420Z &lt;/更新>; &lt;link href =“https://memorycorruption.net/posts/rce-lua-factorio/”/>; &lt;作者>; &lt;名称>;memcorruption &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=memcorruption&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://memorycorruption.net/posts/rce-lua -factorio/rocket-man_huafd99224b33f189054ca835273c63a66_4611746_1920x1080_resize_q75_bgffffff_box_3.jpg&quot; style=&quot;宽度: 220px;高度: 124px;&quot; />;&lt;br />;作者利用 Factorio 的 Lua 实现中的漏洞，允许他们执行任意代码并获得远程代码执行（RCE）。他们通过制作假对象（包括假字符串和闭包）并利用类型混淆和内存损坏来操纵游戏内存并执行系统命令来实现这一目标。 &lt;a href=&quot;https://hackernews.betacat.io/#bytecode-breakdown-unraveling-factorio-s-lua-security-flaws&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40830005&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;逆向工程师的十六进制编辑器&lt;/stitle>; &lt;id>;https://github.com/WerWolv/ImHex&lt;/id>; &lt;updated>;2024- 06-29T07:58:15.638941Z&lt;/更新>; &lt;link href=&quot;https://github.com/WerWolv/ImHex&quot;/>; &lt;作者>; &lt;name>;wsc981&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=wsc981&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images.githubusercontent.com/10835354/294305049-4f358238 -2d27-41aa-9015-a2c6cc3708cf.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..te6-9zGjAxE0_H9Cc3zGGKwlwcwoQaMns3LmN2AA7OY&quot; style=&quot;宽度：220px；高度：137px；&quot; />;&lt;br />;ImHex 是一款面向逆向工程师、程序员等的十六进制编辑器，具有高级数据解释、自定义编程语言和 GPU 加速功能。它需要现代 Linux 系统、OpenGL 3.0 和 GCC 或 Clang 来编译，并捆绑或单独安装一些依赖项。 &lt;a href=&quot;https://hackernews.betacat.io/#a-hex-editor-for-reverse-engineers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40828493&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;重访Flexipede&lt;/stitle>; &lt;id>;https://www.chilton-computing.org.uk/acl/htmls/flexipede/flexipede.htm&lt;/id>; &lt;更新>;2024-06-29T14:58:15.639423Z&lt;/更新>; &lt;link href=&quot;https://www.chilton-computing.org.uk/acl/htmls/flexipede/flexipede.htm&quot;/>; &lt;作者>; &lt;name>;timthorn&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=timthorn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //www.chilton-computing.org.uk/acl/htmls/flexipede/pritchett.jpg&quot; style=&quot;宽度：220px；高度：148px；&quot; />;&lt;br />;该文本似乎是计算机动画程序的数据集，其中包含 1967 年编写的名为“FlexiPede”的程序的卡片数据。该数据包括动画中各种对象和角色的坐标和其他信息，以及程序的运动和行为的指令。 &lt;a href=&quot;https://hackernews.betacat.io/#the-flexipede-revisited&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;15 年前我给自己的一堆编程建议&lt;/stitle>; &lt;id>;https://mbuffett。 com/posts/programming-advice-younger-self/&lt;/id>; &lt;更新>;2024-06-29T11:58:15.640405Z&lt;/更新>; &lt;link href=&quot;https://mbuffett.com/posts/programming- Advice-younger-self/&quot;/>; &lt;作者>; &lt;名称>;marcusbuffett&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=marcusbuffett&lt;/uri>; &lt;/author>; &lt;内容类型= &quot;html&quot;>;作者分享了他们作为程序员如何提高的个人经验和建议，包括解决常见问题、编写良好的代码和快速发布功能。他们强调对调试时间保持警惕、在需要时寻求帮助以及优先考虑运输速度以在行业取得成功的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#a-bunch-of-programming-advice-id-give-to-myself-15-years-ago&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40829607&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;XAES-256-GCM 扩展随机数 AEAD&lt;/stitle>; &lt;id>;https://words.filippo。 io/dispatches/xaes-256-gcm/&lt;/id>; &lt;更新>;2024-06-29T00:58:15.640914Z&lt;/更新>; &lt;link href=&quot;https://words.filippo.io/dispatches/xaes- 256-gcm/&quot;/>; &lt;作者>; &lt;名称>;FiloSottile&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=FiloSottile&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://words.filippo.io/content/images/2024/06/IMG_1921.jpeg&quot; style=&quot;宽度：220px 高度：165px；&quot; />;&lt;br />;XAES-256-GCM 是一种新的带有附加数据的身份验证加密 (AEAD) 算法，专为安全性、合规性和互操作性而设计，使用大型随机数为每条消息生成新密钥。该算法简单、适合内联，并受高级 OpenSSL API 支持，使其成为在 Go 和其他编程语言中使用的可行选择。 &lt;a href=&quot;https://hackernews.betacat.io/#the-xaes-256-gcm-extended-nonce-aead&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40826683&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;据我所知，Mosaic 和 Netscape 的起源故事 [视频]&lt;/stitle>; &lt;id>;https://pmarca.substack.com /p/the-true-story-as-best-i-can-remember&lt;/id>; &lt;更新>;2024-06-28T20:58:15.641388Z&lt;/更新>; &lt;link href=&quot;https://pmarca. substack.com/p/the-true-story-as-best-i-can-remember&quot;/>; &lt;作者>; &lt;名称>;kjhughes&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=kjhughes&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_150,h_150,c_fill,f_auto,q_auto:good,fl_progressive:陡峭，g_center/https%3A%2F%2Fsubstack-video.s3.amazonaws.com%2Fvideo_upload%2Fpost%2F143254349%2Fb33e4bc3-2428-4b56-8367-cd1d85a680cc%2Ftranscoded-00001.png&quot; style=&quot;宽度：220px 高度； : 220 像素;&quot; />;&lt;br />;用户分享了一段关于不了解风险投资的个人轶事，然后介绍了一个关于网络浏览器的起源及其发明的播客片段。网络浏览器被解释为访问互联网的重要工具，并以 Chrome 等流行浏览器为例。 &lt;a href=&quot;https://hackernews.betacat.io/#the-story-as-best-i-can-remember-of-the-origin-of-mosaic-and-netscape-video&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40825033&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;视频超分辨率纹理增强&lt;/stitle>; &lt;id>;https://github .com/DachunKai/EvTexture&lt;/id>; &lt;更新>;2024-06-29T07:58:15.641909Z&lt;/更新>; &lt;link href=&quot;https://github.com/DachunKai/EvTexture&quot;/>; &lt;作者>; &lt;名称>;smusamashah&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smusamashah&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// opengraph.githubassets.com/2ac611d3240e8de1fbbdd0ca328df53e58d6a907529f4305bdddd331e75c3527/DachunKai/EvTexture&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;EvTexture 项目是一个官方 PyTorch 实现，用于视频超分辨率中事件驱动的纹理增强，提供预训练的模型和代码可供下载。该项目需要视频和事件数据作为输入，用户可以使用事件摄像机模拟器模拟事件数据，或者与作者合作开发用于生成事件数据的脚本。 &lt;a href=&quot;https://hackernews.betacat.io/#texture-enhancement-for-video-super-resolution&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40791596&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;问 HN：Alexa 在说出自己的名字时如何避免打断自己？&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40790347 &lt;/id>; &lt;更新>;2024-06-29T10:58:15.642885Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=40790347&quot;/>; &lt;作者>; &lt;名称>; dumbest&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dumbest&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Alexa 通过分析来区分自己的声音和用户的声音语音特征，例如音高和音调，并使用机器学习模型来识别自己的 TTS 语音。这种自我识别功能使 Alexa 能够仅对说出“Alexa”的外部声音做出反应，而在说出相同短语时不会对自己的声音做出反应。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-how-does-alexa-avoid-interrupting-itself-when-saying-its-own-name&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40790347&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：安全路线。实时湍流数据，使用 iPad 进行机器学习预测&lt;/stitle>; &lt;id>;https://skypath.io&lt;/id>; &lt;updated>;2024-06-29T05:58:15.643838Z&lt;/updated>; &lt;link href=&quot; https://skypath.io&quot;/>; &lt;author>; &lt;name>;oron&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=oron&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://skypath.io/images/black-ipad-trans-small.png&quot; style=&quot;宽度：220px；高度：160px；&quot; />;&lt;br />;SkyPath 使用实时湍流数据和机器学习预测为飞行员提供早期通知和明智的决策，减少与湍流相关的伤害和成本。该应用程序提供准确的湍流预测、高效的调度路线并最大限度地减少飞行中的调整，从而节省大量成本并提高机组人员和乘客的安全。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-safe-routes-real-time-turbulence-data-ml-predictions-with-an-ipad&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40828180&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;人工针到真正的大海捞针：提高法学硕士的检索能力&lt;/stitle>; &lt;id>;https://arxiv .org/abs/2406.19292&lt;/id>; &lt;更新>;2024-06-29T04:58:15.644349Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2406.19292&quot;/>; &lt;作者>; &lt;名称>;veryluckyxyz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=veryluckyxyz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;大型语言模型难以应对长上下文输入，但对合成数据集的微调可以提高信息检索和推理能力。这种方法优于其他长上下文增强方法，对一般基准的影响最小，甚至可以防止对某些任务产生幻觉。 &lt;a href=&quot;https://hackernews.betacat.io/#artificial-needles-to-real-haystacks-improving-retrieval-capability-in-llms&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40827970&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Klára Dán von Neumann&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Kl%C3%A1ra_D% C3%A1n_von_Neumann&lt;/id>; &lt;更新>;2024-06-28T20:58:15.644873Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Kl%C3%A1ra_D%C3%A1n_von_Neumann &quot;/>; &lt;作者>; &lt;名称>;pietroppeter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pietroppeter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/en/a/af/Photograph_of_Klara_Dan_von_Neumann.png&quot; style=&quot;宽度：220px；高度：305px；&quot; />;&lt;br />;Klára Dán von Neumann 是一位匈牙利裔美国数学家和计算机科学家，她对编程领域做出了重大贡献，包括在蒙特卡罗方法、ENIAC 和 MANIAC I 方面的工作。她是第一位执行此命令的女性在计算机上编写现代风格的代码，为 ENIAC 设计新的控件，训练一群人将程序存储为二进制代码，并编写代码...... &lt;a href=&quot;https://hackernews.betacat.io/#klara -dan-von-neumann&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40817343&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;利用 1,500 度的太阳热能生产燃料&lt;/stitle>; &lt;id>;https://www.thechemicalengineer.com/news/having-fuels-from-1-500- Degrees-of-solar-heat-world-s-first-plant-opens-in-germany /&lt;/id>; &lt;更新>;2024-06-28T21:58:15.645363Z&lt;/更新>; &lt;link href=&quot;https://www.thechemicalengineer.com/news/having-fuels-from-1-500- Degrees -of-solar-heat-world-s-first-plant-opens-in-germany/&quot;/>; &lt;作者>; &lt;名称>;doener&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=doener&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.thechemicalengineer.com/media/21158/credit-synhelion-aerial-view-plant-dawn- 16-9.jpg?&amp;maxwidth=980&amp;center=0.5,0.5&amp;mode=crop&amp;scale=both&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;德国第一座利用太阳能热生产燃料的工业工厂已经开业，计划每年生产数千升燃料，最终达到每年 100 万吨。该工厂名为 DAWN，使用镜子将太阳的热量聚焦到塔上，产生高温过程热，将二氧化碳、水和甲烷转化为合成气，合成气可以加工成飞机燃料，... &lt;a href=&quot;https://hackernews. betacat.io/#having-fuels-from-1500- Degrees-of-solar-heat&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=40786786&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;Bébé Bibliophile&lt;/stitle>; &lt;id>;https://www.ymeskhout.com/p/bebe-bibliophile&lt;/id>; &lt;更新>;2024-06-29T05:58:15.645839Z&lt;/更新>; &lt;link href=&quot;https://www.ymeskhout.com/p/bebe-bibliophile&quot;/>; &lt;作者>; &lt;name>;Michelangelo11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=Michelangelo11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/ https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6041371f-2af3-4deb-af84-92423d710e76_1681x1080.jpeg&quot; style=&quot;width: 220px; height: 142px;&quot; />;&lt;br />;您从小就养成了贪得无厌的阅读欲望，阅读各种来源的书籍，包括《米奇日报》、法国文化中心和当地公共图书馆。您对阅读的热爱引导你探索不同的类型，包括漫画、奇幻和非小说类，你甚至以你最喜欢的一本书中的角色命名你的猫&lt;a href=&quot;https://hackernews.betacat.io/#bebe。 -bibliophile&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40822498&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我后悔“只是”一名软件工程师吗？&lt; /stitle>; &lt;id>;https://www.jacky.wtf/essays/2024/regrets-with-tech/&lt;/id>; &lt;更新>;2024-06-29T03:58:15.646323Z&lt;/更新>; &lt;link href =&quot;https://www.jacky.wtf/essays/2024/regrets-with-tech/&quot;/>; &lt;作者>; &lt;名称>;jackyalcine&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=jackyalcine&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.jacky.wtf/img/LgZNzMG0BV-692.png&quot; style=&quot;width: 220px; height: 172px;&quot; />;&lt;br />;作者回顾了他们在科技行业的历程，从纽约正义联盟的志愿者到在 Shutterstock、Google 和 Code for America 工作，并讨论了他们在种族主义方面的经历、资本主义以及劳工组织的需要。他们对没有采取更多措施帮助他人表示遗憾，现在正在寻求符合他们价值观的新职业道路......&lt;a href=&quot;https://hackernews.betacat. io/#do-i-regret-being-just-a-software-engineer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40827628&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;Valjoux 7750 计时机芯&lt;/stitle>; &lt;id>;https://monochrome-watches.com/valjoux-7750-chronograph-history-50-years-technical-explanation-evolution-clones-in-deep-评论/&lt;/id>; &lt;更新>;2024-06-28T20:58:15.646803Z&lt;/更新>; &lt;link href=&quot;https://monochrome-watches.com/valjoux-7750-chronograph-history-50-years- Technical-explanation-evolution-clones-in-depth-review/&quot;/>; &lt;author>; &lt;name>;Pamar&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Pamar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://monochrome-watches.com/wp-content/uploads/2024/05/Valjoux-7750-Chronograph-history-technical-explanation-review .jpg&quot; 样式=&quot;宽度:220px; height: 147px;&quot; />;&lt;br />;Valjoux 7750是一款广泛使用且具有影响力的计时机芯，生产已有50年，以其可靠性、耐用性和经济性而闻名，被众多手表品牌所使用，包括百年灵、万国表、欧米茄和许多其他品牌的机芯设计均经过修改和改进，采用凸轮杠杆机构和单向上弦摆陀。 io/#the-valjoux-7750-chronograph-movement&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40786007&quot; target=&quot; _blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Meta LLM编译器：神经优化器和反汇编器&lt;/stitle>; &lt;id>;https://twitter.com/AIatMeta/status/1806361623831171318/photo/1&lt;/id>; &lt;updated>;2024-06-28T15:58:15.647281Z&lt;/updated >; &lt;link href=&quot;https://twitter.com/AIatMeta/status/1806361623831171318/photo/1&quot;/>; &lt;作者>; &lt;name>;foobazgt&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=foobazgt&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://abs.twimg.com/responsive-web/client-web/icon-ios.77d25eba。 png&quot; 样式=&quot;宽度:220px; height: 220px;&quot; />;&lt;br />;Meta LLM Compiler 是一系列 AI 模型，可以优化代码大小、反汇编代码和预测编译器通过。这些模型实现了最先进的结果，并在研究和商业用途的许可许可。&lt;a href=&quot;https://hackernews.betacat.io/#meta-llm-compiler-neural-optimizer-and-disassembler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40819479&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们的地下未来 (2012)&lt;/stitle>; &lt;id>;https://www.bostonglobe.com/ideas/2012/ 06/23/underground-space/PvxyWFdXXYhPPlQVVU0a8K/story.html&lt;/id>; &lt;更新>;2024-06-29T08:58:15.647749Z&lt;/更新>; &lt;link href=&quot;https://www.bostonglobe.com/ideas /2012/06/23/underground-space/PvxyWFdXXYhPPlQVVU0a8K/story.html&quot;/>; &lt;author>; &lt;name>;辣根&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=horseradish&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我们城市的地下空间正在被重新评估，作为城市发展和可持续发展的潜在解决方案，工程师和设计师正在探索利用这些空间进行基础设施、住房和可持续发展的新方法。公共空间。尽管存在成本和心理障碍等挑战需要克服，但地下开发的支持者认为这可能是关键...... &lt;a href=&quot;https://hackernews.betacat.io/#our-underground-future-2012 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40822591&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用字符串图的范畴论 (2014)&lt;/stitle>; &lt;id >;https://arxiv.org/abs/1401.7220&lt;/id>; &lt;更新>;2024-06-28T22:58:15.648207Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/1401.7220&quot; />; &lt;author>; &lt;name>;soloist11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=soloist11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;宽度：220px；高度：129px；&quot; />;&lt;br />;Fokkinga 和 Meertens 的范畴论计算方法牺牲了类型信息，而传统的粘贴式证明保留了类型信息，但很难表达推理。所提议的字符串图的使用通过保留类型信息和提供分类证明的拓扑视角来结合优势，从而允许对标准结果进行明确的证明。 &lt;a href=&quot;https://hackernews.betacat.io/#category-theory-using-string-diagrams-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40826111&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;委托证书不信任&lt;/stitle>; &lt;id>;https://security.googleblog.com/2024/06/sustaining-digital-certificate-security.html&lt;/id>; &lt;更新>;2024-06-28T15:58:15.648679Z&lt;/更新>; &lt;link href=&quot;https://security.googleblog.com/2024/06/sustaining-digital-certificate-security.html&quot;/>; &lt;作者>; &lt;name>;iancarroll&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=iancarroll&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http: //2.bp.blogspot.com/-7bZ5EziliZQ/VynIS9F7OAI/AAAAAAAASQ0/BJFntXCAntstZe6hQuo5KTrhi5Dyz9yHgCK4B/s1600/googlelogo_color_200x200.png&quot; style=&quot;宽度：220像素；高度：221像素；&quot; />;&lt;br />;发布者：Chrome Root Program、Chrome 安全团队 Chrome 安全团队优先考虑 Chrome 用户的安全和隐私... &lt;a href=&quot;https://hackernews.betacat.io/#entrust-certificate-不信任&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40812833&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;让 FBI 困惑的“付费电话强盗” 80年代&lt;/stitle>; &lt;id>;https://www.mentalfloss.com/posts/pay-phone-bandit-baffled-fbi&lt;/id>; &lt;更新>;2024-06-29T03:58:15.649166Z&lt;/更新>; &lt;link href=&quot;https://www.mentalfloss.com/posts/pay-phone-bandit-baffled-fbi&quot;/>; &lt;作者>; &lt;name>;gmays&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=gmays&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images2.minmediacdn.com/image/upload/c_crop,w_2121,h_1193,x_0 ,y_0/c_fill,w_720,ar_16:9,f_auto,q_auto,g_auto/images/voltaxMediaLibrary/mmsport/mentalfloss/01j075kq5bgkvha6vq9q.jpg&quot; style=&quot;宽度: 220px; height: 124px;&quot; />;&lt;br />;付费电话被认为有一个无法撬开的锁。然后 James Clark 出现了。&lt;a href=&quot;https://hackernews.betacat.io/#the-pay-phone-bandit -who-baffled-the-fbi-in-the-80s&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40827650&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何浪费带宽、电池电量并惹恼系统管理员&lt;/stitle>; &lt;id>;https://rachelbythebay.com/w/2024/06/28/fxios/&lt;/id>; &lt;updated>;2024-06-29T06:58 ：15.649653Z&lt;/updated>; &lt;link href=&quot;https://rachelbythebay.com/w/2024/06/28/fxios/&quot;/>; &lt;author>; &lt;name>;zoidb&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=zoidb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;用户对 Web 浏览器（特别是 iOS 版 Firefox）感到沮丧，该浏览器向同一浏览器发出重复请求URL 并错误地请求 favicon.ico 文件 用户担心此行为对 Web 服务器的潜在影响，并寻求提高对此问题的认识。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-waste-bandwidth-battery-power-and-annoy-sysadmins&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40828203&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;死越来越难&lt;/stitle>; &lt;id>;https://www.plough.com/en/topics/life/aging/its -变得更难死&lt;/id>; &lt;更新>;2024-06-28T17:58:15.650171Z&lt;/更新>; &lt;link href=&quot;https://www.plough.com/en/topics/life/老化/its-getting-harder-to-die&quot;/>; &lt;作者>; &lt;名称>;baud147258&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=baud147258&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.plough.com/-/media/images/plough/quarterly/2024/40summertech/40dugdale/dugdaleembed.jpg?la=en&quot; style= “宽度：220 像素；高度：308 像素；” />;&lt;br />;作为一名初级保健医生和临床伦理学家，作者强调了预先护理计划和关于临终决策的公开对话的重要性，强调需要考虑个人情况、衰弱风险评估以及潜在的风险。维持生命干预措施的负担。作者还分享了他们个人对在家中低技术退出的偏好，... &lt;a href=&quot;https://hackernews.betacat.io/#it-s-getting-harder-to-die&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40787124&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/条目>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;软件星系&lt;/stitle>; &lt;id>;https://anvaka.github.io /pm/&lt;/id>; &lt;更新>;2024-06-28T15:58:15.650653Z&lt;/更新>; &lt;link href=&quot;https://anvaka.github.io/pm/&quot;/>; &lt;作者>; &lt;名称>; matesz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=matesz&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw. githubusercontent.com/wiki/anvaka/pm/images/nuget_fly_first.png&quot; style=&quot;宽度：220px 高度：138px；&quot; />;&lt;br />;代码星系可视化允许您探索软件包管理器的巨大图表（npm、go、ruby gems、composer 等）&lt;a href=&quot;https://hackernews.betacat.io/#software-星系&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40817852&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;四元数微分 (2012)&lt;/stitle>; &lt;id>;https ://fgiesen.wordpress.com/2012/08/24/quaternion-differiation/&lt;/id>; &lt;更新>;2024-06-28T15:58:15.652060Z&lt;/更新>; &lt;link href=&quot;https://fgiesen .wordpress.com/2012/08/24/quaternion-fferiation/&quot;/>; &lt;作者>; &lt;名称>;niborgen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=niborgen&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;用户旨在提供积分四元数函数的简明解释，特别是对于表示刚体动力学中旋转的单位四元数。他们推导了四元数值函数随时间变化的行为方程，表明四元数的导数可以写成纯虚四元数的指数，从而导致经常被引用的... &lt;a href=&quot;https: //hackernews.betacat.io/#quaternion-differiation-2012&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40819920&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;