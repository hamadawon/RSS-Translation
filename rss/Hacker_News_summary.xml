<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-07-05T10:03:07.523218Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;荷兰演示场景被联合国教科文组织列为文化遗产&lt;/stitle>; &lt;id>;http://demoscene-the-art-of-coding.net/2023/07/03/unescodemoscene -accepted-as-unesco-culture-heritage-in-the-netherlands/&lt;/id>; &lt;更新>;2023-07-05T09:01:35.755135Z&lt;/更新>; &lt;link href=&quot;http://demoscene-the -art-of-coding.net/2023/07/03/unescodemoscene-accepted-as-unesco-culture-heritage-in-the-netherlands/&quot;/>; &lt;作者>; &lt;名称>;Vinnl&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=Vinnl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/demoscene-the- art-of-coding.net/wp-content/uploads/2023/07/demoscene-nl-unesco-banner.png?resize=905%2C509&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;荷兰演示场景已被联合国教科文组织接受为活生生的国家文化遗产。这一成功是继芬兰、德国和波兰之前接受的。&lt;a href=&quot;https://hackernews. betacat.io/#demoscene-accepted-as-unesco-culture-heritage-in-the-netherlands&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com /item?id=36597460&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;安全研究人员关于在线安全法案的公开信 [pdf]&lt;/stitle>; &lt;id>;https://haddadi.github.io/UKOSBOpenletter.pdf&lt;/id>; &lt;更新>; 2023-07-05T08:01:35.797815Z&lt;/更新>; &lt;link href=&quot;https://haddadi.github.io/UKOSBOpenletter.pdf&quot;/>; &lt;作者>; &lt;名称>;martinralbrecht&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=martinralbrecht&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我们是一群信息安全和密码学领域的研究人员和科学家。我们关注在线安全法案破坏了在线隐私和安全。 &lt;a href=&quot;https://hackernews.betacat.io/#open-letter-from-security-researchers-in-relation-to-the-online-safety-bill-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36596610&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;纯粹使用 TypeScript 类型系统实现的函数和算法&lt;/stitle>; &lt;id>;https://github.com /ronami/meta-typing&lt;/id>; &lt;更新>;2023-07-05T05:01:35.799404Z&lt;/更新>; &lt;link href=&quot;https://github.com/ronami/meta-typing&quot;/>; &lt;作者>; &lt;name>;behnamoh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=behnamoh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //raw.githubusercontent.com/ronami/meta-typing/master/assets/showcase.gif&quot; style=&quot;width: 220px; height: 149px;&quot; />;&lt;br />;该项目通过纯粹在类型系统之上实现各种函数和算法，将 TypeScript 的类型系统推向了极限。它包括克服类型系统限制的创造性解决方案。 &lt;a href=&quot;https://hackernews.betacat.io/#functions-and-algorithms-implemented-purely-with-typescript-s-type-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36595512&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;布雷特·维克托更新&lt;/stitle>; &lt;id>;http://worrydream.com/July2023/&lt;/id>; &lt;updated>;2023- 07-05T07:01:35.800284Z&lt;/updated>; &lt;link href=&quot;http://worrydream.com/July2023/&quot;/>; &lt;author>; &lt;name>;dcre&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=dcre&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://worrydream.com/July2023/July2023.jpg&quot; style=&quot;width: 220px ;高度：165px;” />;&lt;br />; &lt;a href=&quot;https://hackernews.betacat.io/#bret-victor-update&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36596095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们的 Apache Arrow 之旅（第 2 部分）：自适应模式和排序&lt;/stitle>; &lt;id>;https://arrow.apache.org/blog/2023/06/ 26/our-journey-at-f5-with-apache-arrow-part-2/&lt;/id>; &lt;更新>;2023-07-05T02:01:35.801971Z&lt;/更新>; &lt;link href=&quot;https:// arrow.apache.org/blog/2023/06/26/our-journey-at-f5-with-apache-arrow-part-2/&quot;/>; &lt;author>; &lt;name>;yeesian&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=yeesian&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arrow.apache.org/img/journey-apache -arrow/adaptive-schema-architecture.svg&quot; style=&quot;宽度：220px；高度：238px；&quot; />;&lt;br />;在本文中，我们讨论了在当前版本的 OTel Arrow 协议中增强 Apache Arrow 缓冲区的压缩比和内存使用率的技术。我们探索在内存使用、处理递归模式定义以及模式设计和排序的重要性方面优化模式。 &lt;a href=&quot;https://hackernews.betacat.io/#our-journey-with-apache-arrow-part-2-adaptive-schemas-and-sorting&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36594695&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简单的 Unix 聊天&lt;/stitle>; &lt;id>;https://the-dam.org/docs/explanations/suc.html &lt;/id>; &lt;更新>;2023-07-05T03:01:35.802876Z&lt;/更新>; &lt;link href=&quot;https://the-dam.org/docs/explanations/suc.html&quot;/>; &lt;作者>; &lt; name>;marban&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=marban&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;简单 Unix 聊天系统 (suc) 是用五行 bash 实现的轻量级聊天系统。它利用 SSH、UNIX 的访问控制 API 和 UNIX 基于文本的模块化来提供身份验证、访问控制和加密等核心功能。 suc 进程只能由经过身份验证的用户启动，远程身份验证由 SSH 处理。 &lt;a href=&quot;https://hackernews.betacat.io/#simple-unix-chat&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36594916&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;类型系统更新：从研究转向开发&lt;/stitle>; &lt;id>;https://elixir-lang.org/blog/2023/06/22/type-system-updates-research-dev /&lt;/id>; &lt;更新>;2023-07-04T20:01:35.803725Z&lt;/更新>; &lt;link href=&quot;https://elixir-lang.org/blog/2023/06/22/type-system-updates -research-dev/&quot;/>; &lt;作者>; &lt;名称>;weatherlight&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=weatherlight&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://elixir-lang.org/images/logo/logo.png&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;一年前，在 ElixirConf EU 2022 上，宣布了研究和开发 Elixir 类型系统的努力。目标是找到一个类型系统，可以对 Elixir 的大部分功能语义进行建模，并针对不兼容或缺乏的领域开发新的理论。现在的重点是开发，逐步将类型系统引入 Elixir 编译器中。 &lt;a href=&quot;https://hackernews.betacat.io/#type-system-updates-moving-from-research-into-development&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36591313&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;繁荣、泡沫、萧条：光纤狂热 [pdf]&lt;/stitle>; &lt;id>;https://internethistory.org/wp-content/uploads /2020/01/OSA_Boom.Bubble.Bust_Fiber.Optic_.Mania_.pdf&lt;/id>; &lt;更新>;2023-07-05T05:01:35.804603Z&lt;/更新>; &lt;link href=&quot;https://internethistory.org/ wp-content/uploads/2020/01/OSA_Boom.Bubble.Bust_Fiber.Optic_.Mania_.pdf&quot;/>; &lt;作者>; &lt;名称>;tim_sw&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user? id=tim_sw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;从 1996 年到 2005 年的十年间，光纤和网络的突破改变了社会，并为全球互联网奠定了基础。同一个十年也展示了技术突破如何带来经济动荡。 &lt;a href=&quot;https://hackernews.betacat.io/#boom-bubble-bust-the-optical-mania-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36580713&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;此图像中的飞机是真实的吗？&lt;/stitle>; &lt;id>;https://aviation.stackexchange.com/questions/99788/is-the-飞机在此图像中真实&lt;/id>; &lt;更新>;2023-07-05T06:01:35.805474Z&lt;/更新>; &lt;link href=&quot;https://aviation.stackexchange.com/questions/99788/is -the-aircraft-in-this-image-real&quot;/>; &lt;作者>; &lt;名称>;ziofill&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ziofill&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.stack.imgur.com/XYhuz.jpg&quot; style=&quot;width: 220px; height: 126px;&quot; />;&lt;br />;乍一看，它似乎是空客 A320（称为 A320P2F）的货机改装。但仔细观察发动机后，它看起来像 PW1100G，这意味着这是一架空客 A320neo。然而，据我所知，空客从未制造过 A320neo 的货机变体。此外，小翼也有所不同，让我想起了波音 737 MAX 的小翼；我以前从未在 A320 上见过这些小翼。那么这张图片中的飞机是真实的吗？如果是，我在哪里可以找到有关此特定型号的更多信息？ &lt;a href=&quot;https://hackernews.betacat.io/#is-the-aircraft-in-this-image-real&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36595711&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何思考 Rust 中的 `async`/`await`&lt;/stitle>; &lt;id>;http://cliffle.com/blog/async-inversion/&lt; /id>; &lt;更新>;2023-07-05T06:01:35.807323Z&lt;/更新>; &lt;link href=&quot;http://cliffle.com/blog/async-inversion/&quot;/>; &lt;作者>; &lt;名称>;mpweiher&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=mpweiher&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Rust async 和 wait 不应被视为无缝替代方案线程。异步 fn 与普通 Rust fn 不同，需要不同的方法来编写正确的代码。与普通 fn 相比，异步 fn 表示控制反转。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-think-about-async-await-in-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36570321&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为程序员保持领先于生成式 AI 的提示&lt;/stitle>; &lt;id>;https://spectrum.ieee.org/ai-programming&lt;/id>; &lt;更新>;2023-07-04T16:01:35.808164Z&lt;/更新>; &lt;link href=&quot;https://spectrum.ieee.org/ai-programming&quot;/>; &lt;作者>; &lt;名称>;mfiguiere &lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=mfiguiere&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://spectrum.ieee.org/media-库/手在白色计算机键盘计算机代码在图像顶部.jpg？id=34221881&amp;宽度=1200&amp;高度=900&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;人工智能，特别是由大型语言模型 (LLM) 提供支持的生成式人工智能，可能会颠覆许多程序员的生计。但一些专家认为人工智能不会取代人类程序员——至少不会立即取代。 &lt;a href=&quot;https://hackernews.betacat.io/#tips-for-programmers-to-stay-ahead-of-generative-ai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36586248&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;ZFS 2.2.0 (RC)：块克隆合并&lt;/stitle>; &lt;id>;https://github.com/openzfs/zfs/pull /13392&lt;/id>; &lt;更新>;2023-07-04T16:01:35.808986Z&lt;/更新>; &lt;link href=&quot;https://github.com/openzfs/zfs/pull/13392&quot;/>; &lt;作者>; &lt;名称>;turrini&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=turrini&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// opengraph.githubassets.com/16c16fdf75e4cbd3fd44795cb40411d6dbbf9ffae767843b9b8e83862e635d0c/openzfs/zfs/pull/13392&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;块克隆通过创建对数据块的附加引用，无需复制数据本身，即可实现快速手动重复数据删除。它与重复数据删除类似，但需要专用的系统调用来克隆块。块克隆仅对元数据进行操作，并且速度极快。 &lt;a href=&quot;https://hackernews.betacat.io/#zfs-2-2-0-rc-block-cloning-merged&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36588240&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用杂货店物品制作红外冷却涂料[视频]&lt;/stitle>; &lt;id>;https://www.youtube.com/watch?v=KDRnEm -B3AI&lt;/id>; &lt;更新>;2023-07-04T21:01:35.809828Z&lt;/更新>; &lt;link href=&quot;https://www.youtube.com/watch?v=KDRnEm-B3AI&quot;/>; &lt;作者>; &lt;name>;zdw&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;iframe src=&quot;// www.youtube.com/embed/KDRnEm-B3AI&quot;frameborder=&quot;0&quot;allowfullscreenloading=&quot;lazy&quot;>;&lt;/iframe>; &lt;a href=&quot;https://hackernews.betacat.io/#making-infrared-cooling- Paint-from-grocery-store-items-video&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36579995&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;黑暗水域自我妄想：Transair 810 航班坠毁&lt;/stitle>; &lt;id>;https://admiralcloudberg.medium.com/dark-waters-of-self-delusion-the-crash-of-transair-flight-810-a4eeb033bc00 &lt;/id>; &lt;更新>;2023-07-04T19:01:35.810655Z&lt;/更新>; &lt;link href=&quot;https://admiralcloudberg.medium.com/dark-waters-of-self-delusion-the-crash- of-transair-flight-810-a4eeb033bc00&quot;/>; &lt;作者>; &lt;名称>;rwmj&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rwmj&lt;/uri>; &lt;/作者>; &lt;内容类型=“html”>;&lt;img src=“https://miro.medium.com/v2/resize:fit:1358/0*aI51O9Kv2l8oGD8I.jpg”样式=“宽度：220px;高度：135px;&quot; />;&lt;br />;2021 年 7 月 2 日，Transair 810 航班（一架波音 737-200）从檀香山起飞后不久，发动机发生故障。飞行员试图返回机场，但在起飞后失去动力。他们的第二个引擎也是如此。他们成功地将飞机迫降在海中，但坠机事故是由于飞行技术不佳以及沟通和批判性思维崩溃造成的。&lt;a href=&quot;https://hackernews.betacat.io/#dark -waters-of-self-delusion-the-crash-of-transair-flight-810&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item ?id=36590806&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题type=&quot;text&quot;>;显示 HN：具有光线行进和符号距离场的虹彩晶体&lt;/stitle>; &lt;id>;https://varun.ca/ray-march-sdf/&lt;/id>; &lt;更新>;2023-07-04T20 ：01：35.811498Z &lt;/更新>; &lt;link href =“https://varun.ca/ray-march-sdf/”/>; &lt;作者>; &lt;名称>;winkerVSbecks &lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=winkerVSbecks&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://varun.ca/static/ray-march-41bd80ce90cdf1dde6084381abf07d6f.svg&quot;样式=“宽度：220px； height: 142px;&quot; />;&lt;br />;在 demoscene 世界中，有符号距离场 (SDF) 和光线行进用于在单个着色器程序中定义和渲染 3D 场景。这种方法允许使用较小的文件大小并创建很酷的效果效果和复杂形状。本文介绍了如何使用 raymarching 和 SDF 创建虹彩晶体。&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-iridescent-crystal-with-raymarching-and-signed -distance-fields&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36591767&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;太阳超级风暴：互联网末日规划（2021 年） ) [pdf]&lt;/stitle>; &lt;id>;https://www.ics.uci.edu/~sabdujyo/papers/sigcomm21-cme.pdf&lt;/id>; &lt;更新>;2023-07-05T01:01:35.812295Z &lt;/更新>; &lt;link href=&quot;https://www.ics.uci.edu/~sabdujyo/papers/sigcomm21-cme.pdf&quot;/>; &lt;作者>; &lt;name>;joak&lt;/name>; &lt;uri>;https： //news.ycombinator.com/user?id=joak&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;全球互联网崩溃可能会给服务提供商带来巨大损失，并对网络物理系统造成损害。美国一天的互联网中断造成的经济影响估计超过 70 亿美元。互联网面临的最大危险之一是强大的太阳超级风暴，它可能对全球产生影响。 &lt;a href=&quot;https://hackernews.betacat.io/#solar-superstorms-planning-for-an-internet-apocalypse-2021-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36569156&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;圣保罗：一个没有户外广告的城市（2013）&lt;/stitle>; &lt;id>;https://www.amusingplanet.com/2013/ 07/sao-paulo-city-with-no-outdoor.html&lt;/id>; &lt;更新>;2023-07-04T14:01:35.813099Z&lt;/更新>; &lt;link href=&quot;https://www.amusingplanet.com /2013/07/sao-paulo-city-with-no-outdoor.html&quot;/>; &lt;author>; &lt;name>;pmoriarty&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pmoriarty &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://lh3.ggpht.com/-TYoPCASlqVo/UepisNtsvEI/AAAAAAAAqhk/elNkMuvwKDY/sao-paulo-billboard-ban-26。 jpg?imgmax=800&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;2006年，圣保罗通过了一项法律，禁止所有户外广告，包括广告牌和交通广告。为了遵守法律，该市拆除了 15,000 个广告牌并缩小了商店招牌。尽管最初有些担忧，但该禁令是有益的，70% 的居民认为它有益，并揭示了隐藏的城市之美。 &lt;a href=&quot;https://hackernews.betacat.io/#sao-paulo-a-city-with-no-outdoor-advertisements-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36586632&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：SQLite 的 MongoDB 协议&lt;/stitle>; &lt;id>;https://github.com/FerretDB/FerretDB&lt;/id>; &lt;更新>;2023-07-04T19:01:35.813890Z&lt;/updated>; &lt;link href=&quot;https://github.com/FerretDB/FerretDB&quot;/>; &lt;作者>; &lt;name>;aleksi&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=aleksi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/8b8e91f3d8bcd42d63a9767a22fecf6030e641c76cf940c8fa1a4d6c78650300/FerretDB/FerretDB&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;FerretDB 是一个开源代理，它使用 PostgreSQL 或 SQLite 作为数据库引擎将 MongoDB 有线协议查询转换为 SQL。它的目标是成为 MongoDB 6.0+ 的直接替代品，并与 MongoDB 驱动程序和工具兼容。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-mongodb-protocol-for-sqlite&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36590834&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;QNX 架构概述 (1992) [pdf]&lt;/stitle>; &lt;id>;https://cseweb.ucsd.edu/~voelker/cse221/papers/qnx- paper92.pdf&lt;/id>; &lt;更新>;2023-07-04T12:01:35.814693Z&lt;/更新>; &lt;link href=&quot;https://cseweb.ucsd.edu/~voelker/cse221/papers/qnx-paper92. pdf&quot;/>; &lt;author>; &lt;name>;lproven&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lproven&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; QNX 操作系统是一个实时微内核，周围环绕着提供系统服务的可选进程。它可以针对嵌入式系统进行缩小，也可以针对具有数百个处理器的系统进行扩展。微内核提供进程间通信、低层网络通信、进程调度和中断调度。 &lt;a href=&quot;https://hackernews.betacat.io/#an-architectural-overview-of-qnx-1992-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36584692&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;设计一种没有解析器的语言&lt;/stitle>; &lt;id>;https://thunderseethe.dev/posts/type-in​​ference/&lt;/id>; &lt;updated>;2023 -07-04T19:01:35.815565Z&lt;/更新>; &lt;link href=&quot;https://thunderseethe.dev/posts/type-in​​ference/&quot;/>; &lt;作者>; &lt;name>;thunderseethe&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=thunderseethe&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thunderseethe.dev/img/compiler_pipeline.svg&quot; 样式=“宽度：220像素；高度：94像素；” />;&lt;br />;设计一种没有解析器的语言需要从类型推断开始，而不是词法分析和解析。类型是编程语言理论的中心组织原则，它们影响着语言设计的每个其他部分。类型推断的目标是使用 AST 中的上下文信息来推断每个节点的类型。 &lt;a href=&quot;https://hackernews.betacat.io/#designing-a-language-without-a-parser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36591079&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;令牌撤销&lt;/stitle>; &lt;id>;https://www.biscuitsec.org/docs/guides/replication/&lt;/id>; &lt;更新>;2023-07-04T21 ：01：35.816379Z &lt;/更新>; &lt;link href =“https://www.biscuitsec.org/docs/guides/replication/”/>; &lt;作者>; &lt;名称>;geal &lt;/名称>; &lt;uri>;https：/ /news.ycombinator.com/user?id=geal&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;创建令牌后，我们需要一种方法来使其无效，无论是由于其生命周期，例如注销或停用服务，或者因为服务受到威胁。令牌可以带有到期日期，但这还不够，因为泄漏和到期日期之间总会有一些延迟。 &lt;a href=&quot;https://hackernews.betacat.io/#token-replication&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=36591850&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;问HN：你能在这里分享你的个人博客吗？&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=36575081&lt;/id>; &lt;updated>;2023-07-04T15 :01:35.817163Z&lt;/updated>; &lt;link href=&quot;https://news.ycombinator.com/item?id=36575081&quot;/>; &lt;author>; &lt;name>;revskill&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=revskill&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我记录有关计算机和软件的想法和想法。我的博客主要是从盲人的角度来看可访问性等。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-could-you-share-your-personal-blog-here&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36575081&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bottles – 在 Linux 上轻松运行 Windows 软件&lt;/stitle>; &lt;id>;https://usebottles.com/&lt;/id>; &lt;更新>;2023 -07-04T22:01:35.818126Z&lt;/updated>; &lt;link href=&quot;https://usebottles.com/&quot;/>; &lt;作者>; &lt;name>;manaskarekar&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=manaskarekar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://usebottles.com/uploads/bottles-installers.png&quot; style=&quot;width: 220 像素；高度：168 像素；&quot; />;&lt;br />;安装程序是一种将游戏和应用程序安装到瓶子中的简单方法。 Bottles 是免费的开源软件，它使用环境来帮助您在 Linux 上轻松管理和运行 Windows 应用程序。 &lt;a href=&quot;https://hackernews.betacat.io/#bottles-easily-run-windows-software-on-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36592930&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;地球上曾经生活过多少人？&lt;/stitle>; &lt;id>;https://www.prb.org/articles/how-many-people-have -ever-lived-on-earth/&lt;/id>; &lt;更新>;2023-07-05T00:01:35.819030Z&lt;/更新>; &lt;link href=&quot;https://www.prb.org/articles/how-many -people-have-ever-lived-on-earth/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.prb.org/wp-content/themes/prb/assets/img/PRB_logo.svg&quot; style=&quot;width: 220px; height : 75 像素;&quot; />;&lt;br />;消息人士称，截至2022年11月的世界人口估算可从《2022年世界人口数据表》和《世界人口展望：2022年修订版》中获得。曾经生活在地球上的确切人数尚不清楚。 &lt;a href=&quot;https://hackernews.betacat.io/#how-many-people-have-ever-lived-on-earth&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36593206&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LXD 现已纳入 Canonical&lt;/stitle>; &lt;id>;https://linuxcontainers.org/lxd/&lt;/id>; &lt;更新>;2023-07- 04T21:01:35.820875Z&lt;/updated>; &lt;link href=&quot;https://linuxcontainers.org/lxd/&quot;/>; &lt;作者>; &lt;name>;chenrui&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=chenrui&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://linuxcontainers.org/static/img/containers.small.png&quot; style=&quot;width ：220px；高度：204px；” />;&lt;br />;LXD 项目不再是 LinuxContainers 项目的一部分，但现在可以直接在 Canonical 的网站上找到。 Canonical 是 LXD 项目的创建者和主要贡献者，已决定将该项目移至自己的项目集下。 &lt;a href=&quot;https://hackernews.betacat.io/#lxd-is-now-under-canonical&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36592343&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;牙齿矿物质的新分析证实巨齿鲨是温血的&lt;/stitle>; &lt;id>;https://phys.org/news/2023-06-analysis-tooth-minerals- megalodon-shark.html&lt;/id>; &lt;更新>;2023-07-04T17:01:35.821753Z&lt;/更新>; &lt;link href=&quot;https://phys.org/news/2023-06-analysis-tooth-minerals -megalodon-shark.html&quot;/>; &lt;作者>; &lt;名称>;天气灯&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=weatherlight&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/megalodon-was-no-cold.jpg&quot; style=&quot;宽度：220px；高度：146px； ” />;&lt;br />;巨齿鲨是有史以来最大的海洋掠食者，是温血动物，可以调节体温。对牙齿矿物质的新分析表明，巨齿鲨的体温比周围的水高出约 13°F (7°C)。这种温差导致了它的灭绝，并且对于了解大型海洋捕食者在气候变化面前的脆弱性具有重要意义。 &lt;a href=&quot;https://hackernews.betacat.io/#new-analysis-of-tooth-minerals-confirms-megalodon-shark-was-warm-blooded&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36572734&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何在没有框架和大量库的情况下构建网站&lt;/stitle>; &lt;id>;https://www.kodingkitty.com /blog/how-to-build-a-website/&lt;/id>; &lt;更新>;2023-07-04T19:01:35.822694Z&lt;/更新>; &lt;link href=&quot;https://www.kodingkitty.com/blog /how-to-build-a-website/&quot;/>; &lt;author>; &lt;name>;KodingKitty&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=KodingKitty&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.kodingkitty.com/img/koding-kitty-1200x630.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;KodingKitty 团队为他们的网站使用了简单的技术堆栈，不受当前轻量级 Web 开发趋势的影响。他们认为，对于客户来说，简单性通常是比使用复杂的框架和库更好的解决方案。他们选择了不需要数据库或插件的静态网站，并直接用 HTML 编写内容。他们还使用 Jinja 模板来简化重复模式的创建并包含代码块。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-build-a-website-without-frameworks-and-tons-of-libraries&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36591032&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;