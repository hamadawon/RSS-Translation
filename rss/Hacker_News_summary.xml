<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-04T09:58:06.092653Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;保留 Apple 的数据比预期更难&lt;/stitle>; &lt;id>;https://www.aalto.fi/en/news/keeping-your-data-from-apple -比预期更难&lt;/id>; &lt;更新>;2024-04-04T07:57:51.666853Z&lt;/更新>; &lt;link href=&quot;https://www.aalto.fi/en/news/keeping- your-data-from-apple-is-harder-than-expected&quot;/>; &lt;author>; &lt;name>;late&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=late&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.aalto.fi/sites/g/files/flghsv161/files/styles/o_288w_ah_n/public/2024-03/Apple- Privacy-press-english.png?itok=iPgtMXrF&quot; style=&quot;width: 220px; height: 123px;&quot; />;&lt;br />;阿尔托大学的研究显示，苹果的默认应用即使在禁用状态下也会继续收集数据，挑战了该公司的隐私主张。该研究凸显了限制数据访问的复杂性，指令不明确且分散设置，导致用户难以保护自己的隐私。&lt;a href=&quot;https://hackernews.betacat.io/#keeping-your-data-from-apple-is-harder-than-expected&quot; target=&quot;_blank&quot; >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39927657&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我已经构建了一个本地运行的 Perplexity 克隆&lt;/stitle>; &lt;id>;https ://github.com/nilsherzig/LLocalSearch&lt;/id>; &lt;更新>;2024-04-03T21:57:51.668768Z&lt;/更新>; &lt;link href=&quot;https://github.com/nilsherzig/LLocalSearch&quot;/>; &lt;作者>; &lt;名称>;nilsherzig &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nilsherzig&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://private-user-images.githubusercontent.com/72463901/319160147-9f6497aa-8047-4d11-9a12-66aff65d3faa.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..SKEQyfJTjOhL_DVYUwD1aei5oO bRkMH4UxEUFg9dZe0&quot; style=&quot;宽度：220px; height: 235px;&quot; />;&lt;br />;LLocalSearch 是一个独立的搜索引擎，它利用一系列 LLM 代理来处理查询，无需外部 API。它提供透明的流程视图，并且可以通过克隆存储库并运行来轻松设置使用 Docker。&lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-ve-built-a-locally-running-perplexity-clone&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39923404&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;磁盘已满，无法恢复&lt;/stitle>; &lt;id>;https://sixcolors.com/ post/2024/03/a-disk-so-full-it-couldnt-be-restored/&lt;/id>; &lt;更新>;2024-04-04T00:57:51.669595Z&lt;/更新>; &lt;link href=&quot;https: //sixcolors.com/post/2024/03/a-disk-so-full-it-couldnt-be-restored/&quot;/>; &lt;author>; &lt;name>;goranmoomin&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=goranmoomin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/sixcolors.com/wp-content/uploads /2024/03/disk-snapshots-alyx-6c.png?ssl=1&quot; style=&quot;width: 220px; height: 118px;&quot; />;&lt;br />;作者的孩子将 MacBook 的存储空间填满，以致 macOS 无法删除文件，需要完整的系统擦除和 Time Machine 恢复，但遇到了多个问题。尽管使用不同的 macOS 实用程序进行了各种尝试和版本，解决方案是从时间机器备份手动传输文件。&lt;a href=&quot;https://hackernews.betacat.io/#a-disk-so-full-it-couldn-t-be-restored&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39925186&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;整数序列在线百科全书&lt;/stitle>; &lt;id>;https:// /oeis.org/&lt;/id>; &lt;更新>;2024-04-04T02:57:51.669990Z&lt;/更新>; &lt;link href=&quot;https://oeis.org/&quot;/>; &lt;作者>; &lt;名称>;hyperific&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=hyperific&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文提供有关百科全书的信息，并将读者引导至欢迎页面页。它列出了百科全书可用的语言。 &lt;a href=&quot;https://hackernews.betacat.io/#online-encyclopedia-of-integer-sequences&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39925787&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;亨利·达尔格&lt;/stitle>; &lt;id>;https://www.moma.org/artists/28600&lt;/id>; &lt;更新>;2024-04-04T00:57:51.670388Z &lt;/更新>; &lt;link href=&quot;https://www.moma.org/artists/28600&quot;/>; &lt;作者>; &lt;name>;EndXA&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=EndXA&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#henry-darger&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39924574&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Tonal.js：功能音乐理论库&lt;/stitle>; &lt;id>;https://github.com/tonaljs/音调&lt;/id>; &lt;更新>;2024-04-03T19:57:51.670790Z&lt;/更新>; &lt;link href=&quot;https://github.com/tonaljs/tonal&quot;/>; &lt;作者>; &lt;名称>;brianzelip&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=brianzelip&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com /6184b627c66e00688f2f01a238a191db46244bdd6020efcfb8a4d82eacb54d84/tonaljs/tonal&quot; style=&quot;宽度：220px; height: 110px;&quot; />;&lt;br />;Tonal 是一个函数式音乐理论库，用于在不改变数据的情况下操纵音乐元素。它提供由数据结构表示的音符、音程、和弦、音阶和调的纯函数。 &lt;a href =&quot;https://hackernews.betacat.io/#tonal-js-function-music-theory-lib&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=39904189&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;MONSter 6502：经典 MOS 6502 的晶体管级复制品&lt;/stitle>; &lt;id>;https://monster6502.com/&lt;/id>; &lt;更新>;2024-04- 03T19:57:51.671233Z&lt;/updated>; &lt;link href=&quot;https://monster6502.com/&quot;/>; &lt;作者>; &lt;name>;harporoeder&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=harporoeder&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.evilmadscientist.com/sites/6502/images/B1_1800x1350.jpg&quot; style=&quot;width ：220像素；高度：165px;&quot; />;&lt;br />;MONSter 6502 项目创建了经典 6502 微处理器的大型晶体管规模复制品，用于 Apple ][ 等标志性系统。它具有 4,700 多个组件，旨在实现中级2023 年公开发布，尽管运行速度比原来慢。&lt;a href=&quot;https://hackernews.betacat.io/#monster-6502-a-working-transistor-scale-replica-of-the-classic-mos-6502 &quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39921964&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/ content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Logik：零 ASIC 的开源 FPGA 工具链&lt;/stitle>; &lt;id>;https://github.com/zeroasiccorp/logik&lt;/id>; &lt;更新>;2024-04-03T20:57:51.671630Z&lt;/更新>; &lt;link href=&quot;https://github.com/zeroasiccorp/ logik&quot;/>; &lt;作者>; &lt;名称>;jasondavies&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt; img src =“https://opengraph.githubassets.com/3e642aea1d8157743d6845ded1abddc756282aff4f16cc1fa3c54396f9decef4/zeroasiccorp/logik”样式=“宽度：220px; height: 110px;&quot; />;&lt;br />;Logik 自动化了从 RTL 到比特流的 FPGA 开发过程，并且可以通过 Python API 访问。它可以通过 pip 安装，支持常见的 FPGA 功能，并且可以在本地或通过 Docker 运行。&lt;a href=&quot;https://hackernews.betacat.io/#logik-open-source-fpga-toolchain-by-zero-asic&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39922631&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们的工具塑造我们自己&lt;/stitle>; &lt;id>;https://aeon.co/essays/bernard-stieglers-philosophy-on-how-technology-shapes -我们的世界&lt;/id>; &lt;更新>;2024-04-04T00:57:51.672409Z&lt;/更新>; &lt;link href=&quot;https://aeon.co/essays/bernard-stieglers-philosophy-on-how- technology-shapes-our-world&quot;/>; &lt;作者>; &lt;名称>;lermontov&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=lermontov&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://images.aeonmedia.co/images/832a2200-3ca4-48c5-8dcb-0c8688eb921b/essay-v2-final-gettyimages-1997669611.jpg?width=3840&amp;quality=75&amp;format=自动“样式=”宽度：220px; height: 138px;&quot; />;&lt;br />;数字技术与日常生活深深交织在一起，影响着政治和战争，而法国哲学家伯纳德·斯蒂格勒认为，理解我们的世界需要对“技术”进行更深入的探索，技术是人类存在的本质，我们对工具的使用。斯蒂格勒从革命青年到狱中哲学家的人生历程，使他挑战现有的哲学，并强调技术在塑造人类经验和记忆方面的基本作用。&lt;a href=&quot;https://hackernews. betacat.io/#our-tools-shape-our-selves&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39902660&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;让旧果园焕然一新&lt;/stitle>; &lt;id>;https://modernfarmer.com/2024/04/making-old-orchards-new-again/&lt;/id>; &lt;updated>;2024-04-03T19:57:51.672799 Z&lt;/updated>; &lt;link href=&quot;https://modernfarmer.com/2024/04/making-old-orchards-new-again/&quot;/>; &lt;作者>; &lt;name>;RickJWagner&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=RickJWagner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://modernfarmer.com/wp-content/uploads/2024 /03/apples-MORP-1200x896.webp&quot; style=&quot;宽度：220px;高度：165px;&quot; />;&lt;br />;烈性苹果酒的复兴激发了人们对修复古代宅基地上的百年苹果树的兴趣，组织帮助识别和恢复这些树木。这些树木通常处于野生状态，仍然可以产出丰富的农作物，并作为与过去的活生生的联系，其中一些是只有通过努力才能发现的稀有品种。&lt;a href=&quot;https://hackernews.betacat.io/#making-old-orchards-new-再次&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39916151&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt; /content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Strudel：一个实时编码平台，用于在中编写动态音乐片段浏览器&lt;/stitle>; &lt;id>;https://strudel.cc&lt;/id>; &lt;更新>;2024-04-03T22:57:51.673194Z&lt;/更新>; &lt;link href=&quot;https://strudel.cc&quot;/ >; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;果馅卷是一种音乐浏览器的实时编码环境，将 TidalCycles 模式语言移植到 JavaScript。 &lt;a href=&quot;https://hackernews.betacat.io/#strudel-a-live-coding-platform-to-write-dynamic-music-pieces-in-the-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39924210&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;约翰·巴特去世&lt;/stitle>; &lt;id>;https://www.nytimes.com/2024/ 04/02/books/john-barth-dead.html&lt;/id>; &lt;更新>;2024-04-03T20:57:51.673939Z&lt;/更新>; &lt;link href=&quot;https://www.nytimes.com/2024 /04/02/books/john-barth-dead.html&quot;/>; &lt;author>; &lt;name>;Jun8&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Jun8&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static01.nyt.com/images/2024/04/04/obituaries/00barth-toppix-print2/00barth-toppix-articleLarge.jpg ?quality=75&amp;auto=webp&amp;disable=upscale&quot; style=&quot;宽度：220px；高度：267px；&quot; />;&lt;br />;约翰·巴斯 (John Barth) 是一位富有创新精神的作家，以《大麻因素》(The Sot-Weed Factor) 等小说而闻名，享年 93 岁。他的作品经常与品钦和纳博科夫相比较，挑战了文学规范，并帮助定义了后现代主义。 &lt;a href=&quot;https://hackernews.betacat.io/#john-barth-has-died&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39912448&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;古代世界中的子例程调用，在计算机拥有堆栈或堆之前&lt;/stitle>; &lt;id>;https://devblogs.microsoft.com/oldnewthing/20240401-00/?p=109599&lt; /id>; &lt;更新>;2024-04-03T14:57:51.674329Z&lt;/更新>; &lt;link href=&quot;https://devblogs.microsoft.com/oldnewthing/20240401-00/?p=109599&quot;/>; &lt;作者>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //devblogs.microsoft.com/oldnewthing/wp-content/uploads/sites/38/2019/02/ShowCover.jpg&quot; style=&quot;width: 220px; height: 290px;&quot; />;&lt;br />;早期的计算机缺乏动态内存分配，而是使用固定大小的缓冲区；通过利用全局变量作为参数和返回地址，在没有堆栈的情况下调用函数。优化包括使用寄存器和特定指令来处理函数调用和参数。 &lt;a href=&quot;https://hackernews.betacat.io/#subroutine-calls-in-the-ancient-world-before-computers-had-stacks-or-heaps&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39913616&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Terraform 生产碳中性天然气&lt;/stitle>; &lt;id>;https://terraformindustries.wordpress.com/2024/ 04/01/terraform-makes-carbon-neutral-natural-gas/&lt;/id>; &lt;更新>;2024-04-03T19:57:51.675133Z&lt;/更新>; &lt;link href=&quot;https://terraformindustries.wordpress. com/2024/04/01/terraform-makes-carbon-neutral-natural-gas/&quot;/>; &lt;作者>; &lt;名称>;jseliger&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =jseliger&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://terraformindustries.files.wordpress.com/2024/03/image-1.png?w=1243&amp;h=768&amp;crop =1&quot; style=&quot;宽度：220px；高度：136px；&quot; />;&lt;br />;Terraform 成功利用阳光和空气制造合成天然气，标志着经济实惠、环保能源的里程碑。他们的创新技术降低了生产成本，提供了化石燃料的可再生替代品。 &lt;a href=&quot;https://hackernews.betacat.io/#terraform-makes-carbon-neutral-natural-gas&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39922006&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GCC 14 中静态分析的改进&lt;/stitle>; &lt;id>;https://developers.redhat.com/articles/2024/04/03/improvements-static-analysis -gcc-14-compiler&lt;/id>; &lt;更新>;2024-04-03T13:57:51.675514Z&lt;/更新>; &lt;link href=&quot;https://developers.redhat.com/articles/2024/04/03/ Improvements-static-analysis-gcc-14-compiler&quot;/>; &lt;author>; &lt;name>;dmalcolm&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=dmalcolm&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://developers.redhat.com/sites/default/files/styles/article_feature/public/blog/2021/04/gcc_1x.png?itok=84hjXvFZ&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;本文详细介绍了 GCC 14 中的改进，例如针对无限循环的新警告以及针对缓冲区溢出的可视化图表增强的静态分析。它还提到默认启用污点分析来跟踪不安全的输入。 &lt;a href=&quot;https://hackernews.betacat.io/#improvements-to-static-analysis-in-gcc-14&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39917509&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Qiling：真正的可仪器化二进制仿真框架&lt;/stitle>; &lt;id>;https://github.com/qilingframework/qiling&lt;/id>; &lt;updated>;2024- 04-03T19:57:51.676292Z&lt;/updated>; &lt;link href=&quot;https://github.com/qilingframework/qiling&quot;/>; &lt;作者>; &lt;name>;matthberg&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=matthberg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/qilingframework/qiling/master/docs/qiling2_logo_small .png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文讨论了 Qiling，这是一个基于 Unicorn 和 Qemu 等开源模拟器构建的 Python 框架，提供操作系统模拟、动态分析工具和跨平台支持等高级功能。与仅模拟 CPU 指令的 Unicorn 不同，Qiling 处理系统调用、I/O 和可执行格式，并且与 Qe​​mu 用户模式不同，它支持更多平台并允许动态代码热修补。 &lt;a href=&quot;https://hackernews.betacat.io/#qiling-a-true-instrumentable-binary-emulation-framework&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39902576&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;展示 HN：Plandex – 用于复杂任务的 AI 编码引擎&lt;/stitle>; &lt;id>;https://github.com/plandex-ai/plandex&lt;/id >; &lt;更新>;2024-04-03T15:57:51.677076Z&lt;/更新>; &lt;link href=&quot;https://github.com/plandex-ai/plandex&quot;/>; &lt;作者>; &lt;名称>;danenania&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=danenania&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/plandex -ai/plandex/main/images/plandex-intro-vimeo.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;Plandex 通过将复杂的多文件任务分解为子任务、提供版本控制和沙盒更改以在实施前进行安全审查，从而实现自动化。它支持各种操作系统，依赖OpenAI API，并将包含更多模型支持，重点是提高软件开发效率。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-plandex-an-ai-coding-engine-for-complex-tasks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=39918500&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Palia 的软件架构&lt;/stitle>; &lt;id>;https://www.singularity6.com/news/software-architecture-of -palia&lt;/id>; &lt;更新>;2024-04-04T00:57:51.677462Z&lt;/更新>; &lt;link href=&quot;https://www.singularity6.com/news/software-architecture-of-palia&quot;/>; &lt;作者>; &lt;名称>;jaaron&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jaaron&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://images.ctfassets.net/53fvbalrjg68/4wuaK3QQxmN57TMrRLSEYg/d29b009ad83ec51656a48879c9e26ebe/Workbench.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;Singularity6 的 Palia 是一款免费舒适的多人游戏，专注于社交互动和持久世界，使用虚幻引擎构建，具有强大的功能。该团队强调了经济高效地扩展和运营此类游戏的挑战，分享了有关服务器管理、内存泄漏以及使用 Rust 实现安全高效的后端服务的见解。 &lt;a href=&quot;https://hackernews.betacat.io/#the-software-architecture-of-palia&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39925129&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;将空壳公司与其秘密所有者联系起来的提示&lt;/stitle>; &lt;id>;https://gijn.org/stories/tracking-shell-companies-secret-owners/&lt;/id >; &lt;更新>;2024-04-03T16:57:51.677843Z&lt;/更新>; &lt;link href=&quot;https://gijn.org/stories/tracking-shell-companies-secret-owners/&quot;/>; &lt;作者>; &lt;名称>;chippy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=chippy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// gijn.org/wp-content/uploads/2024/04/shutterstock_563679472-771x538.jpg&quot; style=&quot;宽度：220px；高度：154px；&quot; />;&lt;br />;调查记者利用 ICIJ 和 OCCRP 等先进技术和网络来揭露空壳公司的真正所有者。 Karrie Kehoe 在 NICAR 峰会上分享了追踪这些难以捉摸的所有者及其资产的技巧。 &lt;a href=&quot;https://hackernews.betacat.io/#tips-for-linking-shell-companies-to-their-secret-owners&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39919401&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新海底地图仅完成 25%，还有 6 年时间&lt;/stitle>; &lt;id>;https://eos.org/articles/new -seafloor-map-only-25-done-with-6-years-to-go&lt;/id>; &lt;更新>;2024-04-03T13:57:51.678232Z&lt;/更新>; &lt;link href=&quot;https:// eos.org/articles/new-seafloor-map-only-25-done-with-6-years-to-go&quot;/>; &lt;作者>; &lt;名称>;Brajeshwar&lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=Brajeshwar&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/eos.org/wp-content/uploads/ 2021/09/Eos_Black_logo.png?fit=1056%2C540&amp;ssl=1&quot; style=&quot;宽度：220px；高度：113px；&quot; />;&lt;br />;Seabed 2030 的目标是到 2030 年绘制海底地图，但目前只完成了四分之一，面临着重大挑战。最近的发现，例如四个海山，验证了卫星数据在这个雄心勃勃的项目中的使用。 &lt;a href=&quot;https://hackernews.betacat.io/#new-seafloor-map-only-25-done-with-6-years-to-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=39917547&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;藏红花：最昂贵的香料&lt;/stitle>; &lt;id>;https://daily.jstor.org/saffron-the- Story-of-the-worlds-most-expense-spice/&lt;/id>; &lt;更新>;2024-04-03T14:57:51.678624Z&lt;/更新>; &lt;link href=&quot;https://daily.jstor.org/ saffron-the-story-of-the-worlds-most-expense-spice/&quot;/>; &lt;author>; &lt;name>;bookofjoe&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bookofjoe &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://daily.jstor.org/wp-content/uploads/2024/03/jstor_daily_patreon_membership_hat_mobile_800.jpg&quot; style=&quot;width: 220 像素；高度：75 像素；&quot; />;&lt;br />;藏红花仍然是一种高价值的香料，因为它是劳动密集型的手工采摘过程，一公斤藏红花需要多达 200,000 朵花。尽管成本高昂，但它因其独特的风味、药用特性和历史意义而受到追捧。 &lt;a href=&quot;https://hackernews.betacat.io/#saffron-the-most-expense-spice&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39917830&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;五次曲线、二十面体和椭圆曲线 [pdf]&lt;/stitle>; &lt;id>;https://www.ams.org/journals/notices/202404/rnoti-p444。 pdf&lt;/id>; &lt;更新>;2024-04-03T16:57:51.679041Z&lt;/更新>; &lt;link href=&quot;https://www.ams.org/journals/notices/202404/rnoti-p444.pdf&quot;/ >; &lt;author>; &lt;name>;mathgenius&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mathgenius&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了法拉利的四次多项式的公式和伽罗瓦可解群理论，将五次多项式的根与二十面体和椭圆曲线联系起来。它介绍了一种使用克莱因作品中未找到的现代工具来计算五次根的方法。 &lt;a href=&quot;https://hackernews.betacat.io/#the-quintic-the-icosahedron-and-elliptic-curves-pdf&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39919491&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Jpegli：新的 JPEG 编码库&lt;/stitle>; &lt;id>;https://opensource.googleblog.com/2024/04/introducing-jpegli-new -jpeg-coding-library.html&lt;/id>; &lt;更新>;2024-04-03T17:57:51.679429Z&lt;/更新>; &lt;link href=&quot;https://opensource.googleblog.com/2024/04/introducing- jpegli-new-jpeg-coding-library.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/ uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiDa_aWprUuwxdb9QLGHWUyUy_kkJfNhH4uj-04R3BCpOBk4TcmDCRQLYyWFXu3VqVV9m41R63WlpeGTPzuu1rI6D6LmdTcS LY5mgpwXud-8S2G9b8_CFJvBCux3YZ0QJa7MwCZXIEyb1naPhbN8Mpx2xwMyKZuBK9pQYCizBO_Xf6FzYekhd34EvjWsjk/s1600/OS-用于网络优化的新库-社交%20%281%29%20%281%29.png&quot; style=&quot;宽度：220px; height: 111px;&quot; />;&lt;br />;Jpegli作为新的JPEG编码库被引入，它增强了图像质量和压缩率，压缩率提高了35%。它通过先进的技术实现了这一点，同时确保与传统JPEG标准和观众。&lt;a href=&quot;https://hackernews.betacat.io/#jpegli-a-new-jpeg-coding-library&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39920644&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;