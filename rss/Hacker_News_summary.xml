<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-05-01T17:53:29.213544Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：谁在招聘？ （2024 年 5 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40224213&lt;/id>; &lt;更新>;2024-05-01T15:52:59.501065Z&lt;/更新>; &lt;link href =&quot;https://news.ycombinator.com/item?id=40224213&quot;/>; &lt;作者>; &lt;名称>;whoishiring&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=whoishiring&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;招聘信息针对不同公司的不同职位。以下是职位及其要求的摘要： 1. AuxHealth：远程，美国 - 全职 - 后端 SDE I 和 II 2. Spacelift：远程，欧洲 - 全职 - 高级软件工程师 3. Happy Scribe：现场和混合（西班牙巴塞罗那） - 工程师、设计师、机器学习 4. 背面：全职 - 高级全栈工程师 5. 啊哈！：远程 - Javascript 和几何专家？帮助我们构建基于 HTML 画布的白板和模型工具。 6. Trunk Tools：工程师 - 全职 - 美国远程或纽约现场 7. Solar Monkey：前端工程师 - 远程或现场 - 荷兰海牙 8. Quatt.io：荷兰阿姆斯特丹 - 全职 - 混合/现场 9. 康体佳：康体佳由 Google Research 的一位杰出工程师于 2023 年 4 月创立，旨在为世界上的每个人提供一个代理，利用他们的实时环境和个人记忆来提供可操作的及时帮助。 10. Body Rocket：英国布莱顿 - 全职 - 对自行车感兴趣，熟悉 Linux、Python、C、电子学并了解电路图？ 11. Paddle：伦敦/英国 - 全职 - 支付 Paddle 通过我们的一体化支付基础设施自动帮助全球数字产品公司运营和发展。 12. SmarterDx：150-230k + 股权 + 福利 - 远程（仅限美国） - 多种角色 - 一家早期健康科技公司，利用人工智能改善医院收入周期。 13. Owner.com：远程 - 全职 - Owner.com 的使命是通过公平竞争环境来帮助当地企业主生存 - 为他们提供一体化解决方案，以夺回对其业务的控制权并真正拥有自己的业务在线存在。 14. MixRank：软件工程师 - 100% 远程（全球） - 全职 - MixRank 每月处理来自网络爬行的 PB 数据。这些职位发布针对不同公司的各种职位，从软件工程到产品管理。每个职位的要求各不相同，但大多数都需要软件开发经验，重点是 Python、Rust 和 SQL 等特定技术。有些职位还需要机器学习或数据分析等特定领域的经验。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-is-hiring-may-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40224213&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新发现表明古代火星上存在类似地球的环境&lt;/stitle>; &lt;id>;https://discover.lanl.gov/news/0501-ancient- mars/&lt;/id>; &lt;更新>;2024-05-01T14:52:59.503002Z&lt;/更新>; &lt;link href=&quot;https://discover.lanl.gov/news/0501-ancient-mars/&quot;/>; &lt;作者>; &lt;name>;geox&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=geox&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;研究人员使用 NASA 的好奇号探测器发现了火星盖尔陨石坑的湖床岩石中锰含量很高，表明存在河流、三角洲或古老湖泊的海岸线。结果表明，火星车探测到的沉积岩是沙子、淤泥和泥浆的混合物，其中沙岩的孔隙更多，更容易地下水渗透。研究小组正在研究锰如何在这些沙子中富集，以及什么氧化剂可能导致锰在岩石中沉淀。研究结果表明，这些古老岩石所揭示的盖尔湖环境为了解火星上潜在的宜居环境提供了一个窗口。 &lt;a href=&quot;https://hackernews.betacat.io/#new-findings-point-to-an-earth-like-environment-on-ancient-mars&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40223457&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;柯尔莫哥洛夫-阿诺德网络&lt;/stitle>; &lt;id>;https://github.com/KindXiaoming/pykan&lt;/id>; &lt;更新>;2024-05-01T03:52:59.503445Z&lt;/更新>; &lt;link href=&quot;https://github.com/KindXiaoming/pykan&quot;/>; &lt;作者>; &lt;name>;sumo43&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=sumo43&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images.githubusercontent.com/23551623 /326218913-a2d2d225-b4d2-4c1e-823e-bc45c7ea96f9.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..BceqvYYadae7DKLY5KDXqNcDpNIQO9JcLRR8JQ-5rec&quot; style=&quot;宽度: 2 20 像素；高度：123 像素；” />;&lt;br />;论文“KA​​N：Kolmogorov-Arnold Networks”提出了一种有前途的多层感知器 (MLP) 替代方案，称为 Kolmogorov-Arnold Networks (KAN)。 KAN 具有强大的数学基础，并且基于 Kolmogorov-Arnold 表示定理。 KAN 和 MLP 是双重的，KAN 的边缘激活函数和 MLP 的节点激活函数。 KAN 在模型准确性和可解释性方面都优于 MLP。与 MLP 相比，KAN 具有更快的缩放速度和更高的精度，并且参数更少。它们可以直观地可视化，并提供 MLP 无法提供的可解释性和交互性。该论文提供了可在不到一天的时间内在单个 CPU 上运行的示例。针对 PDE 训练 KAN 的成本最高，在单个 CPU 上可能需要数小时到数天的时间。该论文使用 CPU 来训练模型，因为它们对 MLP 和 KAN 进行了参数扫描。该论文表明 GPU 可以用于更大的任务。 &lt;a href=&quot;https://hackernews.betacat.io/#kolmogorov-arnold-networks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40219205&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;带回家评估业务&lt;/stitle>; &lt;id>;https://www.careerfair.io/takehome-assessments&lt;/id>; &lt;更新>;2024-05-01T13:52:59.503865Z&lt; /updated>; &lt;link href=&quot;https://www.careerfair.io/takehome-assessments&quot;/>; &lt;作者>; &lt;name>;shsachdev&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=shsachdev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.careerfair.io/the_hustle_logo.png&quot; style=&quot;width: 220px; height: 221px;&quot; />;&lt;br />;本文讨论了作者进行带回家评估的经验，这些评估是分配给求职者在自己的时间完成的作业。作者指出，带回家的评估在科技行业越来越受欢迎，它们可以成为公司评估候选人技能和职业道德的好方法。本文还讨论了不同类型的实际评估，包括编码挑战、全栈 Web 应用程序和前端开发。作者指出，带回家的评估可能很耗时，但它们也可以提供有关候选人技能和工作风格的宝贵信息。本文还讨论了公司可以通过不同方式补偿候选人完成实测评估，包括金钱补偿和项目工作机会。总的来说，文章建议带回家的评估可以成为评估求职者的有用工具，但它们应该与其他评估方法结合使用。 &lt;a href=&quot;https://hackernews.betacat.io/#the-business-of-takehome-assessments&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40200397&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;隐形缝合：通过深度修复生成平滑的 3D 场景&lt;/stitle>; &lt;id>;https://research.paulengstler.com/invisible-stitch/&lt;/id>; &lt;更新>;2024 -05-01T10：52：59.504673Z &lt;/更新>; &lt;link href =“https://research.paulengstler.com/invisible-stitch/”/>; &lt;作者>; &lt;名称>; jasondavies &lt;/名称>; &lt;uri>; https ://news.ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://research.paulengstler.com/invisible-stitch/images /paper_projection_figure_stacked.jpg&quot; style=&quot;宽度: 220px; 高度: 147px;&quot; />;&lt;br />;本文介绍了一种深度补全网络，该网络可以通过将新的幻觉区域无缝集成到现有的场景表示中来生成平滑的 3D 场景。深度完成网络通过以图像和已知区域的深度为条件来学习修复掩模深度图区域。作者还提出了一种新的场景一致性评估方法来衡量用于构建场景的深度预测的几何一致性和质量。在现实世界和真实感环境中，修复模型产生的预测比现有方法更忠实于真实情况。 &lt;a href=&quot;https://hackernews.betacat.io/#invisible-stitch-generate-smooth-3d-scenes-with-depth-inpainting&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;询问 HN：谁想被雇用？ （2024 年 5 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=40224210&lt;/id>; &lt;更新>;2024-05-01T15:52:59.505494Z&lt;/更新>; &lt;link href =&quot;https://news.ycombinator.com/item?id=40224210&quot;/>; &lt;作者>; &lt;名称>;whoishiring&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=whoishiring&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这是来自各个平台的职位发布的集合，全部与软件工程职位相关。这些职位涵盖了广泛的技术和经验水平，从入门级职位到具有丰富经验的高级职位。一些帖子还提到了候选人过去工作过的特定公司或项目。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-wants-to-be-hired-may-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40224210&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们是模块了吗？&lt;/stitle>; &lt;id>;https://arewemodulesyet.org/&lt;/id>; &lt;updated>;2024-05- 01T15:52:59.505892Z&lt;/updated>; &lt;link href=&quot;https://arewemodulesyet.org/&quot;/>; &lt;作者>; &lt;name>;dureuill&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=dureuill&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arewemodulesyet.org/images/cpp_needs_you.webp&quot; style=&quot;宽度：220px；高度：195px ;” />;&lt;br />; &lt;a href=&quot;https://hackernews.betacat.io/#are-we-modules-yet&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40224578&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Google 解雇了数百名“核心”员工&lt;/stitle>; &lt;id>;https://www.cnbc.com/2024/05/01/google-cuts -hundreds-of-core-workers-moves-jobs-to-india-mexico.html&lt;/id>; &lt;更新>;2024-05-01T17:36:59.506294Z&lt;/更新>; &lt;link href=&quot;https:// www.cnbc.com/2024/05/01/google-cuts-hundreds-of-core-workers-moves-jobs-to-india-mexico.html&quot;/>; &lt;作者>; &lt;名称>;贝尔特&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://image.cnbcfm.com/api/ v1/image/107407857-1714433392MM-F-042924-short.jpg?v=1714433391&amp;w=750&amp;h=422&amp;vtcrop=y&quot; style=&quot;宽度：220px 高度：124px;&quot; />;&lt;br />;Google 在重组中裁掉了至少 200 名核心团队员工，其中包括将部分职位转移到印度和墨西哥。核心部门负责构建公司旗舰产品背后的技术基础并保护用户的在线安全。被裁减的职位中至少有 50 个是该公司位于加利福尼亚州桑尼维尔市的办公室的工程部门。此次最新的裁员正值该公司实现 2022 年初以来最快的增长率，同时利润率也在提高。此次重组包括治理和受保护数据小组，该小组将成为该公司面临的监管挑战的核心，特别是在全球立法者更加关注人工智能发展的情况下。谷歌确认了核心重组和裁员，发言人告诉 CNBC，员工将能够申请谷歌内部的空缺职位并获得再就业服务。 &lt;a href=&quot;https://hackernews.betacat.io/#google-lays-off-hundreds-of-core-employees&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40226529&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;500 字节图像：俳句矢量图标格式 (2016)&lt;/stitle>; &lt;id>;http://blog.leahhanson.us/post/recursecenter2016/haiku_icons。 html&lt;/id>; &lt;更新>;2024-05-01T10:52:59.506715Z&lt;/更新>; &lt;link href=&quot;http://blog.leahhanson.us/post/recursecenter2016/haiku_icons.html&quot;/>; &lt;作者>; &lt;name>;smartmic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=smartmic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http:// /blog.leahhanson.us/images/HVIF/FileSizes.png&quot; style=&quot;宽度：220px 高度：117px；&quot; />;&lt;br />;俳句矢量图标格式 (HVIF) 是一种用于存储俳句操作系统图标的文件格式。它被设计得小巧而高效，重点关注抽象的、象征性的图标。与位图格式不同，HVIF 使用矢量图形来表示图标，这样可以轻松调整大小而不会损失质量。文件格式基于二进制格式，旨在易于解析和理解。它用于存储俳句中的桌面、菜单和其他应用程序的图标。 &lt;a href=&quot;https://hackernews.betacat.io/#500-byte-images-the-haiku-vector-icon-format-2016&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40196333&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 CSS 网格打印音乐&lt;/stitle>; &lt;id>;https://cruncher.ch/blog/printing-music-with-css-grid /&lt;/id>; &lt;更新>;2024-04-30T20:52:59.507113Z&lt;/更新>; &lt;link href=&quot;https://cruncher.ch/blog/printing-music-with-css-grid/&quot;/>; &lt;作者>; &lt;名称>;speckx &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=speckx&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot; https://cruncher.ch/static/blog/printing-music/images/template-rows.png&quot; style=&quot;width: 220px; height: 167px;&quot; />;&lt;br />;本文介绍了一种使用 CSS 网格在网络上呈现乐谱的新方法。作者为网格定义了两个轴：垂直轴，由五线谱（五线谱）定义，具有固定大小的网格行；水平轴，由时间线定义，具有可变的列数。五线谱由名为“.stave”的类定义，并具有固定大小的网格行，其名称基于音高。时间线由名为“.time”的类定义，并且具有基于拍号的可变数量的列。作者还定义了一个名为“.note”的类来表示各个注释，并使用数据属性将元素映射到特定的网格列和行。本文还讨论了在网络上呈现乐谱的一些挑战，例如处理节奏和跨浏览器兼容性。 &lt;a href=&quot;https://hackernews.betacat.io/#printing-music-with-css-grid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40216057&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;激光光盘&lt;/stitle>; &lt;id>;https://www.abortretry.fail/p/the-laserdisc&lt;/id>; &lt;更新>;2024-05-01T12:52： 59.508311Z&lt;/updated>; &lt;link href=&quot;https://www.abortretry.fail/p/the-laserdisc&quot;/>; &lt;作者>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good ,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fca1e9029-5455-4606-8ebb-8c64a446a9e4_631x326.png&quot; style=&quot;宽度: 220px 高度: 114px; ” />;&lt;br />;David Paul Gregg 是一位美国发明家和工程师，为光学视频和音频存储的发展做出了重大贡献。他于 1923 年 7 月 1 日出生于加利福尼亚州洛杉矶，于 1997 年 10 月 1 日去世于加利福尼亚州托伦斯。 Gregg 在光存储领域的工作始于 20 世纪 50 年代，当时他在西屋研发中心工作。后来他在 Mincom 工作，开发了一种使用激光在旋转磁盘上存储和检索数据的系统。该系统后来获得专利并被称为 VIDEODISK。 20 世纪 60 年代，Gregg 曾在 IBM 工作，后来又在飞利浦电子公司工作，继续他的光存储研究。他还参与了第一台商用激光光盘播放机的开发，该播放机由飞利浦于 1972 年推出。Gregg 在光存储领域的工作对视频光盘行业的发展产生了重大影响。他的专利和发明为现代激光光盘系统的发展奠定了基础，该系统至今仍用于存储和播放视频和音频内容。 &lt;a href=&quot;https://hackernews.betacat.io/#the-laserdisc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40222175&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;Show HN：我为自由职业者和承包商构建了一个极其简单的发票&lt;/stitle>; &lt;id>;https://onigiri.one/&lt;/id>; &lt;updated>;2024-05-01T08:52： 59.508705Z&lt;/updated>; &lt;link href=&quot;https://onigiri.one/&quot;/>; &lt;作者>; &lt;name>;kimelnick&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id= kimelnick&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://framerusercontent.com/images/Xr9GzCXTqDtgIuRu2j5wUulAJXQ.png?scale-down-to=512&quot; style=&quot;width: 220px高度：247px；” />;&lt;br />;Onigiri是由自由职业者Nick自己创建的自由职业者管理平台。它旨在通过提供专注于独立制作原则的定制解决方案来增强自由职业者的体验。 Onigiri 提供客户跟踪、联系人管理、发票和任务管理等功能，所有这些功能都是为了让自由职业者的生活更轻松。尼克热衷于打造真正的东西并为自由职业社区产生积极影响。他相信 Onigiri 是他个人对自由生活的赌注，并全力以赴确保每个自由职业者都能享受到最好的体验。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-ve-build-a-stupidly-simple-invoicing-for-freelancers-and-contractors&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40220699&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;约束理论&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Theory_of_constraints &lt;/id>; &lt;更新>;2024-05-01T12:52:59.509101Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Theory_of_constraints&quot;/>; &lt;作者>; &lt;名称>;vegetablepotpie&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=vegetablepotpie&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;约束理论（TOC）是一种管理哲学，重点关注识别并消除阻碍系统实现其目标的限制因素。它基于这样一个前提：组织可以通过三种衡量标准的变化来衡量和控制：吞吐量、运营费用和库存。商业组织的目标是现在和将来赚更多的钱，其衡量标准是通过吞吐量核算来衡量的，即吞吐量、库存和运营费用。这五个重点步骤旨在确保持续改进工作以组织在持续改进过程 (POOGI) 中的约束为中心。约束理论基于以下前提：面向目标的系统的目标实现率（即系统的吞吐量）至少受到一个约束的限制。归谬法的论点如下：如果没有任何因素阻止系统实现更高的吞吐量（即单位时间内更多的目标单元），那么它的吞吐量将是无限的——这在现实系统中是不可能的。商业组织的目标是现在和将来赚更多的钱，其衡量标准是通过吞吐量核算来衡量的，即吞吐量、库存和运营费用。这五个重点步骤旨在确保持续改进工作以组织在持续改进过程 (POOGI) 中的约束为中心。在 TOC 文献中，这称为持续改进过程 (POOGI)。约束是阻止系统实现其目标的任何事物。约束的表现方式有很多种，但 TOC 的核心原则是不存在数十或数百个约束。在任何给定系统中至少有一个，但最多只有几个。约束可以是系统内部的或外部的。当市场对系统的要求超过其所能提供的水平时，内部约束就很明显。如果是这种情况，那么组织的重点应该是发现该约束并遵循五个重点步骤来打开它（并可能消除它）。当系统的生产量超过市场的承受能力时，就会出现外部约束。如果是这种情况，那么组织应该关注为其产品或服务创造更多需求的机制。设备：设备当前的使用方式限制了系统生产更多适销商品/服务的能力。人员：缺乏熟练人员限制了系统。人们所持有的心理模型可能会导致行为成为一种约束。约束理论中的约束概念与数学优化中的约束类似，但又有所不同。在TOC中，约束被用作系统管理的聚焦机制。在优化中，将约束写入数学表达式中以限制解的范围（X不能大于5）。请注意：组织在设备、人员、政策等方面存在许多问题（故障只是故障，并不是 TOC 概念真正意义上的约束）。约束是阻止组织获得更多吞吐量（通常是通过销售获得收入）的限制因素，即使没有出现任何问题。如果约束的吞吐能力提高到不再是系统的限制因素的程度，则称为“打破”该约束。现在，限制因素是系统的其他部分，或者可能是系统外部的（外部约束）。不要将其与故障混淆。缓冲区在整个约束理论中得到使用。它们通常是五个聚焦步骤的​​利用和从属步骤的一部分。缓冲区放置在控制约束之前，从而确保约束永远不会缺乏。缓冲区也放置在约束后面，以防止下游故障阻止约束的输出。以这种方式使用的缓冲区可以保护约束免受系统其余部分变化的影响，并且应该允许处理时间的正常变化以及约束前后的偶尔扰动（墨菲）。在约束之前的时间队列中应该始终有足够的（但不是过多的）工作，并且在约束之后有足够的卸载空间。缓冲区并不是看板系统中每个工作中心前面的小工作队列，尽管如果您将装配线视为控制约束，那么缓冲区是类似的。该理论的先决条件是，系统中存在一个约束，系统的所有其他部分都必须有足够的能力来跟上约束下的工作，并在时间丢失时赶上。在平衡生产线中，正如看板所提倡的那样，当一个工作中心停机的时间超过缓冲区允许的时间时，整个系统必须等待，直到该工作中心恢复。在 TOC 系统中，工作面临危险的唯一情况是约束无法处理（由于故障、疾病或缓冲区中的“漏洞”——如果出现时间缓冲区无法保护的问题）。因此，缓冲区管理代表了约束理论的一个重要属性。应用缓冲区的方法有很多，但最常用的是用三种颜色指定缓冲区的视觉系统：绿色（好的）、黄色（警告）和红色（需要采取行动）。创建这种可见性使系统作为一个整体能够协调一致，从而以整体方式服从约束的需要。这也可以每天在每个人都可以访问的中央操作室中完成。 TOC 词典中有四种主要植物类型。从页面底部到顶部绘制材料流，您将获得四种类型。它们指定了物料通过系统的一般流程，并提供了一些关于在哪里查找典型问题的提示。这种类型的分析称为 VATI 分析[6]，因为它使用字母 V、A、T 和 I 的自下而上形状来描述植物类型。这四种类型可以在较大的设施中以多种方式组合，例如“A 植物喂养V 植物”。 V-工厂：物料的一般流动是一对多的，例如采用一种原材料并可以生产多种最终产品的工厂。典型的例子是肉类提炼厂或钢铁制造商。 V 型工厂的主要问题是“抢劫”，其中一个操作 (A) 在分叉点之后立即“窃取”本应用于另一操作 (B) 的材料。一旦材料经过 A 处理，如果没有重大返工，就不能返回并在 B 中使用。 A-工厂：物料的一般流动是多对一的，例如在工厂中，许多子组件汇聚在一起进行最终组装。 A 工厂的主要问题是同步汇聚生产线，以便每条生产线都能在正确的时间向最终装配点供货。 T-plant：一般流程是 I-plant（或多条生产线）的流程，然后分成许多组件（多对多）。大多数制造的零件都用于多个装配体中，并且几乎所有装配体都使用多个零件。定制设备（例如计算机）就是很好的例子。 T 工厂同时面临 A 工厂的同步问题（零件并非全部可用于装配）和 V 工厂的抢劫问题（一个装配窃取了可以在另一装配中使用的零件）。智能工厂：物料按顺序流动，例如在装配线上。主要工作是按连续的事件顺序（一对一）完成的。约束是最慢的操作。从上面的列表中，我们可以推断出，对于非物质系统，我们可以绘制工作流或过程流，而不是物理流，并得出类似的基本 V、A、T 或 I 结构。例如，一个项目是一个 A 形的工作序列，最终产生交付的产品（即项目的预期结果）。重点步骤，即持续改进的过程，已应用于制造、项目管理、供应链/分销生成的具体解决方案。其他工具（主要是“思维过程”）也导致了 TOC 在营销和销售以及金融领域的应用。下面列出了应用于每个领域的解决方案。在制造运营和运营管理中，该解决方案旨在将材料拉入系统，而不是将其推入系统。使用的主要方法是鼓-缓冲-绳 (DBR)[7] 和一种称为简化鼓-缓冲-绳 (S-DBR) 的变体。[8]鼓-缓冲-绳是一种制造执行方法，其基础是系统的输出只能与系统约束下的输出相同。任何生产超出约束处理能力的尝试都会导致过量库存堆积。[9]该方法因其三个组成部分而得名。滚筒是工厂物理约束可以工作的速率：限制整个系统生产更多能力的工作中心或机器或操作。植物的其余部分跟随鼓的节奏。滚筒上的调度决定了系统应该生产什么、以什么顺序生产以及生产多少。[10]他们确保滚筒正常工作，并且滚筒处理过的任何东西都不会被浪费。缓冲器保护滚筒，使其始终有工作流向它。 DBR 中的缓冲区为产品流中的材料提供了超出所需设置和处理时间的额外交付时间。由于这些缓冲区以时间而不是材料数量作为计量单位，这使得优先级系统严格根据订单预计到达滚筒的时间运行。每个工单都会有一个可以计算的剩余缓冲区状态。根据该缓冲区状态，工作订单可以用颜色编码为红色、黄色和绿色。红色订单具有最高优先级，必须首先处理，因为它们已渗透到缓冲区中最多，其次是黄色和绿色。随着时间的推移，该缓冲区状态可能会发生变化，分配给特定工作订单的颜色也会随之变化。[11][12]传统的 DBR 通常在系统中的几个点调用缓冲区：约束点、同步点和运输时。 S-DBR 在运输时有一个缓冲区，并通过负载规划机制管理整个滚筒的工作流。[13]绳索是工厂的工作释放机构。订单在由约束进行处理之前的一个“缓冲时间”被发布到车间。换句话说，如果缓冲期为五天，则订单会在约束到期前五天下达。早于该缓冲时间将工作放入系统可能会产生过高的在制品并减慢整个系统的速度。 [14]自动化生产线通过部署高度特定于任务的自动化解决方案来实现高吞吐率和输出数量。根据其设计和结构的不同，这些机器以不同的速度和容量运行，因此具有不同的效率水平。一个突出的例子是饮料行业中自动化生产线的使用。灌装系统通常有几台机器执行整个装瓶过程的各个部分，从灌装初级容器到二次包装和码垛。 [15]为了能够最大化产量，生产线通常有设计约束。这种限制通常是生产线上最慢且通常最昂贵的机器。生产线的总吞吐量由这台机器决定。所有其他机器都可以更快地运行并通过传送带连接。输送机通常具有缓冲产品的能力。如果约束机器以外的机器发生停机，输送机可以缓冲产品，使约束机器能够继续运行。典型的生产线设置是这样的：在正常操作中，约束机器的上游传送带始终满载运行，以防止约束处缺料，而下游传送带空运行以防止约束处发生备份。总体目标是防止机器轻微停机影响约束。因此，当机器远离约束时，它们能够比以前的机器运行得更快，从而创建 V 曲线。 [需要引用] 一般来说，供应链的解决方案是创建库存流，以便确保更大的可用性并消除过剩。 TOC 分发解决方案在用于解决供应链中的单个环节时非常有效，在整个系统中更是如此，即使该系统由许多不同的公司组成。 TOC分销解决方案的目的是通过减少货物流动因短缺和过剩而中断时造成的损失，建立基于非凡可用性的竞争优势。这种方法使用多个新规则来保护可用性，并且库存量少于传统所需的库存量。库存保存在尽可能靠近来源的聚合点。这种方法可确保聚合点的需求平稳，从而相应减少库存需求。持有汇总库存的配送中心能够比按订单生产的制造商更快地将货物运送到供应链的下一个环节。遵循此规则可能会导致按订单生产的制造商转变为按库存生产。在聚合点添加的库存明显低于当前观察到的平均库存水平 补货时间 (“RT”) 是交货后第一次消耗之后、下订单之前的延迟之和下订单后直至订购的货物到达订购地点的延迟。一旦建立了缓冲区，只要入库数量（已订购但尚未收到）加上现有数量等于或大于缓冲区大小，就不会下达补货订单。遵循此规则会导致剩余库存在消耗时被消耗掉。无论出于何种原因，当现有库存加上入库库存小于缓冲区时，会尽快下订单以增加入库库存，从而维持现有 + 入库 = 缓冲区的关系。为了确保即使需求和补给率发生变化，缓冲区仍保持正确的大小，使用了一种称为缓冲区管理的简单递归算法。当现有库存水平处于完整 RT 缓冲区的上三分之一时，缓冲区将减少三分之一（并且不要忘记规则 3）。或者，当现有库存水平处于缓冲区底部三分之一的时间过长时，缓冲区会增加三分之一（并且不要忘记规则 4）。 “太长”的定义是：可能会根据所需的服务级别进行更改，但是，经验法则是 RT 的 20%。与过剩造成的损害相比，短缺造成的损害通常更大，这支持了向上移动缓冲区比向下移动缓冲区更容易。一旦按上述方式管理库存，就应不断努力减少 RT、延迟交货、供应商最低订购数量（每个 SKU 和每个订单）以及客户订单批次。由于缓冲区管理的适应性，这些领域的任何改进都会自动提高可用性和库存周转率。根据 TOC 管理库存的库存地点应帮助非 TOC 客户（供应链中的下游环节，无论是内部还是外部）根据 TOC 流程管理其库存。此类帮助可以采用供应商管理库存 (VMI) 的形式。 TOC 分发链路只是将其缓冲区大小和管理技术扩展到其客户的应用程序。库存。这样做可以缓解客户的需求并减少每个 SKU 的订单规模。 VMI 为供应商和客户带来更好的可用性和库存周转率。对非TOC客户的好处足以使客户更加忠诚，并为上游环节提供更多业务。当最终消费者购买更多时，整个供应链销售更多。应该考虑一个警告。最初且只是暂时的，随着系统中剩余库存的售出，供应链或特定环节的销量可能会减少。然而，由于可用性提高而带来的销售提升是。``` &lt;a href=&quot;https://hackernews.betacat.io/#theory-of-constraints&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40222429&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何从 Windows 安装程序安装 Linux&lt;/stitle>; &lt;id>;https://prose.nsood.in/linux-from- windows-installer&lt;/id>; &lt;更新>;2024-05-01T03:52:59.509500Z&lt;/更新>; &lt;link href=&quot;https://prose.nsood.in/linux-from-windows-installer&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“https” ://prose.nsood.in/img/linux-from-windows-installer/discord-exchange.png&quot; style=&quot;宽度：220px；高度：223px；&quot; />;&lt;br />;本文介绍了如何使用 UEFI/GPT 引导加载程序在 Windows 系统上安装 Alpine Linux。该过程包括创建分区、安装 Linux 发行版和配置引导加载程序。本文建议使用Arch Linux或Alpine Linux作为Linux发行版进行安装。文章还提到，该过程相对简单，只需几个步骤即可完成。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-install-linux-from-a-windows-installer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40219131&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：MuscleWiki 锻炼生成器 – 生成独特的锻炼&lt;/stitle>; &lt;id>;https://musclewiki.com/workout-generator&lt;/id>; &lt;更新>;2024-05-01T15:52:59.509897Z&lt;/更新>; &lt;link href=&quot;https://musclewiki.com/workout-generator&quot;/>; &lt;作者>; &lt;name>;w0ts0n&lt;/name>; &lt;uri>;https ://news.ycombinator.com/user?id=w0ts0n&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://musclewiki.com/img/ogimage.png&quot; 样式=“宽度：220像素；高度：141像素；” />;&lt;br />;MuscleWiki 是一款健身应用程序，拥有全面的锻炼库，其中包括 2000 多个锻炼的视频和书面说明。通过简单直观的身体图指导您进行特定肌肉的锻炼，您可以通过适合初学者、中级和高级健身爱好者的锻炼来简化您的锻炼。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-musclewiki-workout-generator-generate-unique-workouts&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40224292&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;BASIC 编程语言 60 周年&lt;/stitle>; &lt;id>;https://arstechnica.com/gadgets/2024/05/the-basic-programming- language-turns-60/&lt;/id>; &lt;更新>;2024-05-01T16:52:59.510696Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/gadgets/2024/05/the-basic- programming-language-turns-60/&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2024/05/basic_apple_2-800x450.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;1964 年，John G. Kemeny 和 Thomas E. Kurtz 创建了 BASIC，这是一种使计算民主化并激励了一代又一代程序员的编程语言。 BASIC 是一种解释性语言，具有简单的英语关键字和行号，使得初学者易于使用。在 BASIC 出现之前，编程很复杂并且主要由专业人士使用。 Kemeny 和 Kurtz 看到了业余爱好者也需要使用计算机的需求，因此开发了 BASIC，使其更加用户友好。 BASIC 的简单性和强大功能很快使其成为达特茅斯学院及其他学院学生和教师的最爱。它适用于 Altair 8800 和 Apple II 等个人电脑，从而将其覆盖范围扩大到新的受众。 BASIC 的遗产通过它对后续编程语言的影响以及它在使计算可供更广泛的受众使用方面发挥的作用而得以延续。 &lt;a href=&quot;https://hackernews.betacat.io/#the-basic-programming-language-turns-60&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40225442&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pyinfra：使用 Python 自动化基础设施&lt;/stitle>; &lt;id>;https://pyinfra.com/&lt;/id>; &lt;updated>;2024-04-30T17:52:59.511092 Z&lt;/updated>; &lt;link href=&quot;https://pyinfra.com/&quot;/>; &lt;作者>; &lt;name>;InitEnabler&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=InitEnabler &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pyinfra.com/static/example_deploy.gif&quot; style=&quot;width: 220px; height: 143px;&quot; />;&lt;br />;Pyinfra 使用 Python 实现高效的基础设施自动化，从单个服务器扩展到数千个服务器，并支持命令执行和配置管理等任务。它结合了库存、操作和 Python 编码，以促进多功能部署。 &lt;a href=&quot;https://hackernews.betacat.io/#pyinfra-automate-infrastruct-using-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40211655&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;通过多标记预测更好更快的大型语言模型&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2404.19737&lt;/id>; &lt;updated>;2024-05 -01T08：52：59.511486Z &lt;/更新>; &lt;link href =“https://arxiv.org/abs/2404.19737”/>; &lt;作者>; &lt;名称>; jasondavies &lt;/名称>; &lt;uri>; https://news. ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-标志-fb.png&quot; style=&quot;宽度: 220px 高度: 129px;&quot; />;&lt;br />;本文提出了一种训练语言模型的新方法，其中涉及使用独立的输出头同时预测多个未来标记。这种方法提高了样本效率和下游能力，在生成基准上收益尤其明显。该方法对于较大的模型尺寸非常有用，并且在多个时期的训练中保持其吸引力。在小型算法任务上的实验证明了它对感应头和算法推理能力的青睐。此外，即使批量大小较大，使用 4-token 预测训练的模型的推理速度也可提高 3 倍。 &lt;a href=&quot;https://hackernews.betacat.io/#better-and-faster-large-language-models-via-multi-token-prediction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40220851&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;饮水机按钮&lt;/stitle>; &lt;id>;https://www.theverge.com/24144774/drinking-fountain-bubbler-本月按钮&lt;/id>; &lt;更新>;2024-05-01T07:52:59.511876Z&lt;/更新>; &lt;link href=&quot;https://www.theverge.com/24144774/drinking-fountain-bubbler -button-of-the-month&quot;/>; &lt;作者>; &lt;名称>;thecybernerd&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thecybernerd&lt;/uri>; &lt;/author>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://duet-cdn.vox-cdn.com/thumbor/0x0:2700x1800/2400x1600/filters:focal(1399x844:1400x845):format(webp)/cdn.vox -cdn.com/uploads/chorus_asset/file/25427378/247100_Water_fountain_BOTM_AKrales_0039.jpg&quot; style=&quot;宽度：220px 高度：147px；&quot; />;&lt;br />;本文讨论了公共饮水机的设计和功能，特别是用于控制水流的按钮。这些按钮因其优雅和模块化可修复性而受到赞誉，并配有易于拆卸和更换的独立墨盒。文章还指出，随着时间的推移，饮水机已经从杠杆和旋钮控制演变为按钮，这一转变可能是由于墨盒系统更容易维护。文章最后讨论了饮水机按钮的潜在未来，一些室内冷藏饮水机使用微动开关和电磁阀，而许多人现在选择瓶装水。然而，Haws 是一家自 1906 年以来一直致力于开发饮水机技术并申请专利的公司，该公司指出，由于 covid-19 大流行，客户越来越多地转向机械操作。 &lt;a href=&quot;https://hackernews.betacat.io/#the-drinking-fountain-button&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40220309&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;我查看了 HTMX 上的 1,000 条意见&lt;/stitle>; &lt;id>;https://konfigthis.com/blog/htmx/&lt;/id>; &lt;更新>;2024-05-01T17:01 ：59.512264Z&lt;/updated>; &lt;link href=&quot;https://konfigthis.com/blog/htmx/&quot;/>; &lt;作者>; &lt;name>;dphuang2&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=dphuang2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://konfigthis.com/assets/images/exciting-5590294f77b50a2289696103a13e4d54.png&quot; style=&quot;width: 220像素；高度：102像素；” />;&lt;br />;HTMX 是一个 JavaScript 库，它支持使用超媒体作为应用程序状态引擎来构建现代用户界面。它以其截然不同的构建用户界面的方法引起了争议。一些开发人员对此表示怀疑，而另一些开发人员则对此感到兴奋或好奇。为了分析开发者的意见，我去了开发者居住的地方：Reddit、Twitter、Hacker News 和 YouTube。我解析了 1,000 个讨论，并将我的发现综合为“支持 HTMX”、“反 HTMX”或“中立”类别。反 HTMX 的观点包括对其炒作、对现代 Web 技术的后退及其复杂性的批评。中立的意见包括它与 React 的比较以及它对简单用例的适用性。 Pro-HTMX 的观点包括它的简单性、处理 DOM 操作的能力以及降低代码库复杂性和开发时间的潜力。 &lt;a href=&quot;https://hackernews.betacat.io/#i-reviewed-1000s-of-opinions-on-htmx&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40226025&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：我制作了一个应用程序，可以帮助您找到在哪里播放电影和电视节目&lt;/stitle>; &lt;id>;https://whereto.stream&lt;/id >; &lt;更新>;2024-05-01T02:52:59.512655Z&lt;/更新>; &lt;link href=&quot;https://whereto.stream&quot;/>; &lt;作者>; &lt;name>;danilotanic&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=danilotanic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://whereto.stream/build/_assets/logo-HGX736LW.png “样式=”宽度：220px;高度：130px;“ />;&lt;br />;探索电影和电视节目的国际流媒体选项电视节目。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-an-app-that-helps-you-find-where-to-stream-movies-and-tv-shows&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40213562&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;鲑鱼死亡后轮胎毒性面临新的审查&lt;/stitle>; &lt; id>;https://phys.org/news/2024-05-有毒-fresh-scrutiny-salmon-die.html&lt;/id>; &lt;更新>;2024-05-01T13:52:59.513043Z&lt;/更新>; &lt;链接href=&quot;https://phys.org/news/2024-05-有毒-fresh-scrutiny-salmon-die.html&quot;/>; &lt;作者>; &lt;名称>;NDAjam &lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=NDAjam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2020 /california.jpg&quot; style=&quot;宽度: 220px 高度: 132px;&quot; />;&lt;br />;文章强调了车辆在道路上行驶时轮胎排放的有毒物质，特别是化学物质 6PPD，将其添加到橡胶轮胎中可延长其使用寿命。当轮胎磨损时，6PPD 会被释放，并且可能具有剧毒，与华盛顿州屡次发生的鱼类死亡事件有关。轮胎主要由橡胶制成，但含有数百种其他成分，通常包括钢以及铜、铅、镉和锌等。随着汽车轮胎的磨损，橡胶会以颗粒形式消失，其中既有肉眼可见的颗粒，也有微粒。英国 Emissions Analytics 公司的测试发现，汽车轮胎每行驶一公里排放 1 万亿美元，即每辆内燃机汽车每年排放 5 到 9 磅橡胶。尽管监管机构已经针对 6PPD 采取了一些行动，但才刚刚开始解决有毒轮胎问题。这种化学物质对于加州道路上的轮胎安全起着至关重要的作用，但目前还没有广泛可用的更安全的替代品。加州正在研究加州雨水质量协会的一项要求，将含锌（一种重金属）的轮胎列为优先产品，要求制造商寻找替代品。轮胎也是微塑料的主要来源。 &lt;a href=&quot;https://hackernews.betacat.io/#tire-有毒-faces-fresh-scrutiny-after-salmon-die-offs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40223253&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;CERN 的艾字节数据中心&lt;/stitle>; &lt;id>;https://blog.westerndigital.com/inside-cerns-exabyte-data-center/ &lt;/id>; &lt;更新>;2024-05-01T03:52:59.513419Z&lt;/更新>; &lt;link href=&quot;https://blog.westerndigital.com/inside-cerns-exabyte-data-center/&quot;/>; &lt;作者>; &lt;name>;kungfudoi&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=kungfudoi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://blog.westerndigital.com/wp-content/uploads/2020/10/Ronni-1-150x150.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;大型强子对撞机（LHC）是世界上最大、最强大的粒子粉碎机，位于瑞士日内瓦。它通过将质子和离子加速到接近光速来重现大爆炸后存在的条件。 LHC 探测器每秒生成惊人的 PB 级碰撞数据，这些数据由 CERN 的计算基础设施管理。 CERN 的数据中心最近突破了 EB 阈值，目前拥有超过 10,000 台服务器、100,000 个硬盘驱动器和近 500,000 个处理核心。 LHC 最近进行了第二次重大升级，进行了一系列名为 Run 3 的实验，该实验可以以前所未有的碰撞能量粉碎粒子。为了存储这些数据，CERN 的 IT 团队必须寻找新的解决方案，包括西部数据的 Ultrastar 混合存储平台，该平台旨在以较低的复杂性提供可扩展的容量并减少旋转振动。新数据中心预计将扩展 CERN 下一次运行（预计将于 2029 年启动的 Run 4）的计算能力。 &lt;a href=&quot;https://hackernews.betacat.io/#cern-s-exabyte-data -center&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40219172&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;文件文件系统 (2021)&lt;/stitle>; &lt;id >;https://mgree.github.io/ffs/&lt;/id>; &lt;更新>;2024-04-30T18:52:59.513798Z&lt;/更新>; &lt;link href=&quot;https://mgree.github.io/ffs /&quot;/>; &lt;作者>; &lt;名称>;wegwerff&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wegwerff&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://mgree.github.io/ffs/assets/images/inplace_demo.gif&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文讨论了 Unix shell 对于现代数据格式的限制，并介绍了 ffs，这是一种将半结构化数据挂载为文件系统以便于操作的工具。它指定了安装要求和使用命令，并注明了用于 JSON 处理的 jq 和 gron 等工具。 &lt;a href=&quot;https://hackernews.betacat.io/#the-file-filesystem-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40213731&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;卫星电信行业两大巨头联手对抗星链&lt;/stitle>; &lt;id>;https://arstechnica.com/space/2024/04/the-two-largest-geostationary- Satellite-operators-will-become-one/&lt;/id>; &lt;更新>;2024-05-01T12:52:59.514192Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/space/2024/04/ the-two-largest-geostationary-satellite-operators-will-become-one/&quot;/>; &lt;author>; &lt;name>;Brajeshwar&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Brajeshwar &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2024/04/intelsat901.jpg&quot; style=&quot;width: 220 像素；高度：220 像素；” />;&lt;br />;SES 和 Intelsat 这两个主要的商业通信航天器所有者宣布了合并计划，创建一家拥有 100 颗多吨级地球静止轨道卫星的合并公司。然而，对大型对地静止 (GEO) 卫星通信服务的需求正在减弱，而对低地球轨道 (LEO) 中的小型卫星提供星链等服务的需求不断增长。此次收购将扩大其多轨道空间网络、频谱组合、地面基础设施和财务状况。 &lt;a href=&quot;https://hackernews.betacat.io/#two-giants-in-the-satellite-telecom-industry-join-forces-to-counter-starlink&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40222273&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;