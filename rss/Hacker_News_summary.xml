<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-07-09T13:56:42.370336Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;最小的 .NET Hello World 二进制文件有多小？&lt;/stitle>; &lt;id>;https://blog.washi.dev/posts/tinysharp/&lt;/id>; &lt;updated>; 2023-07-09T08：56：18.580902Z &lt;/更新>; &lt;link href =“https://blog.washi.dev/posts/tinysharp/”/>; &lt;作者>; &lt;名称>;苏萨姆&lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=susam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文探讨了 .NET 模块文件格式的限制，旨在创建尽可能小的文件打印“Hello, World!”的 .NET 可执行文件到标准输出。它讨论了减小文件大小、删除不必要的元数据和优化代码的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#how-small-is-the-smallest-net-hello-world-binary&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36652824&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;C 语言的发展 (1993)&lt;/stitle>; &lt;id>;https://www.bell-labs.com/usr/dmr /www/chist.html&lt;/id>; &lt;更新>;2023-07-09T09:56:18.755695Z&lt;/更新>; &lt;link href=&quot;https://www.bell-labs.com/usr/dmr/www/ chist.html&quot;/>; &lt;author>; &lt;name>;gus_leonel&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gus_leonel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;C 编程语言是在 20 世纪 70 年代初设计的，作为新生 Unix 操作系统的系统实现语言。源自无类型语言BCPL，演化出类型结构；它是在小型机器上创建的，作为改善贫乏编程环境的工具，它已成为当今的主导语言之一。 &lt;a href=&quot;https://hackernews.betacat.io/#the-development-of-the-c-language-1993&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36652934&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;针对现实进行测试&lt;/stitle>; &lt;id>;https://borretti.me/article/test-against-reality&lt;/id>; &lt;更新>;2023-07 -09T08：56：18.757725Z &lt;/更新>; &lt;link href =“https://borretti.me/article/test-against-reality”/>; &lt;作者>; &lt;名称>;苏萨姆&lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=susam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://borretti.me/assets/card/test-against-现实.jpg&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;测试具有复杂外部依赖关系的现代 Web 应用程序变得更具挑战性。模拟是一种常见的解决方案，但它可能导致同义反复测试和分散的代码。另一种方法是编写一个服务存根或一个假服务器来实现外部服务的语义。这允许集中测试并更容易维护。 &lt;a href=&quot;https://hackernews.betacat.io/#test-against-reality&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36652816&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;ActivityPub 简介&lt;/stitle>; &lt;id>;https://socialhub.activitypub.rocks/t/introduction-to-activitypub/508&lt;/id>; &lt;updated>;2023-07-09T12:56 ：18.758547Z &lt;/更新>; &lt;link href=&quot;https://socialhub.activitypub.rocks/t/introduction-to-activitypub/508&quot;/>; &lt;作者>; &lt;名称>;srameshc &lt;/名称>; &lt;uri>;https： //news.ycombinator.com/user?id=srameshc&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://socialhub.activitypub.rocks/uploads/default/original/ 1X/8faac84234dc73d074dadaa2bcf24dc746b8647f.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;ActivityPub 是一个标准，允许不同的 Web 应用程序跨实例交互和协作。它于 2018 年被采纳为万维网联盟官方推荐。&lt;a href=&quot;https://hackernews.betacat.io/#introduction-to-activitypub&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36653740&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;翻新周末：Commodore/MOS KIM-1&lt;/stitle>; &lt;id>;http://oldvcr.blogspot.com/ 2023/07/refurb-weekends-commodoremos-kim-1.html&lt;/id>; &lt;更新>;2023-07-09T10:56:18.759304Z&lt;/更新>; &lt;link href=&quot;http://oldvcr.blogspot.com /2023/07/refurb-weekends-commodoremos-kim-1.html&quot;/>; &lt;作者>; &lt;名称>;zdw&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=zdw&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqoO5jNmmkU-LCcroGpHVN832no1vzykIZqGnOiZsW3BwMHxMIZ3cSeYnT26H6tGZQBy1TMUegrpseXCS7KTC5nrJ 0APecunYwRxZBKG3ZSMvDFkm_a2RS_WErnim2VML-E9DLC2CQph3_Lv7Dtrn1oBXT09TglvCZnqZyP-8LnkOW1edCxt9vAHVMQd4/s320/PXL_20230705_052951683.jpg&quot;样式=“宽度：220px；高度：166px;&quot; />;&lt;br />;KIM-1 是第一台 MOS 6502 计算机，是一个具有 1K RAM 和 1 兆赫 CPU 的单板系统。它是组装整个工作系统最便宜的方法之一。爱好者系统。&lt;a href=&quot;https://hackernews.betacat.io/#refurb-weekend-s-commodore-mos-kim-1&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=36644841&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Quetzal-1 卫星开源&lt;/stitle>; &lt;id>;https://hackaday.com/2023/07/04/quetzal-1- Satellite-goes-open-source/&lt;/id>; &lt;更新>;2023-07-09T04:56:18.760056Z&lt;/更新>; &lt;link href=&quot;https://hackaday.com/2023/07/04/quetzal- 1-satellite-goes-open-source/&quot;/>; &lt;作者>; &lt;名称>;jerryjerryjerry&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jerryjerryjerry&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://hackaday.com/wp-content/uploads/2023/07/quetzal_feat.jpg?w=800&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;2020年，危地马拉德尔瓦莱大学（UVG）的学生设计并建造了一颗立方体卫星，在轨运行了211天。尽管遇到了黑白图片、I2C挂起等问题总线，该项目现已发布开源设计文档和软件，为未来的 CubeSat 设计提供有价值的信息。&lt;a href=&quot;https://hackernews.betacat.io/#quetzal-1-satellite-goes-open-source&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36643125&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;魔方可以被暴力破解吗？&lt;/stitle>; &lt;id >;https://www.stylewarning.com/posts/brute-force-rubiks-cube/&lt;/id>; &lt;更新>;2023-07-09T02:56:18.760799Z&lt;/更新>; &lt;link href=&quot;https:// /www.stylewarning.com/posts/brute-force-rubiks-cube/&quot;/>; &lt;作者>; &lt;名称>;reikonomusha&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=reikonomusha&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;当我大约 13 岁的时候，我开始对魔方着迷。我对使用计算机来操纵组合谜题（如魔方）产生了兴趣。可以使用暴力算法通过计算机来解魔方，但由于存在大量可能性，这种方法并不实用。 &lt;a href=&quot;https://hackernews.betacat.io/#can-a-rubik-s-cube-be-brute-forced&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36645846&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Web Assembly Shaper&lt;/stitle>; &lt;id>;https://github.com/harfbuzz/harfbuzz/blob/main/docs/wasm-shaper。 md&lt;/id>; &lt;更新>;2023-07-09T08:56:18.761526Z&lt;/更新>; &lt;link href=&quot;https://github.com/harfbuzz/harfbuzz/blob/main/docs/wasm-shaper.md &quot;/>; &lt;author>; &lt;name>;panic&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=panic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;如果标准的 OpenType 整形引擎无法为您提供足够的灵活性，Harfbuzz 允许您在 WebAssembly 中编写自己的整形引擎并将其嵌入到您的字体中！ Harfbuzz 整形引擎负责将代码点缓冲区整形为字形并定位它们。 &lt;a href=&quot;https://hackernews.betacat.io/#the-web- assembly-shaper&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36652569&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Cargo-semver-checks：扫描 Rust 箱是否存在 semver 违规&lt;/stitle>; &lt;id>;https://github.com/obi1kenobi/cargo-semver-checks&lt;/id>; &lt;更新>;2023-07-09T06:56:18.762275Z&lt;/更新>; &lt;link href=&quot;https://github.com/obi1kenobi/cargo-semver-checks&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://user-images.githubusercontent.com/ 2348618/180127698-240e4bed-5581-4cbd-9f47-038affbc4a3e.png”样式=“宽度：220像素；高度：100像素；” />;&lt;br />;Cargo-semver-checks 是一个扫描 Rust 箱是否有 semver 违规的工具。它提供有关导致问题的特定项目和文件位置的详细信息。该工具使用 rustdoc 工具来分析 crate 的 API，并包括对 Rust 稳定版和 Beta 版的支持。 &lt;a href=&quot;https://hackernews.betacat.io/#cargo-semver-checks-scan-your-rust-crate-for-semver-violations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36642989&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;简明 TypeScript 书籍&lt;/stitle>; &lt;id>;https://github.com/gibbok/typescript-book&lt;/id>; &lt;更新>;2023-07-08T23:56:18.763017Z&lt;/更新>; &lt;link href=&quot;https://github.com/gibbok/typescript-book&quot;/>; &lt;作者>; &lt;name>;revskill&lt;/name>; &lt;uri >;https://news.ycombinator.com/user?id=revskill&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/4f6be8d6d21f09f7cee569d96aa7b3ad3fdeed6db0e40154759e886a7607ecc2/gibbok /typescript-book&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;简洁的 TypeScript 书籍提供了 TypeScript 功能的全面、简洁的概述。它提供了清晰的解释，涵盖了该语言最新版本中的所有方面，从强大的类型系统到高级功能。 &lt;a href=&quot;https://hackernews.betacat.io/#the-concise-typescript-book&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36641634&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;黑客马拉松照片背后的故事&lt;/stitle>; &lt;id>;https://frantic.im/story-behind-hackathon-photo/&lt;/id>; &lt;更新>;2023-07-09T08:56 ：18.764486Z&lt;/updated>; &lt;link href=&quot;https://frantic.im/story-behind-hackathon-photo/&quot;/>; &lt;author>; &lt;name>;imadj&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=imadj&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://frantic.im/assets/hackathon.jpg&quot; style=&quot;width: 220 像素；高度：147 像素；&quot; />;&lt;br />;2017年，作者尝试通过将运行 Nuclide 的 MacBook Pro 的照片上传到 Unsplash 来推广 Atom 编辑器的 Nuclide 插件。然而，这个计划并没有奏效。一年后，作者将一张在黑客马拉松中拍摄的照片上传到 Unsplash，并获得了科技和商业类别的 Unsplash 奖。这张照片的浏览量已达 5700 万次，并在互联网上广泛使用。 &lt;a href=&quot;https://hackernews.betacat.io/#story-behind-hackathon-photo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36652551&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;超级理性&lt;/stitle>; &lt;id>;https://skunkledger.substack.com/p/superrational&lt;/id>; &lt;更新>;2023-07-09T01:56:18.765199Z&lt;/更新>; &lt;link href=&quot;https://skunkledger.substack.com/p/superrational&quot;/>; &lt;作者>; &lt;name>;everybodyknows&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=大家都知道&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:best,fl_progressive:steep/https%3A%2F% 2Fskunkledger.substack.com%2Ftwitter%2Fsubscribe-card.jpg%3Fv%3D1017425320%26version%3D9&quot; style=&quot;宽度：220px；高度：115px；&quot; />;&lt;br />;Vicktoreya Keyneslee Beauxpensees 是一个高度理性和聪明的人，她发现自己处于必须做出战略决策以避免在学校受到惩罚的境地。她最终发现自己是经济人最后的成员之一，经济人是一个由完全理性的经济主体组成的神话种族。 &lt;a href=&quot;https://hackernews.betacat.io/#superrational&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 36645240&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;Fairphone 4 即将登陆美国&lt;/stitle>; &lt;id>;https://arstechnica.com/gadgets/2023/07/fairphone-is-coming-to-america/&lt;/id>; &lt;updated>;2023- 07-09T10:56:18.765913Z&lt;/updated>; &lt;link href=&quot;https://arstechnica.com/gadgets/2023/07/fairphone-is-coming-to-america/&quot;/>; &lt;作者>; &lt;名称>; raybb&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=raybb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.raybb&quot; arstechnica.net/wp-content/uploads/2023/07/msedge_H78BE5UzU2-980x569-1.png&quot; style=&quot;宽度：220px；高度：128px；&quot; />;&lt;br />;Fairphone 正在与 Murena 合作，通过“美国试点”计划将 Fairphone 4 引入美国。这款手机售价 599 美元，预装了 /e/ 操作系统。 &lt;a href=&quot;https://hackernews.betacat.io/#fairphone-4-is-coming-to-the-us&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36653224&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Linux Lite：易于使用的免费 Linux 操作系统&lt;/stitle>; &lt;id>;https://www.linuxliteos.com/&lt;/id>; &lt;更新>;2023 -07-09T07:56:18.767378Z&lt;/updated>; &lt;link href=&quot;https://www.linuxliteos.com/&quot;/>; &lt;author>; &lt;name>;janandonly&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=janandonly&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.linuxliteos.com/assets/img/home/linux-lite -blank-monitor.png&quot; style=&quot;宽度：220px；高度：193px；&quot; />;&lt;br />;Linux Lite 免费供所有人使用和共享，适合刚接触 Linux 的人和想要功能齐全的轻量级环境的人。 &lt;a href=&quot;https://hackernews.betacat.io/#linux-lite-easy-to-use-free-linux-operating-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36652496&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：所有每月股息股票的指数&lt;/stitle>; &lt;id>;https://thedividendlist.com/&lt;/id>; &lt;更新>;2023-07-09T01:56:18.768109Z&lt;/updated>; &lt;link href=&quot;https://thedividendlist.com/&quot;/>; &lt;author>; &lt;name>;mystertea&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=mystertea&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;请注意：此表当前已被截断（隐藏一些数据列）以适应此屏幕。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-an-index-of-all-monthly-dividend-stocks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36650581&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;一种将物体包装在刚性容器内的新方法&lt;/stitle>; &lt;id>;https://techxplore.com/news/2023-07- method-dense-placement-rigid.html&lt;/id>; &lt;更新>;2023-07-09T10:56:18.769808Z&lt;/更新>; &lt;link href=&quot;https://techxplore.com/news/2023-07-method -dense-placement-rigid.html&quot;/>; &lt;作者>; &lt;名称>;macleginn&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=macleginn&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/new-computational-meth-1.jpg&quot; style=&quot;宽度：220px；高度： 146 像素；” />;&lt;br />;麻省理工学院和 Inkbit 的研究人员开发了一种名为“密集、无互锁和可扩展光谱封装”(SSP) 的新计算方法。该技术可以将 3D 对象有效地放置在刚性容器内，从而实现高封装密度并减少计算时间。 &lt;a href=&quot;https://hackernews.betacat.io/#a-new-method-for-packing-objects-inside-a-rigid-container&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36653262&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;伦敦中世纪谋杀地图&lt;/stitle>; &lt;id>;https://www.vrc.crim.cam.ac.uk/vrcresearch/伦敦中世纪谋杀地图&lt;/id>; &lt;更新>;2023-07-09T02:56:18.770533Z&lt;/更新>; &lt;link href=&quot;https://www.vrc.crim.cam.ac.uk/vrcresearch /london-medieval-murder-map&quot;/>; &lt;author>; &lt;name>;CharlesW&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CharlesW&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;伦敦中世纪谋杀地图是一张交互式地图，显示中世纪晚期伦敦 142 起凶杀案的大致位置。地图上的每个图钉代表一个特定案件，并根据验尸官生成的原始记录提供有关该事件的信息。 &lt;a href=&quot;https://hackernews.betacat.io/#london-medieval-murder-map&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36645633&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;镜面全息术：如何 (2010)&lt;/stitle>; &lt;id>;http://zintaglio.com/how.html&lt;/id>; &lt;更新>;2023-07-09T03:56:18.772111 Z&lt;/updated>; &lt;link href=&quot;http://zintaglio.com/how.html&quot;/>; &lt;作者>; &lt;name>;matthberg&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=matthberg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://zintaglio.com/pics/stereo.jpg&quot; style=&quot;width: 220px; height: 97px;&quot; />;&lt;br />;典型的镜面全息图在二维表面上复用了数千到数百万个光学器件。每个光学器件都具有独特的形状，可在视点或光线变化时保持稳定的 3D 点。光学表面的成形和复用涉及微分几何和组合优化的组合。 &lt;a href=&quot;https://hackernews.betacat.io/#specular-holography-how-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=36651342&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Linux 上的 AMD Ryzen 7 7840U 性能基准&lt;/stitle>; &lt;id>;https://www.phoronix.com/review/amd-ryzen7-7840u&lt;/id>; &lt;更新>;2023- 07-09T06:56:18.772827Z&lt;/更新>; &lt;link href=&quot;https://www.phoronix.com/review/amd-ryzen7-7840u&quot;/>; &lt;作者>; &lt;名称>;nedsma &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=nedsma&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.phoronix.net/image.php ?id=amd-ryzen7-7840u&amp;image=amd_7840u_0_med&quot; style=&quot;宽度：220px；高度：99px；&quot; />;&lt;br />;本文讨论了 AMD Ryzen 7 7840U 笔记本电脑处理器在 Linux 上的性能基准。 Ryzen 7 7840U 具有 8 核/16 线程、3.3GHz 基础时钟、高达 5.1GHz 升压时钟，以及具有 12 个 CU 的集成 Radeon 780M 显卡。 &lt;a href=&quot;https://hackernews.betacat.io/#amd-ryzen-7-7840u-performance-benchmarks-on-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36652096&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;胜利花园（小说）&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Victory_Garden_(小说)&lt;/id>; &lt;更新>;2023-07-09T06:56:18.773563Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Victory_Garden_(novel)&quot;/>; &lt;作者>; &lt;名称>;Caiero&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Caiero&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;《胜利花园》是斯图尔特·莫尔索普 (Stuart Moulthrop) 于 1992 年出版的超文本小说。它以海湾战争期间为背景，探索与主角艾米丽·朗伯德有关的各种角色的生活和互动。 &lt;a href=&quot;https://hackernews.betacat.io/#victory-garden-novel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36648257&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Perl 首次提交：Awk 和 sed 的“替代品”&lt;/stitle>; &lt;id>;https://github.com/Perl/perl5/commit/8d063cd8450e59ea1c611a2f4f5a21059a2804f1&lt;/id>; &lt;updated>;2023- 07-09T00：56：18.774297Z &lt;/更新>; &lt;link href =“https://github.com/Perl/perl5/commit/8d063cd8450e59ea1c611a2f4f5a21059a2804f1”/>; &lt;作者>; &lt;名称>; ekiauhce &lt;/名称>; &lt;uri>; https ://news.ycombinator.com/user?id=ekiauhce&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/1eb72c12178021edc462dc7b14b4cb5ffaf35a05ad20e7753cfd9ce4413da083/Perl/perl5 /commit/8d063cd8450e59ea1c611a2f4f5a21059a2804f1&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;[ Perl 的设计目的是让 awk 和 sed 变得半过时。这篇文章将包括主要源代码之后的前 10 个补丁。以下描述摘自 Larry 的... &lt;a href=&quot;https://hackernews.betacat.io/#perl-first-commit-a-replacement-for-awk-and-sed&quot; 目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36650120&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;通过实践学习电子学&lt;/stitle>; &lt;id>;https://beletronics .wordpress.com/&lt;/id>; &lt;更新>;2023-07-08T18:56:18.775690Z&lt;/更新>; &lt;link href=&quot;https://beletronics.wordpress.com/&quot;/>; &lt;作者>; &lt;名称>;桑德曼&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Sandman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://beletronics. files.wordpress.com/2022/05/basic.png?w=1024&quot; style=&quot;宽度：220px；高度：108px；&quot; />;&lt;br />;本网站致力于电子爱好者和有抱负的人，他们相信真正的知识来自于坚持不懈的实践。内容分为以下几个部分。学习基础电子学 - 单击以阅读 创建传奇的 Pong 游戏 - 单击以阅读 创建 4 位处理器 - 单击以阅读创建... &lt;a href=&quot;https://hackernews.betacat.io/#learn- electronics-by -练习&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36647364&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;代码审查金字塔 (2022)&lt;/stitle>; &lt; id>;https://www.morling.dev/blog/the-code-review-pyramid/&lt;/id>; &lt;更新>;2023-07-08T21:56:18.776393Z&lt;/更新>; &lt;link href=&quot;https: //www.morling.dev/blog/the-code-review-pyramid/&quot;/>; &lt;author>; &lt;name>;rainhacker&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rainhacker &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.morling.dev/images/gunnar_morling.jpg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;代码审查通常集中在代码格式和样式等琐碎方面，而功能和性能等重要方面受到的关注较少。代码审查金字塔是一个可视化工具，它突出显示代码审查最重要的方面，并建议哪些部分可以自动化。 &lt;a href=&quot;https://hackernews.betacat.io/#the-code-review-pyramid-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36638046&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Pocket 越用越差（2019）&lt;/stitle>; &lt;id>;https://web.archive.org/web/20190512092903/https://old.reddit .com/r/dredmorbius/comments/5x2sfx/pocket_it_gets_worse_the_more_you_use_it/&lt;/id>; &lt;更新>;2023-07-08T23:56:18.777113Z&lt;/更新>; &lt;link href=&quot;https://web.archive.org/web /20190512092903/https://old.reddit.com/r/dredmorbius/comments/5x2sfx/pocket_it_gets_worse_the_more_you_use_it/&quot;/>; &lt;作者>; &lt;名称>;ColinWright&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=ColinWright&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://web.archive.org/web/20190512084245im_/https://www.redditstatic.com/ new-icon.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Pocket 作为文章归档和管理工具，存在设计缺陷并且缺乏对用例的考虑。随着时间的推移，它不会改进或变得更有用。该应用程序缺乏基本功能，例如可搜索标签、自动完成和文档内搜索。 &lt;a href=&quot;https://hackernews.betacat.io/#pocket-gets-worse-the-more-you-use-it-2019&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36649740&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;机器学习挑战&lt;/stitle>; &lt;id>;https://ai.googleblog.com/2023/06/announcing-first-machine-unlearning .html&lt;/id>; &lt;更新>;2023-07-08T23:56:18.777803Z&lt;/更新>; &lt;link href=&quot;https://ai.googleblog.com/2023/06/announcing-first-machine-unlearning。 html&quot;/>; &lt;作者>; &lt;名称>;Anon84&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Anon84&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt; img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhnYgC13GY7TTT4dhlutperGlCU07bWBJJr3yICTpKX4kxu8Beso89UtRLslnKi7XhD3T2kzkjHvKLNfXG_hztQxmbDFLafmLscIDZKGzOqWb OUxcYWjTDYgudshWu7v-mNrbhlegtEj7I-9woJvwgtOSfi01nKsalbOiYZmP1YN2FnQw_dTwobwwQvSrsv/s900/Unlearning.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;深度学习推动了各种应用的进步，但深度神经网络模型的使用需要谨慎。机器去学习是机器学习的一个子领域，旨在消除训练模型中特定训练示例的影响。 &lt;a href=&quot;https://hackernews.betacat.io/#machine-unlearning-challenge&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36649710&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;