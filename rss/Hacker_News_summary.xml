<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-04-22T08:06:01.221596Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;超级任天堂卡带内部&lt;/stitle>; &lt;id>;https://fabiensanglad.net/snes_carts/index.html&lt;/id>; &lt;updated>;2024-04-22T04:05 ：50.381732Z &lt;/更新>; &lt;link href=&quot;https://fabiensanglard.net/snes_carts/index.html&quot;/>; &lt;作者>; &lt;名称>;zdw &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=zdw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://fabiensanglad.net/10nes/cic_duo_nofont.svg&quot; style=&quot;width: 220px; height : 134 像素;&quot; />;&lt;br />;超级任天堂的游戏卡带具有增强处理器和版权保护功能，其中一些可以保存游戏进度。最著名的处理器包括用于渲染的 Super FX 和用于提高性能的 SA-1，从而支持更复杂和扩展的游戏。 &lt;a href=&quot;https://hackernews.betacat.io/#inside-the-super-nintendo-cartridges&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40111274&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Ruby 与 Python 归结为 for 循环 (2021)&lt;/stitle>; &lt;id>;https://softwaredoug.com/blog/2021/11/12/ruby-vs -python-for-loop.html&lt;/id>; &lt;更新>;2024-04-22T04:05:50.383753Z&lt;/更新>; &lt;link href=&quot;https://softwaredoug.com/blog/2021/11/12/ ruby-vs-python-for-loop.html&quot;/>; &lt;author>; &lt;name>;mooreds&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mooreds&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://softwaredoug.com/assets/media/headshot2.jpg&quot; style=&quot;width: 220px; height: 249px;&quot; />;&lt;br />;Python 利用对象来指示迭代过程，而 Ruby 使用将过程代码集成为块的方法以实现灵活性。 Ruby 强调数据处理中的对象可定制性，这与 Python 以迭代为中心的方法形成鲜明对比。 &lt;a href=&quot;https://hackernews.betacat.io/#ruby-vs-python-comes-down-to-the-for-loop-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40111184&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我应该喜欢生物学（2020）&lt;/stitle>; &lt;id>;https://jsomers.net/i-should-have- Loved-biology/&lt;/id>; &lt;更新>;2024-04-21T19:05:50.384296Z&lt;/更新>; &lt;link href=&quot;https://jsomers.net/i-should-have-loved-biology/&quot;/ >; &lt;作者>; &lt;名称>;paulgb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=paulgb&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src= “https://user-images.githubusercontent.com/21294/94627410-73b6c680-028b-11eb-9501-d7453af56106.png”样式=“宽度：220像素；高度：136像素；” />;&lt;br />;作者对生物学教学方式平淡无奇表示失望，因为生物学仅仅作为事实的集合，没有应有的敬畏，错过了科学发现的兴奋和生命过程的错综复杂。直到后来，他们通过研究和例子才认识到生物学的奇迹，这些研究和例子强调了细胞和生命的动态、自我调节本质。 &lt;a href=&quot;https://hackernews.betacat.io/#i-should-have-loved-biology-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40103590&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pico.sh – 黑客实验室&lt;/stitle>; &lt;id>;https://github.com/picosh/pico&lt;/id>; &lt;更新>;2024-04-22T03： 05:50.384817Z&lt;/updated>; &lt;link href=&quot;https://github.com/picosh/pico&quot;/>; &lt;作者>; &lt;name>;modinfo&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=modinfo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/789e358dbf588a7815ded5b854dab00fede97ba39ee18f35fec21f13fcd082b0/picosh/pico&quot; style=&quot;width: 220px;高度：110px；” />;&lt;br />;本文描述了基于映像的部署过程，其中映像存储在 ghcr.io 上，并使用定义服务的生产环境文件。对于迁移，访问数据库并在拉取更改后运行“制作最新版本”就足够了。 &lt;a href=&quot;https://hackernews.betacat.io/#pico-sh-hacker-labs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40111022&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Infinitown&lt;/stitle>; &lt;id>;https://demos.littleworkshop.fr/infinitown&lt;/id>; &lt;更新>;2024-04-22T01:05:50.385367Z&lt;/更新>; &lt; link href=&quot;https://demos.littleworkshop.fr/infinitown&quot;/>; &lt;author>; &lt;name>;memalign&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=memalign&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://demos.littleworkshop.fr/img/og/infinitown.jpg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;这个 WebGL 实验试图创建一个充满活力且观看起来很有趣的程序化城市。首先，我们生成随机城市街区的有限网格。然后，使用一些技巧，视点围绕这个网格，从而创造出无尽的城市景观的错觉。 &lt;a href=&quot;https://hackernews.betacat.io/#infinitown&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 40110638&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;软件架构中最大的想法草图（2022）&lt;/stitle>; &lt;id>;https://www.oilshell.org/blog/2022/03/backlog-arch.html&lt;/id>; &lt;updated>; 2024-04-22T03:05:50.385858Z&lt;/更新>; &lt;link href=&quot;https://www.oilshell.org/blog/2022/03/backlog-arch.html&quot;/>; &lt;作者>; &lt;名称>;thunderbong &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.oilshell .org/blog/2022/02/bytes-text-Page-1.drawio.svg&quot; style=&quot;宽度：220px；高度：180px；&quot; />;&lt;br />;这篇文章讨论了软件架构中窄腰的概念，这对于构建可扩展和可互操作系统的系统至关重要，并探讨了如何将这一想法应用于软件开发的各个方面。作者邀请讨论，并建议将这些原则应用到实际项目中，而不是简单地写架构。 &lt;a href=&quot;https://hackernews.betacat.io/#a-sketch-of-the-biggest-idea-in-software-architecture-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40103375&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;误差最小的平面地图：Gott-Goldberg-Vanderbei 投影&lt;/stitle>; &lt;id>;https://vanderbei。 Princeton.edu/planets_webgl/GottPlanets.html&lt;/id>; &lt;更新>;2024-04-22T03:05:50.386375Z&lt;/更新>; &lt;link href=&quot;https://vanderbei.princeton.edu/planets_webgl/GottPlanets.html &quot;/>; &lt;author>; &lt;name>;westcort&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=westcort&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章描述了一个交互式平面地球地图，其中单击任一半球以该点为中心，并提供旋转圆盘和重置的选项。提供了从地图制作物理磁盘的说明，以及相关资源和文章的链接。 &lt;a href=&quot;https://hackernews.betacat.io/#a-flat-map-with-the-least-error-possible-the-gott-goldberg-vanderbei-projection&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40111105&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;问 HN：哪些书籍/资源可以理解现代汇编器？&lt;/stitle>; &lt;id>;https:// news.ycombinator.com/item?id=40104823&lt;/id>; &lt;更新>;2024-04-21T21:05:50.387356Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id =40104823&quot;/>; &lt;作者>; &lt;名称>;throtaway63467&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=throtaway63467&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文为那些希望提高对 LLVM、JIT 和性能编码的汇编器的理解的人推荐资源和方法，推荐书籍，检查编译器生成的代码，并用汇编逐步重写 C 程序。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-which-books-resources-to-understand-modern-assembler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40104823&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Unix 仇恨者手册 [pdf] (1994)&lt;/stitle>; &lt;id>;https://simson.net/ref/ugh.pdf &lt;/id>; &lt;更新>;2024-04-22T02:05:50.387841Z&lt;/更新>; &lt;link href=&quot;https://simson.net/ref/ugh.pdf&quot;/>; &lt;作者>; &lt;名称>;udev4096&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=udev4096&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文讨论了 UNIX-HATERS 手册，强调了伯克利与LSD 和 Unix 一样值得关注，并详细介绍了该书的出版信息，包括版权声明及其发行网络。文章还提到了出版商的历史以及对计算机和商业图书出版质量的承诺。 &lt;a href=&quot;https://hackernews.betacat.io/#the-unix-haters-handbook-pdf-1994&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40110729&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;协程和效果&lt;/stitle>; &lt;id>;https://without.boats/blog/coroutines-and-effects/&lt;/id>; &lt;更新>;2024-04- 21T18:05:50.388342Z&lt;/updated>; &lt;link href=&quot;https://without.boats/blog/coroutines-and-effects/&quot;/>; &lt;author>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章探讨了效果系统和协程之间的相似之处，强调了它们的同构性质和用户体验差异。它对比了协程如何屈服于其调用者，而有效的表达式如何屈服于处理程序，从而影响编程语言中的设计和错误处理。 &lt;a href=&quot;https://hackernews.betacat.io/#coroutines-and-effects&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40097681&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;通过自适应 N-Gram 并行解码无损加速 LLM&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2404.08698&lt;/id>; &lt;updated>;2024-04-21T18:05 ：50.389347Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2404.08698&quot;/>; &lt;作者>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb. png&quot; 样式=&quot;宽度：220 像素；高度：129 像素；&quot; />;&lt;br />;本文介绍了自适应 N 元语法并行解码 (ANPD)，它可以在无需额外资源的情况下加快 LLM 的令牌生成速度，从而实现高达 3.67 倍的速度提升。 ANPD 将快速 N 元语法起草与验证阶段相结合，保持输出质量。 &lt;a href=&quot;https://hackernews.betacat.io/#lossless-acceleration-of-llm-via-adaptive-n-gram-parallel-decoding&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40107787&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Simon Tatham 的便携式拼图收藏&lt;/stitle>; &lt;id>;https://www.chiark.greenend.org.uk/~sgtatham/ puzzles/&lt;/id>; &lt;更新>;2024-04-21T18:05:50.389875Z&lt;/更新>; &lt;link href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/puzzles/&quot;/>; &lt;作者>; &lt;名称>;r2b2 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=r2b2&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://www.chiark.greenend.org.uk/~sgtatham/puzzles/blackbox-web.png&quot; style=&quot;宽度：220px 高度：220px；&quot; />;&lt;br />;本文讨论了一系列可用于 Unix、Windows 和 Web 小程序的单人益智游戏；由于作者的硬件问题，MacOS 更新将停止。游戏可以在多个平台上运行，并且在 MIT 许可下开源。 &lt;a href=&quot;https://hackernews.betacat.io/#simon-tatham-s-portable-puzzle-collection&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40107456&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：在 Three.js 和 GLSL 中体积渲染 3D 数据&lt;/stitle>; &lt;id>;https://github.com/SuboptimalEng/volume-rendering&lt;/id>; &lt;更新>;2024-04-21T17:05:50.390715Z&lt;/更新>; &lt;link href=&quot;https://github.com/SuboptimalEng/volume-rendering&quot;/>; &lt;作者>; &lt;名称>;SuboptimalEng&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=SuboptimalEng&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/SuboptimalEng/体积渲染/main/_demos/foot-01.png&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;本文讨论了在 Three.js、GLSL 和 React 中对 3D 医疗数据进行体渲染的个人实现，并在网上发布了一个演示。它需要下载大数据文件来渲染图像，因为这些文件不包含在 GitHub 存储库中。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-volume-rendering-3d-data-in- Three-js-and-glsl&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40107112&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;展示 HN：使用 WebGPU 探索因陀罗珍珠&lt;/stitle>; &lt;id>;https://medium.com/@philogb/exploring -indras-pearls-with-webgpu-e0f4a745c2f6&lt;/id>; &lt;更新>;2024-04-21T14:05:50.391097Z&lt;/更新>; &lt;link href=&quot;https://medium.com/@philogb/exploring-indras -pearls-with-webgpu-e0f4a745c2f6&quot;/>; &lt;作者>; &lt;名称>;philogb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=philogb&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:1200/1*T_P7pQ9YFnzF4oXwIw15-A.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;本文讨论了作者受《Indra&#39;s Pearls》一书启发而设计的交互式可视化项目，该项目研究了莫比乌斯变换及其复杂的模式。可视化使用高级图形来探索书中介绍的数学概念，例如极限集和 Maskit 参数化。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-exploring-indra-s-pearls-with-webgpu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40098597&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我制作了一个开源 Windows 应用程序来倒带和搜索屏幕上的所有内容&lt;/stitle>; &lt;id>;https://tonoko.notion.site/I-在 Windows-184d1a9d5edb494dba0c2f46d311ec5c 上制作了一个开源应用程序来倒带搜索所有发生的事情&lt;/id>; &lt;更新>;2024-04-21T13:05:50.391490Z&lt;/已更新>; &lt;link href=&quot;https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c &quot;/>; &lt;author>; &lt;name>;haruharuha&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=haruharuha&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.notion.so/images/meta/default.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;一款新工具，可将您的日常工作应用程序融为一体。这是您和您的团队的一体化工作空间 &lt;a href=&quot;https://hackernews.betacat.io/#i-made-an-open-source-windows-app-to-rewind -and-search-everything-on-screen&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40105371&quot; target=&quot;_blank&quot; >;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我们有史以来最大的河流捕获？&lt;/stitle>; &lt;id>;https://theoceancleanup.com/updates/the-ocean-cleanup-makes-biggest-ever-river-catch-in-guatemala/&lt;/id>; &lt;更新>;2024-04- 21T15:05:50.391879Z&lt;/updated>; &lt;link href=&quot;https://theoceancleanup.com/updates/the-ocean-cleanup-makes-biggest-ever-river-catch-in-guatemala/&quot;/>; &lt;作者>; &lt;name>;nickburns&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=nickburns&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //assets.theoceancleanup.com/scaled/700x393.75/app/uploads/2024/04/Medium-230731-Interceptor-006-Extraction-Drone-1-1.jpg&quot; style=&quot;width: 220px height: 124px; ;” />;&lt;br />;海洋清理公司的拦截器 006 在危地马拉的拉斯瓦卡斯河拦截了数量空前的废物，阻止其到达加勒比海。这一努力标志着今年的一个强劲开局，展示了全球抗击海洋塑料污染网络的影响。 &lt;a href=&quot;https://hackernews.betacat.io/#our-biggest-ever-river-catch&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40077557&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;小世界地图&lt;/stitle>; &lt;id>;https://github.com/tinyworldmap/tiny-world-map&lt;/id>; &lt;更新>;2024-04-21T12:05 ：50.392262Z&lt;/updated>; &lt;link href=&quot;https://github.com/tinyworldmap/tiny-world-map&quot;/>; &lt;author>; &lt;name>;bopjesvla&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=bopjesvla&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/tinyworldmap/tiny-world-map/gh-页面/images/zoomed-mid.png&quot; style=&quot;宽度：220px；高度：162px；&quot; />;&lt;br />;Tinyworldmap 是一款高效的客户端渲染的 Leaflet 地图，支持所有缩放级别，文件大小较小，甚至在旧手机上也针对性能进行了优化。它通过服务工作者在网络应用程序中提供离线功能，在没有互联网可用时用本地图块替换标准地图。 &lt;a href=&quot;https://hackernews.betacat.io/#tiny-world-map&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40104774&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Penzai：用于构建、编辑和可视化神经网络的 JAX 研究工具包&lt;/stitle>; &lt;id>;https://github.com/google-deepmind/penzai&lt;/id>; &lt;更新>;2024- 04-21T17:05:50.393027Z&lt;/更新>; &lt;link href=&quot;https://github.com/google-deepmind/penzai&quot;/>; &lt;作者>; &lt;name>;mccoyb&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=mccoyb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/google-deepmind/penzai/main /docs/_static/readme_teaser.png&quot; style=&quot;宽度：220px；高度：204px；&quot; />;&lt;br />;Penzai 是一个辅助训练后模型管理的 JAX 库，提供逆向工程和模型操作工具。它具有神经网络结构、pytree 编辑和调试功能，提供了一套用于复杂模型交互的模块。 &lt;a href=&quot;https://hackernews.betacat.io/#penzai-jax-research-toolkit-for-building-editing-and-visualizing-neural-nets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40107007&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从一名卡车司机到 38 岁的 Ruby on Rails 开发人员&lt;/stitle>; &lt;id>;https://www.writesoftwarewell.com /lorry-driver-to-rails-developer-at-38/&lt;/id>; &lt;更新>;2024-04-21T14:05:50.393422Z&lt;/更新>; &lt;link href=&quot;https://www.writesoftwarewell.com /lorry-driver-to-rails-developer-at-38/&quot;/>; &lt;author>; &lt;name>;ksec&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ksec&lt;/uri >; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.writesoftwarewell.com/content/images/2024/04/pedro.jpeg&quot; style=&quot;宽度：220px；高度：221px ;” />;&lt;br />;本文重点介绍了 Pedro David Garcia Lopez 38 岁时从卡车司机到 Ruby on Rails 开发人员的励志历程，挑战了科技行业的年龄规范，并强调了跟随的信念：永远不会太晚一个人的梦想。它提倡终身学习和在工作中寻找乐趣，同时也深入研究佩德罗在编程领域的个人成长和职业发展。 &lt;a href=&quot;https://hackernews.betacat.io/#from-a-lorry-driver-to-ruby-on-rails-developer-at-38&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40105773&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;拜耳正在摆脱老板并要求员工“自我组织”&lt;/stitle>; &lt;id>;https://fortune .com/europe/2024/04/11/pharmaceutical-giant-bayer-ceo-bill-anderson-rid-bosses-staff-self-organize-save-2-billion/&lt;/id>; &lt;更新>;2024-04- 21T09:05:50.393810Z&lt;/更新>; &lt;link href=&quot;https://fortune.com/europe/2024/04/11/pharmaceutical-giant-bayer-ceo-bill-anderson-rid-bosses-staff-self -organize-save-2-billion/&quot;/>; &lt;作者>; &lt;名称>;cwwc&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cwwc&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://fortune.com/img-assets/wp-content/uploads/2024/04/GettyImages-1697748485-e1712832533312.jpg?w=1440&amp;q=75”样式= “宽度：220 像素；高度：147 像素；” />;&lt;br />;拜耳正在取消大部分公司手册和中层管理人员，授权 10 万名员工进行自我管理，以节省 21.5 亿美元。受孟山都收购案的影响，这家制药巨头的市场价值和管理结构不断变化。 &lt;a href=&quot;https://hackernews.betacat.io/#bayer-is-getting-rid-of-bosses-and-asking-staff-to-self-organize&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40102779&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;编程主要是思考（2014）&lt;/stitle>; &lt;id>;http://agileotter.blogspot.com/2014 /09/programming-is-mostly-thinking.html&lt;/id>; &lt;更新>;2024-04-21T08:05:50.394175Z&lt;/更新>; &lt;link href=&quot;http://agileotter.blogspot.com/2014/ 09/programming-is-mostly-thinking.html&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/a/AVvXsEhdkNzRaci-KYXIX_W_CHFraCMbtPuDAm-jdmu02gSODAz-fsm7HERp5p_BWet4qvp45F-ro-hA32njbHjBe21t-ucJpzlUy-dJTw8VtaX aBF1ZxWzg4emDYhW4UdRnisSj4F5ncq_wl1mYA9WsGjhVUxwJ3Sn-pEGPR5tJBIAPqUM1UoLVkVp606kU=s148&quot;样式= “宽度：220 像素；高度：272 像素；” />;&lt;br />;程序员的一天通常只涉及六个小时的核心编程工作，其余时间则充满中断和不太具体的任务。当版本控制系统崩溃时，他们可能会在大约 30 分钟内重新输入一天的代码，这强调了编码更多的是思考而不是打字。 &lt;a href=&quot;https://hackernews.betacat.io/#programming-is-mostly-thinking-2014&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40103407&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;“去中心化”ID 系统的危险&lt;/stitle>; &lt;id>;https://paper.wf/crypto-agorism/the-dangers-of-decentralized-id-systems&lt;/stitle>; &lt;id>;https://paper.wf/crypto-agorism/the-dangers-of-decentralized-id-systems&lt;/ id>; &lt;更新>;2024-04-21T20:05:50.394558Z&lt;/更新>; &lt;link href=&quot;https://paper.wf/crypto-agorism/the-dangers-of-decentralized-id-systems&quot;/>; &lt;author>; &lt;name>;anonymous123&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=anonymous123&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;去中心化身份协议声称增强隐私并防止身份盗窃，但很大程度上依赖于政府身份识别系统，该系统将无国籍和无证人员排除在外。有些人的目标是使用生物识别技术或社会信任来实现包容性替代方案，但它们面临着安全、隐私和国家接受度的挑战。 &lt;a href=&quot;https://hackernews.betacat.io/#dangers-of-decentralized-id-systems&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40108489&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Domino 30 分钟送达保证失败&lt;/stitle>; &lt;id>;https://thehustle.co/originals/the-failure-of-the-dominos-30-分钟交付保证&lt;/id>; &lt;更新>;2024-04-22T02:05:50.394938Z&lt;/更新>; &lt;link href=&quot;https://thehustle.co/originals/the-failure-of-the-dominos -30分钟交付保证”/>; &lt;作者>; &lt;名称>;gaurang_tandon&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=gaurang_tandon&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://20627419.fs1.hubspotusercontent-na1.net/hub/20627419/hubfs/share-3.png?width=595&amp;height=400&amp;name=share-3.png&quot;样式=“宽度：220像素；高度：148像素；” />;&lt;br />;Domino 激进的 30 分钟送达保证导致了多起事故和诉讼，最终终止了该政策。尽管政策发生变化，送货司机仍然面临着快速送货的高风险和压力。 &lt;a href=&quot;https://hackernews.betacat.io/#the-failure-of-the-domino-s-30-minute-delivery-guarantee&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40104493&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;你不应该在 PC 上运行 BSD&lt;/stitle>; &lt;id>;https://michal.sapka.me/bsd/为什么-not-bsd/&lt;/id>; &lt;更新>;2024-04-21T17:05:50.395312Z&lt;/更新>; &lt;link href=&quot;https://michal.sapka.me/bsd/why-not-bsd/ &quot;/>; &lt;author>; &lt;name>;jaypatelani&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jaypatelani&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;切换到不同的 GNU/Linux 发行版相对容易，因为它们共享相同的底层系统，而 BSD 差异很大，导致硬件和软件支持方面的挑战。 BSD 需要仔细的硬件兼容性检查，并提供不太流行的软件，需要手动解决问题。 &lt;a href=&quot;https://hackernews.betacat.io/#you-shouldn-t-run-a-bsd-on-a-pc&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40106973&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;反市政宽带预算修正案在纽约被否决&lt;/stitle>; &lt;id>;https://communitynets.org/content/anti-muni -broadband-budget-amendment-gets-nixed-new-york&lt;/id>; &lt;更新>;2024-04-21T17:05:50.395686Z&lt;/更新>; &lt;link href=&quot;https://communitynets.org/content/ anti-muni-broadband-budget-amendment-gets-nixed-new-york&quot;/>; &lt;作者>; &lt;名称>;leotravis10&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=leotravis10&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://communitynets.org/sites/default/files/styles/medium/public/2024-04/New%20York%20State% 20Seal.png?itok=reE-TnnP&quot; style=&quot;宽度: 220px 高度: 220px;&quot; />;&lt;br />;纽约州议会通过了一项未经修正的预算法案，该法案可能会阻碍市政宽带的发展，从而保留了旨在促进此类项目的拨款计划。尽管来自大型电信游说者的压力，这种拒绝保护了社区宽带选择，并防止仅限于“无服务和服务不足”的地区。 &lt;a href=&quot;https://hackernews.betacat.io/#anti-municipal-broadband-budget-amendment-gets-nixed-in-new-york&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40107201&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;日常 API 的设计 (2022)&lt;/stitle>; &lt;id>;https://www.roguelynn.com/talks/everyday- apis/&lt;/id>; &lt;更新>;2024-04-21T16:05:50.396061Z&lt;/更新>; &lt;link href=&quot;https://www.roguelynn.com/talks/everyday-apis/&quot;/>; &lt;作者>; &lt;name>;resiros&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=resiros&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;好的 API 具有文档等品质的特点和简单性，这将通过设计良好和不良的 API 的示例来说明。 Joshua Bloch 和 Martin Fowler 等专家的演讲提供了有关 API 设计原则的见解。 &lt;a href=&quot;https://hackernews.betacat.io/#the-design-of-everyday-apis-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40106500&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;