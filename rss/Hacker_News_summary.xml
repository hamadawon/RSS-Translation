<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-02-13T10:03:47.338918Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;稳定音频演示&lt;/stitle>; &lt;id>;https://stability-ai.github.io/stable-audio-demo/&lt;/id>; &lt;更新>;2024- 02-13T04:03:28.617710Z&lt;/updated>; &lt;link href=&quot;https://stability-ai.github.io/stable-audio-demo/&quot;/>; &lt;作者>; &lt;name>;beefman&lt;/name>; &lt; uri>;https://news.ycombinator.com/user?id=beefman&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章详细介绍了一种以 44.1kHz 生成可变长度音乐和音效的模型立体声，提供不同音乐风格的示例。它还评估了模型的音频保真度功能，注意到它与原始录音非常接近。 &lt;a href=&quot;https://hackernews.betacat.io/#stable-audio-demo&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=39354138&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;约翰·洛克的煎饼食谱（2021）&lt;/stitle>; &lt;id>;https://rarecooking.com/2021/12/14/john-lockes-recipe-for-pancakes/&lt;/id>; &lt;更新>;2024-02-13T06:03:28.620605Z&lt;/更新>; &lt;link href=&quot;https://rarecooking.com/2021/12/14/john-lockes-recipe-for-pancakes/&quot;/>; &lt;作者>; &lt;name>;benbreen&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=benbreen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://rarecooking.files.wordpress.com/2021/12/2021-12-14-10.48.28.jpg?w=676&amp;h=507&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;这篇文章讨论了哲学家约翰·洛克在博德利图书馆的论文中发现的一种古老的煎饼食谱，作者尝试过，发现它味道丰富且美味。该配方涉及奶油、鸡蛋、面粉、黄油、肉豆蔻和橙花水，制作出的煎饼介于经典英式煎饼和苏格兰煎饼之间。 &lt;a href=&quot;https://hackernews.betacat.io/#john-locke-s-recipe-for-pancakes-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39354870&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;神经网络训练产生美丽的分形&lt;/stitle>; &lt;id>;https://sohl-dickstein.github.io/2024/02/12/fractal.html&lt; /id>; &lt;更新>;2024-02-13T01:03:28.621635Z&lt;/更新>; &lt;link href=&quot;https://sohl-dickstein.github.io/2024/02/12/fractal.html&quot;/>; &lt;作者>; &lt;name>;telotortium&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=telotortium&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了作者的探索分形与人工神经网络之间的关系，揭示了成功或失败的神经网络训练的超参数之间的边界呈现出分形结构。它还强调了元学习（一种传统上手工设计的人工智能管道的学习方法）对人工智能未来的潜在影响。 &lt;a href=&quot;https://hackernews.betacat.io/#neural-network-training-makes-beautiful-fractals&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39349992&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;AMD 的轻度混合策略：华硕 ROG Ally 中的 Ryzen Z1&lt;/stitle>; &lt;id>;https://chipsandcheese.com/2024/02/12/amds-mild-hybrid -strategy-ryzen-z1-in-asuss-rog-ally/&lt;/id>; &lt;更新>;2024-02-13T08:03:28.622138Z&lt;/更新>; &lt;link href=&quot;https://chipsandcheese.com/2024 /02/12/amds-mild-hybrid-strategy-ryzen-z1-in-asuss-rog-ally/&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/ 01/zen4c_hc2023_slide.jpg?resize=688%2C240&amp;ssl=1&quot; style=&quot;宽度：220px；高度：77px；&quot; />;&lt;br />;本文讨论了 AMD 的 Ryzen Z1，这是一种半混合核心配置，由华硕在 ROG Ally 中实现，它结合了高性能 Zen 4 核心和密度优化的 Zen 4c 核心。它强调了AMD采用的性能优化、时钟速度差异以及保守的混合策略，并将其与英特尔的做法进行了对比。 &lt;a href=&quot;https://hackernews.betacat.io/#amd-s-mild-hybrid-strategy-ryzen-z1-in-asus-s-rog-ally&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39355343&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;视觉演算&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Visual_calculus&lt;/id >; &lt;更新>;2024-02-13T02:03:28.622617Z&lt;/更新>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Visual_calculus&quot;/>; &lt;作者>; &lt;名称>;larion1&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=larion1&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia /commons/thumb/1/16/Mamikons_Theorem.svg/300px-Mamikons_Theorem.svg.png&quot; style=&quot;宽度：220px；高度：89px；&quot; />;&lt;br />;Mamikon Mnatsakanian 的视觉微积分方法简化了复杂的积分微积分问题，首先通过几何问题进行了演示。他的定理指出，无论原始曲线的形状如何，切线扫描的面积等于其切线簇的面积。 &lt;a href=&quot;https://hackernews.betacat.io/#visual-calculus&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=39353207&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;酷 URI 可能很丑&lt;/stitle>; &lt;id>;https://unterwaditzer.net/2023/cool-uris.html&lt;/id>; &lt;updated>;2024-02-13T08:03:28.623076Z&lt; /updated>; &lt;link href=&quot;https://unterwaditzer.net/2023/cool-uris.html&quot;/>; &lt;作者>; &lt;name>;aendruk&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=aendruk&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;为了简单起见，作者将博客从 GitHub 页面移至 Cloudflare Pages，但在 Cloudflare 的静态站点托管更改了所有博客文章的格式时遇到了问题URL 和发出的永久重定向。由于对这种缺乏控制和可能出现链接损坏的情况感到不满，他们切换回 GitHub 页面，保留其原始 URL 格式。 &lt;a href=&quot;https://hackernews.betacat.io/#cool-uris-can-be-ugly&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39345439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;数学作为一种习惯&lt;/stitle>; &lt;id>;https://kidswholovemath.substack.com/p/math-as-a-habit&lt;/id>; &lt;更新>;2024- 02-13T04:03:28.624148Z&lt;/更新>; &lt;link href=&quot;https://kidswholovemath.substack.com/p/math-as-a-habit&quot;/>; &lt;作者>; &lt;名称>;sebg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/# math-as-a-habit&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39354155&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;香港废弃村庄&lt;/ stitle>; &lt;id>;https://www.cnn.com/2024/02/13/style/hong-kong-abandoned-villages-stefan-irvine-photographer-hnk/index.html&lt;/id>; &lt;更新>;2024 -02-13T02:03:28.625055Z&lt;/更新>; &lt;link href=&quot;https://www.cnn.com/2024/02/13/style/hong-kong-abandoned-villages-stefan-irvine-photographer- hnk/index.html&quot;/>; &lt;作者>; &lt;名称>;keepamovin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=keepamovin&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://media.cnn.com/api/v1/images/stellar/prod/201211100301-01b-style-abandoned-churches-photos-restricted.jpg?q=x_3,y_6, h_1684,w_2993,c_crop/h_144,w_256&quot; style=&quot;宽度: 220px; height: 147px;&quot; />;&lt;br />;摄影师 Stefan Irvine 在他的著作《香港废弃村庄》中记录了香港的废弃村庄，揭示了与城市景观的对比。这些村庄因城市移民而被遗弃，一些地区正在被大自然开垦，一些地区正在为旅游业而复兴，这反映出人们对香港遗产的日益重视。&lt;a href=&quot;https://hackernews.betacat.io/#abandoned-villages-of-hong-kong&quot; target=&quot; _blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39353231&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/ Entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Elixir 编写 Shell 脚本&lt;/stitle>; &lt;id>;https://arathunku.com /b/2024/shell-scripting-with-elixir/&lt;/id>; &lt;更新>;2024-02-13T06:03:28.625550Z&lt;/更新>; &lt;link href=&quot;https://arathunku.com/b/2024 /shell-scripting-with-elixir/&quot;/>; &lt;author>; &lt;name>;bo0tzz&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bo0tzz&lt;/uri>; &lt;/author>; &lt; content type=&quot;html&quot;>;本文讨论了作者在处理复杂脚本方面相对于 Perl、Ruby 或 Python 等其他语言的偏好，强调了它的多功能性、添加依赖项的简便性以及 LiveBook 带来的最新改进。作者还分享了他们使用 Elixir 执行各种任务的经验，例如显示天气、转换 CSV 文件、创建 Telegram 机器人，并强调了其出色的开箱即用默认设置和符合人体工程学的开发人员体验。 &lt;a href=&quot;https://hackernews.betacat.io/#shell-scripting-with-elixir&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39342863&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;家庭助理：三年后&lt;/stitle>; &lt;id>;https://eamonnsullivan.co.uk/posts-output/home-automation-third-years/2024-02-11- home-assistant-三年后/&lt;/id>; &lt;更新>;2024-02-13T01:03:28.626029Z&lt;/更新>; &lt;link href=&quot;https://eamonnsullivan.co.uk/posts-output/ home-automation-third-years/2024-02-11-home-assistant-third-years-later/&quot;/>; &lt;author>; &lt;name>;eamonnsullivan&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=eamonnsullivan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://eamonnsullivan.co.uk/posts/home-automation-third-years/mainlights.png “样式=“宽度：220像素；高度：281像素；” />;&lt;br />;作者分享了他使用 Home Assistant 的三年历程，赞赏它的灵活性和广泛的集成性，使他能够使用来自不同制造商的设备。他强调了本地协议相对于云服务的可靠性的重要性，以及向更明智的设备选择和更微妙的自动化的转变。 &lt;a href=&quot;https://hackernews.betacat.io/#home-assistant-third-years-later&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39345122&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;GOFAI 的兴衰&lt;/stitle>; &lt;id>;https://billwadge.com/2024/02/12/the-rise-and-fall-of-gofai/ &lt;/id>; &lt;更新>;2024-02-13T05:03:28.626500Z&lt;/更新>; &lt;link href=&quot;https://billwadge.com/2024/02/12/the-rise-and-fall-of- gofai/&quot;/>; &lt;author>; &lt;name>;herodotus&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=herodotus&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://billwadge.files.wordpress.com/2024/02/screenshot-2024-02-12-at-5.39.20e280afam.png?w=1024&quot; style=&quot;宽度：220px；高度： 181 像素；” />;&lt;br />;本文详细介绍了 Good Old Fashioned AI (GOFAI) 的兴起和衰落，这是一个基于符号推理的系统，起源于 1956 年达特茅斯人工智能会议。尽管取得了重大胜利，GOFAI 在将所有数学公理化的尝试中遇到了挫折，导致其最终被机器学习等非符号推理技术取代。 &lt;a href=&quot;https://hackernews.betacat.io/#the-rise-and-fall-of-gofai&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=39344934&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;波罗的海海底发现的城墙“可能是欧洲最古老的巨型建筑”&lt;/stitle>; &lt;id>;https://www.theguardian.com/science/2024/feb/ 12/石器时代墙在波罗的海底部发现的可能是欧洲最古老的巨型结构&lt;/id>; &lt;更新>;2024-02-12T22:03:28.626972Z&lt;/更新>; &lt;link href=&quot;https://www.theguardian.com/science/2024/feb/12/stone-age-wall-found-at-bottom-of-baltic-sea-may-be-europes-oldest-megastruct &quot;/>; &lt;author>; &lt;name>;vinni2&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=vinni2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.guim.co.uk/img/media/886a8e3be019677e480fb695bdc78260ac891dcd/144_0_1228_737/master/1228.jpg?width=465&amp;dpr=1&amp;s=none&quot; style=&quot;宽度：220px；高度：132px；&quot; />;&lt;br />;德国海岸附近的波罗的海海底发现了一堵古老的城墙，可能是欧洲最古老的人造巨型建筑。研究人员认为，一万多年前，它就被石器时代社会用作狩猎工具。 &lt;a href=&quot;https://hackernews.betacat.io/#wall-found-at-bottom-of-baltic-sea-may-be-europes-oldest-megastruct&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39350700&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;分析 Spotify 流历史记录&lt;/stitle>; &lt;id>;https://ericchiang.github.io/post/spotify/ &lt;/id>; &lt;更新>;2024-02-13T05:03:28.627484Z&lt;/更新>; &lt;link href=&quot;https://ericchiang.github.io/post/spotify/&quot;/>; &lt;作者>; &lt;名称>;ericchiang &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ericchiang&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ericchiang.github .io/post/imgs/spotify_downloads.png&quot; style=&quot;宽度：220px；高度：213px；&quot; />;&lt;br />;本文讨论了作者对其个人 Spotify 流媒体历史的探索，该历史跨越十多年，包括超过 120,000 个事件。作者分析了趋势、顶级艺术家以及随着时间的推移对其使用的影响，欣赏怀旧之旅并鼓励其他人也这样做。 &lt;a href=&quot;https://hackernews.betacat.io/#analyzing-spotify-stream-history&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=39350541&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;我从事 Arm 架构工作二十年&lt;/stitle>; &lt;id>;https://marcin.juszkiewicz.com.pl/2024/02/12/twenty-years-of-my- work-with-arm-architecture/&lt;/id>; &lt;更新>;2024-02-13T03:03:28.628447Z&lt;/更新>; &lt;link href=&quot;https://marcin.juszkiewicz.com.pl/2024/02/ 12/twenty-years-of-my-work-with-arm-architecture/&quot;/>; &lt;author>; &lt;name>;pabs3&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pabs3 &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://marcin.juszkiewicz.com.pl/files/images/hrw-512.jpg&quot; style=&quot;width: 220px;高度：220px；” />;&lt;br />;作者回顾了他们从购买 Sharp Zaurus SL-5500 Linux PDA 到成为 Linux 社区的重要贡献者的 20 年历程。他们强调了自己从业余爱好者到全职开发人员的进步，致力于 OpenZaurus、OpenEmbedded、Poky Linux 等项目，并最终通过 Linaro 和 Red Hat 改进了 Linux 中的 Arm 支持。 &lt;a href=&quot;https://hackernews.betacat.io/#twenty-years-of-my-work-with-arm-architecture&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39353784&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;时间序列预测与回归：非正式指南&lt;/stitle>; &lt;id>;https://www.amorphousdata.com/blog/time-series-vs -回归&lt;/id>; &lt;更新>;2024-02-12T22:03:28.628913Z&lt;/更新>; &lt;link href=&quot;https://www.amorphousdata.com/blog/time-series-vs-regression&quot;/>; &lt;author>; &lt;name>;rdli&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rdli&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了重要性详细介绍了各个领域的预测分析，并详细介绍了不同的预测方法，例如简单移动平均线 (SMA)、指数移动平均线 (EMA) 和自回归综合移动平均线 (ARIMA)。它还强调了回归分析的作用以及协变量在时间序列预测中的使用，强调了预测模型不断更新和调整的必要性。 &lt;a href=&quot;https://hackernews.betacat.io/#time-series-forecasting-vs-regression-an-informal-guide&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=39350866&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;vDPA：支持 Linux 和 QEMU 中的块设备&lt;/stitle>; &lt;id>;https://stefano-garzarella.github.io/posts/2024- 02-12-vdpa-blk/&lt;/id>; &lt;更新>;2024-02-12T20:03:28.629376Z&lt;/更新>; &lt;link href=&quot;https://stefano-garzarella.github.io/posts/2024- 02-12-vdpa-blk/&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/作者>; &lt;内容类型 =“html”>;&lt;img src =“https://stefano-garzarella.github.io/img/vdpa_overview.png”样式 =“宽度：220 像素；高度：204 像素；” />;&lt;br />;本文讨论了 vDPA 设备，重点介绍了它们的统一软件堆栈以及模拟网络和块设备的能力。它还涵盖了 vDPA 在硬件和软件方面的实现，具有快速和慢速路径等功能，以及具有不同总线的 vDPA 设备的灵活性。 &lt;a href=&quot;https://hackernews.betacat.io/#vdpa-support-for-block-devices-in-linux-and-qemu&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39348997&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Caddy 的 SSO 插件中的安全缺陷 (2023)&lt;/stitle>; &lt;id>;https://blog.trailofbits.com/2023/09 /18/security-flaws-in-an-sso-plugin-for-caddy/&lt;/id>; &lt;更新>;2024-02-12T22:03:28.629850Z&lt;/更新>; &lt;link href=&quot;https://blog .trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy/&quot;/>; &lt;作者>; &lt;名称>;系泊装置&lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=mooreds&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/blog.trailofbits.com/wp-content/ uploads/2020/07/cropped-android-chrome-512x512-1.png?fit=512%2C512&amp;ssl=1&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;本文重点介绍了 Caddy Web 服务器的 caddy-security 插件中发现的 10 个严重安全漏洞，这些漏洞可能导致客户端代码执行和未经授权的访问等高风险攻击。它为每个问题提供即时和长期的解决方案，旨在改善整体安全状况并为更广泛的开发人员社区做出贡献。 &lt;a href=&quot;https://hackernews.betacat.io/#security-flaws-in-an-sso-plugin-for-caddy-2023&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=39351026&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;OOHtml – 面向对象的 HTML 实现&lt;/stitle>; &lt;id>;https://github.com/webqit/oohtml&lt;/id>; &lt;已更新>;2024-02-13T03:03:28.630329Z&lt;/updated>; &lt;link href=&quot;https://github.com/webqit/oohtml&quot;/>; &lt;author>; &lt;name>;ambigious7777&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=ambigious7777&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/bffd6ba2a22a86e65f089c2371a38af06ed63e61de7f0bec20df3225e33aeade/webqit/oohtml&quot;样式=“宽度：220像素；高度：110像素；” />;&lt;br />;面向对象的 HTML (OOHTML) 增强了标准 HTML 和 DOM，促进了更加直观、模块化和可重用的标记创作过程。它为面向对象的 HTML 方法提供了解决方案，使其成为构建单页应用程序和编写 Web 组件的宝贵工具，而无需任何其他工具。 &lt;a href=&quot;https://hackernews.betacat.io/#oohtml-object-orient-html-implementation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=39353516&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;PEP 701 – f 字符串的语法形式化&lt;/stitle>; &lt;id>;https://peps.python.org/pep-0701/&lt;/id>; &lt;updated>;2024- 02-12T23:03:28.630795Z&lt;/updated>; &lt;link href=&quot;https://peps.python.org/pep-0701/&quot;/>; &lt;作者>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;该文档提出了 Python 中 f 字符串的形式化语法，解除了 PEP 498 的一些限制，其中可以为最终用户和开发人员带来好处并降低维护成本。它还解决了 CPython 当前实现的局限性，并提出了可能有利于替代 Python 实现的改进建议。 &lt;a href=&quot;https://hackernews.betacat.io/#pep-701-syntropic-formalization-of-f-strings&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=39351494&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;NeuralRad 器官和肿瘤分割云服务背后的故事&lt;/stitle>; &lt;id>;https://howardchen.substack.com/p/after-switching-from -a-1080ti-to&lt;/id>; &lt;更新>;2024-02-13T05:03:28.631260Z&lt;/更新>; &lt;link href=&quot;https://howardchen.substack.com/p/after-switching-from- a-1080ti-to&quot;/>; &lt;作者>; &lt;名称>;coolwulf&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=coolwulf&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#the-story-behind-the-neuralrad-organ-and-tumor-segmentation-cloud-service&quot; target=&quot;_blank&quot;>;[摘要] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39346567&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GeneGPT，生物信息学工具增强法学硕士&lt;/stitle>; &lt;id>;https://github.com/ ncbi/GeneGPT&lt;/id>; &lt;更新>;2024-02-12T20:03:28.632216Z&lt;/更新>; &lt;link href=&quot;https://github.com/ncbi/GeneGPT&quot;/>; &lt;作者>; &lt;名称>;brianzelip &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=brianzelip&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets .com/2e2e359378a6ba9ac4b05b8267def63126e1a626142b1b227dda71d36cbd6206/ncbi/GeneGPT&quot;样式=&quot;宽度：220px； height: 110px;&quot; />;&lt;br />;GeneGPT 是一种工具增强型大语言模型 (LLM)，通过使用 NCBI Web API 改进了对生物医学信息的访问。它在 GeneTuring 任务中表现出色，以平均分 0.83 的成绩超越了之前的模型. &lt;a href=&quot;https://hackernews.betacat.io/#genegpt-a-tool-augmented-llm-for-bioinformatics&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=39348902&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;进化：快还是慢？蜥蜴帮助解决悖论&lt;/stitle>; &lt;id>;https://www.quantamagazine.org/evolution-fast-or- Slow-lizards-help-resolve-a-paradox-20240102/&lt;/id>; &lt;更新>;2024-02-12T19:03:28.632685Z&lt;/更新>; &lt;link href=&quot;https://www.quantamagazine.org/ Evolution-fast-or-slow-lizards-help-resolve-a-paradox-20240102/&quot;/>; &lt;author>; &lt;name>;rbanffy&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/12/StabilizingSelection-Anolis-carolinensis-ByDaysEdgeProds-Lede-scaled .webp&quot;样式=&quot;宽度：220px； height: 124px;&quot; />;&lt;br />;James Stroud 对迈阿密 Anolis 蜥蜴的研究表明，短期变异可以导致进化特征的长期稳定性。这一发现有助于解决“停滞悖论”，调和观察到的结果性状的快速变化以及物种进化的总体长期稳定性。&lt;a href=&quot;https://hackernews.betacat.io/#evolution-fast-or-slow-lizards-help-resolve-a-paradox&quot;目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39347936&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;漫步芝加哥 Pedway (2017)&lt;/stitle>; &lt;id>;https ://chicago.curbed.com/2017/9/21/16345460/chicago-pedway-walkway-tour-map-safety-directions&lt;/id>; &lt;更新>;2024-02-12T19:03:28.633158Z&lt;/更新>; &lt;link href=&quot;https://chicago.curbed.com/2017/9/21/16345460/chicago-pedway-walkway-tour-map-safety-directions&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=wglb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.vox-cdn. com/thumbor/Cay-K7z4DSkCchZ3D7wCC6D9pEY=/0x0:7952x5304/1200x800/filters:focal(3340x2016:4612x3288)/cdn.vox-cdn.com/uploads/chorus_image/image/56791947/shutterstock_10269716 59.1506013810.jpg&quot; 样式=&quot;宽度：220像素；高度： 147px;&quot; />;&lt;br />;芝加哥的 Pedway 是一个由隧道和桥梁组成的地下网络，连接 40 多个街区，每天有数千人在恶劣天气下使用，以方便出行。然而，它存在标识不一致、各种非正式通道、以及由于个别业主的操作而在晚上或周末不开放的部分。&lt;a href=&quot;https://hackernews.betacat.io/#a-walk-through-chicago-pedway-2017&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=39331169&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;/提要>;