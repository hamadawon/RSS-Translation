<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-06-24T14:02:35.943452Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;使用 ESPHome 将现有的有线门铃转换为智能门铃&lt;/stitle>; &lt;id>;https://frenck.dev/diy-smart-doorbell-for-just-2-dollar /&lt;/id>; &lt;更新>;2024-06-24T11:02:32.486149Z&lt;/更新>; &lt;link href=&quot;https://frenck.dev/diy-smart-doorbell-for-just-2-dollar/&quot; />; &lt;作者>; &lt;名称>;saberhagen&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=saberhagen&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://frenck.dev/wp-content/uploads/2019/08/diy-smart-doorbell-test-bench-1024x512.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文展示了如何使用 ESP-01S 芯片和继电器模块板将有线门铃转换为支持 WiFi 的智能门铃，价格约为 2 美元，无需焊接或需要电子专业知识。该项目允许用户与门铃按钮分开控制门铃铃声，并将其与家庭助理集成以实现自动化和通知。 &lt;a href=&quot;https://hackernews.betacat.io/#convert-an-existing-wired-doorbell-into-a-smart-doorbell-using-esphome&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40774270&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我喜欢博客和个人网站中的微特征&lt;/stitle>; &lt;id>;https://danilafe.com/blog/blog_microfeatures/ &lt;/id>; &lt;更新>;2024-06-24T11:02:32.488075Z&lt;/更新>; &lt;link href=&quot;https://danilafe.com/blog/blog_microfeatures/&quot;/>; &lt;作者>; &lt;名称>;fabianholzer&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=fabianholzer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://danilafe.com/blog /blog_microfeatures/gwern-sidenotes.png&quot; style=&quot;宽度: 220px 高度: 105px;&quot; />;&lt;br />;作者讨论了可以增强网站用户体验的各种“微功能”，包括旁注、目录、页面进度条、可链接标题、系列导航、对话、代码装饰器等等。这些功能可以提高读者的导航、可读性和整体生活质量，并且可以使用各种网站技术和工具轻松实现。 &lt;a href=&quot;https://hackernews.betacat.io/#microfeatures-i-love-in-blogs-and-personal-websites&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40774277&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;苹果杀死了 MicroLED 行业吗？&lt;/stitle>; &lt;id>;https://www.yolegroup.com/strategy-insights/did-apple-just -kill-the-microled-industry/&lt;/id>; &lt;更新>;2024-06-24T13:02:32.488564Z&lt;/更新>; &lt;link href=&quot;https://www.yolegroup.com/strategy-insights/did -apple-just-kill-the-microled-industry/&quot;/>; &lt;作者>; &lt;名称>;cubefox&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cubefox&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews.betacat.io/#did-apple-kill-the-microled-industry&quot; target=&quot;_blank&quot;>;[摘要]&lt;/ a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40775349&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base= &quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为蒙特利尔地铁票提供动力的微型芯片&lt;/stitle>; &lt;id>;http://www.righto.com/2024 /06/montreal-mifare-ultralight-nfc.html&lt;/id>; &lt;更新>;2024-06-23T18:02:32.489036Z&lt;/更新>; &lt;link href=&quot;http://www.righto.com/2024/ 06/montreal-mifare-ultralight-nfc.html&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.righto.com/images/mifare-ultralight--images/die-raw-w500.jpg&quot; style=&quot;width: 220px; height: 188px;&quot; />;&lt;br />;蒙特利尔地铁票中使用的 MIFARE Ultralight EV1 芯片是一款低成本的一次性 NFC 芯片，它使用简单的协议与读卡器通信并将数据存储在其 EEPROM 中。该芯片是采用较旧的 180nm 工艺制造，价格低廉，每片价格为 9 美分，适合一次性使用。 chip-that-powers-montreal-subway-tickets&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40769001&quot; target=&quot;_blank &quot;>;[comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LockBit 声称从美联储窃取 33TB 数据&lt;/stitle>; &lt;id>;https://securityaffairs.com/164873/cyber-crime/lockbit-claims-hacked-us-federal-reserve.html&lt;/id>; &lt;updated>;2024 -06-24T13:02:32.489522Z&lt;/更新>; &lt;link href=&quot;https://securityaffairs.com/164873/cyber-crime/lockbit-claims-hacked-us-federal-reserve.html&quot;/>; &lt;作者>; &lt;name>;cuuupid&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=cuuupid&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //i0.wp.com/securityaffairs.com/wp-content/uploads/2024/06/image-20.png?fit=1587%2C750&amp;ssl=1&quot; style=&quot;width: 220px; height: 104px;&quot; />;&lt;br />;Lockbit 勒索软件组织声称已侵入美联储，泄露了 33TB 敏感数据，并威胁于 2024 年 6 月 25 日泄露。专家对此声明表示怀疑，一些人认为这只是为了引起注意，而 FBI 已经获得了 7,000 多个 LockBit 解密密钥来帮助受害者恢复数据。 data-from-us-federal-reserve&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40775268&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;你现在可以编写 React在Lua中&lt;/stitle>; &lt;id>;https://github.com/jsdotlua/react-lua&lt;/id>; &lt;updated>;2024-06-24T03:02:32.489992Z&lt;/updated>; &lt;link href=&quot;https: //github.com/jsdotlua/react-lua&quot;/>; &lt;author>; &lt;name>;bundie&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=bundie&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/jsdotlua/branding/main/Logo.png&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;React Lua 是 ReactJS 从 JavaScript 到 Lua 的翻译，旨在提高性能和正确性，大多数上游 ReactJS 建议适用模语言差异。该项目是 roblox/react-lua 的分支，旨在成为 Lua 中 React 的首选，重点是与 Roact 的兼容性并解决 Lua 特定的问题。 -react-in-lua&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40739187&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Cosmopolitan v3.5.0&lt;/stitle>; &lt;id>;https://github.com/jart/cosmopolitan/releases/tag/3.5.0&lt;/id>; &lt;更新>;2024-06-24T07:02:32.490591Z&lt;/更新>; &lt;link href=&quot;https: //github.com/jart/cosmopolitan/releases/tag/3.5.0&quot;/>; &lt;author>; &lt;name>;sgammon&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sgammon&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/db59ef059c8a4ed9a4711a25abac334a22014748437208ace896f6a0607eebd1/jart/cosmopolitan/releases/tag/3.5.0&quot; style=&quot;width: 220px ; height: 110px;&quot; />;&lt;br />;Cosmopolitan Libc 使 C 成为一次构建、无需解释器或虚拟机即可在任何地方运行的语言。它重新配置了 GCC 和 Clang，以输出 POSIX 认可的格式，可以在多个平台上本机运行，具有良好的性能&lt;a href=&quot;https://hackernews.betacat.io/#cosmopolitan-v3-5-0&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40773139&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;苹果被发现违反了欧盟竞争规则&lt;/stitle>; &lt;id>;https://www.theguardian.com/technology/article/2024/jun/24/ apple-breach-eu-competition-rules-digital-markets-act&lt;/id>; &lt;更新>;2024-06-24T10:02:32.491058Z&lt;/更新>; &lt;link href=&quot;https://www.theguardian.com /technology/article/2024/jun/24/apple-breach-eu-competition-rules-digital-markets-act&quot;/>; &lt;author>; &lt;name>;malermeister&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=malermeister&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.guim.co.uk/img/media/abed87288ff0b2bf7787793ac7e5e816ee3d4fd6/0_301_4683_2811/master /4683.jpg？width=465&amp;dpr=1&amp;s=none&quot; style=&quot;宽度：220px;高度：132px;&quot; />;&lt;br />;欧盟委员会发现苹果公司违反了旨在促进竞争并允许消费者找到更便宜替代品的欧盟法律，理由是应用程序商店规则和费用存在问题。苹果公司已做出更改以遵守数字市场法，但委员会已启动不合规程序，理由是对合同条款和费用的担忧&lt;a href=&quot;https://hackernews.betacat.io/#apple-found-in-breach-of- eu-competition-rules&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40773883&quot; target=&quot;_blank&quot;>;[评论]&lt; /a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;微软搁置其水下数据中心&lt;/stitle >; &lt;id>;https://www.tomshardware.com/desktops/servers/microsoft-shelves-its-underwater-data-center&lt;/id>; &lt;更新>;2024-06-24T13:02:32.492021Z&lt;/更新>; &lt;link href=&quot;https://www.tomshardware.com/desktops/servers/microsoft-shelves-its-underwater-data-center&quot;/>; &lt;作者>; &lt;name>;namanyayg&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=namanyayg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.mos.cms.futurecdn.net/H76eY7NH92oTc4ML7VNhJm-320 -80.jpg&quot; style=&quot;宽度: 220px; height: 124px;&quot; />;&lt;br />;微软已经停止了Project Natick水下数据中心实验，并表示吸取经验并将其应用到其他案例中。该公司发现海水的温度稳定性和惰性氮气有助于减少服务器损耗，但没有表明未来是否会启动另一个 UDC 项目&lt;a href=&quot;https://hackernews.betacat.io/#microsoft-shelves-its-underwater-data-center&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40775252&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;我正在使用人工智能将帽子扔到窗外的纽约人&lt;/stitle>; &lt;id>;https: //dropofahat.zone/&lt;/id>; &lt;updated>;2024-06-23T14:02:32.492481Z&lt;/updated>; &lt;link href=&quot;https://dropofahat.zone/&quot;/>; &lt;author>; &lt;name>;jimhi &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jimhi&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://dropofahat.zone /static/dropofahat/hat/ai3.2089d32ec65c.JPG&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;橱窗商店 DropofaHat Zone 的创建者分享了他们使用 Raspberry Pi、Adafruit 步进电机和 Roboflow 开发人工智能驱动的脱帽系统的历程。该系统使用物体检测来识别窗下的行人，并在 5 分钟时间内将帽子扔到他们的头上。 drop-hats-outside-my-window-onto-new-yorkers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40767459&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot; >;本杰明·索普：翻译了几乎所有古英语文本的人&lt;/stitle>; &lt;id>;https://thijsporck.com/2016/04/08/benjamin-thorpe-the-man-who-translated-almost-all- old-english-texts/&lt;/id>; &lt;更新>;2024-06-23T23:02:32.492939Z&lt;/更新>; &lt;link href=&quot;https://thijsporck.com/2016/04/08/benjamin-thorpe- the-man-who-translated-almost-all-old-english-texts/&quot;/>; &lt;author>; &lt;name>;stareatgoats&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=stareatgoats &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://thijsporck.com/wp-content/uploads/2016/04/thorpeblog1.jpg?w=712&quot; style=&quot;宽度：220px； height: 102px;&quot; />;&lt;br />;本杰明·索普是一位学者，出版了许多古英语文本的版本和翻译，为他赢得了“第一位专业盎格鲁撒克逊主义者”的美誉。尽管索普后来的重印中出现了一些错误，他的著作普遍享有良好的声誉，并为盎格鲁撒克逊研究的发展留下了持久的印记。几乎所有旧英语文本&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40758451&quot; target=&quot;_blank&quot;>; [comments]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;结束-线路故事（2004）&lt;/stitle>; &lt;id>;https://www.rfc-editor.org/old/EOLstory.txt&lt;/id>; &lt;更新>;2024-06-24T09:02:32.493404Z&lt;/更新>; &lt;link href=&quot;https://www.rfc-editor.org/old/EOLstory.txt&quot;/>; &lt;作者>; &lt;name>;gabrielsroka&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=gabrielsroka&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;ASCII 标准没有定义唯一的行尾字符，导致操作系统之间存在多样性，通过采用 CR LF 解决了这个问题网络通信约定。此约定由 Jon Postel 强制实施，并被引入 FTP、SMTP 和其他协议中，使其对大多数用户透明，但在某些情况下仍然会导致问题。 &lt;a href=&quot;https://hackernews.betacat.io/#the-end-of-line-story-2004&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40754501&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;韩国锂电池工厂火灾造成至少 16 人死亡&lt;/stitle>; &lt;id>;https://www.nbcnews.com/news/world/fire-south- korea-lithium-battery-plant-kills-least-16-people-rcna158536&lt;/id>; &lt;更新>;2024-06-24T11:02:32.493844Z&lt;/更新>; &lt;link href=&quot;https://www.nbcnews .com/news/world/fire-south-korea-lithium-battery-plant-kills-least-16-people-rcna158536&quot;/>; &lt;author>; &lt;name>;rntn&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=rntn&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media-cldnry.s-nbcnews.com/image/upload/t_fit -760w,f_auto,q_auto:best/rockcms/2024-06/240624-korea-battery-fact0ry-mb-0809-355ca8.jpg&quot; style=&quot;宽度: 220px; 高度: 145px;&quot; />;&lt;br />;韩国一家锂电池工厂发生火灾，造成至少16人死亡、5人失踪，爆炸原因尚不清楚。这家由 Aricell 经营的工厂大部分被毁，上层部分建筑倒塌，大块碎片被吹到街上。 &lt;a href=&quot;https://hackernews.betacat.io/#fire-at-south-korea-lithium-battery-plant-kills-at-least-16-people&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40774336&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Llama.ttf：一种字体，也是 LLM&lt;/stitle>; &lt;id>;https://fuglede.github .io/llama.ttf/&lt;/id>; &lt;更新>;2024-06-23T14:02:32.494328Z&lt;/更新>; &lt;link href=&quot;https://fuglede.github.io/llama.ttf/&quot;/>; &lt;author>; &lt;name>;fuglede_&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=fuglede_&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Llama.ttf 是一个字体文件，还包含大型语言模型和推理引擎，允许用户在基于 Harfbuzz 的应用程序中本地运行文本生成。通过使用该字体，用户可以在不依赖供应商实现的情况下生成文本，甚至可以与他们的字体聊天。 &lt;a href=&quot;https://hackernews.betacat.io/#llama-ttf-a-font-which-is-also-an-llm&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40766791&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LINQPad – .NET 程序员的游乐场&lt;/stitle>; &lt;id>;https://www.linqpad.net/&lt;/id>; &lt;更新>; 2024-06-23T21:02:32.494768Z&lt;/更新>; &lt;link href=&quot;https://www.linqpad.net/&quot;/>; &lt;作者>; &lt;name>;wofo&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=wofo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.linqpad.net/images/thebigdump.png?6&quot;样式=“宽度：220像素；高度：164像素；” />;&lt;br />;LINQPad是一个查询工具，允许用户在不安装客户端软件的情况下查询各种数据库和数据源，具有缓存、性能优势以及图表和调试等高级功能。它还包括一系列用于执行基准测试、正则表达式评估和 Excel 文件生成等任务的工具，以及全面的教程和参考指南。 &lt;a href=&quot;https://hackernews.betacat.io/#linqpad-the-net-programmer-s-playground&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40770171&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Rust 进行本地渲染&lt;/stitle>; &lt;id>;https://medium.com/embarkstudios/homegrown-rendering-with-rust-1e39068e56a7&lt;/id>; &lt;更新>; 2024-06-24T12:02:32.495246Z&lt;/更新>; &lt;link href=&quot;https://medium.com/embarkstudios/homegrown-rendering-with-rust-1e39068e56a7&quot;/>; &lt;作者>; &lt;名称>;AlawamiAZ&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=AlawamiAZ&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://miro.medium.com /v2/resize:fit:1200/1*J8qbZaVqAaFJBL4l1KBJzA.png&quot; style=&quot;宽度: 220px; 高度: 121px;&quot; />;&lt;br />;Tomasz 是 Embark 的软件工程师，讨论了该公司如何对用户创建的世界进行 3D 渲染，利用 Rust 实现其目标，并分享令人兴奋的开源新闻。文章重点介绍了 Embark 渲染工程师的旅程，包括两种渲染器的开发，其中一种是全局照明渲染器，固执己见且易于破解，而 ... &lt;a href=&quot;https://hackernews.betacat .io/#homegrown-rendering-with-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40774563&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN:用于管理订阅列表的在线 OPML 编辑器&lt;/stitle>; &lt;id>;https://github.com/imdj/opml-editor&lt;/id>; &lt;updated>;2024-06-24T05:02:32.495685Z&lt;/updated>; &lt;link href=&quot;https://github.com/imdj/opml-editor&quot;/>; &lt;作者>; &lt;名称>;imadj&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=imadj&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/c5c0d3e4edee5ab4f1324e0dd300addc2aaecbd6acd8fc64c328ccfb981ed731/imdj/opml-editor&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;一个简单的在线 OPML 编辑器，专为管理订阅列表（RSS 和 Atom 提要）而定制。访问 opml.imadij.com。该项目根据 AGPL-3.0 许可证获得许可 - 有关详细信息，请参阅许可证文件。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-online-opml-editor-to-manage-subscription-lists&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40749279&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Y 组合器 Codex (2021)&lt;/stitle>; &lt;id>;https://phoe.github.io/codex.html&lt;/id>; &lt;更新>;2024-06-23T21:02:32.496169Z&lt;/更新>; &lt;link href=&quot;https://phoe.github.io/codex.html&quot;/>; &lt;作者>; &lt;名称>;082349872349872&lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://phoe.github.io/img/photo1 -min.jpg&quot; style=&quot;宽度: 220px; 高度: 165px;&quot; />;&lt;br />;该艺术品尺寸为 42cm x 2.4m，带有白边，使用各种工具和材料创作。它将作为印刷品出售或在 2021 年欧洲 Lisp 研讨会上拍卖，所得收益将捐赠给 Lisp 相关组织。 &lt;a href=&quot;https://hackernews.betacat.io/#y-combinator-codex-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40769759&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Arm64EC – 在同一进程中运行 x86_64 和 Arm 代码&lt;/stitle>; &lt;id>;https://learn.microsoft.com/en-us/windows/arm/arm64ec&lt;/id>; &lt;更新>;2024-06-23T21:02:32.496622Z&lt;/更新>; &lt;link href=&quot;https://learn.microsoft.com/en-us/windows/arm/arm64ec&quot;/>; &lt;作者>; &lt;名称>; heinrich5991&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=heinrich5991&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://learn. microsoft.com/en-us/windows/arm/images/arm64ec-incremental-update.png&quot; style=&quot;宽度：220px 高度：110px；&quot; />;&lt;br />;Arm64EC 是适用于 Windows 11 的新应用程序二进制接口，可在 Arm 驱动的设备上实现本机速度和性能，从而允许开发人员构建新的本机应用程序或过渡现有的 x64 应用程序。它保证了与 x64 代码的互操作性，并允许代码从模拟到本机的增量转换，允许开发人员优先考虑 CPU 密集程度最高的依赖项...... &lt;a href=&quot;https://hackernews.betacat.io/#arm64ec-run -x86-64-and-arm-code-in-the-same-process&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id =40757717&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type= “text&quot;>;Polytype：用于排版引擎的罗塞塔石碑&lt;/stitle>; &lt;id>;https://polytype.dev/&lt;/id>; &lt;updated>;2024-06-24T07:02:32.497066Z&lt;/updated>; &lt;link href=&quot;https://polytype.dev/&quot;/>; &lt;作者>; &lt;名称>;ubavic&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ubavic&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;该项目旨在为排版提供一种理论，比较和对比不同引擎对各种排版情况的方法，重点关注布局和拼写特征。可以通过编辑或添加输入示例来做出贡献，并且可以使用 Nix 在本地构建和测试该站点。 &lt;a href=&quot;https://hackernews.betacat.io/#polytype-a-rosetta-stone-for-typesetting-engines&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40757777&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用语义熵检测大语言模型中的幻觉&lt;/stitle>; &lt;id>;https://www.nature.com/articles/s41586-024-07421-0 &lt;/id>; &lt;更新>;2024-06-23T21:02:32.497509Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles/s41586-024-07421-0&quot;/>; &lt;作者>; &lt;name>;Tomte&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Tomte&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //media.springernature.com/w215h120/springer-static/image/art%3A10.1038%2Fs41562-024-01882-z/MediaObjects/41562_2024_1882_Fig1_HTML.png&quot; style=&quot;宽度：220px；高度：123px；&quot; />;&lt;br />;作者提出了一种称为语义熵的方法来检测语言模型中的混淆，这些混淆是任意且不正确的生成。他们证明，语义熵可以用来预测模型的准确性，并通过在模型不确定时拒绝回答问题来提高模型的准确性，并且还可以用来为用户提供一种方法来了解模型生成何时可能不可靠。 &lt;a href=&quot;https://hackernews.betacat.io/#detecting-hallucinations-in-large-language-models-using-semantic-entropy&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40769496&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Microsoft 帐户到本地帐户的转换指南已从 Windows 11 指南中删除&lt;/stitle>; &lt;id>;https://www.tomshardware.com/software/ windows/microsoft-account-to-local-account-conversion-guide-erased-from-official-windows-11-guide-instructions-redacted-earlier-this-week&lt;/id>; &lt;更新>;2024-06-24T13： 02:32.497959Z&lt;/更新>; &lt;link href=&quot;https://www.tomshardware.com/software/windows/microsoft-account-to-local-account-conversion-guide-erased-from-official-windows-11 -guide-instructions-redacted-earlier-this-week&quot;/>; &lt;作者>; &lt;名称>;belter&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.mos.cms.futurecdn.net/fYhfHKcDSSsp48FF7gaHj4-320-80.png&quot; style=&quot;width: 220px; height: 124px;&quot; />;&lt;br />;Microsoft 删除了绕过使用 Microsoft 帐户登录 Windows 的选项，但用户仍然可以在安装后切换到本地帐户。为此，请转到“设置”>;“帐户”>;“您的信息”，然后选择“使用本地帐户登录”以按照屏幕上的说明进行操作。 from-windows-11-guide&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40775301&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从第一个派生依赖类型 OOP原则&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2403.06707&lt;/id>; &lt;更新>;2024-06-23T20:02:32.498442Z&lt;/更新>; &lt;link href=&quot;https://arxiv .org/abs/2403.06707&quot;/>; &lt;作者>; &lt;名称>;matt_d&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=matt_d&lt;/uri>; &lt;/作者>; &lt;内容类型= “html”>; &lt;img src =“https://arxiv.org/static/browse/0.3.4/images/arxiv-logo-fb.png”样式=“宽度：220px; height: 129px;&quot; />;&lt;br />;表达式问题凸显了使用新的生产者和消费者扩展类型的难度，并且依赖类型编程通常遵循函数模型。本文通过推导来探索依赖类型的面向对象编程它从使用对偶性的第一原理开始，提供具有双语言片段的依赖类型演算并保留转换。 target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40769867&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Birkin 手提包的经济学&lt;/stitle>; &lt;id>;https: //www.wsj.com/style/fashion/hermes-birkin-bag-investment-031c215c&lt;/id>; &lt;更新>;2024-06-23T22:02:32.498893Z&lt;/更新>; &lt;link href=&quot;https:// /www.wsj.com/style/fashion/hermes-birkin-bag-investment-031c215c&quot;/>; &lt;作者>; &lt;名称>;wallflower&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id =wallflower&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;请启用JS并禁用任何广告拦截器&lt;a href=&quot;https://hackernews.betacat.io/#the-economics-of-the- birkin-handbag&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40770358&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Gren 0.4：新基础&lt;/stitle>; &lt;id >;https://gren-lang.org/news/240624_gren_04/&lt;/id>; &lt;更新>;2024-06-24T09:02:32.499341Z&lt;/更新>; &lt;link href=&quot;https://gren-lang.org /news/240624_gren_04/&quot;/>; &lt;author>; &lt;name>;Skinney&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=Skinney&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://img.youtube.com/vi/fwLP6WVLJWU/0.jpg&quot; style=&quot;宽度：220px; height: 165px;&quot; />;&lt;br />;Gren 是一种函数式编程语言，它更新了其核心包、编译器和书籍，提供了新的功能和改进，包括新的文件系统 API 以及从 Haskell 到 Gren 的过渡。语言也从 Zulip 切换到 Discord 以进行社区讨论，并进行了其他更改，例如添加基于任务的函数和环境变量支持 &lt;a href=&quot;https://hackernews.betacat.io/#gren-0-4。 -new-foundations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40773843&quot; target=&quot;_blank&quot;>;[评论]&lt;/ a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将罗马之光带入生活&lt;/stitle>; &lt; id>;https://www.journals.uchicago.edu/doi/10.1086/731029&lt;/id>; &lt;更新>;2024-06-23T23:02:32.499770Z&lt;/更新>; &lt;link href=&quot;https://www .journals.uchicago.edu/doi/10.1086/731029&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=胡克&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;Nuova Luce da Pompei 展览探讨了人造光在古罗马日常生活中的作用，展出了 180 件来自庞贝和罗马的罕见青铜灯和雕像。该展览展示了照明装置的效果和意义，鼓励参观者手持复制品并虚拟点亮灯具来体验其作用。 &lt;a href=&quot;https://hackernews.betacat.io/#bringing-roman-light-to-life&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40756154&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;“我们认为线粒体是细胞的处理器”（2022）&lt;/stitle>; &lt;id>;https://www.cell.com/action/showPdf?pii=S1550 -4131%2822%2900459-4&lt;/id>; &lt;更新>;2024-06-23T14:02:32.500270Z&lt;/更新>; &lt;link href=&quot;https://www.cell.com/action/showPdf?pii= S1550-4131%2822%2900459-4&quot;/>; &lt;作者>; &lt;名称>;breck&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=breck&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>;&lt;a href=“https://hackernews.betacat.io/#we-argue-that-mitochondria-are-the-processor-of-the-cell-2022”target=“_blank” >;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40766869&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Neko：用于高阶谱元流模拟的便携式框架&lt;/stitle>; &lt;id>;https ://github.com/ExtremeFLOW/neko&lt;/id>; &lt;更新>;2024-06-24T01:02:32.500724Z&lt;/更新>; &lt;link href=&quot;https://github.com/ExtremeFLOW/neko&quot;/>; &lt;作者>; &lt;名称>;nateb2022 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://repository-images.githubusercontent.com/338607716/940eb6d2-af35-442f-8ffe-726df542293a&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;Neko 是一个用现代 Fortran 编写的高阶谱元流模拟的便携式框架，支持各种硬件后端并采用面向对象的方法。要构建该项目，您需要一个 Fortran编译器、MPI、JSON-Fortran 和 BLAS/lapack，具有可选依赖项，包括 gslib 和 ParMETIS &lt;a href=&quot;https://hackernews.betacat.io/#neko-portable-framework-for-high-order-spectral。 -element-flow-simulations&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40771839&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;从头开始编写 IR 并存活下来写一篇文章&lt;/stitle>; &lt;id>;https://farena.in/compilers/programming/writing-an-ir-from-scratch/&lt;/id>; &lt;updated>;2024-06-23T21:02:32.501181Z&lt; /updated>; &lt;link href=&quot;https://farena.in/compilers/programming/writing-an-ir-from-scratch/&quot;/>; &lt;作者>; &lt;name>;matt_d&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=matt_d&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://farena.in/assets/images/kunai_ir/acdi.jpg “样式=”宽度：220px; height: 292px;&quot; />;&lt;br />;作者设计并实现了一个名为 MjolnIR 的中间表示（IR），用于分析 Dalvik 字节码，其中包括控制流图（CFG）表示以及用于操作寄存器、内存和数据的各种指令。作者还实现了图算法，包括支配者和后支配者计算、直接支配者和支配边界，以... &lt;a href=&quot;https://hackernews.betacat.io/#writing-an-ir- from-scratch-and-survive-to-write-a-post&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40770430&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;