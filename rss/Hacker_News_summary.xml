<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-12-30T03:55:45.074040Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;跟踪开发人员构建时间以确定 M3 MacBook 是否值得升级&lt;/stitle>; &lt;id>;https://incident.io/blog/festive-macbooks&lt;/id>; &lt;updated >;2023-12-29T19:55:00.685300Z&lt;/更新>; &lt;link href=&quot;https://incident.io/blog/festive-macbooks&quot;/>; &lt;作者>; &lt;名称>;paprikati &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=paprikati&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://incident.io/_next/image?url= https%3A%2F%2Fcdn.sanity.io%2Fimages%2Foqy5aexb%2Fproduct%2F052d9cb5ea18448bb2fa64a8c1085f7a0033e031-252x252.png&amp;w=256&amp;q=75&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;本文讨论了评估开发机器是否值得从 M1/M2 芯片升级到 M3 的过程。分析重点关注 Go 编译速度作为 MacBook 性能的关键指标，并比较了不同平台和内存配置。结果显示，16GB内存的M2 Pro性价比最高，M3 Pro相比M2 Pro并没有提供明显的提升。 &lt;a href=&quot;https://hackernews.betacat.io/#tracking-developer-build-times-to-decide-if-the-m3-macbook-is-worth-upgrading&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38797640&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;更高的纠错能力使扫描未损坏的二维码不太可靠 (2021)&lt;/stitle>; &lt;id>;https:/ /huonw.github.io/blog/2021/09/qr-error- Correction/&lt;/id>; &lt;更新>;2023-12-30T01:55:00.688022Z&lt;/更新>; &lt;link href=&quot;https://huonw .github.io/blog/2021/09/qr-error- Correction/&quot;/>; &lt;作者>; &lt;名称>;lucb1e&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=lucb1e&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://huonw.github.io/blog/2021/09/qr-error- Correction/1024px-QR_Code_Structure_Example_3.svg.png&quot;样式=“宽度：220像素；高度：124像素；” />;&lt;br />;较高的纠错能力使得扫描未损坏的二维码的可靠性降低。当代码损坏最小时，纠错率较低的 QR 码更容易读取。纠错使得 QR 码即使在损坏的情况下也能被读取，但它会减少可存储的数据量。 &lt;a href=&quot;https://hackernews.betacat.io/#higher-error- Correction-makes-scanning-undamaging-qr-codes-less-reliable-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809072&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Blot 将文件夹变成网站&lt;/stitle>; &lt;id>;https://blot.im/how&lt;/id>; &lt;更新>;2023-12-29T19:55:00.688534Z&lt;/更新>; &lt;link href=&quot;https://blot.im/how&quot;/>; &lt;作者>; &lt;name>;angrymouse&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=angrymouse&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Blot 将文件夹变成网站。该文件夹中的文件将成为您网站上的帖子。 &lt;a href=&quot;https://hackernews.betacat.io/#blot-turns-a-folder-into-a-website&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38809145&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;那：一台全新的模拟计算机&lt;/stitle>; &lt;id>;https://spectrum.ieee.org/try-this-new-analog-computer&lt;/ id>; &lt;更新>;2023-12-29T21:55:00.689021Z&lt;/更新>; &lt;link href=&quot;https://spectrum.ieee.org/try-this-new-analog-computer&quot;/>; &lt;作者>; &lt;名称>;CharlesW&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=CharlesW&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// spectrum.ieee.org/media-library/a-hand-adjusts-a-knob-on-a-panel-with-spaghetti-wiring-a-ribbon-cable-links-it-a-small-display. jpg?id=50797095&amp;width=1200&amp;height=900&quot; style=&quot;宽度：220px；高度：165px；&quot; />;&lt;br />;曾经被认为过时的模拟计算机正在复兴。 Anabrid 是一家开发混合模拟数字芯片的初创公司，推出了一款名为 THAT 的新型模拟机。这是一个小型开源机器，可以通过用跳线连接数学元素来编程。 &lt;a href=&quot;https://hackernews.betacat.io/#that-a-brand-new-analog-computer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38798501&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;48x32：1536 LED 游戏电脑&lt;/stitle>; &lt;id>;https://jacquesmattheij.com/48x32-introduction/&lt;/id>; &lt;更新>;2023-12- 30T01:55:00.689499Z&lt;/更新>; &lt;link href=&quot;https://jacquesmattheij.com/48x32-introduction/&quot;/>; &lt;作者>; &lt;name>;andrew_eu&lt;/name>; &lt;uri>;https://news. ycombinator.com/user?id=andrew_eu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jacquesmattheij.com/48x32_ledmodule.jpg&quot; style=&quot;width: 220px; height : 184 像素;&quot; />;&lt;br />;我的孩子沉迷于游戏设备，但我没有尝试直接解决问题，而是决定用创造代替消费。我找到了一台使用 Arduino 构建的 48x32 LED 游戏计算机和一个 32x8 的可寻址 LED 显示器。这是一个有趣的项目，可以让我创建简单的游戏。 &lt;a href=&quot;https://hackernews.betacat.io/#48x32-a-1536-led-game-computer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38809543&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;将 Hugo 重新用作 wiki&lt;/stitle>; &lt;id>;https://justinmiller.io/posts/2023/12/27/hugo-as-wiki/&lt;/id >; &lt;更新>;2023-12-29T23:55:00.689997Z&lt;/更新>; &lt;link href=&quot;https://justinmiller.io/posts/2023/12/27/hugo-as-wiki/&quot;/>; &lt;作者>; &lt;name>;incanus77&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=incanus77&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //justinmiller.io/posts/2023/12/27/hugo-as-wiki/site.png&quot; style=&quot;宽度：220px；高度：153px；&quot; />;&lt;br />;我将 Hugo 网站框架重新调整为单用户 wiki。它允许我自由链接到其他主题页面，并提供自动更新的视觉指示来指示链接页面是否存在。 &lt;a href=&quot;https://hackernews.betacat.io/#repurifying-hugo-as-a-wiki&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38795735&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;英国宣布最长陆地/海底互连线的商业运营&lt;/stitle>; &lt;id>;https://www.nationalgrid.com/national-grid-announces-commercial-operations-viking- link-worlds-longest-land-and-subsea&lt;/id>; &lt;更新>;2023-12-29T16:55:00.690470Z&lt;/更新>; &lt;link href=&quot;https://www.nationalgrid.com/national-grid -announces-commercial-operations-viking-link-worlds-longest-land-and-subsea&quot;/>; &lt;author>; &lt;name>;Svip&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =Svip&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.nationalgrid.com/sites/default/files/images/media/2023-12/Viking%20Link %20UK%20converter%20station%20sunrise%20-%20Credit%20National%20Grid.jpg&quot; style=&quot;宽度：220px；高度：106px；&quot; />;&lt;br />;国家电网宣布世界上最长的陆地和海底互连线路Viking Link投入商业运营。它将在头十年为英国消费者带来超过 5 亿英镑的节省。 &lt;a href=&quot;https://hackernews.betacat.io/#uk-announces-commercial-operations-of-longest-land-subsea-interconnector&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38807001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Koka：具有效果类型和处理程序的强类型函数式语言&lt;/stitle>; &lt;id>;https://koka-lang.github.io /koka/doc/index.html&lt;/id>; &lt;更新>;2023-12-29T20:55:00.691465Z&lt;/更新>; &lt;link href=&quot;https://koka-lang.github.io/koka/doc/ index.html&quot;/>; &lt;作者>; &lt;名称>;nateb2022 &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=nateb2022&lt;/uri>; &lt;/作者>; &lt;内容类型=“html” >;Koka v2 是一种研究语言，目前正在开发中，尚未准备好用于生产使用。该语言稳定，编译器实现完整的规范。 &lt;a href=&quot;https://hackernews.betacat.io/#koka-strongly-typed-function-style-language-with-effect-types-and-handlers&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=38810073&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：收件箱零 – 开源电子邮件助手&lt;/stitle>; &lt;id>;https://www.getinboxzero.com &lt;/id>; &lt;更新>;2023-12-29T20:55:00.691977Z&lt;/更新>; &lt;link href=&quot;https://www.getinboxzero.com&quot;/>; &lt;作者>; &lt;名称>;elieskilled&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=elieskilled&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.getinboxzero.com/_next/图片？url=%2Fimages%2Fnewsletters.png&amp;w=3840&amp;q=75&quot; style=&quot;宽度：220px；高度：131px；&quot; />;&lt;br />;Inbox Zero 是一款开源电子邮件应用程序，可通过提供新闻通讯管理、AI 自动化和电子邮件分析来帮助您管理收件箱。它允许您轻松取消订阅不需要的电子邮件、确定发件人的优先级以及使用 AI 自动执行电子邮件操作。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-inbox-zero-open-source-email-assistant&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38809770&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Bourbaki 危险弯曲符号&lt;/stitle>; &lt;id>;https://en.wikipedia.org/wiki/Bourbaki_dangerous_bend_symbol&lt;/id>; &lt;更新>;2023- 12-29T20:55:00.692455Z&lt;/updated>; &lt;link href=&quot;https://en.wikipedia.org/wiki/Bourbaki_dangerous_bend_symbol&quot;/>; &lt;author>; &lt;name>;zerojames&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=zerojames&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/0 /04/Borne_Michelin_Virages.JPG/220px-Borne_Michelin_Virages.JPG&quot; style=&quot;宽度：220px；高度：146px；&quot; />;&lt;br />;危险弯道或警告符号 ☡ (U+2621 ☡ CAUTION SIGN) 是由 Nicolas Bourbaki 数学家小组创建的，出现在该小组编写的数学书籍的页边空白处。它类似于指示前方道路“危险弯道”的路标，用于标记初读时棘手的段落或特别困难的论证。 &lt;a href=&quot;https://hackernews.betacat.io/#bourbaki-dangerous-bend-symbol&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38809728&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;解析未记录的文件格式&lt;/stitle>; &lt;id>;https://blog.vivekpanyam.com/parsing-an-undocumented-file-format&lt;/id>; &lt;更新>;2023-12 -29T21:55:00.692937Z&lt;/updated>; &lt;link href=&quot;https://blog.vivekpanyam.com/parsing-an-undocumented-file-format&quot;/>; &lt;作者>; &lt;名称>;vpanyam&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=vpanyam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.vivekpanyam.com/static/图片/2023/parsing/cuda_process2.png&quot; style=&quot;宽度：220px；高度：76px；&quot;一两年前，我为一个未记录的文件格式编写了一个解析器，作为一个更大项目的一部分。我的目标是构建一个可以直接从 CUDA 二进制文件中解析和提取信息的库。 &lt;a href=&quot;https://hackernews.betacat.io/#parsing-an-undocumented-file-format&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38808889&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;仅附加 btree 的工作原理（2010）&lt;/stitle>; &lt;id>;https://www.bzero.se/ldapd/btree.html&lt;/id>; &lt;updated>; 2023-12-29T14：55：00.693430Z &lt;/更新>; &lt;link href =“https://www.bzero.se/ldapd/btree.html”/>; &lt;作者>; &lt;名称>;kevmo314 &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=kevmo314&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.bzero.se/ldapd/how -the-btree-works.png&quot; style=&quot;宽度：220px；高度：140px；&quot; />;&lt;br />;仅追加 btree 是数据库中用于有效存储和检索数据的数据结构。它由多级分支页和叶子页组成，叶子页中存储数据和键。更新叶页中的值时，会将新页附加到文件而不是修改现有页，并且父页会更新以指向新位置。这确保游标可以遍历树而不受更改的影响，并提供一致的数据库快照。 &lt;a href=&quot;https://hackernews.betacat.io/#how-the-append-only-btree-works-2010&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38805383&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;盐和薪水：罗马士兵的工资是盐吗？ （2017）&lt;/stitle>; &lt;id>;http://kiwihellenist.blogspot.com/2017/01/salt-and-salary.html&lt;/id>; &lt;更新>;2023-12-29T11:55:00.693906Z&lt;/已更新>; &lt;link href=&quot;http://kiwihellenist.blogspot.com/2017/01/salt-and-salary.html&quot;/>; &lt;作者>; &lt;name>;throtaway167&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=throtaway167&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://4.bp.blogspot.com/-v_qdpCiLd98/WG20kLj4u5I/AAAAAAAFjI/ RfKtlMr__oEpjKNKWD2C1bQqGpcBvllcACK4B/s400/Salt_saltcoin.jpg&quot; style=&quot;宽度：220px；高度：147px；&quot; />;&lt;br />;罗马士兵领取盐薪或领取“盐钱”津贴的神话没有任何证据支持。 “薪水”一词确实来自拉丁语“salarium”，它与早期罗马盐贸易中向士兵支付的报酬有关。然而，没有任何古代资料证实士兵的工资是用盐支付的。 “值得盐”这个短语和用盐购买奴隶的想法也是虚构的。 &lt;a href=&quot;https://hackernews.betacat.io/#salt-and-salary-were-roman-soldiers-paid-in-salt-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38803589&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;2003 年 (2013) 的 Linux 后门尝试&lt;/stitle>; &lt;id>;https://freedom-to-tinker.com/2013 /10/09/the-linux-backdoor-attempt-of-2003/&lt;/id>; &lt;更新>;2023-12-29T14:55:00.694388Z&lt;/更新>; &lt;link href=&quot;https://freedom-to -tinker.com/2013/10/09/the-linux-backdoor-attempt-of-2003/&quot;/>; &lt;作者>; &lt;name>;zhan_eg&lt;/name>; &lt;uri>;https://news.ycombinator.com/ user?id=zhan_eg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ftt-uploads.s3.amazonaws.com/wp-content/uploads/2019/09/ 13111525/FtT-CITP-Logo.png&quot; style=&quot;宽度：220px；高度：113px；&quot; />;&lt;br />;2003 年，有人试图通过在源代码的 CVS 副本中插入代码更改来对 Linux 内核进行后门处理。这一更改修改了名为 wait4 的函数的代码，为以特定方式调用该函数的任何软件提供 root 权限。这一尝试被 Linux 团队发现并阻止。 &lt;a href=&quot;https://hackernews.betacat.io/#the-linux-backdoor-attempt-of-2003-2013&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38805439&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;自然语言语料库数据：美丽的数据 (2009)&lt;/stitle>; &lt;id>;https://norvig.com/ngrams/&lt;/id>; &lt;更新>;2023 -12-29T21：55：00.694859Z &lt;/更新>; &lt;link href =“https://norvig.com/ngrams/”/>; &lt;作者>; &lt;名称>;zerojames &lt;/名称>; &lt;uri>;https://news .ycombinator.com/user?id=zerojames&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://covers.oreilly.com/images/9780596157111/cat.gif&quot; 样式=“宽度：220像素；高度：289像素；” />;&lt;br />;此目录包含《美丽数据》（Segaran 和 Hammerbacher，2009）一书中自然语言语料库数据一章的代码和数据。数据文件源自 Google Web Trillion Word Corpus，如 Thorsten Brants 和 Alex Franz 所描述，并由语言数据联盟分发。 &lt;a href=&quot;https://hackernews.betacat.io/#natural-language-corpus-data-beautiful-data-2009&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38810546&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;“没有发明；没有创新”美国钢铁的历史&lt;/stitle>; &lt;id>;https://www.construction-physicals.com/p/no-发明-无创新-历史&lt;/id>; &lt;更新>;2023-12-29T17:55:00.695379Z&lt;/更新>; &lt;link href=&quot;https://www.construction-physicals.com/p/no -inventions-no-innovations-a-history&quot;/>; &lt;author>; &lt;name>;gok&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=gok&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media .s3.amazonaws.com%2Fpublic%2Fimages%2F007ea525-dd47-4ec3-afea-f04bcfa28ccc_606x451.png&quot; style=&quot;宽度：220px；高度：164px；&quot; />;&lt;br />;美国钢铁公司曾经是美国最大、最重要的公司，多年来已经慢慢衰落。目前，该公司仅生产美国钢铁产量的 12%，其员工数量与在线宠物零售商 Chewy 大致相同。该公司的衰落可归因于长期产能过剩、新技术采用缓慢以及来自国外的竞争等因素&lt;a href=&quot;https://hackernews.betacat.io/#no-inventions-no-innovations-a-history -of-us-steel&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38807720&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;雪花能有多大？&lt; /stitle>; &lt;id>;https://www.npr.org/2023/12/25/1217356234/just-how-big-can-a-snowflake-get-it-depends-on-what-you-mean- by-snowflake&lt;/id>; &lt;更新>;2023-12-29T21:55:00.696355Z&lt;/更新>; &lt;link href=&quot;https://www.npr.org/2023/12/25/1217356234/just-how -big-can-a-snowflake-get-it-depends-on-what-you-mean-by-snowflake&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=Hooke&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/assets/img/2022/09/23/short -wave_tile_npr-network-01_sq-517382b4b8fd0ab48ea9c781253f9992eab733dc.jpg?s=1100&amp;c=15&amp;f=jpeg&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;雪花的大小取决于“雪花”的定义以及你问的是谁。有记录的最大雪花直径为 15 英寸，厚 8 英寸，但其真实性仍存疑。 &lt;a href=&quot;https://hackernews.betacat.io/#how-big-can-a-snowflake-get&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38797629&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用线性规划评估空间访问&lt;/stitle>; &lt;id>;https://andrewpwheeler.com/2022/07/01/using-linear-programming-to-assess -spatial-access/&lt;/id>; &lt;更新>;2023-12-29T23:55:00.696791Z&lt;/更新>; &lt;link href=&quot;https://andrewpwheeler.com/2022/07/01/using-linear-programming -to-assess-spatial-access/&quot;/>; &lt;author>; &lt;name>;apwheele&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=apwheele&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>;&lt;img src =“https://lh3.googleusercontent.com/pw/AM-JKLVtwms53SPC6PQcfLIWLAxvAyNuAWeb8b1nQyx9ZAwipMadrM1tfZ1AXTLQmjKwVk-10vGn_FpatXIeZPLNSjnG70bePUlBKv-D2cINElBkMln5h-0n 0zjo6919C0kppigeB-DYYqcVJnxFzD-qQoSM=w706-h330-no?authuser=0&quot;样式= “宽度：220px； height: 103px;&quot; />;&lt;br />;评估对提供商的空间访问是一个可以使用线性规划解决的问题。两步浮动集水区方法 (2SFCA) 是用于评估覆盖范围的常用指标。通过使用线性规划，可以分解向提供商添加容量或添加新提供商的额外好处。&lt;a href=&quot;https://hackernews.betacat.io/#using-linear-programming-to-assess-spatial-access&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38811572&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;和马克指挥官一起学会画画&lt;/stitle>; &lt;id>; https://www.npr.org/2023/12/28/1217590736/mark-kistler-secret-city&lt;/id>; &lt;更新>;2023-12-29T18:55:00.697871Z&lt;/更新>; &lt;link href= “https://www.npr.org/2023/12/28/1217590736/mark-kistler-secret-city”/>; &lt;作者>; &lt;名称>;geox&lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=geox&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.npr.org/assets/img/2020/01/28/mmorgan_200122_0962 -crop_sq-bc4e7e28ca6cda949ac1163d663df3da37b43ccd.jpg?s=100&amp;c=85&amp;f=jpeg&quot; style=&quot;宽度：220px;高度：221px;&quot; />;&lt;br />;马克指挥官是《秘密城市》、《绘画小队》和《想象力站》节目的幕后艺术家，他通过 PBS 节目教会了数百万儿童如何绘画。他的绘画教学方法基于复制和描摹，强调实践胜于完美，灌输积极的态度。&lt;a href=&quot;https://hackernews.betacat.io/#learning-to-love-to-draw-with-commander-mark&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38808313&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lichen：Sed 构建系统&lt;/stitle>; &lt;id>;https://github。 com/mcandre/lichen&lt;/id>; &lt;更新>;2023-12-29T18:55:00.698929Z&lt;/更新>; &lt;link href=&quot;https://github.com/mcandre/lichen&quot;/>; &lt;作者>; &lt;名称>;n4jm4&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=n4jm4&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph .githubassets.com/c71c3c3e8bf39af6cc2d9d6ba2a544590d1c8b33bd5c2f6d83216ae1e75a50d2/mcandre/lichen&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;sed 构建系统是专为 sed 项目设计的构建系统，用 GNU sed 编写。它作为 REPL 运行，允许用户输入任务名称。sed 构建系统使用唯一的前缀每个任务的输出，以避免任务之间的交叉污染。&lt;a href=&quot;https://hackernews.betacat.io/#lichen-the-sed-build-system&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38791237&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;最高的木制风力涡轮机开始转动&lt;/stitle>; &lt;id>;https://www.bbc.com/news/science-environment -67718719&lt;/id>; &lt;更新>;2023-12-29T19:55:00.699317Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/news/science-environment-67718719&quot;/>; &lt;作者>; &lt;name>;andsoitis&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=andsoitis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https: //ichef.bbci.co.uk/news/480/cpsprodpb/17C98/product/_132123479_c30d3b72-b9a3-421c-a57e-c71c41a60f14.jpg.webp&quot; style=&quot;width: 220px;高度：124px;&quot; />;&lt;br />;瑞典初创公司 Modvion 建造了世界上最高的木制涡轮机塔，使用木材进行风力发电。该塔由层压单板木材制成，并具有厚厚的白色涂层进行保护。用木材代替钢材消除了风力涡轮机的碳足迹。&lt;a href=&quot;https://hackernews.betacat.io/#tallest-wooden-wind-turbine-starts-turning&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38803528&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;前 10k 最活跃的 HN 成员最喜欢的文章 (2020)&lt;/stitle>; &lt;id>;https: //observablehq.com/@tomlarkworthy/hacker-favourites-analysis&lt;/id>; &lt;更新>;2023-12-29T20:55:00.700023Z&lt;/更新>; &lt;link href=&quot;https://observablehq.com/@tomlarkworthy /hacker-favourites-analysis&quot;/>; &lt;作者>; &lt;名称>;文石&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=aragonite&lt;/uri>; &lt;/作者>; &lt;内容类型= “html”>; &lt;img src =“https://static.observableusercontent.com/thumbnail/9d29794599b0fa2c3b2795aab41d09fce27d55422572c9b13501382ba428431b.jpg”样式=“宽度：220px; height: 138px;&quot; />;&lt;br />;前 10k 最活跃的 Hacker News 成员最喜欢的文章。该列表偏向于创新学习资源和技术职业技巧，但什么都有。&lt;a href=&quot; https://hackernews.betacat.io/#most-favorited-articles-by-the-top-10k-most-active-hn-members-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38809642&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;