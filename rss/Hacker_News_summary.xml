<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-05-01T09:58:48.999676Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;通过多标记预测更好更快的大型语言模型&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2404.19737&lt;/id>; &lt;updated>;2024-05 -01T08：58：18.235586Z &lt;/更新>; &lt;link href =“https://arxiv.org/abs/2404.19737”/>; &lt;作者>; &lt;名称>; jasondavies &lt;/名称>; &lt;uri>; https://news. ycombinator.com/user?id=jasondavies&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images/arxiv-标志-fb.png&quot; style=&quot;宽度: 220px 高度: 129px;&quot; />;&lt;br />;本文提出了一种训练语言模型的新方法，其中涉及使用独立的输出头同时预测多个未来标记。这种方法提高了样本效率和下游能力，在生成基准上收益尤其明显。该方法对于较大的模型尺寸非常有用，并且在多个时期的训练中保持其吸引力。在小型算法任务上的实验证明了它对感应头和算法推理能力的青睐。此外，即使批量大小较大，使用 4-token 预测训练的模型的推理速度也可提高 3 倍。 &lt;a href=&quot;https://hackernews.betacat.io/#better-and-faster-large-language-models-via-multi-token-prediction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40220851&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 CSS 网格打印音乐&lt;/stitle>; &lt;id>;https://cruncher.ch/blog/printing-music-with-css -grid/&lt;/id>; &lt;更新>;2024-04-30T20:58:18.237488Z&lt;/更新>; &lt;link href=&quot;https://cruncher.ch/blog/printing-music-with-css-grid/&quot; />; &lt;作者>; &lt;名称>;speckx &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=speckx&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src =&quot;https://cruncher.ch/static/blog/printing-music/images/template-rows.png&quot; style=&quot;宽度：220px；高度：167px；&quot; />;&lt;br />;本文介绍了一种使用 CSS 网格在网络上呈现乐谱的新方法。作者为网格定义了两个轴：垂直轴，由五线谱（五线谱）定义，具有固定大小的网格行；水平轴，由时间线定义，具有可变的列数。五线谱由名为“.stave”的类定义，并具有固定大小的网格行，其名称基于音高。时间线由名为“.time”的类定义，并且具有基于拍号的可变数量的列。作者还定义了一个名为“.note”的类来表示各个注释，并使用数据属性将元素映射到特定的网格列和行。本文还讨论了在网络上呈现乐谱的一些挑战，例如处理节奏和跨浏览器兼容性。 &lt;a href=&quot;https://hackernews.betacat.io/#printing-music-with-css-grid&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40216057&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Figma OSS 替代方案&lt;/stitle>; &lt;id>;https://penpot.app/&lt;/id>; &lt;updated>;2024-05-01T01:58:18.237918Z&lt;/updated>; &lt;link href=&quot;https://penpot.app/&quot;/>; &lt;作者>; &lt;名称>;noashavit&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=noashavit&lt;/uri>; &lt; /author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://img.plasmic.app/img-optimizer/v1/img?src=https%3A%2F%2Fimg.plasmic.app%2Fimg-优化器%2Fv1%2Fimg%2Ffe5273fd7da0078e49c0db3409071a86.png&amp;q=75&quot; style=&quot;宽度: 220px 高度: 222px;&quot; />;&lt;br />;Penpot 是一个基于网络的开源设计工具，弥合了设计师和开发人员之间的差距。它将设计原生地表达为 CSS、SVG 和 HTML。开发人员在界面中感觉宾至如归，整个团队都享受无缝的工作流程。 Penpot完全归用户所有，可以与现有的开发工具链集成。数以万计的组织使用 Penpot，包括许多流行的开源项目。这些控件非常直观，并且可以很好地映射到实际 CSS 的心理模型。 Penpot 提供了一系列可在项目中使用的模板和库，以及可以在代码和设计理念方面提供帮助的用户社区。 &lt;a href=&quot;https://hackernews.betacat.io/#figma-oss-alternative&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40218463&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;柯尔莫哥洛夫-阿诺德网络&lt;/stitle>; &lt;id>;https://github.com/KindXiaoming/pykan&lt;/id>; &lt;更新>;2024-05-01T03:58:18.238359Z&lt;/更新>; &lt;link href=&quot;https://github.com/KindXiaoming/pykan&quot;/>; &lt;作者>; &lt;name>;sumo43&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sumo43&lt;/ uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images.githubusercontent.com/23551623/326218913-a2d2d225-b4d2-4c1e-823e-bc45c7ea96f9.png?jwt =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..BceqvYYadae7DKLY5KDXqNcDpNIQO9JcLRR8JQ-5rec&quot; style=&quot;宽度：220px 高度：123px；&quot; />;&lt;br />;论文“KA​​N：Kolmogorov-Arnold Networks”提出了一种有前途的多层感知器 (MLP) 替代方案，称为 Kolmogorov-Arnold Networks (KAN)。 KAN 具有强大的数学基础，并且基于 Kolmogorov-Arnold 表示定理。 KAN 和 MLP 是双重的，KAN 的边缘激活函数和 MLP 的节点激活函数。 KAN 在模型准确性和可解释性方面都优于 MLP。与 MLP 相比，KAN 具有更快的缩放速度和更高的精度，并且参数更少。它们可以直观地可视化，并提供 MLP 无法提供的可解释性和交互性。该论文提供了可在不到一天的时间内在单个 CPU 上运行的示例。针对 PDE 训练 KAN 的成本最高，在单个 CPU 上可能需要数小时到数天的时间。该论文使用 CPU 来训练模型，因为它们对 MLP 和 KAN 进行了参数扫描。该论文表明 GPU 可以用于更大的任务。 &lt;a href=&quot;https://hackernews.betacat.io/#kolmogorov-arnold-networks&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=40219205&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;Jeff Barr 承认 S3 未经授权的请求计费问题&lt;/stitle>; &lt;id>;https://old.reddit.com/r/aws/comments/1ch1ir4/jeff_barr_acknowledges_s3_unauthorized_request/&lt;/id>; &lt;updated>;2024 -05-01T09:24:18.238772Z&lt;/更新>; &lt;link href=&quot;https://old.reddit.com/r/aws/comments/1ch1ir4/jeff_barr_acknowledges_s3_unauthorized_request/&quot;/>; &lt;作者>; &lt;名称>;贝尔特&lt;/ name>; &lt;uri>;https://news.ycombinator.com/user?id=belter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文提供了用户注册或登录开发人员的说明凭据，确保其用户代理不为空且唯一，如果被阻止，请重试。如果被错误阻止或需要更简单的方法，用户可以提交票证。 &lt;a href=&quot;https://hackernews.betacat.io/#jeff-barr-acknowledges-s3-unauthorized-request-billing-issue&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40221108&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Show HN：我制作了一个应用程序，可以帮助您找到在哪里播放电影和电视节目&lt;/stitle>; &lt;id>;https://whereto.stream&lt; /id>; &lt;更新>;2024-05-01T02:58:18.239163Z&lt;/更新>; &lt;link href=&quot;https://whereto.stream&quot;/>; &lt;作者>; &lt;名称>;danilotanic&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=danilotanic&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://whereto.stream/build/_assets/logo-HGX736LW .png&quot;样式=&quot;宽度：220px；高度：130px；&quot; />;&lt;br />;探索电影和电视节目的国际流媒体选项电视节目。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-made-an-app-that-helps-you-find-where-to-stream-movies-and-tv-shows&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40213562&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何从 Windows 安装程序安装 Linux&lt;/stitle>; &lt;id>; https://prose.nsood.in/linux-from-windows-installer&lt;/id>; &lt;更新>;2024-05-01T03:58:18.239582Z&lt;/更新>; &lt;link href=&quot;https://prose.nsood .in/linux-from-windows-installer&quot;/>; &lt;作者>; &lt;名称>;todsacerdoti &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti &lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://prose.nsood.in/img/linux-from-windows-installer/discord-exchange.png&quot; style=&quot;宽度：220px；高度：223px； ” />;&lt;br />;本文介绍了如何使用 UEFI/GPT 引导加载程序在 Windows 系统上安装 Alpine Linux。该过程包括创建分区、安装 Linux 发行版和配置引导加载程序。本文建议使用Arch Linux或Alpine Linux作为Linux发行版进行安装。文章还提到，该过程相对简单，只需几个步骤即可完成。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-install-linux-from-a-windows-installer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40219131&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;高斯级别：百万平方米的实时视图合成&lt;/stitle>; &lt;id>;https://zju3dv.github.io/LoG_webpage/ &lt;/id>; &lt;更新>;2024-04-30T19:58:18.239983Z&lt;/更新>; &lt;link href=&quot;https://zju3dv.github.io/LoG_webpage/&quot;/>; &lt;作者>; &lt;名称>;corysama&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=corysama&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://zju3dv.github.io /LoG_webpage/img/teaser.jpg&quot; style=&quot;宽度: 220px; 高度: 104px;&quot; />;&lt;br />;本文引入了高斯级别 (LoG) 来高效实时渲染大型 3D 场景，根据观看者距离调整细节级别。 LoG 通过使用树结构来实现可扩展的高质量渲染，从而改进了 3DGS。 &lt;a href=&quot;https://hackernews.betacat.io/#level-of-gaussians-real-time-view-synthesis-for-millions-of-square-meters&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40215424&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Borgo 是一种编译为 Go 的静态类型语言&lt;/stitle>; &lt;id>;https://github.com/ borgo-lang/borgo&lt;/id>; &lt;更新>;2024-04-30T15:58:18.240760Z&lt;/更新>; &lt;link href=&quot;https://github.com/borgo-lang/borgo&quot;/>; &lt;作者>; &lt;name>;manx&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=manx&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /raw.githubusercontent.com/borgo-lang/borgo-lang.github.io/main/borgo.jpg&quot; style=&quot;宽度：220px 高度：154px;&quot; />;&lt;br />;作者希望有一种语言能够将 Go 的简单性与 Rust 的表现力融为一体，但又没有其复杂性。 Borgo 是一种转译为 Go 的新语言，提供与 Go 库的完全兼容性和增强的类型安全功能。 &lt;a href=&quot;https://hackernews.betacat.io/#borgo-is-a-statically-typed-language-that-c​​ompiles-to-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40211891&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Pyinfra：使用 Python 自动化基础设施&lt;/stitle>; &lt;id>;https://pyinfra.com/&lt;/id>; &lt;updated>;2024 -04-30T14:58:18.241155Z&lt;/updated>; &lt;link href=&quot;https://pyinfra.com/&quot;/>; &lt;author>; &lt;name>;InitEnabler&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=InitEnabler&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://pyinfra.com/static/example_deploy.gif&quot; style=&quot;width: 220px;高度：143px；” />;&lt;br />;Pyinfra 使用 Python 实现高效的基础设施自动化，从单个服务器扩展到数千个服务器，并支持命令执行和配置管理等任务。它结合了库存、操作和 Python 编码，以促进多功能部署。 &lt;a href=&quot;https://hackernews.betacat.io/#pyinfra-automate-infrastruct-using-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=40211655&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;谨防假海滩（Pokémon Go）&lt;/stitle>; &lt;id>;https://community.openstreetmap.org/t/beware-of-fake-beaches-pokemon-go/ 112413&lt;/id>; &lt;更新>;2024-05-01T04:58:18.241548Z&lt;/更新>; &lt;link href=&quot;https://community.openstreetmap.org/t/beware-of-fake-beaches-pokemon-go /112413&quot;/>; &lt;作者>; &lt;名称>;aendruk&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=aendruk&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://community-cdn.openstreetmap.org/uploads/default/original/1X/1ec32427766f2efdc81c1fd1a6879e4084bfd00d.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;Niantic 宣布了 Pokémon Go 中的新神奇宝贝，该神奇宝贝仅在海滩中生成。要添加假海滩，用户可以使用 OSMcha 或 Overpass 查询。 &lt;a href=&quot;https://hackernews.betacat.io/#beware-of-fake-beaches-pokemon-go&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40219472&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Run0，一个基于 systemd 的 sudo 替代品，已发布&lt;/stitle>; &lt;id>;https://mastodon.social/@pid_eins/112353324518585654&lt;/id>; &lt;更新>;2024 -04-30T15:58:18.241947Z&lt;/更新>; &lt;link href=&quot;https://mastodon.social/@pid_eins/112353324518585654&quot;/>; &lt;作者>; &lt;名称>;CoolCold&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=CoolCold&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文讨论了 systemd v256 版本的新功能，并强调了“sudo”的传统重要性和功能Linux 中的命令。 &lt;a href=&quot;https://hackernews.betacat.io/#run0-a-systemd-based-alternative-to-sudo-announced&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40205714&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Frid​​geLock：通过内存加密防止挂起的 Linux 上的数据被盗（2020）&lt;/stitle>; &lt;id>;https://www.sec.in.tum。 de/i20/publications/fridgelock-preventing-data-theft-on-suspended-linux-with-usable-memory-encryption&lt;/id>; &lt;更新>;2024-04-30T19:58:18.242358Z&lt;/更新>; &lt;link href=&quot;https://www.sec.in.tum.de/i20/publications/fridgelock-preventing-data-theft-on-suspended-linux-with-usable-memory-encryption&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了全盘加密的重要性（ FDE）保护移动设备免受未经授权的物理数据访问。然而，设备经常被挂起而不是关闭，导致 RAM 中的机密数据容易受到冷启动、JTAG 或 DMA 攻击。作者提出了 FridgeLock，这是一个 Linux 内核模块 (LKM)，它在挂起时添加内存加密以防止数据被盗。使用动态内核模块支持 (DKMS) 可以轻松部署该实现，并且对性能影响较小。作者希望他们的工具能够对现实使用场景中的内存加密进行更详细的评估。 &lt;a href=&quot;https://hackernews.betacat.io/#fridgelock-preventing-data-theft-on-suspended-linux-with-memory-encryption-2020&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=40194842&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;150 倍 PGVector 加速&lt;/stitle>; &lt;id>;https://jkatz05.com/post/postgres/pgvector-performance- 150x-speedup/&lt;/id>; &lt;更新>;2024-05-01T01:58:18.242753Z&lt;/更新>; &lt;link href=&quot;https://jkatz05.com/post/postgres/pgvector-performance-150x-speedup/ &quot;/>; &lt;author>; &lt;name>;sh_tomer&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=sh_tomer&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://jkatz05.com/images/pgvector-150x-r7gd-dbpedia.png&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文是对 pgvector 的一年回顾，这是一个构建在 PostgreSQL 之上的矢量搜索引擎。作者重点介绍了 pgvector 改进的具体领域，包括使用二进制量化方法时索引构建时间加快了 150 倍。他们还讨论了基准测试中透明度的重要性，并提供了详细的测试方法。本文最后呼吁采取行动，寻求有关如何改进 pgvector 和 PostgreSQL 的反馈。 &lt;a href=&quot;https://hackernews.betacat.io/#the-150x-pgvector-speedup&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40218410&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;文件文件系统（2021）&lt;/stitle>; &lt;id>;https://mgree.github.io/ffs/&lt;/id>; &lt;updated>;2024-04-30T18:58:18.243145 Z&lt;/updated>; &lt;link href=&quot;https://mgree.github.io/ffs/&quot;/>; &lt;作者>; &lt;name>;wegwerff&lt;/name>; &lt;uri>;https://news.ycombinator.com/user ?id=wegwerff&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mgree.github.io/ffs/assets/images/inplace_demo.gif&quot; style=&quot;width: 220像素；高度：110像素；” />;&lt;br />;本文讨论了 Unix shell 对于现代数据格式的限制，并介绍了 ffs，这是一种将半结构化数据挂载为文件系统以便于操作的工具。它指定了安装要求和使用命令，并注明了用于 JSON 处理的 jq 和 gron 等工具。 &lt;a href=&quot;https://hackernews.betacat.io/#the-file-filesystem-2021&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=40213731&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;StoryDiffusion：远程图像和视频生成&lt;/stitle>; &lt;id>;https://storydiffusion.github.io/&lt;/id>; &lt;updated>;2024-05-01T00:58： 18.243557Z&lt;/updated>; &lt;link href=&quot;https://storydiffusion.github.io/&quot;/>; &lt;作者>; &lt;name>;doodlesdev&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=doodlesdev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://storydiffusion.github.io/MagicStory_files/comics/1.jpg&quot; style=&quot;width: 220px; height : 128 像素;&quot; />;&lt;br />;StoryDiffusion：用于长距离图像和视频生成的一致自注意力&lt;a href=&quot;https://hackernews.betacat.io/#storydiffusion-long-range-image-and-video- Generation&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40218021&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content >; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我制作了一个 CLI 工具来创建无需构建的 Web 扩展配置&lt;/stitle>; &lt;id>;https://github.com/cezaraugusto/extension.js&lt;/id>; &lt;updated>;2024-04-30T14:58:18.243956Z&lt;/updated>; &lt;link href=&quot;https:// /github.com/cezaraugusto/extension.js&quot;/>; &lt;作者>; &lt;名称>;cezaraugustodev&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=cezaraugustodev&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://private-user-images.githubusercontent.com/4672033/316628309-01a90694-4705-416e-898c-20bf845984e7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..uw4Nv 5fmmO2宝石- XqNDq7kP3yMP_9crhWsuL-K9T_Cs&quot; style=&quot;宽度：220px； height: 138px;&quot; />;&lt;br />;Extension.js 支持 TypeScript 和 React，促进跨浏览器扩展开发，允许开发人员使用 Chrome 扩展示例启动项目。它还提供与 Edge 等多种浏览器的兼容性，并启用现有的与其构建系统集成的扩展。构建配置&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=40210627&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;原住民 Linux&lt;/stitle>; &lt;id>;https: //landley.net/aboriginal/about.html&lt;/id>; &lt;更新>;2024-05-01T00:58:18.244356Z&lt;/更新>; &lt;link href=&quot;https://landley.net/aboriginal/about.html &quot;/>; &lt;author>; &lt;name>;swatson741&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=swatson741&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;原住民 Linux是用于创建可启动系统映像的构建系统。它被设计为一个极简且灵活的系统，可用于构建各种 Linux 发行版。该系统是作为一系列 bash 脚本实现的，这些脚本被设计为可读且易于理解。每个脚本都会按照需要安装的顺序收集配置、构建和安装适当的包所需的一系列命令，以满足它们的依赖关系。该系统被设计为与版本无关，这意味着它可用于跨多个体系结构构建相同的包，并立即在模拟器内运行结果。该系统被设计为在相当新的发行版上作为普通用户运行，并且它使用交叉编译器来构建运行系统所需的本机工具。该系统被设计为可扩展的，这意味着可以轻松地对其进行修改以添加或删除软件包，或者以各种方式更改系统的行为。该系统被设计为可读的，这意味着它可以用作文档来解释系统为何执行其操作。 &lt;a href=&quot;https://hackernews.betacat.io/#aboriginal-linux&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=40218095&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;爱丽丝在可微仙境中的冒险&lt;/stitle>; &lt;id>;https://www.sscardapane.it/alice-book&lt;/id>; &lt;更新>;2024-04-30T17:58:18.245146Z&lt;/已更新>; &lt;link href=&quot;https://www.sscardapane.it/alice-book&quot;/>; &lt;作者>; &lt;name>;tosh&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id =tosh&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.sscardapane.it/assets/alice/Alice.png&quot; style=&quot;width: 220px; height: 281像素；” />;&lt;br />;神经网络在语言处理和机器人等各种应用中运行。本入门书对可微分编程进行了易于掌握的介绍，重点关注核心设计技术并弥合理论与实际代码之间的差距。 &lt;a href=&quot;https://hackernews.betacat.io/#alice-s-adventures-in-a- Differentiable-wonderland&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40213292&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;IMEI 代码：您手机的其他号码&lt;/stitle>; &lt;id>;https://tedium.co/2024/04/27/mobile-phone-imei- number-history/&lt;/id>; &lt;更新>;2024-04-30T14:58:18.245536Z&lt;/更新>; &lt;link href=&quot;https://tedium.co/2024/04/27/mobile-phone-imei- number-history/&quot;/>; &lt;作者>; &lt;名称>;shortformblog&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=shortformblog&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://images.tedium.co/uploads/tedium042724.gif&quot; style=&quot;宽度：220px；高度：92px；&quot; />;&lt;br />;Tedium 探讨了 IMEI 代码的起源和用途：手机的唯一标识符，强调了它在设备跟踪和公共安全中的作用。序列码对于产品跟踪、防止盗窃和管理复杂的制造至关重要。 &lt;a href=&quot;https://hackernews.betacat.io/#the-imei-code-your-phones-other-number&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=40202203&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为大型语言模型构建大型日语网络语料库&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2404.17733&lt;/id>; &lt;updated>; 2024-04-30T23:58:18.245930Z&lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2404.17733&quot;/>; &lt;作者>; &lt;name>;PaulHoule&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://arxiv.org/static/browse/0.3.4/images /arxiv-logo-fb.png&quot; style=&quot;宽度: 220px; 高度: 129px;&quot; />;&lt;br />;本研究通过从 Common Crawl 档案中提取和精炼文本，创建了一个大型日语网络语料库，超过了日本法学硕士现有的培训语料库。 Llama 2 和其他基础 LLM 的持续预训练显示出日本基准数据集的持续改进。所提供的语料库对 Llama 2 13B 的改进是其他现有语料库中最大的。 arXivLabs 是一个框架，供合作者开发和共享新的 arXiv 功能，拥抱开放性、社区、卓越和用户数据隐私。 &lt;a href=&quot;https://hackernews.betacat.io/#building-a-large-japanese-web-corpus-for-large-language-models&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=40217699&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：我为 iPad 构建了一个 Java IDE&lt;/stitle>; &lt;id>;https://apps.apple.com/de/ app/codebrew-ide-for-java/id6475267297?l=en-GB&lt;/id>; &lt;更新>;2024-04-30T15:58:18.247077Z&lt;/更新>; &lt;link href=&quot;https://apps.apple .com/de/app/codebrew-ide-for-java/id6475267297?l=en-GB&quot;/>; &lt;作者>; &lt;名称>;coolius&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=coolius&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://is1-ssl.mzstatic.com/image/thumb/Purple221/v4/e0/45/8a /e0458ab1-d483-e472-4438-bb2fff37f9bd/AppIcon-0-0-1x_U007emarketing-0-6-0-85-220.png/1200x630wa.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;CodeBrew 作为适用于 iPad 和 iPhone 的 Java IDE 推出，提供使用 Java 17 JDK 进行动态编码以及智能代码完成等功能。它简化了游戏开发并为具有不同专业知识的用户提供示例项目。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-i-built-a-java-ide-for-ipad&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40211994&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Arti：Rust 中的 Tor 实现&lt;/stitle>; &lt;id>;https://tpo.pages.torproject.net/core/arti/&lt; /id>; &lt;更新>;2024-04-30T18:58:18.247468Z&lt;/更新>; &lt;link href=&quot;https://tpo.pages.torproject.net/core/arti/&quot;/>; &lt;作者>; &lt;名称>; acheong08&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=acheong08&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;Arti 是一个在Rust 编程语言。目前，Arti 提供了一个可用的 Tor 客户端。初步支持连接到洋葱服务，但需要做更多的工作才能实现与 Ctor 实现同等的安全性。在 Arti 更加成熟之前，我们建议仅将其用于实验用途。 &lt;a href=&quot;https://hackernews.betacat.io/#arti-a-tor-implementation-in-rust&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=40214763&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Rama 证明了 Clojure 的强大功能&lt;/stitle>; &lt;id>;https://blog.redplanetlabs.com/2024/04/30/rama-is-a -testament-to-the-power-of-clojure/&lt;/id>; &lt;更新>;2024-04-30T18:58:18.247860Z&lt;/更新>; &lt;link href=&quot;https://blog.redplanetlabs.com/2024 /04/30/rama-is-a-testament-to-the-power-of-clojure/&quot;/>; &lt;作者>; &lt;名称>;winkywooster&lt;/名称>; &lt;uri>;https://news.ycombinator.com/ user?id=winkywooster&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/blog.redplanetlabs.com/wp-content/uploads/2023/ 04/cropped-RPL-Twitter.png?fit=512%2C512&amp;ssl=1&quot; style=&quot;宽度: 220px 高度: 220px;&quot; />;&lt;br />;Rama是一个集成和泛化后端开发的编程平台。它使用一种新的编程语言，实现了一种新的编程范式，与“面向对象”、“命令式”、“逻辑”和“函数式”范式处于同一水平。 Rama 的 Clojure API 可以直接访问这种新语言，而它的 Java API 是该语言子集的薄包装器。 Rama 的语言是图灵完备的，并且主要通过 Clojure 宏定义。它将函数的概念概括为一种称为“片段”的东西，它可以多次输出到多个“输出流”，并在发射之间或之后执行更多工作。 Rama 是用常规 Clojure 代码和 Rama 代码的混合实现的。 Rama 核心的新语言是重新表述几乎所有编程语言（函数）基础的语言的一个例子。罗摩的语言并不是这种混合范式的唯一例子。另一个例子是幽灵。 Spectre 是一个用于查询和操作数据结构的通用库。它也是 Rama API 的关键部分（因为 Rama 中的视图称为 PState，是任何组合的持久数据结构），并且它是 Rama 实现的关键部分。 Rama 的源代码和测试中大约 1% 的代码行是 Spectre 调用点。 Clojure 在 Lisp 中是独一无二的，因为它强调不变性。它的核心 API 面向使用不可变数据结构。此外，Clojure 鼓励使用简单的数据结构来表示程序状态，并使用富有表现力的 API 来处理这些数据结构。 “让 100 个函数在一个数据结构上运行比让 10 个函数在 10 个数据结构上运行要好”这句话是 Clojure 基本原理的一部分。这些哲学对 Rama 的发展产生了重大影响，为管理 Rama 实施中的复杂性提供了巨大帮助。在一段代码中需要考虑的状态越少，推理就越容易。当一个项目像 Rama 一样大（190k 行源代码、220k 行测试）、具有多层抽象和无数子系统时，就不可能将整个系统的一小部分保留在“头脑中”进行推理。降低系统复杂性（其中不变性占很大一部分）所带来的红利随着代码库的增大而变得越来越复杂。 Clojure 并不强制每种情况都保持不变，这也很重要。 Rama 跟踪许多不同类型的状态，我们发现在某些情况下使用可变性要简单得多，而不是像通过 Haskell 中的 State Monad 那样间接处理状态。还有一些算法在实现中使用易失性内部时编写起来要简单得多。也就是说，Rama 中的绝大多数代码都是以不可变的风格编写的。当我们使用可变性时，它几乎总是被隔离在单个线程内。我们不使用原子之类的东西来实现并发可变性，而是使用 volatile 并将事件发送到其所属线程以与其交互。 Rama 拥抱并扩展了 Clojure 的不变性和围绕数据结构编写代码的原则。这些原则是 Rama 表达端到端后端的方法的基础。许多 Rama 编程都围绕物化视图 (PState) 展开，这些视图实际上只是使用与内存中数据结构交互完全相同的 Spectre API 进行交互的数据结构。这与数据库形成鲜明对比，数据库具有固定的数据模型和用于与其交互的特殊 API。任何数据库都可以在 PState 中复制表现力和性能，因为数据模型只是数据结构的特定组合（例如，键/值是映射，面向列是排序映射的映射，文档是地图等）。 Rama 的语言将 Clojure 的不可变原则扩展到编写分布式、容错和异步代码。与 Clojure 有很多相似之处，例如带有词法闭包的匿名操作、不可变的局部变量以及阴影时相同的语义。 Rama 在分布式计算方面更进一步，进行范围分析等操作来确定哪些变量需要跨网络边界传输。 Rama 的循环具有与 Clojure 类似的语法，并且具有能够在循环迭代期间在集群中跳跃的分布式计算的附加功能。对于 Rama，这一切都是通过数据流的力量线性编写的，切换线程/节点是像其他操作一样的操作（称为“分区器”）。 Clojure 的原则只是合理的想法，确实对简化软件开发产生了巨大的影响。这些原则在历史上已经过于复杂的分布式系统/数据库中更加相关。这就是为什么这些原则对于罗摩及其实施如此核心。 &lt;a href=&quot;https://hackernews.betacat.io/#rama-is-a-testament-to-the-power-of-clojure&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=40214692&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;酶开辟了通用献血的新途径&lt;/stitle>; &lt;id>;https://www.dtu.dk/english/newsarchive/2024/ 04/enzymes-open-new-path-to-universal-donor-blood&lt;/id>; &lt;更新>;2024-04-30T16:58:18.248248Z&lt;/更新>; &lt;link href=&quot;https://www.dtu .dk/english/newsarchive/2024/04/enzymes-open-new-path-to-universal-donor-blood&quot;/>; &lt;作者>; &lt;名称>;gnabgib &lt;/名称>; &lt;uri>;https://news.ycombinator .com/user?id=gnabgib&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.dtu.dk/english/-/media/dtudk/nyheder/webnyheder /2024/blodplasma_1920x1080_colourbox.jpg?rw=960&amp;rh=0&amp;hash=4B6BDDC039926ED7B4C7B3B452F46D61&quot; style=&quot;宽度: 220px 高度: 124px;&quot; />;&lt;br />;斯堪的纳维亚半岛的主要血型是A型，占40-45%，大多数为RhD阳性； O 占 40%，然后是 B 占 10%，AB 占 5%。只有 O 型红细胞被普遍接受用于输血。 &lt;a href=&quot;https://hackernews.betacat.io/#enzymes-open-new-path-to-universal-donor-blood&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40213024&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：烘焙我的静态 SQLite 加密&lt;/stitle>; &lt;id>;https://github.com/ncruces/go-sqlite3/tree/ main/vfs/adiantum&lt;/id>; &lt;更新>;2024-04-30T09:58:18.248650Z&lt;/更新>; &lt;link href=&quot;https://github.com/ncruces/go-sqlite3/tree/main/vfs /adiantum&quot;/>; &lt;author>; &lt;name>;ncruces&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ncruces&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://opengraph.githubassets.com/624b716de2ccac4cfac8b67bdcb892136c2350563c39437075ffc12532c902c3/ncruces/go-sqlite3&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;本文讨论了未经审查的 SQLite 加密工作，建议购买经过认证的 SQLite 加密扩展。它详细介绍了 Adiantum 的加密方法及其局限性，包括它无法防止数据伪造。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-roast-my-sqlite-encryption-at-rest&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=40208800&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;