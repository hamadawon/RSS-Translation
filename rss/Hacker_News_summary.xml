<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2024-01-03T07:55:52.151938Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;1D 吃豆人&lt;/stitle>; &lt;id>;https://abagames.github.io/crisp-game-lib-11-games/?pakupaku&lt;/id>; &lt;已更新>;2024-01-02T19:55:46.634664Z&lt;/updated>; &lt;link href=&quot;https://abagames.github.io/crisp-game-lib-11-games/?pakupaku&quot;/>; &lt;作者>; &lt;名称>;memalign&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=memalign&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;a href=&quot;https://hackernews .betacat.io/#1d-pac-man&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38845510&quot; target=&quot;_blank &quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN:复活 Dillo 浏览器&lt;/stitle>; &lt;id>;https://dillo-browser.github.io/&lt;/id>; &lt;updated>;2024-01-02T22:55:46.636775Z&lt;/updated>; &lt;link href=&quot;https ://dillo-browser.github.io/&quot;/>; &lt;作者>; &lt;名称>;rodarima&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=rodarima&lt;/uri>; &lt;/author >; &lt;content type=&quot;html&quot;>;从 git 存储库下载 Dillo 并按照 README 中的说明进行安装。使用 Dillo 浏览网页，如果您发现某些内容无法正常工作，请报告它。实现一些新功能或修复一些错误并向我们发送补丁或创建拉取请求。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-resurrecting-the-dillo-browser&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38847613&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Malbolge Unshackled 中的轻量级 Lisp 解释器&lt;/stitle>; &lt;id>;https://github.com/kspalaiologos/malbolge-lisp&lt;/id>; &lt;更新>;2024-01 -03T05:55:46.637299Z&lt;/updated>; &lt;link href=&quot;https://github.com/kspalaiologos/malbolge-lisp&quot;/>; &lt;author>; &lt;name>;noteness&lt;/name>; &lt;uri>;https:// news.ycombinator.com/user?id=noteness&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/kspalaiologos/malbolge-lisp/master/ session.gif&quot; style=&quot;宽度：220px；高度：131px；&quot; />;&lt;br />;MalbolgeLisp 是一个用 Malbolge 编写的 LISP 解释器。它是有史以来最先进、最可用的 Malbolge 程序，支持 LISP 通常支持的所有功能。 Malbolge Unshackled 是 MalbolgeLisp 使用的 Malbolge 的特殊变体，由于旋转宽度可变和其他限制，编程起来相当困难。 &lt;a href=&quot;https://hackernews.betacat.io/#a-lightweight-lisp-interpreter-in-malbolge-unshackled&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38850961&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;GCC 规范：简介&lt;/stitle>; &lt;id>;https://wozniak.ca/blog/2024/01/02/1/index.html&lt;/ id>; &lt;更新>;2024-01-03T03:55:46.637802Z&lt;/更新>; &lt;link href=&quot;https://wozniak.ca/blog/2024/01/02/1/index.html&quot;/>; &lt;作者>; &lt;name>;todsacerdoti&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=todsacerdoti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;GNU 编译器集合 (GCC)驱动程序通过根据提供的参数组织和运行适当的子程序来抽象编译、汇编和链接的细节。驱动程序使用规范字符串或规范为子程序设置参数向量，规范字符串描述每个子程序如何运行以及在什么条件下运行。 &lt;a href=&quot;https://hackernews.betacat.io/#gcc-specs-an-introduction&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=38850400&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;使用光线追踪实现本地多人/分屏视角的新方法&lt;/stitle>; &lt;id>;https://ph3at.github.io/posts/Ray-Coop-Camera/&lt;/id>; &lt;更新>;2024-01-03T01:55:46.638282Z&lt;/更新>; &lt;link href=&quot;https://ph3at.github.io/posts/Ray-Coop-Camera/&quot;/>; &lt;作者>; &lt;名称>;davikr&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=davikr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;这篇博文讨论了一种使用本地多人屏幕共享的新方法光线追踪。它探讨了实现分屏游戏的挑战，并引入了在像素级别动态调整相机的概念。这篇文章还提供了实现有趣的屏幕共享机制的游戏示例。 &lt;a href=&quot;https://hackernews.betacat.io/#a-new-approach-to-local-multiplayer-splitscreen-perspective-with-raytracing&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38841328&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;自己动手盲修&lt;/stitle>; &lt;id>;https://fixmyblinds.com/&lt;/id>; &lt;updated>;2024- 01-02T17:55:46.638824Z&lt;/updated>; &lt;link href=&quot;https://fixmyblinds.com/&quot;/>; &lt;作者>; &lt;name>;nsajko&lt;/name>; &lt;uri>;https://news.ycombinator。 com/user?id=nsajko&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://fixmyblinds.com/cdn/shop/files/FIXMYBLINDS-LOGO-OUTLINE_new-purple_300x300。 png?v=1613690486&quot; style=&quot;宽度：220px；高度：91px；&quot; />;&lt;br />;&amp;#34;我能够从详细的零件清单中找到并订购我的零件。我在 2 个工作日内收到了正确的零件。在网上维修视频的帮助下，我在5分钟内就把百叶窗修好了。对避免昂贵的更换有很大帮助。&amp;#34; - Michael B. &lt;a href=&quot;https://hackernews.betacat.io/#do-it-yourself-blind-repair&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38844274&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Sieve 比 LRU 更简单&lt;/stitle>; &lt;id>;https://cachemon.github.io/SIEVE-website/blog/2023/12/17/sieve -is-simpler-than-lru/&lt;/id>; &lt;更新>;2024-01-03T03:55:46.639323Z&lt;/更新>; &lt;link href=&quot;https://cachemon.github.io/SIEVE-website/blog /2023/12/17/sieve-is-simpler-than-lru/&quot;/>; &lt;作者>; &lt;名称>;SerCe&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=SerCe&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cachemon.github.io/SIEVE-website/blog/assets/sieve/sieve_diagram_animation.gif&quot; style=&quot;width: 220px ；高度：124px；&quot; />;&lt;br />;缓存是一种存储临时数据以便快速访问的方法。我们的团队设计了一种名为 SIEVE 的新缓存驱逐算法，该算法有效且简单，只需一个 FIFO 队列。 &lt;a href=&quot;https://hackernews.betacat.io/#sieve-is-simpler-than-lru&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38850202&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Cassette，一种个人编程语言&lt;/stitle>; &lt;id>;https://cassette-lang.com&lt;/id>; &lt;更新>;2024-01-02T22:55 ：46.639796Z &lt;/更新>; &lt;link href=&quot;https://cassette-lang.com&quot;/>; &lt;作者>; &lt;name>;news_to_me&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=news_to_me&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本文介绍了 Cassette，一种小型的类似 Lisp 的编程语言，专为“有趣的编程”而设计。它强调了该语言的基本方面，例如垃圾收集、词法作用域和不可变类型，并概述了其功能，包括数字类型、符号、字符串、列表、元组、映射、变量、条件和函数。 &lt;a href=&quot;https://hackernews.betacat.io/#show-hn-cassette-a-personal-programming-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=38827876&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;双重加密：分析 NSA/GCHQ 针对混合的论点&lt;/stitle>; &lt;id>;https://blog.cr.yp.to/20240102-hybrid.html &lt;/id>; &lt;更新>;2024-01-03T04:55:46.640289Z&lt;/更新>; &lt;link href=&quot;https://blog.cr.yp.to/20240102-hybrid.html&quot;/>; &lt;作者>; &lt; name>;weinzierl&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=weinzierl&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;文章讨论了混合加密系统的使用结合前量子和后量子算法来保护用户数据免受未来量子计算机的影响。它研究了美国国家安全局反对使用混合加密系统的论点，并提供了支持采用混合加密系统的反驳论据。 &lt;a href=&quot;https://hackernews.betacat.io/#double-encryption-analyzing-the-nsa-gchq-arguments-against-hybrids&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38844117&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何使用 CLI 或仅使用 Python 在 Mac 上进行 OCR&lt;/stitle>; &lt;id>;https://blog.greg.technology/2024 /01/02/how-do-you-ocr-on-a-mac.html&lt;/id>; &lt;更新>;2024-01-02T18:55:46.640797Z&lt;/更新>; &lt;link href=&quot;https:// blog.greg.technology/2024/01/02/how-do-you-ocr-on-a-mac.html&quot;/>; &lt;作者>; &lt;名称>;gregsadetsky&lt;/名称>; &lt;uri>;https://news. ycombinator.com/user?id=gregsadetsky&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blog.greg.technology/assets/how-to-ocr/step1。 png&quot; style=&quot;宽度：220px；高度：130px；&quot; />;&lt;br />;一位读者询问如何在 Mac 上运行 OCR，因此这里有一个使用终端/CLI/python 的免费方法。您可以创建快捷方式以从图像中提取文本并将其复制到剪贴板。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-do-ocr-on-a-mac-using-the-cli-or-just-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38844943&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;QEMU AioContext 删除以及如何完成&lt;/stitle>; &lt;id>;http://blog.vmsplice。 net/2024/01/qemu-aiocontext-removal-and-how-it-was.html&lt;/id>; &lt;更新>;2024-01-02T22:55:46.641268Z&lt;/更新>; &lt;link href=&quot;http:// /blog.vmsplice.net/2024/01/qemu-aiocontext-removal-and-how-it-was.html&quot;/>; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiH839GLUwVrLnNx3fjDgB16sXcc85EsF5DxjWYPUueVjQvtCyVGB3hq_K78iES6Ks3eP97 t2NS08WcKIJ9dC0ZwZuptwwNWyvoGB7uA9Lnh24hO5fN7Sky2CKGf2Z3HGXXdMmD8ViypgIKzPnfBbnzg33skQ9HRCp9Osmt9ZCuYNtoR3FV2EkMD42rFS0/s1600/aiocontext -lock-removal%281%29.png&quot; style=&quot;width: 220px; height: 178px;&quot; />;&lt;br />;QEMU 9.0 中的 AioContext 锁被删除，以改进多线程代码。最初，QEMU 是单线程的，但随着多处理器来宾的流行，架构被修改为支持专用vCPU 线程。然而，设备模拟仍然使用 Big QEMU Lock (BQL) 运行，导致瓶颈。AioContext 锁是作为事件循环的迷你 BQL 引入的，但它导致了死锁和竞争条件。Paolo Bonzini 的美好愿景粒度锁逐渐消除了 AioContext 锁，从而产生了更加本地化和显式的线程安全方法。&lt;a href=&quot;https://hackernews.betacat.io/#qemu-aiocontext-removal-and-how-it-was -done&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38847732&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>; &lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;药丸可以预防毒蛇咬伤造成的死亡吗？&lt;/stitle >; &lt;id>;https://www.latimes.com/environment/story/2023-12-24/can-a-pill-prevent-deaths-from-venomous-snake-bites&lt;/id>; &lt;更新>;2024- 01-02T23:55:46.641749Z&lt;/更新>; &lt;link href=&quot;https://www.latimes.com/environment/story/2023-12-24/can-a-pill-prevent-deaths-from-venomous -snake-bites&quot;/>; &lt;作者>; &lt;名称>;PaulHoule&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=PaulHoule&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://ca-times.brightspotcdn.com/dims4/default/cd36856/2147483647/strip/true/crop/3024x4032+0+0/resize/2000x2667!/quality/75/?url =https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fb7%2F47%2F00e8d1fb442fb6218f89a35b8c4a%2Fla-me-snake-bite-medicine08.JPG&quot; style=&quot;width: 220px;高度：294px;&quot; />;&lt;br />;园艺师约翰·希南 (John Heenan) 被响尾蛇咬伤，经历了毒蛇咬伤的痛苦。一种名为 Varespladib 的药丸正在开发中，可以提供立即治疗，并为受害者赢得足够的时间到达目的地医院。&lt;a href=&quot;https://hackernews.betacat.io/#can-a-pill-prevent-deaths-from-venomous-snakebites&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=38848566&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在 N 皇后和矩阵乘法上对 20 种编程语言进行基准测试&lt;/stitle>; &lt;id>;https://github.com/attractivechaos/plb2&lt;/ id>; &lt;更新>;2024-01-03T04:55:46.642241Z&lt;/更新>; &lt;link href=&quot;https://github.com/attractivechaos/plb2&quot;/>; &lt;作者>; &lt;名称>;attractivechaos&lt;/名称>; &lt; uri>;https://news.ycombinator.com/user?id=attractivechaos&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://raw.githubusercontent.com/attractivechaos/ plb2/master/analysis/rst-m1.png&quot; style=&quot;width: 220px; height: 77px;&quot; />;&lt;br />;编程语言基准 v2 (plb2) 评估 20 种编程语言在 4 个 CPU 密集型任务上的性能。这些任务包括解决 15 皇后问题、将两个大小为 1500x1500 的方阵相乘，解决 4000 个难数独，并找到两个 1,000,000 个间隔的数组之间的重叠。该基准测试提供了对不同编程语言及其实现的性能的深入了解。&lt;a href=&quot;https://hackernews.betacat.io/#benchmarking- 20-programming-languages-on-n-queens-and-matrix-multiplication&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 38850651&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;1024 色的 CGA – 新模式 (2015)&lt;/stitle>; &lt;id>;https://int10h.org/blog/2015/04/cga-in-1024-colors-new-mode-illusterated/&lt; /id>; &lt;更新>;2024-01-02T19:55:46.642789Z&lt;/更新>; &lt;link href=&quot;https://int10h.org/blog/2015/04/cga-in-1024-colors-new-mode -illusterated/&quot;/>; &lt;作者>; &lt;名称>;tomduncalf&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=tomduncalf&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot; >;&lt;img src=&quot;https://int10h.org/blog/img/1k01_graffiti1k2.png&quot; style=&quot;宽度：220px; height: 163px;&quot; />;&lt;br />;本文讨论了 8088 MPH 演示，该演示赢得了 Revision 2015 的 Oldskool 演示竞赛。该演示通过扩展调色板实现了打破 IBM PC CGA 图形模式世界纪录的目标. &lt;a href=&quot;https://hackernews.betacat.io/#cga-in-1024-colors-a-new-mode-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=38845951&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;托马斯·科克伦&lt;/stitle>; &lt;id>;https://sergey.substack.com/p/thomas-cochrane&lt;/id>; &lt;更新>;2024 -01-02T15:55:46.643285Z&lt;/updated>; &lt;link href=&quot;https://sergey.substack.com/p/thomas-cochrane&quot;/>; &lt;作者>; &lt;name>;neural_thing&lt;/name>; &lt;uri>; https://news.ycombinator.com/user?id=neural_thing&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image/fetch/w_120, c_limit、f_auto、q_auto：好、fl_progressive：陡峭/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F72edfbc1-9aa0-4504-9fa7-62240a21d3f7_677x898.jpeg&quot; style=&quot;width ：220像素；高度：292px;&quot; />;&lt;br />;托马斯·科克伦，一个无赖和男人的领袖，在他的海军生涯中取得了非凡的功绩。他俘获了无数敌舰，恐吓了法国海岸，并执行了辉煌的计划。科克伦不屈的原则和战略使用炸药是他成功的关键。&lt;a href=&quot;https://hackernews.betacat.io/#thomas-cochrane&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// /news.ycombinator.com/item?id=38842571&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io /feed.xml&quot;>; &lt;title type=&quot;text&quot;>;显示 HN：Better Seater – 婚礼座位表优化器&lt;/stitle>; &lt;id>;https://seater.steam-oven.net/&lt;/id>; &lt;更新>; 2024-01-02T19:55:46.643761Z&lt;/updated>; &lt;link href=&quot;https://seater.steam-oven.net/&quot;/>; &lt;author>; &lt;name>;teejae&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=teejae&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;使用 create-react-app 创建的网站 &lt;a href=&quot;https://hackernews.betacat .io/#show-hn-better-seater-wedding-seating-chart-optimizer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=38845650&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;关于象牙海岸的笔记&lt;/stitle>; &lt;id>;https://mattlakeman.org/2024/01/01/notes-on-the-ivory-coast/&lt;/id>; &lt;updated>;2024- 01-02T21:55:46.644742Z&lt;/updated>; &lt;link href=&quot;https://mattlakeman.org/2024/01/01/notes-on-the-ivory-coast/&quot;/>; &lt;作者>; &lt;名称>; yorwba&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=yorwba&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://mattlakeman. files.wordpress.com/2023/12/ivory_coast_political_map.png?w=760&amp;h=759&quot; style=&quot;width: 220px; height: 220px;&quot; />;&lt;br />;科特迪瓦，又名科特迪瓦，曾经是一个经济增长强劲的成功非洲国家。然而，从1978年到2008年，其人均GDP几乎减半，导致48 年来人均经济净增长率接近 0%。该国经济以可可、咖啡、木材和投资为基础 &lt;a href=&quot;https://hackernews.betacat.io/#notes-on-the-象牙海岸&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38840614&quot; target=&quot;_blank&quot;>;[评论]&lt;/a >;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;浏览器是移动双寡头最有可能的颠覆者&lt; /stitle>; &lt;id>;https://infrequently.org/2024/01/the-web-is-the-app-store/&lt;/id>; &lt;更新>;2024-01-02T22:55:46.645208Z&lt;/更新>; &lt;link href=&quot;https://infrequently.org/2024/01/the-web-is-the-app-store/&quot;/>; &lt;作者>; &lt;name>;cdme&lt;/name>; &lt;uri>;https:// /news.ycombinator.com/user?id=cdme&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://infrequently.org/2024/01/the-web-is -the-app-store/every_browser_toot.webp&quot; style=&quot;width: 220px; height: 272px;&quot; />;&lt;br />;苹果和谷歌应用程序商店的不正当交易现已被全面记录，变革的压力已达到不可持续的程度。竞争性浏览器正在开放，使得应用程序商店的目录被取代渐进式 Web 应用程序。&lt;a href=&quot;https://hackernews.betacat.io/#browsers-are-the-most-likely-disruptor-of-the-mobile-duopoly&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38847719&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Microsoft Copilot iOS 应用&lt;/stitle>; &lt;id>;https://apps.apple.com/at/app/ microsoft-copilot/id6472538445&lt;/id>; &lt;更新>;2024-01-03T03:55:46.645697Z&lt;/更新>; &lt;link href=&quot;https://apps.apple.com/at/app/microsoft-copilot/id6472538445 &quot;/>; &lt;author>; &lt;name>;franze&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=franze&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src =“https://is1-ssl.mzstatic.com/image/thumb/Purple126/v4/d8/8f/ce/d88fcef1-ed00-d1c0-00eb-e6978813a847/AppIcon-0-1x_U007epad-0-0-sRGB -85-220-0.png/1200x630wa.png&quot; style=&quot;宽度: 220px;高度：116px;&quot; />;&lt;br />;利用 AI 驱动的聊天助手 Copilot 提高您的工作效率。Copilot 是一款突破性的聊天助手，由最新的 OpenAI 模型、GPT-4 和 DALL·E 3 提供支持。它提供快速、复杂而准确的答案，以及从简单的文本描述创建令人惊叹的可视化效果的能力。&lt;a href=&quot;https://hackernews.betacat.io/#microsoft-copilot-ios-app&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38841302&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt; Entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新研究表明小麦哲伦星云是两个较小的星系&lt;/stitle>; &lt;id>;https:// phys.org/news/2023-12-small-magellanic-cloud-smaller-galaxies.html&lt;/id>; &lt;更新>;2024-01-02T17:55:46.646163Z&lt;/更新>; &lt;link href=&quot;https:// /phys.org/news/2023-12-small-magellanic-cloud-smaller-galaxies.html&quot;/>; &lt;作者>; &lt;名称>;wglb&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=wglb&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800a/2023/new-study-shows -small.jpg&quot; style=&quot;宽度: 220px; height: 146px;&quot; />;&lt;br />;天文学家发现小麦哲伦星云并不是一个单一的星系，而是两个星系，一前一后。小麦哲伦星云的两部分速度不同，但大致相同质量，并且它们都与大麦哲伦星云相互作用。&lt;a href=&quot;https://hackernews.betacat.io/#new-study-shows-small-magellanic-cloud-is-two-smaller-galaxies&quot; 目标=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38838459&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;双工手表擒纵机构&lt;/stitle>; &lt;id>;https://www .thenakedwatchmaker.com/blog/2021/6/21/a-special-escapement&lt;/id>; &lt;更新>;2024-01-03T01:55:46.646667Z&lt;/更新>; &lt;link href=&quot;https://www.thenakedwatchmaker.com/blog/2021/6/21/a-special-escapement&lt;/id>; &lt;更新>;2024-01-03T01:55:46.646667Z&lt;/更新>; thenakedwatchmaker.com/blog/2021/6/21/a-special-escapement&quot;/>; &lt;作者>; &lt;名称>;jstanley&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jstanley&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://images.squarespace-cdn.com/content/v1/58bb0536893fc04255997b40/1624269998032-REWG19X7GEZ0JLGKJB68/the_naked_watchmaker_duplex_0.jpg&quot; style=&quot;width ：220像素； height: 220px;&quot; />;&lt;br />;Duplex 手表擒纵机构于 1700 年代发明，比其他类型的擒纵机构具有更高的精度。它在 1790 至 1860 年间用于英国怀表。&lt;a href=&quot;https:// hackernews.betacat.io/#the-duplex-watch-escapement&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38841288&quot; 目标=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>; Taligent 程序设计指南 [pdf] (1994)&lt;/stitle>; &lt;id>;https://bitsavers.org/pdf/apple/mac/pink/Taligent_-_Taligents_Guide_to_Designing_Programs_1994.pdf&lt;/id>; &lt;更新>;2024-01- 02T23:55:46.647132Z&lt;/更新>; &lt;link href=&quot;https://bitsavers.org/pdf/apple/mac/pink/Taligent_-_Taligents_Guide_to_Designing_Programs_1994.pdf&quot;/>; &lt;作者>; &lt;名称>;ingve&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;本手册及其中描述的软件受版权保护。根据版权法，未经 Taligent 事先书面同意，不得复制本手册或软件的全部或部分内容。本手册中描述的产品可能受一项或多项美国和国际专利的保护。 &lt;a href=&quot;https://hackernews.betacat.io/#taligent-s-guide-to-designing-programs-pdf-1994&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=38830767&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Benjamín Labatut 不会被分析&lt;/stitle>; &lt;id>;https://lithub.com/benjamin-labatut-will-not-be-profiled/ &lt;/id>; &lt;更新>;2024-01-02T23:55:46.647599Z&lt;/更新>; &lt;link href=&quot;https://lithub.com/benjamin-labatut-will-not-be-profiled/&quot;/>; &lt;作者>; &lt;name>;anarbadalov&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=anarbadalov&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https ://s26162.pcdn.co/wp-content/uploads/2023/09/Samir-1-1240x775.png&quot; style=&quot;宽度：220px；高度：138px；&quot; />;&lt;br />;Benjamín Labatut 的作品令人陶醉且难以捉摸，他的最新著作《The MANIAC》是一部以约翰·冯·诺依曼为中心的三联画。拉巴图不想被曝光，并拒绝提供他早期的作品以供参考。尽管面临挑战，拉巴图的工作还是值得深入思考，也是一种负责任的人类行为。 &lt;a href=&quot;https://hackernews.betacat.io/#benjamin-labatut-will-not-be-profiled&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=38838661&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Lolwut：数据库命令中的一件艺术品（2018）&lt;/stitle>; &lt;id>;http://antirez.com/news/123&lt;/id>; &lt;更新>;2024-01-02T22：55：46.648064Z &lt;/更新>; &lt;link href =“http://antirez.com/news/123”/>; &lt;作者>; &lt;名称>; 082349872349872 &lt;/名称>; &lt;uri>; https： //news.ycombinator.com/user?id=082349872349872&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;http://antirez.com/misc/lolwut2.png&quot; style= “宽度：220 像素；高度：259 像素；” />;&lt;br />;作者反思了编写没有可衡量技术效果的代码的价值以及“黑客价值”的概念。他们讨论了 Twitter 上关于黑客行为的讨论，以及它与 60 年代第一批黑客的观点有何不同。然后，作者探讨了将一件艺术品变成数据库命令的想法，并分享了最终结果。他们还解释了如何使用盲文 unicode 字符集创建像素矩阵并使艺术品参数化。最后，他们介绍了 LOLWUT 作为 Redis 的传统，并强调在编程中探索可能性和考虑人性化的重要性。 &lt;a href=&quot;https://hackernews.betacat.io/#lolwut-a-piece-of-art-inside-a-database-command-2018&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=38841284&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;问 HN：谁想被雇用？ （2024 年 1 月）&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=38842975&lt;/id>; &lt;更新>;2024-01-02T16:55:46.648548Z&lt;/更新>; &lt;link href =&quot;https://news.ycombinator.com/item?id=38842975&quot;/>; &lt;作者>; &lt;名称>;whoishiring&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=whoishiring&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;如果您正在找工作，请分享您的信息。请使用以下格式： 读者：请仅向这些地址发送电子邮件以讨论工作机会。尝试 https://darighost.github.io/find_candidates/ 获取搜索这些帖子的帮助。 （编辑：我被告知目前存在一个错误，但作者正在努力修复它。）嗨，&lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-who-wants-to-be -hired-january-2024&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=38842975&quot; target=&quot;_blank&quot;>;[评论] &lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;模拟退火 FPGA 布局器&lt;/stitle >; &lt;id>;https://stefanabikaram.com/writing/fpga-sa-placer/&lt;/id>; &lt;更新>;2024-01-02T16:55:46.649012Z&lt;/更新>; &lt;link href=&quot;https:// stefanabikaram.com/writing/fpga-sa-placer/&quot;/>; &lt;作者>; &lt;名称>;stefanpie&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=stefanpie&lt;/uri>; &lt;/作者>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://stefanabikaram.com/img/fpga-sa-placer/placer_animation_2.gif&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;本文探讨了 FPGA 布局算法，并提供了一个简单的 Rust 玩具 FPGA 布局器实现。作者深入研究了该主题的技术细节和研究历史，并讨论了 FPGA 布局的挑战和布局器的目标。文章还介绍了模拟退火的概念及其在FPGA布局中的应用。 &lt;a href=&quot;https://hackernews.betacat.io/#a-simulated-annealing-fpga-placer&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38843675&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;OpenIndiana Illumos Distro&lt;/stitle>; &lt;id>;https://www.openindiana.org/&lt;/id>; &lt;更新>;2024-01-02T21:55:46.649475Z&lt;/已更新>; &lt;link href=&quot;https://www.openindiana.org/&quot;/>; &lt;作者>; &lt;name>;plaguna&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=plaguna&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.openindiana.org/oi_small.svg&quot; style=&quot;width: 220px; height: 275px;&quot; />;&lt;br />;社区驱动的 illumos 发行版 &lt;a href=&quot;https://hackernews.betacat.io/#openindiana-illumos-distro&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href= &quot;https://news.ycombinator.com/item?id=38847586&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews .betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;加拿大工资依赖性图表&lt;/stitle>; &lt;id>;https://www.daemonology.net/blog/2023-12-31-Canadian- payroll-dependency-chart.html&lt;/id>; &lt;更新>;2024-01-02T16:55:46.649931Z&lt;/更新>; &lt;link href=&quot;https://www.daemonology.net/blog/2023-12-31 -Canadian-payroll-dependency-chart.html&quot;/>; &lt;作者>; &lt;名称>;djha-skin&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=djha-skin&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.daemonology.net/blog/payroll-small.png&quot; style=&quot;width: 220px; height: 80px;&quot; />;&lt;br />;加拿大税务局发布了一份名为“工资扣除公式”的文件，其中包含计算工资扣除所需的所有公式。然而，文档很复杂，需要不断地来回跳转才能找到计算值。为了简化流程，作者使用 GraphViz 创建了依赖关系图。 &lt;a href=&quot;https://hackernews.betacat.io/#a-canadian-payroll-dependency-chart&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38843388&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;Apple II 仿真评估 (2022)&lt;/stitle>; &lt;id>;https://juiced.gs/emulators/&lt;/id>; &lt;更新>;2024-01-02T20:55： 46.650415Z&lt;/updated>; &lt;link href=&quot;https://juiced.gs/emulators/&quot;/>; &lt;作者>; &lt;name>;mmphosis&lt;/name>; &lt;uri>;https://news.ycombinator.com/user? id=mmphosis&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/juiced.gs/wp-content/uploads/2023/01/juicedgs- emulators-virtual-ii.png?resize=980%2C663&amp;quality=80&amp;ssl=1&quot; style=&quot;宽度：220px；高度：149px；&quot; />;&lt;br />;本文对多个 Apple II 模拟器进行了评论，包括 Virtual II、AppleWin、KEGS、OpenEmulator、AIPC 和 Ample。每个模拟器都根据其功能、兼容性、用户界面和性能进行评估，为读者提供可用选项的全面概述。 &lt;a href=&quot;https://hackernews.betacat.io/#apple-ii-emulation-evaluation-2022&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=38846955&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;