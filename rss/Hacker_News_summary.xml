<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-08-25T13:46:49.808062Z&lt;​​/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;异星工厂：太空时代&lt;/stitle>; &lt;id>;https://factorio.com/blog/post/fff-373&lt;/id>; &lt;更新>;2023-08-25T12： 46:24.492092Z&lt;/updated>; &lt;link href=&quot;https://factorio.com/blog/post/fff-373&quot;/>; &lt;author>; &lt;name>;haunter&lt;/name>; &lt;uri>;https://news .ycombinator.com/user?id=haunter&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://cdn.factorio.com/assets/img/blog/fff-373 -thumbnail.png&quot; style=&quot;宽度：220px；高度：220px；&quot; />;&lt;br />;异星工厂：太空时代是一款扩展包，玩家将火箭发射到太空后，继续他们的旅程。它引入了具有独特挑战、资源和星际物流的新世界。该扩展包包含 4 个额外的行星，每个行星都有自己的主题和游戏机制。该扩展包计划在一年后发布。 &lt;a href=&quot;https://hackernews.betacat.io/#factorio-space-age&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37260637&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;解压 Elixir：并发&lt;/stitle>; &lt;id>;https://underjord.io/unpacking-elixir-concurrency.html&lt;/id>; &lt;更新>;2023-08-25T08:46:24.610263Z &lt;/更新>; &lt;link href=&quot;https://underjord.io/unpacking-elixir-concurrency.html&quot;/>; &lt;作者>; &lt;name>;lawik&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=lawik&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://underjord.io/img/logo2.svg&quot; style=&quot;width: 220px; height: 221像素；” />;&lt;br />;Elixir 是一种以其并发和并行能力而闻名的编程语言。它构建在 Erlang 虚拟机上，允许创建可以并发和并行运行的轻量级进程。这些进程通过消息传递进行通信，不共享状态，确保安全执行。 &lt;a href=&quot;https://hackernews.betacat.io/#unpacking-elixir-concurrency&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=37259225&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;人类 Y 染色体的完整序列&lt;/stitle>; &lt;id>;https://www.nature.com/articles/s41586-023-06457-y&lt;/id>; &lt;updated>;2023- 08-25T01:46:24.612689Z&lt;/更新>; &lt;link href=&quot;https://www.nature.com/articles/s41586-023-06457-y&quot;/>; &lt;作者>; &lt;名称>;birriel&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=birriel&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.springernature.com/m312 /springer-static/image/art%3A10.1038%2Fs41586-023-06457-y/MediaObjects/41586_2023_6457_Fig1_HTML.png&quot; style=&quot;宽度：220px；高度：141px；&quot; />;&lt;br />;人类Y染色体已完成测序，为人类全部24条染色体提供了全面的参考序列。测序纠正了先前参考序列中的错误，并向参考序列中添加了超过 3000 万个碱基对的序列。 &lt;a href=&quot;https://hackernews.betacat.io/#the-complete-sequence-of-a- human-y-chromosome&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37256817&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;在心理健康对话数据集上使用 QLoRA 微调 Falcon-7B LLM&lt;/stitle>; &lt;id>;https://github.com/iamarunbrahma/finetuned-qlora -falcon7b-medical&lt;/id>; &lt;更新>;2023-08-25T09:46:24.613247Z&lt;/更新>; &lt;link href=&quot;https://github.com/iamarunbrahma/finetuned-qlora-falcon7b-medical&quot;/>; &lt;作者>; &lt;名称>;iamarunbrahma &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=iamarunbrahma&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://opengraph.githubassets.com/d3c366ec1006cfdbf7552e48622c29793c7fdc2c9a95793dbca13daefcc32afa/iamarunbrahma/finetuned-qlora-falcon7b-medical&quot; style=&quot;宽度：220px；高度：110px；&quot; />;&lt;br />;心理健康问题经常被公众误解或没有完全理解。这种缺乏了解可能会导致恐惧、不适和对心理健康状况的负面看法。 &lt;a href=&quot;https://hackernews.betacat.io/#finetuning-of-falcon-7b-llm-using-qlora-on-mental-health-conversational-dataset&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37259753&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;世界上最古老的语言是什么？&lt;/stitle>; &lt;id>;https://www.scientificamerican.com/article/ Whats-the-worlds-oldest-language/&lt;/id>; &lt;更新>;2023-08-25T09:46:24.614257Z&lt;/更新>; &lt;link href=&quot;https://www.scientificamerican.com/article/whats- the-worlds-oldest-language/&quot;/>; &lt;作者>; &lt;名称>;LinuxBender&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=LinuxBender&lt;/uri>; &lt;/作者>; &lt;内容type=&quot;html&quot;>;&lt;img src=&quot;https://static.scientificamerican.com/sciam/cache/file/5B0F0D0A-2E7F-4F3D-B03F5F56593583E2_source.jpg?w=590&amp;h=800&amp;3AEA9148-FE42-4CD2-BCD82F395078DA35&quot;样式=“宽度：220像素；高度：299像素；” />;&lt;br />;科学家们知道目前使用的语言有 7,100 多种，其中近 40% 被认为濒临灭绝。追踪最古老的语言是一项复杂的任务，语言学家之间有不同的方法和争论。苏美尔语、阿卡德语和埃及语被认为是最古老的语言，有明确的书面记录，而希伯来语、阿拉伯语和汉语也是有力的竞争者。 &lt;a href=&quot;https://hackernews.betacat.io/#whats-the-worlds-oldest-language&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37254338&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;如何自己打水井&lt;/stitle>; &lt;id>;https://drillyourownwell.com/&lt;/id>; &lt;updated>;2023-08-25T03:46:24.614957Z &lt;/更新>; &lt;link href=&quot;https://drillyourownwell.com/&quot;/>; &lt;作者>; &lt;名称>;jacobmarble&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jacobmarble&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://drillyourownwell.com/wp-content/uploads/2020/06/Ready-to-Start-low-res.jpg&quot;样式=“宽度：220像素；高度：294像素；” />;&lt;br />;您可以使用 PVC 和家用水管钻自己的浅水井。这是自己挖浅水井的一种廉价而有效的方法。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-drill-your-own-water-well&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37257514&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;用 30 行 Python 理解自动微分&lt;/stitle>; &lt;id>;https://vmartin.fr/understand-automatic-differiation-in-30-lines- of-python.html&lt;/id>; &lt;更新>;2023-08-25T02:46:24.615887Z&lt;/更新>; &lt;link href=&quot;https://vmartin.fr/understand-automatic-differiation-in-30-lines -of-python.html&quot;/>; &lt;作者>; &lt;名称>;sebg&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://vmartin.fr/imgs/auto-diff/graph_xyz1z2.png&quot; style=&quot;宽度：220px；高度：140px；&quot; />;&lt;br />;在本文中，作者构建了一个简单的代码来执行自动微分，这对于神经网络训练至关重要。他们引入了一个 Tensor 类，该类允许对变量进行符号计算，并演示如何创建计算图来跟踪计算。作者还解释了如何在计算图中添加自动微分，并提供了推导复杂公式的示例。他们将结果与 Sympy 库进行比较，并讨论代码的潜在优化。 &lt;a href=&quot;https://hackernews.betacat.io/#understanding-automatic- Differentiation-in-30-lines-of-python&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37256903&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Os.js – 带有窗口管理器的开源 JavaScript Web 桌面平台&lt;/stitle>; &lt;id>;https://www.os-js.org /&lt;/id>; &lt;更新>;2023-08-25T02:46:24.616312Z&lt;/更新>; &lt;link href=&quot;https://www.os-js.org/&quot;/>; &lt;作者>; &lt;名称>;auraham&lt; /name>; &lt;uri>;https://news.ycombinator.com/user?id=auraham&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.os- js.org/screenshot.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;OS.js 是一个开源 JavaScript Web 桌面平台，具有窗口管理器、应用程序 API、GUI 工具包、文件系统抽象等等。 &lt;a href=&quot;https://hackernews.betacat.io/#os-js-open-source-javascript-web-desktop-platform-with-a-window-manager&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37257218&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;直流电网&lt;/stitle>; &lt;id>;https://www.iisb.fraunhofer.de/en/research_areas/ smart_energy_systems/DC-grids.html&lt;/id>; &lt;更新>;2023-08-25T08:46:24.616701Z&lt;/更新>; &lt;link href=&quot;https://www.iisb.fraunhofer.de/en/research_areas/intelligent_energy_systems /DC-grids.html&quot;/>; &lt;作者>; &lt;名称>;重力损失&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=重力损失&lt;/uri>; &lt;/作者>; &lt;内容类型= &quot;html&quot;>;&lt;img src=&quot;https://www.iisb.fraunhofer.de/en/research_areas/intelligent_energy_systems/DC-grids/jcr:content/contentPar/tabview_overview/tabview_parsys/tabview_tab_2059034046/tabPar/sectioncomponent/sectionParsys/imagerow /imageComponent1/image.img.jpg/1539614682121/teaser-new-lv-dc-power-socket-160.jpg&quot; style=&quot;width: 220px; height: 156px;&quot; />;&lt;br />;eMobiGrid项目专注于开发支持可持续能源和电动汽车的综合能源基础设施。它强调使用本地和分散的直流电网，从而实现可再生能源和充电的高效整合电动汽车充电站。&lt;a href=&quot;https://hackernews.betacat.io/#dc-grids&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator .com/item?id=37247758&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml &quot;>; &lt;title type=&quot;text&quot;>;50TB IBM 磁带驱动器是 LTO-9 容量的两倍以上&lt;/stitle>; &lt;id>;https://blocksandfiles.com/2023/08/23/50tb-ibm-tape/&lt;/ id>; &lt;更新>;2023-08-25T12:46:24.617094Z&lt;/更新>; &lt;link href=&quot;https://blocksandfiles.com/2023/08/23/50tb-ibm-tape/&quot;/>; &lt;作者>; &lt;name>;voxadam&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=voxadam&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https:// /blocksandfiles.com/wp-content/uploads/2023/08/IBM-TS1170-tape-drive-696x347.jpg&quot; style=&quot;width: 220px; height: 110px;&quot; />;&lt;br />;IBM 发布了最新的 TS1170 磁带机，配备 50TB 盒式磁带，比 LTO-9 盒式磁带大 2.5 倍以上。TS1170 磁带机通过 3:1 的方式支持 50TB JF 介质盒式磁带，压缩容量为 150TB压缩。&lt;a href=&quot;https://hackernews.betacat.io/#50tb-ibm-tape-drive-more-than-doubles-lto-9-capacity&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37261001&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;裸鼹鼠的长寿基因赋予小鼠更长的寿命&lt;/stitle>; &lt;id>;https://scienceswitch.com/2023/ 08/25/naked-mole-rats-longevity-gene-gives-mice-a-longer-life/&lt;/id>; &lt;更新>;2023-08-25T04:46:24.617887Z&lt;/更新>; &lt;link href=&quot; https://scienceswitch.com/2023/08/25/naked-mole-rats-longevity-gene-gives-mice-a-longer-life/&quot;/>; &lt;作者>; &lt;名称>;conse_lad &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=conse_lad&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://scienceswitch.files.wordpress.com/2023 /08/the-life-extending-gene-discovered-in-naked-mole-rats.jpg?w=616&quot; style=&quot;width: 220px; height: 132px;&quot; />;&lt;br />;裸鼹鼠是一种长相奇怪的哺乳动物，可能蕴藏着延长人类寿命的秘密。研究人员将裸鼹鼠基因转移到小鼠体内，从而改善了健康状况并延长了寿命。这一发现可能可能有益于人类的长寿和健康。&lt;a href=&quot;https://hackernews.betacat.io/#naked-mole-rats-longevity-gene-gives-mice-a-longer-life&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37258143&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;东山厚和“腿间效应”&lt;/stitle>; &lt;id>;https://www .nippon.com/en/japan-topics/c12403/&lt;/id>; &lt;更新>;2023-08-25T00:46:24.618317Z&lt;/更新>; &lt;link href=&quot;https://www.nippon.com/en /japan-topics/c12403/&quot;/>; &lt;作者>; &lt;名称>;patrickscoleman&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=patrickscoleman&lt;/uri>; &lt;/author>; &lt;内容类型=&quot;html&quot;>;&lt;img src=&quot;https://www.nippon.com/en/ncommon/contents/japan-topics/2443769/2443769.jpg&quot; style=&quot;width: 220px; height: 165px;&quot; />;&lt;br />;日本研究员东山厚希 (Higashiyama Atsuki) 因其在用自己的双腿观看物体的效果方面的研究而获得 2016 年搞笑诺贝尔奖。他继续探索阐明身体与身体之间联系的领域。 &lt;a href=&quot;https://hackernews.betacat.io/#higashiyama-atsuki-and-the- Between-legs-effect&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=37256077&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;美国大学理事会将您的 SAT 成绩告知 TikTok 和 Facebook&lt;/stitle>; &lt;id>;https://gizmodo.com/sat-college-board-tells- facebook-tiktok-your-scores-gpa-1850768077&lt;/id>; &lt;更新>;2023-08-25T11:46:24.618727Z&lt;/更新>; &lt;link href=&quot;https://gizmodo.com/sat-college-board -tells-facebook-tiktok-your-scores-gpa-1850768077&quot;/>; &lt;author>; &lt;name>;mikece&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=mikece&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i.kinja-img.com/gawker-media/image/upload/c_fit,f_auto,g_center,q_60,w_645/5310a835d84ed138eda6e7c25cfc4c75.jpg “样式=”宽度：220px; height: 124px;&quot; />;&lt;br />;管理 SAT 考试和大学先修课程考试的公司美国大学理事会 (College Board) 一直存在隐私问题。人们发现，大学理事会会分享有关学生 SAT 成绩的详细信息，通过隐形跟踪技术向 Facebook、TikTok 和其他公司提供 GPA 和其他数据。尽管声称不会共享个人身份信息，但美国大学理事会被发现使用像素将 GPA 和 SAT 分数发送给 TikTok。&lt;a href=&quot; https://hackernews.betacat.io/#the-college-board-tells-tiktok-and-facebook-your-sat-scores&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https ://news.ycombinator.com/item?id=37260553&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat .io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;实现交互式语言&lt;/stitle>; &lt;id>;https://www.scattered-thoughts.net/writing/implementing-interactive-languages/&lt;/id>; &lt;更新>;2023-08-25T07:46:24.619131Z&lt;/更新>; &lt;link href=&quot;https://www.scattered-thoughts.net/writing/implementing-interactive-languages/&quot;/>; &lt;作者>; &lt;名称>;luu&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=luu&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www .scattered-thoughts.net/writing/implementing-interactive-languages/cranelift.png&quot; style=&quot;width: 220px; height: 120px;&quot; />;&lt;br />;要实现一种兼具编译时和运行时性能的交互式语言，需要找到一个最佳点。传统的基于开关的字节码解释器易于实现，但运行时性能较低与优化编译器相比，时间性能更佳。与解释器相比，像 llvm 或 gcc 这样的专注于 AOT 的编译器的编译时性能较低。目标是将编译时和运行时性能结合到 cpython 和 clang 的 5 倍之内。各种方法，例如正在探索直接线程解释器、解释器生成器和 Cranelift 等替代编译器。&lt;a href=&quot;https://hackernews.betacat.io/#implementing-interactive-languages&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37256479&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;数据科学家的代数拓扑&lt;/stitle>; &lt;id>;https://arxiv.org/abs/2308.10825&lt;/id>; &lt;更新>;2023-08-25T02：46：24.619934Z &lt;/更新>; &lt;link href=&quot;https://arxiv.org/abs/2308.10825&quot;/>; &lt;作者>; &lt;名称>;sebg &lt;/名称>; &lt;uri>; https://news.ycombinator.com/user?id=sebg&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.arxiv.org/static/browse/ 0.3.4/images/arxiv-logo-fb.png&quot; style=&quot;width: 220px; height: 129px;&quot; />;&lt;br />;本书全面介绍了拓扑数据分析（TDA），即代数拓扑在数据科学中的应用。它旨在让读者快速了解必要的背景知识，解释 TDA 和其应用，并回答有关 TDA 中高级主题的问题。&lt;a href=&quot;https://hackernews.betacat.io/#algebraic-topology-for-data-scientists&quot; target=&quot;_blank&quot;>;[summary]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=37257027&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何加速 Rust 编译器&lt;/stitle>; &lt;id>;https://nnethercote.github.io/2023/08 /25/how-to-speed-up-the-rust-compiler-in-august-2023.html&lt;/id>; &lt;更新>;2023-08-25T02:46:24.620336Z&lt;/更新>; &lt;link href=&quot; https://nnethercote.github.io/2023/08/25/how-to-speed-up-the-rust-compiler-in-august-2023.html&quot;/>; &lt;author>; &lt;name>;mfrw&lt;/name >; &lt;uri>;https://news.ycombinator.com/user?id=mfrw&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://nnethercote.github.io/图片/2023/08/25/dashboard-debug.png&quot; style=&quot;width: 220px; height: 269px;&quot; />;&lt;br />;在过去的五个月里，Rust 编译器的性能有了几项重大改进，包括更改增量编译的哈希算法、升级 LLVM 版本以及调整一些 lint 的方式在减少峰值内存使用和二进制大小方面也取得了一些成果。但是，并行化和代码生成单元形成的进一步改进仍然具有挑战性。&lt;a href=&quot;https://hackernews.betacat.io/#how-to-speed- up-the-rust-compiler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37256889&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;新的 futex API&lt;/stitle >; &lt;id>;https://lwn.net/Articles/940944/&lt;/id>; &lt;更新>;2023-08-25T03:46:24.620727Z&lt;/更新>; &lt;link href=&quot;https://lwn.net/ Articles/940944/&quot;/>; &lt;author>; &lt;name>;signa11&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=signa11&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;Linux 快速用户空间互斥（“futex”）子系统随 2.6.0 内核首次亮相；它提供了一种可用于实现用户空间锁定的机制。 Peter Zijlstra 的这个补丁系列展示了 futexes 的未来。 &lt;a href=&quot;https://hackernews.betacat.io/#a-new-futex-api&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37256849&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;Easy-ISLisp：ISLisp 解释器/编译器&lt;/stitle>; &lt;id>;https://github.com/sasakawa888/eisl&lt;/id>; &lt;更新>;2023-08-25T06:46： 24.621133Z&lt;/更新>; &lt;link href=&quot;https://github.com/sasakawa888/eisl&quot;/>; &lt;作者>; &lt;名称>;rcarmo&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user ?id=rcarmo&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://opengraph.githubassets.com/da849c6fbd32309dd4f9b6b8fad7be8727ad7923bdc4339a7a211444c6390523/sasakawa888/eisl&quot; style=&quot;width: 220px; height: 110 像素；” />;&lt;br />;Easy-ISLisp (EISL) 是一个与 ISLisp 标准兼容的解释器和编译器。它的目标是用户友好，并有一个生成 C 代码的编译器。 &lt;a href=&quot;https://hackernews.betacat.io/#easy-islisp-islisp-interpreter-compiler&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=37250213&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;人工智能还不够好&lt;/stitle>; &lt;id>;https://skventures.substack.com/p/ai-isnt-good-enough&lt;/id>; &lt;更新>; 2023-08-25T01:46:24.621572Z&lt;/更新>; &lt;link href=&quot;https://skventures.substack.com/p/ai-isnt-good-enough&quot;/>; &lt;作者>; &lt;名称>;MaysonL&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=MaysonL&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://substackcdn.com/image /fetch/w_1456,c_limit,f_auto,q_auto:好,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcbf14608-094d-4a5e-8522-94f7ef63b318_1316x444.png “样式=”宽度：220px;高度：75px;“ />;&lt;br />;美国劳动力持续短缺，导致公司提供签约奖金来吸引员工。人类工人的缺席已成为经济增长的限制因素，自动化有望成为解决方案。然而，当前一代人工智能还不够先进，不足以完全解决这一问题，并且存在需要克服的局限性。 &lt;a href=&quot;https://hackernews.betacat.io/#ai-isnt-good-enough&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37256577&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot; >; &lt;title type=&quot;text&quot;>;一个十万年无人涉足的地方&lt;/stitle>; &lt;id>;https://www.bbc.com/future/article/20230824-the-descent-to-the- worlds-first-waste-nuclear-fuel-storage-site&lt;/id>; &lt;更新>;2023-08-25T04:46:24.621967Z&lt;/更新>; &lt;link href=&quot;https://www.bbc.com/future /article/20230824-the-descent-to-the-worlds-first-waste-nuclear-fuel-storage-site&quot;/>; &lt;author>; &lt;name>;Vigier&lt;/name>; &lt;uri>;https://news.ycombinator .com/user?id=Vigier&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ychef.files.bbci.co.uk/720x900/p0g8jxsx.jpg&quot; 样式=“宽度：220像素；高度：275像素；” />;&lt;br />;芬兰即将成为第一个将废核燃料棒长期深埋在地下的国家。参观位于地下 450 m（1,480 英尺）的 Onkalo，参观在活岩中开凿的隧道，这些隧道可储存高放射性废物 10 万年，突然让我感到紧张。 &lt;a href=&quot;https://hackernews.betacat.io/#a-place-where-no- humans-will-tread-for-100k-years&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=37258178&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Code Llama，一种最先进的大型编码语言模型&lt;/stitle>; &lt;id>;https://ai。 meta.com/blog/code-llama-large-language-model-coding/&lt;/id>; &lt;更新>;2023-08-24T14:46:24.622376Z&lt;/更新>; &lt;link href=&quot;https://ai. meta.com/blog/code-llama-large-language-model-coding/&quot;/>; &lt;作者>; &lt;名称>;marcopicentini&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=marcopicentini &lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;抱歉，出了点问题。我们正在努力尽快修复此问题。 &lt;a href=&quot;https://hackernews.betacat.io/#code-llama-a-state-of-the-art-large-language-model-for-coding&quot; target=&quot;_blank&quot;>;[摘要]&lt; /a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37248494&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base =&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;域重复&lt;/stitle>; &lt;id>;https://iquilezles.org/articles/sdfrepetition/&lt;/id>; &lt;更新>;2023-08-24T21：46：24.622760Z &lt;/更新>; &lt;link href=&quot;https://iquilezles.org/articles/sdfrepetition/&quot;/>; &lt;作者>; &lt;名称>;ianthehenry &lt;/名称>; &lt;uri >;https://news.ycombinator.com/user?id=ianthehenry&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://iquilezles.org/articles/sdfrepetition/gfx00 .jpg&quot; style=&quot;宽度：220px；高度：111px；&quot; />;&lt;br />;Raymarching 你的第一个 SDF（有符号距离场）是所有计算机图形从业者都应该拥有的神奇体验，因为意识到只需半页代码就足以让一些 3D 对象动画化并用阴影等进行渲染，没有任何引擎或渲染器的帮助，在这个领域确实是神奇的。在最初的震惊之后，第二个令人兴奋的时刻来自于学习“平滑最小”函数，该函数可以毫不费力地将对象混合在一起，因此可以雕刻有机形状，而不必担心曲面细分、拓扑重新连接以及只有熟练的技术人员才能处理的所有非常繁琐的细节。艺术家大师。 &lt;a href=&quot;https://hackernews.betacat.io/#domain-repetition&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item? id=37245383&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;标题类型=&quot;text&quot;>;直升机镜头揭示了州警的监视能力&lt;/stitle>; &lt;id>;https://unicornriot.ninja/2023/helicopter-footage-from-mass-arrest-reveals-state-trooper-surveillance-capability-tropics -and-communications/&lt;/id>; &lt;更新>;2023-08-25T00:46:24.623148Z&lt;/更新>; &lt;link href=&quot;https://unicornriot.ninja/2023/helicopter-footage-from-mass-arrest -reveals-state-trooper-surveillance-capability-tropics-and-communications/&quot;/>; &lt;作者>; &lt;名称>;colinprince&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=colinprince&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://unicornriot.ninja/wp-content/uploads/2023/08/N119SP-Cover-Image.jpg&quot; style=&quot;width ：220px；高度：124px；” />;&lt;br />;来自明尼苏达州巡逻直升机的高科技监控视频和音频通信揭示了选举日后抗议期间大规模逮捕背后的计划和策略。视频展示了抗议者游行到明尼阿波利斯 94 号州际公路时直升机的摄像能力和当局的操作。 &lt;a href=&quot;https://hackernews.betacat.io/#helicopter-footage-reveals-state-trooper-surveillance-capability&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=37256217&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;探索龙域：借助 AI 的一点帮助构建 C++ 冒险游戏&lt;/stitle>; &lt;id>;https://about.gitlab.com/blog/ 2023/08/24/building-a-text-adventure-using-cplusplus-and-code-suggestions/&lt;/id>; &lt;更新>;2023-08-25T08:46:24.623531Z&lt;/更新>; &lt;link href=&quot; https://about.gitlab.com/blog/2023/08/24/building-a-text-adventure-using-cplusplus-and-code-suggestions/&quot;/>; &lt;作者>; &lt;名称>;mikece &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=mikece&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://about.gitlab.com/images /blogimages/compassinfield.png&quot; style=&quot;宽度：220px；高度：116px；&quot; />;&lt;br />;借助 GitLab Duo 代码建议，人工智能 (AI) 成为我的交互式指南，为尝试、错误和成长提供了环境。在本教程中，我们将使用代码建议来用 C++ 构建一个基于文本的冒险游戏，以学习编程语言。 &lt;a href=&quot;https://hackernews.betacat.io/#explore-the-dragon-realm-build-ac-adventure-game-with-a-little-help-from-ai&quot; target=&quot;_blank&quot;>; [摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=37251750&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;条目 xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Hydra：面向列的 Postgres&lt;/stitle>; &lt;id>;https://www.Hydra。 so/&lt;/id>; &lt;更新>;2023-08-25T02:46:24.623930Z&lt;/更新>; &lt;link href=&quot;https://www.Hydra.so/&quot;/>; &lt;作者>; &lt;名称>;hankchinaski&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=hankchinaski&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://uploads-ssl.webflow .com/640edc15766e120e6cf226b4/640ee68b659fbaed46afbd89_home-hero-illustration.svg&quot; style=&quot;宽度：220px；高度：164px；&quot; />;&lt;br />;Hydra 的柱状 Postgres 可以正常工作。我们已经在 Hydra 上运行了一年，但没有调整性能。 &lt;a href=&quot;https://hackernews.betacat.io/#hydra-column-orient-postgres&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator. com/item?id=37247945&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;