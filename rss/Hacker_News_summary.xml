<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">黑客新闻摘要&lt;/stitle>; &lt;id>;https://hackernews.betacat.io/feed.xml&lt;/id>; &lt;updated>;2023-07-28T11:59:40.047284Z&lt;/updated>; &lt;link href=&quot;{ &#39;https://hackernews.betacat.io&#39;}&quot;/>; &lt;link href=&quot;https://hackernews.betacat.io/feed.xml&quot; rel=&quot;self&quot;/>; &lt;作者>; &lt;名称>;polyrabbit&lt;/名称>; &lt;uri>;https://github.com/polyrabbit/&lt;/uri>; &lt;/author>; &lt;generator>;Werkzeug&lt;/generator>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;VyOS From Scratch – 第 1 版（设置您自己的路由器）&lt;/stitle>; &lt;id>;https://blog.kroy.io/2020/05/04/vyos-from -scratch-edition-1/&lt;/id>; &lt;更新>;2023-07-28T08:59:28.827341Z&lt;/更新>; &lt;link href=&quot;https://blog.kroy.io/2020/05/04/vyos -from-scratch-edition-1/&quot;/>; &lt;作者>; &lt;名称>;elisaado&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=elisaado&lt;/uri>; &lt;/作者>; &lt; content type=&quot;html&quot;>;本文是有关设置 VyOS 路由器以替换消费者路由器的指南。它强调了理解输入命令的重要性，并解释了学习 VyO​​S 可以转化为其他网络供应商的知识。本文还提供了有关配置 LAN IP、DHCP 范围、启用 SSH、设置 NAT、配置 DNS 和创建基于区域的防火墙的说明。 &lt;a href=&quot;https://hackernews.betacat.io/#vyos-from-scratch-edition-1-set-up-your-own-router&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36904338&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何检查2个SQL表是否相同&lt;/stitle>; &lt;id>;https://github.com/remysucre/blog/blob /main/posts/sql-eq.md&lt;/id>; &lt;更新>;2023-07-28T08:59:28.828376Z&lt;/更新>; &lt;link href=&quot;https://github.com/remysucre/blog/blob/ main/posts/sql-eq.md&quot;/>; &lt;作者>; &lt;名称>;remywang&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=remywang&lt;/uri>; &lt;/作者>; &lt; content type=&quot;html&quot;>;为了检查两个SQL表的内容是否相同，作者探索了不同的方法。作者最终提出了一个查询，该查询使用标准 SQL 功能根据表的矩或幂和来比较表。该查询计算每个表的矩并进行比较，排除表相互排列的情况。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-check-2-sql-tables-are-the-same&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36889656&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;问 HN：是市场不好，还是我找工作的运气最差？&lt;/stitle>; &lt;id>;https://news. ycombinator.com/item?id=36901303&lt;/id>; &lt;更新>;2023-07-27T23:59:28.829281Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=36901303 &quot;/>; &lt;author>; &lt;name>;imadkhan&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=imadkhan&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;我得到了今年年初被解雇，一直在找工作，但只得到了一次面试。尽管我努力改进我的简历，但我还是不断收到拒绝电子邮件。想看看有没有人有类似的找工作经历。 &lt;a href=&quot;https://hackernews.betacat.io/#ask-hn-is-the-market-bad-or-am-i-having-the-worst-luck-job-hunting&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36901303&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;TeamTopologies&lt;/stitle>; &lt;id>;https://martinfowler.com/bliki/TeamTopologies .html&lt;/id>; &lt;更新>;2023-07-28T02:59:28.830029Z&lt;/更新>; &lt;link href=&quot;https://martinfowler.com/bliki/TeamTopologies.html&quot;/>; &lt;作者>; &lt;名称>; BerislavLopac&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=BerislavLopac&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://martinfowler. com/mf.jpg&quot; style=&quot;宽度：220px；高度：221px；&quot; />;&lt;br />;团队拓扑是描述软件开发团队组织的模型，由 Matthew Skelton 和 Manuel Pais 开发。它定义了四种团队形式和三种团队交互模式。 &lt;a href=&quot;https://hackernews.betacat.io/#teamtopologies&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id= 36874485&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot; text&quot;>;在路边找到“Tron Discs”&lt;/stitle>; &lt;id>;https://arcadeblogger.com/2023/07/22/environmental-discs-of-tron-roadside-pickup/&lt;/id>; &lt;更新>;2023-07-28T07:59:28.830878Z&lt;/更新>; &lt;link href=&quot;https://arcadeblogger.com/2023/07/22/environmental-discs-of-tron-roadside-pickup/&quot;/>; &lt;作者>; &lt;名称>;jsnell &lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=jsnell&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“ https://missilecommand.files.wordpress.com/2023/07/discs-of-tron-flyer-1.jpg?w=850&quot; style=&quot;宽度：220px；高度：284px；&quot; />;&lt;br />;Discs of Tron 是一款于 1983 年发布的环境街机柜，被认为是电子游戏黄金时代最复杂的柜体之一。这是一个罕见的发现，最近被发现被扔在路边并被蒂姆·拉佩蒂诺救起。 &lt;a href=&quot;https://hackernews.betacat.io/#finding-discs-of-tron-on-the-roadside&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36904080&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何使用 Python 多处理模块&lt;/stitle>; &lt;id>;https://developers.redhat.com/articles/2023/07/27/how-use -python-multiprocessing-module&lt;/id>; &lt;更新>;2023-07-28T06:59:28.832442Z&lt;/更新>; &lt;link href=&quot;https://developers.redhat.com/articles/2023/07/27/ how-use-python-multiprocessing-module&quot;/>; &lt;author>; &lt;name>;unripe_syntax&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=unripe_syntax&lt;/uri>; &lt;/author>; &lt;内容类型 =“html”>;&lt;img src =“https://developers.redhat.com/sites/default/files/styles/article_feature/public/blog/2021/05/Python-01.png?itok=qO_bpcrR”样式=“宽度：220像素；高度：110像素；” />;&lt;br />;本文概述了 Python 多处理模块中的进程类。它解释了进程和线程之间的区别，并演示了如何在 Python 中创建和管理进程。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-use-a-python-multiprocessing-module&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36890241&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;关于 Linux 发行版免费长期支持的未来&lt;/stitle>; &lt;id>;https://utcc.utoronto.ca/~cks/space/blog/ linux/LongTermSupportNoMoreFree&lt;/id>; &lt;更新>;2023-07-28T05:59:28.833209Z&lt;/更新>; &lt;link href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/LongTermSupportNoMoreFree&quot; />; &lt;author>; &lt;name>;ingve&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=ingve&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;其中之一在世界各地的人们中非常流行的事情是能够设置一个 Linux 服务器，然后将其保留十年的大部分时间，而无需重新安装它或升级发行版。然而，我对人们将来能够免费获得它持普遍悲观态度，而且我对目前对 Canonical 的 Ubuntu LTS 版本等产品所获得的五年支持期也持悲观态度。 &lt;a href=&quot;https://hackernews.betacat.io/#on-the-future-of-free-long-term-support-for-linux-distributions&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36903481&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;如何在 Ruby 中动态创建实例变量&lt;/stitle>; &lt;id>;https://www.akshaykhot.com/dynamically- create-instance-variables-ruby/&lt;/id>; &lt;更新>;2023-07-28T05:59:28.833965Z&lt;/更新>; &lt;link href=&quot;https://www.akshaykhot.com/dynamically-create-instance-变量-ruby/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html &quot;>;&lt;img src=&quot;https://www.akshaykhot.com/content/images/size/w1200/2023/07/code-14.png&quot; style=&quot;宽度：220px；高度：151px；&quot; />;&lt;br />;Rails 使用元编程来动态初始化多个实例变量。 instance_variable_set 方法用于将由符号命名的实例变量设置为给定对象。应谨慎使用此方法，并且仅在必要时使用。 &lt;a href=&quot;https://hackernews.betacat.io/#how-to-dynamically-create-instance-variables-in-ruby&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36873645&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;使用 Directfs 更快地访问文件系统&lt;/stitle>; &lt;id>;https://gvisor.dev/blog/2023/06/27/directfs/&lt;/id >; &lt;更新>;2023-07-27T23:59:28.834735Z&lt;/更新>; &lt;link href=&quot;https://gvisor.dev/blog/2023/06/27/directfs/&quot;/>; &lt;作者>; &lt;名称>; jhalstead&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jhalstead&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://gvisor. dev/assets/images/2023-06-27-stat-benchmark.svg&quot; style=&quot;width: 220px; height: 137px;&quot; />;&lt;br />;Directfs 是一种新的文件系统访问模式，可提供对容器文件系统的安全直接访问，避免昂贵的文件系统操作员往返。它提高了某些工作负载的性能。 &lt;a href=&quot;https://hackernews.betacat.io/#faster-filesystem-access-with-directfs&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news. ycombinator.com/item?id=36901543&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed. xml&quot;>; &lt;title type=&quot;text&quot;>;启动 HN：PeerDB (YC S23) – 适用于 Postgres 的快速、本机 ETL/ELT&lt;/stitle>; &lt;id>;https://news.ycombinator.com/item?id=36895220 &lt;/id>; &lt;更新>;2023-07-27T15:59:28.835498Z&lt;/更新>; &lt;link href=&quot;https://news.ycombinator.com/item?id=36895220&quot;/>; &lt;作者>; &lt;名称>; saisrirampur&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=saisrirampur&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;PeerDB 是一个 Postgres 优先的数据移动平台，简化了将数据移入和移出 Postgres 的过程。它提供快速可靠的同步、实时更改数据捕获以及查询结果流式传输。 &lt;a href=&quot;https://hackernews.betacat.io/#launch-hn-peerdb-yc-s23-fast-native-etl-elt-for-postgres&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36895220&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;西西里黑手党的起源：柠檬市场 (2017)&lt;/stitle>; &lt;id>;https://www.cambridge .org/core/journals/journal-of-economic-history/article/origins-of-the-sicilian-mafia-the-market-for-lemons/52B18A611BD8AE26B4FDE3814A4239F1&lt;/id>; &lt;更新>;2023-07-28T04:59 ：28.836248Z&lt;/更新>; &lt;link href=&quot;https://www.cambridge.org/core/journals/journal-of-economic-history/article/origins-of-the-sicilian-mafia-the-market- for-lemons/52B18A611BD8AE26B4FDE3814A4239F1&quot;/>; &lt;author>; &lt;name>;pepys&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=pepys&lt;/uri>; &lt;/author>; &lt;content type=&quot; html&quot;>;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a9/Google_Scholar_logo_2015.PNG&quot; style=&quot;宽度：220 像素；高度：85 像素；&quot; />;&lt;br />;在林德发现柑橘类水果可以治愈坏血病之后，西西里黑手党的出现是对橙子和柠檬的需求增加的回应。黑手党保护柑橘生产并充当生产商和出口商之间的中间人。黑手党的存在与橙子和柠檬的生产密切相关。 &lt;a href=&quot;https://hackernews.betacat.io/#origins-of-the-sicilian-mafia-the-market-for-lemons-2017&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36900201&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;为 1024 个 RISC-V 内核的共享内存集群实现快速屏障&lt;/stitle>; &lt;id>;https://semiengineering.com /implementing-fast-barriers-for-a-shared-memory-cluster-of-1024-risc-v-cores/&lt;/id>; &lt;更新>;2023-07-28T03:59:28.836997Z&lt;/更新>; &lt;link href=&quot;https://semiengineering.com/implementing-fast-barriers-for-a-shared-memory-cluster-of-1024-risc-v-cores/&quot;/>; &lt;作者>; &lt;名称>;stevefan1999&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=stevefan1999&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://semiengineering.com/wp-内容/上传/wafer-AdobeStock_416615365-06-21-scaled.jpeg&quot; style=&quot;宽度：220 像素；高度：110 像素；&quot; />;&lt;br />;苏黎世联邦理工学院和博洛尼亚大学的研究人员发表了题为“Fast Shared-Memory Barrier Synchronization for a 1024-Cores RISC-V Many-Core Cluster”的技术论文。本文重点关注 TeraPool 的屏障同步，TeraPool 是一个由 1024 个 RISC-V 处理器组成的集群，对紧密耦合的 4MB 共享 L1 数据内存具有非均匀内存访问。 &lt;a href=&quot;https://hackernews.betacat.io/#implementing-fast-barriers-for-a-shared-memory-cluster-of-1024-risc-v-cores&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36902877&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml :base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;构建并运行一个名为 S3 的大型存储系统&lt;/stitle>; &lt;id>;https://www. allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html&lt;/id>; &lt;更新>;2023-07-27T18:59:28.838499Z&lt;/更新>; &lt;link href= “https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html”/>; &lt;作者>; &lt;名称>;维尔纳&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=werner&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://www.allthingsdistributed.com/images/disksunny.jpg “样式=”宽度：220px;高度：123px;“ />;&lt;br />;S3是一个大型存储系统，已经运行了17年。它由数百个像独立企业一样运营的微服务组成。 &lt;a href=&quot;https://hackernews.betacat.io/#building-and-operating-a-pretty-big-storage-system- Called-s3&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt; a href=&quot;https://news.ycombinator.com/item?id=36894932&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https: //hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Graphite：开源光栅和矢量 2D 图形编辑器&lt;/stitle>; &lt;id>;https://graphite.rs/&lt;/id >; &lt;更新>;2023-07-27T23:59:28.839451Z&lt;/更新>; &lt;link href=&quot;https://graphite.rs/&quot;/>; &lt;作者>; &lt;name>;davikr&lt;/name>; &lt;uri>;https: //news.ycombinator.com/user?id=davikr&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://static.graphite.rs/content/index/gui- demo-valley-of-spires.png&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;Graphite 是一款正在开发的免费开源光栅和矢量 2D 图形编辑器。它由节点图合成引擎提供支持，可增强您的图层堆栈，提供完全无损的编辑体验。 &lt;a href=&quot;https://hackernews.betacat.io/#graphite-open-source-raster-and-vector-2d-graphics-editor&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36901406&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;密码工作的道德品质（2015）&lt;/stitle>; &lt;id>;https://web.cs.ucdavis.edu/~rogaway/ paper/moral.html&lt;/id>; &lt;更新>;2023-07-28T00:59:28.840316Z&lt;/更新>; &lt;link href=&quot;https://web.cs.ucdavis.edu/~rogaway/papers/moral. html&quot;/>; &lt;author>; &lt;name>;TheBigRoomXXL&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=TheBigRoomXXL&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;密码学是具有道德含义的政治工具。斯诺登泄密凸显了密码学抵御大规模监视的必要性。 &lt;a href=&quot;https://hackernews.betacat.io/#the-moral-character-of-cryptographic-work-2015&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https: //news.ycombinator.com/item?id=36901885&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat. io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;制作“蓝色闪光”：我如何重建致命的原子事故&lt;/stitle>; &lt;id>;https://www.bbc.com/future/article/ 20230725-making-the-blue-flash-how-i-reconstructed-a-fatal-atomic-accident&lt;/id>; &lt;更新>;2023-07-27T23:59:28.841165Z&lt;/更新>; &lt;link href=&quot;https ://www.bbc.com/future/article/20230725-making-the-blue-flash-how-i-reconstructed-a-fatal-atomic-accident&quot;/>; &lt;作者>; &lt;名称>;胡克&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=Hooke&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://ychef.files.bbci.co .uk/976x549/p0g2tht7.jpg&quot; style=&quot;宽度：220px；高度：124px；&quot; />;&lt;br />;1946 年，一位名叫路易斯·斯洛廷 (Louis Slotin) 的科学家在一次致命的原子事故中丧生，当时他的螺丝刀在演示危险装置时滑倒。本·普拉茨-米尔斯重建了这些事件，并创作了一个插图故事来讲述斯洛廷的故事。 &lt;a href=&quot;https://hackernews.betacat.io/#making-the-blue-flash-how-i-reconstructed-a-fatal-atomic-accident&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36872955&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;芝士蛋糕工厂如何挑战餐饮业的成功规则&lt;/stitle>; &lt;id>;https://www.vox.com /culture/23516638/cheesecake-factory-restaurant-menu&lt;/id>; &lt;更新>;2023-07-28T01:59:28.842027Z&lt;/更新>; &lt;link href=&quot;https://www.vox.com/culture/ 23516638/cheesecake-factory-restaurant-menu&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;内容类型=“html”>; &lt;img src =“https://cdn.vox-cdn.com/thumbor/cmgflDgWR7Ljm-Ml-6TK2ohWgTE=/0x0:3504x2124/1200x0/filters:focal(0x0:3504x2124):no_upscale( )/cdn.vox-cdn.com/uploads/chorus_asset/file/24315337/564062911.jpg&quot; style=&quot;宽度：220px；高度：134px；&quot; />;&lt;br />;Cheesecake Factory 颠覆了餐饮业的传统观念，提供超过 250 种菜品的菜单和奢华的装饰。尽管违反了规则，但它仍然成功地吸引了客户并创造了收入。 &lt;a href=&quot;https://hackernews.betacat.io/#how-the-cheesecake-factory-defied-the-restaurant-industrys-rules-of-success&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a >; &lt;a href=&quot;https://news.ycombinator.com/item?id=36889251&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot; https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Tarsnap 停机事后分析&lt;/stitle>; &lt;id>;https://mail.tarsnap.com/tarsnap-announce/msg00050.html &lt;/id>; &lt;更新>;2023-07-27T11:59:28.843044Z&lt;/更新>; &lt;link href=&quot;https://mail.tarsnap.com/tarsnap-announce/msg00050.html&quot;/>; &lt;作者>; &lt; name>;anderiv&lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=anderiv&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;当中央由于硬件故障，服务器离线。服务器已重新启动，但显示文件系统损坏，导致决定设置新服务器。 &lt;a href=&quot;https://hackernews.betacat.io/#tarsnap-outage-postmortem&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/ item?id=36888954&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt; title type=&quot;text&quot;>;BlazingMQ：高性能开源消息队列系统&lt;/stitle>; &lt;id>;https://bloomberg.github.io/blazingmq/&lt;/id>; &lt;updated>;2023-07-27T16:59 ：28.843911Z&lt;/updated>; &lt;link href=&quot;https://bloomberg.github.io/blazingmq/&quot;/>; &lt;作者>; &lt;name>;carride&lt;/name>; &lt;uri>;https://news.ycombinator.com /user?id=carride&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;BlazingMQ 是一个分布式消息队列平台，专注于现代工作流程的效率、可靠性和丰富的功能集。它为高扇出工作流程提供始终如一的低延迟，并显着节省网络带宽和延迟。 &lt;a href=&quot;https://hackernews.betacat.io/#blazingmq-high-performance-open-source-message-queuing-system&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36896034&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews. betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;基恩指挥官的自适应图块刷新&lt;/stitle>; &lt;id>;https://fabiensanglad.net/ega/&lt;/id>; &lt;更新>;2023-07- 27T19：59：28.845627Z &lt;/更新>; &lt;link href =“https://fabiensanglard.net/ega/”/>; &lt;作者>; &lt;名称>;atan2 &lt;/名称>; &lt;uri>;https://news.ycombinator。 com/user?id=atan2&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://fabiensanglad.net/ega/before.webp&quot; style=&quot;width: 220px; height : 138 像素;&quot; />;&lt;br />;Commander Keen 的自适应平铺滚动 (ATS) 是为 Commander Keen 系列第一部三部曲提供动力的关键技术。它使用增强型图形适配器（EGA）卡来处理图形编程并将数据存储在四个平面中。 ATS 通过操纵 EGA 寄存器实现平滑的垂直和水平滚动，从而解决了带宽问题。 &lt;a href=&quot;https://hackernews.betacat.io/#commander-keen-s-adaptive-tile-refresh&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https:// news.ycombinator.com/item?id=36898749&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https://hackernews.betacat.io/ feed.xml&quot;>; &lt;title type=&quot;text&quot;>;丹尼斯·霍珀对十九世纪六十年代好莱坞的安静愿景&lt;/stitle>; &lt;id>;https://www.newyorker.com/culture/photo-booth/dennis-hoppers-quiet -vision-of-nineteen-sixties-hollywood&lt;/id>; &lt;更新>;2023-07-28T05:59:28.847394Z&lt;/更新>; &lt;link href=&quot;https://www.newyorker.com/culture/photo- Booth/dennis-hoppers-quiet-vision-of-nineteen-sixties-hollywood&quot;/>; &lt;作者>; &lt;名称>;samclemens&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=samclemens&lt; /uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://media.newyorker.com/photos/5df0086c0ec8e60008c4ef11/master/w_2560%2Cc_limit/055-273-18.jpg&quot; style= “宽度：220 像素；高度：148 像素；” />;&lt;br />;丹尼斯·霍珀 (Dennis Hopper) 的摄影档案馆霍珀艺术信托基金会 (Hopper Art Trust) 收藏了他在 1961 年至 1967 年间拍摄的数千张照片。尽管他作为演员和导演取得了成功，但在《轻松》上映后，霍珀很少再拿起相机。 1969 年的《骑士》。&lt;a href=&quot;https://hackernews.betacat.io/#dennis-hoppers-quiet-vision-of-nineteen-sixties-hollywood&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36888367&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https ://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;纳米比亚仙女圈争论激烈：沙白蚁还是图灵机制？&lt;/stitle>; &lt;id>;https://arstechnica.com/ science/2023/07/the-namibian-fairy-circle-debate-rages-on-could-it-be-sand-termites-after-all/&lt;/id>; &lt;更新>;2023-07-27T21:59:28.848262 Z&lt;/更新>; &lt;link href=&quot;https://arstechnica.com/science/2023/07/the-namibian-fairy-circle-debate-rages-on-could-it-be-sand-termites-after- all/&quot;/>; &lt;作者>; &lt;名称>;thunderbong&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=thunderbong&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>; &lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2023/07/fairyTOP-800x529.jpg&quot; style=&quot;宽度：220px; height: 146px;&quot; />;&lt;br />;科学家们一直在争论纳米比亚草原上的神秘仙女圈到底是由沙白蚁造成的，还是自组织图灵机制造成的。最近的一篇论文对之前的发现进行了反驳，认为毕竟，沙白蚁可能是罪魁祸首。&lt;a href=&quot;https://hackernews.betacat.io/#namibian-fairy-circle-debate-rages-on-sand-termites-or-turing-mechanism&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36899221&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;Genoa-X：服务器 V-Cache 第 2 轮&lt;/stitle>; &lt;id>;https: //chipsandcheese.com/2023/07/17/genoa-x-server-v-cache-round-2/&lt;/id>; &lt;更新>;2023-07-28T04:59:28.849119Z&lt;/更新>; &lt;link href =&quot;https://chipsandcheese.com/2023/07/17/genoa-x-server-v-cache-round-2/&quot;/>; &lt;作者>; &lt;名称>;rbanffy&lt;/名称>; &lt;uri>;https:// /news.ycombinator.com/user?id=rbanffy&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://i0.wp.com/chipsandcheese.com/wp-content /uploads/2023/07/image.png?resize=688%2C329&amp;ssl=1&quot; style=&quot;宽度：220px; height: 106px;&quot; />;&lt;br />;Genoa-X是Milan-X的改进版，拥有稳定的3.7GHz主频，在L3延迟、L3带宽和芯片总内存带宽方面都有着令人印象深刻的表现。但是，它确实会在本地内存访问方面遇到更高的内存延迟。&lt;a href=&quot;https://hackernews.betacat.io/#genoa-x-server-v-cache-round-2&quot; target=&quot;_blank&quot;>;[summary] &lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36875628&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml: base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;LeMUR：音频和语音法学硕士&lt;/stitle>; &lt;id>;https://www.assembleai.com/ blog/lemur/&lt;/id>; &lt;更新>;2023-07-27T21:59:28.849960Z&lt;/更新>; &lt;link href=&quot;https://www. assemblyai.com/blog/lemur/&quot;/>; &lt;作者>; &lt;名称>;苎麻&lt;/名称>; &lt;uri>;https://news.ycombinator.com/user?id=ramie&lt;/uri>; &lt;/作者>; &lt;content type =“html”>;&lt;img src =“https：/” /img.youtube.com/vi/tFhkOEfW0bo/mqdefault.jpg&quot; style=&quot;宽度：220px; height: 124px;&quot; />;&lt;br />;LeMUR 是一个 AI 堆栈，允许开发人员通过几行代码对语音数据进行推理。它提供自动转录、提示增强、压缩策略、检索技术、语言模型和结构化在单个 API 中输出。&lt;a href=&quot;https://hackernews.betacat.io/#lemur-llms-for-audio-and-speech&quot; target=&quot;_blank&quot;>;[summary]&lt;/a>; &lt;a href =&quot;https://news.ycombinator.com/item?id=36900294&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;entry xml:base=&quot;https:// hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;波浪墙比直墙使用的砖块更少（2020）&lt;/stitle>; &lt;id>;https://twistedsifter.com/2020/06/ how-wavy-crinkle-crankle-walls-use-less-bricks-than-straight-walls/&lt;/id>; &lt;更新>;2023-07-27T13:59:28.850831Z&lt;/更新>; &lt;link href=&quot;https: //twistedsifter.com/2020/06/how-wavy-crinkle-crankle-walls-use-less-bricks-than-straight-walls/&quot;/>; &lt;作者>; &lt;名称>;caiobegotti&lt;/名称>; &lt;uri>;https ://news.ycombinator.com/user?id=caiobegotti&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://twistedsifter.com/wp-content/uploads/2023 /07/AITAGFHomeDecor.png?resize=188%2C128&quot; style=&quot;width: 220px; height: 150px;&quot; />;&lt;br />;波浪墙比直墙使用的砖块少，因为它们只需一块砖薄，而直墙很容易倒塌。这些墙也称为波纹曲柄墙、crinkum曲柄墙、蛇形墙或带状墙。&lt;a href=&quot;https://hackernews.betacat.io/#wavy-walls-use-fewer-bricks-than-a-straight-wall-2020&quot; target=&quot;_blank &quot;>;[摘要]&lt;/a>; &lt;a href=&quot;https://news.ycombinator.com/item?id=36892970&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry >; &lt;entry xml:base=&quot;https://hackernews.betacat.io/feed.xml&quot;>; &lt;title type=&quot;text&quot;>;WebArena：用于构建自治代理的现实 Web 环境&lt;/stitle>; &lt;id>;https: //webarena.dev/&lt;/id>; &lt;更新>;2023-07-28T00:59:28.851684Z&lt;/更新>; &lt;link href=&quot;https://webarena.dev/&quot;/>; &lt;作者>; &lt;name>;jeron &lt;/name>; &lt;uri>;https://news.ycombinator.com/user?id=jeron&lt;/uri>; &lt;/author>; &lt;content type=&quot;html&quot;>;&lt;img src=&quot;https://webarena.dev /static/images/tasks.png&quot; style=&quot;width: 220px; height: 86px;&quot; />;&lt;br />;可以在 WebArena 中完全执行的一项高级任务是查找匹兹堡的艺术博物馆，在地图上识别它们的位置，并使用计划的路线更新 README 文件。 &lt;a href=&quot;https://hackernews.betacat.io/#webarena-a-realistic-web-environment-for-building-autonomous-agents&quot; target=&quot;_blank&quot;>;[摘要]&lt;/a>; &lt;a href=&quot; https://news.ycombinator.com/item?id=36901815&quot; target=&quot;_blank&quot;>;[评论]&lt;/a>;&lt;/content>; &lt;/entry>; &lt;/feed>;